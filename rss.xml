<?xml version="1.0"?>
<rss version="2.0">
    <channel>
        <title>方家小白</title>
        <link>https://fangjiaxiaobai.github.io</link>
        <description>和你一起遇见更好的自己</description>
        <language>zh-CN</language>
        <pubDate>Mon, 23 Aug 2021 23:13:55 +0800</pubDate>
        <lastBuildDate>Mon, 23 Aug 2021 23:13:55 +0800</lastBuildDate>
        <category>源码</category>
        <category>目录</category>
        <category>MySQL</category>
        <category>Redis</category>
        <category>git</category>
        <category>数据结构</category>
        <category>雪花算法</category>
        <category>算法</category>
        <category>线程池</category>
        <category>面经</category>
        <category>String</category>
        <category>leetCode</category>
        <category>数组</category>
        <category>面经之算法题</category>
        <category>HashMap</category>
        <category>OOM</category>
        <category>JVM</category>
        <category>Java</category>
        <category>JDK</category>
        <category>Stream</category>
        <item>
            <guid isPermalink="true">https://fangjiaxiaobai.github.io/2021/08/23/java%E7%B3%BB%E5%88%97/JDK/stream/Stream-basic/</guid>
            <title>JDK的Stream之系列一 初窥流原理</title>
            <link>https://fangjiaxiaobai.github.io/2021/08/23/java%E7%B3%BB%E5%88%97/JDK/stream/Stream-basic/</link>
            <category>Java</category>
            <category>JDK</category>
            <category>Stream</category>
            <pubDate>Mon, 23 Aug 2021 23:13:55 +0800</pubDate>
            <description><![CDATA[ &lt;p&gt;学东西的时候最好是理论先行，为什么？没有理论，想当然的去干，干好了是 瞎猫碰上死耗子，干不好就瞎干，浪费时间，只会弄得身心俱疲。&lt;br&gt;
可是在真正的工作中，很少工作会允许你先弄清原理再去实操。但是不管怎么说，欠下的债终究是需要还的。&lt;/p&gt;
&lt;p&gt;今天咱们的主题是  &lt;code&gt;stream&lt;/code&gt; . 咱们就从 &lt;code&gt;Stream&lt;/code&gt;  的 &amp;quot;道，术，法，器&amp;quot; 四个阶段来聊好好的聊聊这个  &lt;code&gt;Stream&lt;/code&gt; .&lt;/p&gt;
&lt;h2 id=&#34;以器始从使用开始&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#以器始从使用开始&#34;&gt;#&lt;/a&gt; 以 &amp;quot;器&amp;quot; 始：从使用开始&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;你平时是怎么使用  &lt;code&gt;Stream&lt;/code&gt;  的？&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;比如我会使用 &lt;code&gt;Stream&lt;/code&gt;  创建一个流。&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;Stream&amp;lt;Integer&amp;gt; integerStream = Stream.of(&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;// do somethings ..&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;或者把一种集合类型转成 &lt;code&gt;stream&lt;/code&gt; ，然后做一些聚合操作&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;List&amp;lt;Integer&amp;gt; collect = list.stream()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        .map(item -&amp;gt; item + &lt;span class=&#34;number&#34;&gt;5&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        .filter(item -&amp;gt; item &amp;gt; &lt;span class=&#34;number&#34;&gt;10&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        .sorted()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        .limit(&lt;span class=&#34;number&#34;&gt;10&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        .collect(Collectors.toList());&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;那在 &lt;code&gt;jdk1.7&lt;/code&gt;  及以前的时候，我们是怎么处理的呢？&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;// 遍历list，所有元素+5&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; i = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;; i &amp;lt; list.size(); i++) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    Integer integer = list.get(i);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    integer += &lt;span class=&#34;number&#34;&gt;5&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;// 正序排序&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sort(list);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;// 创建新List.存储10个元素&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;List&amp;lt;Integer&amp;gt; newList = &lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; ArrayList&amp;lt;&amp;gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (list.size() &amp;gt; &lt;span class=&#34;number&#34;&gt;10&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    System.arraycopy(list, list.size() - &lt;span class=&#34;number&#34;&gt;11&lt;/span&gt;, newList, &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;10&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125; &lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    System.arraycopy(list, &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, newList, &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, list.size());&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;根据上面的对比，我们很明显的就能对比出来：&lt;br&gt;
 &lt;code&gt;stream&lt;/code&gt;  的编码方式，使代码更加简洁，可读性也比较强。而且 &lt;code&gt;Stream&lt;/code&gt;  提供了集合的常用操作，比如 &lt;code&gt;sort&lt;/code&gt; , &lt;code&gt;过滤&lt;/code&gt; ， &lt;code&gt;去重&lt;/code&gt; ， &lt;code&gt;计数&lt;/code&gt; ， &lt;code&gt;limit&lt;/code&gt; , &lt;code&gt;skip&lt;/code&gt;  等等，直接可以用，可以大大的提高开发效率。&lt;/p&gt;
&lt;p&gt;那  &lt;code&gt;Stream&lt;/code&gt;  为我们提供了多少功能呢？&lt;/p&gt;
&lt;p&gt;从全局来看，所有和  &lt;code&gt;stream&lt;/code&gt;  相关的类，都在  &lt;code&gt;java.lang.stream&lt;/code&gt;  这包下。&lt;/p&gt;
&lt;p&gt;这个包下有很多的类。总体来说，&lt;/p&gt;
&lt;p&gt;流处理相关的操作分为两类:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;中间操作 ( &lt;code&gt;Intermediate Operations&lt;/code&gt; )
&lt;ul&gt;
&lt;li&gt;无状态的中间操作 ( &lt;code&gt;Stateless&lt;/code&gt; ): 使用  &lt;code&gt;StatelessOp&lt;/code&gt;  表示。每个操作都是互不影响，不依赖的。这类的操作有:  &lt;code&gt;filter()&lt;/code&gt; 、 &lt;code&gt;flatMap()&lt;/code&gt; 、 &lt;code&gt;flatMapToDouble()&lt;/code&gt; 、 &lt;code&gt;flatMapToInt()&lt;/code&gt; 、 &lt;code&gt;flatMapToLong()&lt;/code&gt; 、 &lt;code&gt;map()&lt;/code&gt; 、 &lt;code&gt;mapToDouble()&lt;/code&gt; 、 &lt;code&gt;mapToInt()&lt;/code&gt; 、 &lt;code&gt;mapToLong()&lt;/code&gt; 、 &lt;code&gt;peek()&lt;/code&gt; 、 &lt;code&gt;unordered()&lt;/code&gt;  等&lt;/li&gt;
&lt;li&gt;有状态操作（ &lt;code&gt;Stateful&lt;/code&gt; ）：使用  &lt;code&gt;StatefulOp&lt;/code&gt;  表示。处理时会记录状态，比如处理了几个。后面元素的处理会依赖前面记录的状态，或者拿到所有元素才能继续下去。如 &lt;code&gt;distinct()&lt;/code&gt; 、 &lt;code&gt;sorted()&lt;/code&gt; 、 &lt;code&gt;sorted(comparator)&lt;/code&gt; 、 &lt;code&gt;limit()&lt;/code&gt; 、 &lt;code&gt;skip()&lt;/code&gt;  等&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;终止操作 ( &lt;code&gt;Terminal Operations&lt;/code&gt; )：使用  &lt;code&gt;TerminalOp&lt;/code&gt;  表示。
&lt;ul&gt;
&lt;li&gt;非短路操作：处理完所有数据才能得到结果。如 &lt;code&gt;collect()&lt;/code&gt; 、 &lt;code&gt;count()&lt;/code&gt; 、 &lt;code&gt;forEach()&lt;/code&gt; 、 &lt;code&gt;forEachOrdered()&lt;/code&gt; 、 &lt;code&gt;max()&lt;/code&gt; 、 &lt;code&gt;min()&lt;/code&gt; 、 &lt;code&gt;reduce()&lt;/code&gt; 、 &lt;code&gt;toArray()&lt;/code&gt;  等。&lt;/li&gt;
&lt;li&gt;短路（ &lt;code&gt;short-circuiting&lt;/code&gt; ）操作：拿到符合预期的结果就会停下来，不一定会处理完所有数据。如 &lt;code&gt;anyMatch()&lt;/code&gt; 、 &lt;code&gt;allMatch()&lt;/code&gt; 、 &lt;code&gt;noneMatch()&lt;/code&gt; 、 &lt;code&gt;findFirst()&lt;/code&gt; 、 &lt;code&gt;findAny()&lt;/code&gt;  等。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;在深入探讨 &lt;code&gt;stream&lt;/code&gt;  之前，我们需要储备些知识点。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;函数式接口  &lt;code&gt;FunctionInterface&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;JDK&lt;/code&gt;  提供了很多的函数式接口，包路径是： &lt;code&gt;java.util.function&lt;/code&gt; . 函数式接口的作用是 Java8 对一类特定类型接口的称呼。这类接口只有一个抽象方法，并且使用  &lt;code&gt;@FunctionInterface&lt;/code&gt;  注解进行注明。在 &lt;code&gt;Java Lambda&lt;/code&gt;  的实现中， 开发组不想再为 &lt;code&gt;Lambda&lt;/code&gt;  表达式单独定义一种特殊的 &lt;code&gt;Structural&lt;/code&gt;  函数类型，称之为箭头类型（ &lt;code&gt;arrow type&lt;/code&gt; ）， 依然想采用 Java 既有的类型系统 ( &lt;code&gt;class&lt;/code&gt; ,  &lt;code&gt;interface&lt;/code&gt; ,  &lt;code&gt;method&lt;/code&gt;  等)， 原因是增加一个结构化的函数类型会增加函数类型的复杂性，破坏既有的 &lt;code&gt;Java&lt;/code&gt;  类型，并对成千上万的 &lt;code&gt;Java&lt;/code&gt;  类库造成严重的影响。 权衡利弊， 因此最终还是利用 &lt;code&gt;SAM&lt;/code&gt;  接口 ( &lt;code&gt;Single Abstract Method&lt;/code&gt; ) 作为  &lt;code&gt;Lambda&lt;/code&gt;  表达式的目标类型。&lt;/p&gt;
&lt;p&gt;函数式接口其实在 &lt;code&gt;Jdk8&lt;/code&gt;  之前就已存在了，比如 &lt;code&gt;java.lang.Runnable&lt;/code&gt; , &lt;code&gt;java.util.concurrent.Callable&lt;/code&gt; , &lt;code&gt;java.util.Comparator&lt;/code&gt;  等等。只是没有使用  &lt;code&gt;@FunctionInterface&lt;/code&gt;  注解而已。在 &lt;code&gt;JDK1.8&lt;/code&gt;  之后加上了这个注解，并且在 &lt;code&gt;java.util.function&lt;/code&gt;  包下新增很多个函数式接口。 其中，我们需要知道的只有六个:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;Predicate&lt;/code&gt; : 传入一个参数，返回一个 &lt;code&gt;bool&lt;/code&gt;  结果， 方法为 &lt;code&gt;boolean test(T t)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Consumer&lt;/code&gt; : 传入一个参数，无返回值，纯消费。 方法为 &lt;code&gt;void accept(T t)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Function&amp;lt;T,R&amp;gt;&lt;/code&gt; : 传入一个参数，返回一个结果，方法为 &lt;code&gt;R apply(T t)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Supplier&lt;/code&gt; : 无参数传入，返回一个结果，方法为 &lt;code&gt;T get()&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;UnaryOperator&lt;/code&gt; : 一元操作符， 继承 &lt;code&gt;Function&amp;lt;T,T&amp;gt;&lt;/code&gt; , 传入参数的类型和返回类型相同。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;BinaryOperator&lt;/code&gt; : 二元操作符， 传入的两个参数的类型和返回类型相同， 继承 &lt;code&gt;BiFunction&amp;lt;T,T,T&amp;gt;&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;为什么要了解这个 函数式接口呢？&lt;/p&gt;
&lt;p&gt;因为 在 &lt;code&gt;Stream&lt;/code&gt;  的方法中，大部分的参数都是使用 函数式接口 接受参数的。所以，如果要探究其实现原理和设计原则的话，这个是必须要知道的。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;注意:&lt;br&gt;
 &lt;code&gt;lambda&lt;/code&gt;  表达式，是一种语法的表现形式，使代码表现更加整洁  &lt;code&gt;lambda&lt;/code&gt;  和  &lt;code&gt;stream&lt;/code&gt;  是两个不相关的概念。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;查术理-查看源码明晰基本的类结构&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#查术理-查看源码明晰基本的类结构&#34;&gt;#&lt;/a&gt; 查 &amp;quot;术&amp;quot; 理: (查看源码，明晰基本的类结构)&lt;/h2&gt;
&lt;p&gt;先来看下 和  &lt;code&gt;Stream&lt;/code&gt;  直接相关的类。&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/images/java/jdk/stream/Stream%E7%B1%BB%E5%9B%BE%E8%B0%B1.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Stream&lt;/code&gt;  接口继承了 &lt;code&gt;BaseStream&lt;/code&gt;  接口.&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;label success&#34;&gt;✔️ BaseStream 接口表示流的基本接口，而流是支持顺序和并行聚合操作的元素序列。&lt;/span&gt;&lt;br&gt;
 &lt;code&gt;Stream&lt;/code&gt;  接口有很多实现类。其主要的一个实现类是  &lt;code&gt;ReferencePipeline&lt;/code&gt;  类。除此之外 &lt;code&gt;ReferencePipeline&lt;/code&gt;  类还继承了 &lt;code&gt;AbstractPipeline&lt;/code&gt;  抽象类. &lt;span class=&#34;label success&#34;&gt;✔️ AbstractPipeline 表示 “管道” 类的抽象基类，它们是 Stream 接口及其原始特化的核心实现。&lt;/span&gt;再看 &lt;code&gt;AbstractPipeline&lt;/code&gt;  类的父类 &lt;code&gt;PipelineHelper&lt;/code&gt; ,&lt;span class=&#34;label success&#34;&gt;✔️ AbstractPipeline 的作用是：用于执行流管道的辅助类，将有关流管道的所有信息（输出形状、中间操作、流标志、并行度等）集中在一个地方。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;ReferencePipeline&lt;/code&gt;  类有三个子类:  &lt;code&gt;StatefulOp&lt;/code&gt;  表示有状态的操作， &lt;code&gt;StatelessOp&lt;/code&gt;  表示无状态的操作，  &lt;code&gt;Head&lt;/code&gt;  表示  &lt;code&gt;ReferencePipeline&lt;/code&gt;  的起始阶段。 当然了，这三个子类也是 流。&lt;/p&gt;
&lt;h3 id=&#34;从创建流开始&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#从创建流开始&#34;&gt;#&lt;/a&gt; 从创建流开始&lt;/h3&gt;
&lt;p&gt;不管是使用  &lt;code&gt;Stream.of(T t)&lt;/code&gt;  还是  &lt;code&gt;Collection.stream()&lt;/code&gt; ，还是 &lt;code&gt;Arrays.stream()&lt;/code&gt; , 底层的实现都是通过  &lt;code&gt;StreamSupport.stream()&lt;/code&gt;  来实现的。&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/images/java/jdk/stream/Stream.of%E6%96%B9%E6%B3%95%E5%AE%9E%E7%8E%B0.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;label success&#34;&gt;✔️ StreamSupport 类的作用是：用于创建和操作流的底层实用方法。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/images/java/jdk/stream/StreamSupport.stream%E6%96%B9%E6%B3%95%E5%AE%9E%E7%8E%B0.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;可以看到 直接返回的是  &lt;code&gt;ReferencePipeline.Head&lt;/code&gt;  对象。 首先  &lt;code&gt;Head&lt;/code&gt;  是一种 &lt;code&gt;Stream&lt;/code&gt;  的实现。 接着去看  &lt;code&gt;Head&lt;/code&gt;  的构造方法，可以看到其实调用的是： &lt;code&gt;AbstractPipeline&lt;/code&gt;  的构造方法.&lt;/p&gt;
&lt;h3 id=&#34;流的中间操作&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#流的中间操作&#34;&gt;#&lt;/a&gt; 流的中间操作&lt;/h3&gt;
&lt;p&gt;文中已经谈及了 中间操作分为有状态的中间操作和无状态的中间操作。那我们以一个案例来说明操作与操作之间执行的。&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;List&amp;lt;Integer&amp;gt; numbers = Stream.of(&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;          .map(item -&amp;gt; item + &lt;span class=&#34;number&#34;&gt;5&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;          .sorted((n1, n2) -&amp;gt; n2 - n1)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;          .limit(&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;          .collect(Collectors.toList());&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;code&gt;Stream.of()&lt;/code&gt;  方法上文已经简单的说明了，接下来我们来看  &lt;code&gt;map()&lt;/code&gt;  方法。&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/images/java/jdk/stream/Stream.map%E6%96%B9%E6%B3%95%E5%AE%9E%E7%8E%B0.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;可以看到， &lt;code&gt;map()&lt;/code&gt;  返回了一个 &lt;code&gt;StatelessOp&lt;/code&gt;  对象，并且重写了 &lt;code&gt;AbstractPipeline&lt;/code&gt;  的 &lt;code&gt;opWrapSink&lt;/code&gt;  方法。 之前也说过：它表示流的无状态中间阶段的基类。 还有一个 &lt;code&gt;Sink&lt;/code&gt;  类型.  &lt;code&gt;Sink&lt;/code&gt;  类表示  &lt;code&gt;Consumer&lt;/code&gt;  接口的扩展，用于在流管道的各个阶段传递值，以及管理大小信息、控制流等的附加方法。&lt;/p&gt;
&lt;p&gt;我们再仔细看一下这个方法。首先这个方法并没有进行任何的计算，只是将  &lt;code&gt;item -&amp;gt; item + 5&lt;/code&gt;  这个操作进行三层的封装， 1. 将 &lt;code&gt;map&lt;/code&gt;  方法的返回值重新封装成了流对象，2. 把我们的 &lt;code&gt;item -&amp;gt; item + 5&lt;/code&gt;  这个操作封装成了  &lt;code&gt;StatelessOp&lt;/code&gt; ， 并重写了 &lt;code&gt;opWrapSink&lt;/code&gt;  这个方法，并在终止操作时进行调用。 3. 使用 &lt;code&gt;sink&lt;/code&gt; ( &lt;code&gt;Sink.ChainedReference)&lt;/code&gt;  将管道的各个阶段连接起来。即赋值 &lt;code&gt;downStream&lt;/code&gt; . 使用 &lt;code&gt;downstream&lt;/code&gt;  这个 &lt;code&gt;Consumer&lt;/code&gt;  完成 &lt;code&gt;accept&lt;/code&gt;  调用。&lt;/p&gt;
&lt;p&gt;这里需要注意一下:  &lt;code&gt;StatelessOp&lt;/code&gt;  类的构造方法的实体参传输了一个  &lt;code&gt;this&lt;/code&gt;  字段。仔细翻看源码就会返现它一直调用到  &lt;code&gt;AbstractPipeline&lt;/code&gt;  的构造方法中。&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/images/java/jdk/stream/AbstractPipeline.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;可以看到  &lt;code&gt;AbstractPipeline&lt;/code&gt;  中有两个字段  &lt;code&gt;nextStage&lt;/code&gt;  和  &lt;code&gt;previousStage&lt;/code&gt;  字段，分别表示的是上一阶段和下一阶段。其中  &lt;code&gt;nextStage&lt;/code&gt;  是 当前阶段。  &lt;code&gt;previousStage&lt;/code&gt;  则应该 当前阶段的上一个阶段，其实就是调用当前方法的对象。&lt;/p&gt;
&lt;p&gt;不知道你是否发现 通过这种方法， &lt;code&gt;stream&lt;/code&gt;  组成了一个 流各个阶段的双向链表。节点就是流操作的各个阶段。&lt;/p&gt;
&lt;p&gt;ps: 这样一次流操作会创建两个链表:  &lt;code&gt;Stream&lt;/code&gt;  阶段的双向链表，和 在终止操作时，根据双向链表生成的  &lt;code&gt;Sink&lt;/code&gt;  链表。&lt;/p&gt;
&lt;p&gt;再次说明：到目前为止， &lt;code&gt;map()&lt;/code&gt;  方法里只是进行了封装，没有进行任何计算！&lt;/p&gt;
&lt;p&gt;接着来看  &lt;code&gt;sorted()&lt;/code&gt;  方法。&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/images/java/jdk/stream/stream.sorted%E6%96%B9%E6%B3%95.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;sorted&lt;/code&gt;  方法比较简单，通过调用 &lt;code&gt;SortedOps&lt;/code&gt;  类的 &lt;code&gt;makeRef&lt;/code&gt;  方法，创建了 &lt;code&gt;OfRef&lt;/code&gt;  对象。  &lt;code&gt;OfRef&lt;/code&gt;  类的作用是：用于对流进行排序的专用子类型。  &lt;code&gt;OfRef&lt;/code&gt;  类继承了  &lt;code&gt;ReferencePipeline.StatefulOp&lt;/code&gt;  ，所以 &lt;code&gt;OfRef&lt;/code&gt;  是一个有状态操作。那自然它也会有  &lt;code&gt;opWrapSink&lt;/code&gt;  方法。也就是说它也会返回一个 Sink 对象，只是这个 &lt;code&gt;Sink&lt;/code&gt;  对象的实现类不一样的。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;说明：到目前为止， &lt;code&gt;sorted()&lt;/code&gt;  方法里只是进行了封装，没有进行任何计算！&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;同理去看 &lt;code&gt;limit&lt;/code&gt;  方法。&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/images/java/jdk/stream/Stream.limit%E6%96%B9%E6%B3%95.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;这个方法的内部是直接创建了一个  &lt;code&gt;ReferencePipeline.StatefulOp&lt;/code&gt;  对象，也是重写了其中的方法:  &lt;code&gt;opWrapSink&lt;/code&gt; .&lt;/p&gt;
&lt;p&gt;不知道你是否有好奇，我为什么每次都会提到  &lt;code&gt;opWrapSink&lt;/code&gt;  这个方法呢？因为这个方法非常的重要！其重要性我们在 &lt;a href=&#34;#%E6%8E%A2%E2%80%9D%E6%B3%95%E2%80%9C%E6%8B%A9&#34;&gt;探” 法 “择&lt;/a&gt; 这部分会完整的说明。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;再三说明：到目前为止， &lt;code&gt;limit()&lt;/code&gt;  方法里只是进行了封装，没有进行任何计算！&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;书行至此，案例中的中间操作都已经简单的分析完成了。我们就知道这里  &lt;code&gt;jdk&lt;/code&gt;  为了完成 流操作为每个中间操作都封装了很多的对象，而这些对象只是散列在了内存中。接下来，就要看  &lt;code&gt;jdk&lt;/code&gt;  是如何把他们组装到一起的。&lt;/p&gt;
&lt;h3 id=&#34;终止操作&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#终止操作&#34;&gt;#&lt;/a&gt; 终止操作&lt;/h3&gt;
&lt;p&gt;以 &lt;code&gt;Collect&lt;/code&gt;  方法为例，去探究一下终止操作的流程。&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/images/java/jdk/stream/Stream.collect%E6%96%B9%E6%B3%95.png&#34; alt=&#34;&#34;&gt;&lt;br&gt;
可以看到在 &lt;code&gt;collect&lt;/code&gt;  方法中，分为并行执行方式和串行执行方法，我们看串行执行时，会创建  &lt;code&gt;ReduceOps&lt;/code&gt;  终止操作对象。&lt;br&gt;
&lt;img data-src=&#34;/images/java/jdk/stream/AbstractPipeline.evaluate%E6%96%B9%E6%B3%95.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;将 终止操作 传递给 evaluate 方法，然后调用终止操作的 evaluate 方法，当然这个方法也分成了串行执行和并行执行两种。&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/images/java/jdk/stream/ReduceOps.evaluateSequential%E6%96%B9%E6%B3%95.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;helper&lt;/code&gt;  其实是  &lt;code&gt;limit(3)&lt;/code&gt;  中间操作返回的对象。这其实中间操作的最后一个 &lt;code&gt;Stage&lt;/code&gt;  (阶段)。返回的对象是 &lt;code&gt;AbstractPipeline&lt;/code&gt;  和  &lt;code&gt;Stream&lt;/code&gt;  的子类实例。&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/images/java/jdk/stream/AbstractPipeline.wrapAndCopyInfo%E6%96%B9%E6%B3%95.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;这里包含两个方法:  &lt;code&gt;wrapSink()&lt;/code&gt;  和  &lt;code&gt;copyInfo()&lt;/code&gt; .&lt;/p&gt;
&lt;p&gt;这是两个非常重要的方法.  &lt;code&gt;wrapSink()&lt;/code&gt;  是将中间的操作组成  &lt;code&gt;SinkChain&lt;/code&gt;  。  &lt;code&gt;copyInfo()&lt;/code&gt;  这是执行真正的计算逻辑。&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/images/java/jdk/stream/AbstractPipeline.wrapSink%E6%96%B9%E6%B3%95.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;方法中的形参  &lt;code&gt;sink&lt;/code&gt;  就是最后的阶段的终止操作。方法通过循环将  &lt;code&gt;sink&lt;/code&gt;  分装到 &lt;code&gt;Sink&lt;/code&gt;  中。  &lt;code&gt;Sink&lt;/code&gt;  接口 的一个实现类是  &lt;code&gt;ChainedReference&lt;/code&gt;  ， 类中定义了一个  &lt;code&gt;downStream&lt;/code&gt;  字段。 会将 &lt;code&gt;sink = p.opWrapSink(p.previousStage.combinedFlags, sink);&lt;/code&gt;   中的  &lt;code&gt;sink&lt;/code&gt;  赋值给  &lt;code&gt;downStream&lt;/code&gt; . 这样就形成了 &lt;b&gt;套娃&lt;/b&gt;。 最后返回一个  &lt;code&gt;wrapSink&lt;/code&gt;  , 即整个流操作中所有的操作的 封装 &lt;code&gt;Sink&lt;/code&gt; .&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/images/java/jdk/stream/AbstractPipeline.copyInfo%E6%96%B9%E6%B3%95.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;图中所示的即为上面提及的 封装 &lt;code&gt;Sink&lt;/code&gt; . 可中断和不可中断的区别是：可中断如果获取值，就不必再取所有的结果了。反之，就需要计算出所有阶段的结果。&lt;/p&gt;
&lt;p&gt;非可中断的终止操作时，会执行  &lt;code&gt;begin()&lt;/code&gt; , &lt;code&gt;forEachRemaining()&lt;/code&gt; , &lt;code&gt;end()&lt;/code&gt; , 三个方法。  这个三个方法对应的是： &lt;code&gt;Sink&lt;/code&gt;  接口中提供的三个方法。&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;// 每个Sink开始之前调用该方法，通知sink做好准备&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;default&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;begin&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(&lt;span class=&#34;keyword&#34;&gt;long&lt;/span&gt; size)&lt;/span&gt; &lt;/span&gt;&amp;#123;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;// 遍历元素时使用，接受一个待处理元素，并对元素进行处理。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;default&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;accept&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(Double i)&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;// 通知sink没有元素进行处理了。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;default&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;end&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;()&lt;/span&gt; &lt;/span&gt;&amp;#123;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;其中，&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;begin()&lt;/code&gt;  方法，会调用每个 &lt;code&gt;Sink&lt;/code&gt;  子类的 &lt;code&gt;begin&lt;/code&gt;  方法。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;forEachRemaining()&lt;/code&gt;  方法对应的执行内容如下图:&lt;br&gt;
&lt;img data-src=&#34;/images/java/jdk/stream/forEachRemaining%E6%96%B9%E6%B3%95.png&#34; alt=&#34;&#34;&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;end()&lt;/code&gt;  方法，会调用每个 &lt;code&gt;Sink&lt;/code&gt;  字段的 &lt;code&gt;end&lt;/code&gt;  方法。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;书行至此。或许你会对  &lt;code&gt;forEachRemaining&lt;/code&gt;  方法感到好奇。后面我会写一篇文章来专门分享: 《 &lt;code&gt;Stream&lt;/code&gt;  的高级迭代器》, 希望你能继续关注支持我～&lt;/p&gt;
&lt;h2 id=&#34;探法择&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#探法择&#34;&gt;#&lt;/a&gt; 探” 法 “择&lt;/h2&gt;
&lt;p&gt;我们从一个案例出发，在细节之处分析了一个 &lt;code&gt;Stream&lt;/code&gt;  的执行过程。现在我们需要从全局来看一下  &lt;code&gt;Stream&lt;/code&gt;  的执行过程是什么样子的.&lt;/p&gt;
&lt;p&gt;上文中我们知道了  &lt;code&gt;Stream&lt;/code&gt;  的 所有计算都是在 终止操作时 触发的。 所有的中间操作都是封装了一些对象。我们用一张图来描述下 &lt;code&gt;Stream&lt;/code&gt;  的执行过程。&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/images/java/jdk/stream/Stream%E9%80%BB%E8%BE%91%E6%B5%81%E7%A8%8B%E5%9B%BE.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;stream&lt;/code&gt;  将创建的流做为第一个  &lt;code&gt;Stage&lt;/code&gt;  , 用来代表流的开始， 每个 &lt;code&gt;Stage&lt;/code&gt;  都是 &lt;code&gt;AbstractPipeline&lt;/code&gt;  的子类。 第一个 &lt;code&gt;Stage&lt;/code&gt;  是 &lt;code&gt;AbstractPipeline.Head&lt;/code&gt;  对象。&lt;/li&gt;
&lt;li&gt;然后将中间操作封装成后面的 n 个  &lt;code&gt;stage&lt;/code&gt; . 并组成 双向链表的形式，并且存储了 &lt;code&gt;stage0&lt;/code&gt; . 每个 &lt;code&gt;Stage&lt;/code&gt;  都是 &lt;code&gt;StatelessOp&lt;/code&gt;  或者  &lt;code&gt;statefulOp&lt;/code&gt; .&lt;/li&gt;
&lt;li&gt;终止操作通过 &lt;code&gt;wrapSink()&lt;/code&gt;  方法 会触发将 每个阶段的操作封装成  &lt;code&gt;Sink&lt;/code&gt; . 并且 &lt;code&gt;sink&lt;/code&gt;  都会做为参数传递到上一个阶段的 &lt;code&gt;opWrapSink()&lt;/code&gt;  方法中，从而组成一个  &lt;code&gt;sink&lt;/code&gt;  链表。&lt;/li&gt;
&lt;li&gt;然后，通过  &lt;code&gt;copyInfo()&lt;/code&gt;  方法将，交于 &lt;code&gt;Spilterator&lt;/code&gt;  进行迭代。计算的结果可以分为四种
&lt;ul&gt;
&lt;li&gt;返回 &lt;code&gt;boolean&lt;/code&gt;  类型的结果：比如 &lt;code&gt;anyMatch()&lt;/code&gt;   &lt;code&gt;allMatch()&lt;/code&gt;   &lt;code&gt;noneMatch()&lt;/code&gt;  方法。&lt;/li&gt;
&lt;li&gt;返回 &lt;code&gt;Optional&lt;/code&gt;  类型的结果： 比如 &lt;code&gt;findFirst()&lt;/code&gt;   &lt;code&gt;findAny()&lt;/code&gt;  方法&lt;/li&gt;
&lt;li&gt;还有归约操作:	 &lt;code&gt;reduce()&lt;/code&gt;   &lt;code&gt;collect()&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;返回数组的： &lt;code&gt;toArray()&lt;/code&gt; &lt;br&gt;
 对于表中返回 &lt;code&gt;boolean&lt;/code&gt;  或者 &lt;code&gt;Optional&lt;/code&gt;  的操作（ &lt;code&gt;Optional&lt;/code&gt;  是存放 一个 值的容器）的操作，由于值返回一个值，只需要在对应的 &lt;code&gt;Sink&lt;/code&gt;  中记录这个值，等到执行结束时返回就可以了。&lt;br&gt;
对于归约操作，最终结果放在用户调用时指定的容器中（容器类型通过收集器指定）。 &lt;code&gt;collect()&lt;/code&gt; ,  &lt;code&gt;reduce()&lt;/code&gt; ,  &lt;code&gt;max()&lt;/code&gt; ,  &lt;code&gt;min()&lt;/code&gt;  都是归约操作，虽然 &lt;code&gt;max()&lt;/code&gt;  和 &lt;code&gt;min()&lt;/code&gt;  也是返回一个 &lt;code&gt;Optional&lt;/code&gt; ，但事实上底层是通过调用 &lt;code&gt;reduce()&lt;/code&gt;  方法实现的。&lt;br&gt;
对于返回是数组的情况，毫无疑问的结果会放在数组当中。这么说当然是对的，但在最终返回数组之前，结果其实是存储在一种叫做 &lt;code&gt;Node&lt;/code&gt;  的数据结构中的。 &lt;code&gt;Node&lt;/code&gt;  是一种多叉树结构，元素存储在树的叶子当中，并且一个叶子节点可以存放多个元素。这样做是为了并行执行方便。关于  &lt;code&gt;Stream&lt;/code&gt;  的并行计算，我后面会继续分享。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;明道义&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#明道义&#34;&gt;#&lt;/a&gt; 明 &amp;quot;道&amp;quot; 义&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;JDK&lt;/code&gt;  提供的  &lt;code&gt;Stream&lt;/code&gt;  具有如下特点:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;无存储。 &lt;code&gt;stream&lt;/code&gt;  不是一种数据结构，它只是某种数据源的一个视图，数据源可以是一个数组， &lt;code&gt;Java&lt;/code&gt;  容器或 &lt;code&gt;I/O channel&lt;/code&gt;  等。&lt;/li&gt;
&lt;li&gt;为函数式编程而生。对 &lt;code&gt;stream&lt;/code&gt;  的任何修改都不会修改背后的数据源，比如对 &lt;code&gt;stream&lt;/code&gt;  执行过滤操作并不会删除被过滤的元素，而是会产生一个不包含被过滤元素的新 &lt;code&gt;stream&lt;/code&gt; 。&lt;/li&gt;
&lt;li&gt;惰式执行。 &lt;code&gt;stream&lt;/code&gt;  上的操作并不会立即执行，只有等到用户真正需要结果的时候才会执行。&lt;/li&gt;
&lt;li&gt;可消费性。 &lt;code&gt;stream&lt;/code&gt;  只能被 “消费” 一次，一旦遍历过就会失效，就像容器的迭代器那样，想要再次遍历必须重新生成。&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;在这一趴，我就围绕两个点来简单的聊聊。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;JDK8&lt;/code&gt;  为什么要加入  &lt;code&gt;Stream&lt;/code&gt; .&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;除了上面四个特点之外， &lt;code&gt;Java8&lt;/code&gt;  中的 &lt;code&gt;Stream&lt;/code&gt;  是对集合对象的增强，当然不仅仅是集合对象。 &lt;code&gt;Stream&lt;/code&gt;  为开发者提供了简洁的编码方式和编码风格，极大的提高了开发的效率。&lt;/p&gt;
&lt;p&gt;另外一个更重要的点在于  &lt;code&gt;Stream&lt;/code&gt;  为我们下篇文章要分享的 &lt;b&gt; &lt;code&gt;Stream&lt;/code&gt;  并行计算流&lt;/b&gt; 提供了实现，请期待。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;Stream&lt;/code&gt;  为什么要这么设计？&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;我这里给一份我的回答，这个问题也留给看文章的你，也希望能看到你的回答。&lt;/p&gt;
&lt;p&gt;根据上文所说的内容， &lt;code&gt;Stream&lt;/code&gt;  体系是一组接口家族， &lt;code&gt;AbstractPipeline &lt;/code&gt; 是接口的实现， &lt;code&gt;PipelineHelper&lt;/code&gt;  是管道的辅助类， &lt;code&gt;StreamSupport&lt;/code&gt;  是流的底层工具类&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Stream&lt;/code&gt;  使用 &lt;code&gt;stage&lt;/code&gt;  来抽象流水线上的每个操作，其实每个 &lt;code&gt;stage&lt;/code&gt;  就是一个 &lt;code&gt;stream&lt;/code&gt;  子类的实例， 也就是 &lt;code&gt;AbstractPipeline&lt;/code&gt;  几个子类的内部子类即 &lt;code&gt;Head&lt;/code&gt;   &lt;code&gt;StatelessOp&lt;/code&gt;   &lt;code&gt;statefulOp&lt;/code&gt; ;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;StreamSupport&lt;/code&gt;  用于创建生成 &lt;code&gt;Stream&lt;/code&gt;  对应的是 &lt;code&gt;Head&lt;/code&gt;  类，其他的中间操作分为有状态和无状态的，中间操作通过方法比如  &lt;code&gt;filter&lt;/code&gt;   &lt;code&gt;map&lt;/code&gt;  等返回的是 &lt;code&gt;StatelessOp&lt;/code&gt;  或者  &lt;code&gt;statefulOp&lt;/code&gt; .  多个 &lt;code&gt;stage&lt;/code&gt;  组合称为双向链表的形式 从而成了整个流水线&lt;/p&gt;
&lt;p&gt;有了流水线，相邻两个操作阶段之间如何协调运算？&lt;/p&gt;
&lt;p&gt;于是又有了 &lt;code&gt;Sink&lt;/code&gt;  的概念，又来协调相邻的 &lt;code&gt;stage&lt;/code&gt;  之间计算运行&lt;/p&gt;
&lt;p&gt;他的模式是 &lt;code&gt;begin&lt;/code&gt;    &lt;code&gt;accept&lt;/code&gt;   &lt;code&gt;end&lt;/code&gt;  还有短路标记&lt;/p&gt;
&lt;p&gt;他的 &lt;code&gt;accept&lt;/code&gt;  就是封装了回调方法，所以说每个操作 &lt;code&gt;stage&lt;/code&gt; ,  &lt;code&gt;StatelessOp&lt;/code&gt;   或者  &lt;code&gt;statefulOp&lt;/code&gt;  中又封装了 &lt;code&gt;Sink&lt;/code&gt; . 通过 &lt;code&gt;AbstractPipeline&lt;/code&gt;  提供的 &lt;code&gt;opWrapSink&lt;/code&gt;  方法可以获取这个 &lt;code&gt;Sink&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;调用这个 &lt;code&gt;sink&lt;/code&gt;  的 &lt;code&gt;accept&lt;/code&gt;  方法就可以调用当前操作的方法&lt;/p&gt;
&lt;p&gt;那么如何串联起来呢？&lt;/p&gt;
&lt;p&gt;关键点在于 &lt;code&gt;opWrapSink&lt;/code&gt;  方法，他接收一个 &lt;code&gt;Sink&lt;/code&gt;  作为参数，在调用 &lt;code&gt;accept&lt;/code&gt;  方法中。可以调用这个入参 &lt;code&gt;Sink&lt;/code&gt;  的 &lt;code&gt;accept&lt;/code&gt;  方法&lt;/p&gt;
&lt;p&gt;这样子从当前就能调用下一个，也就是说有了推动的动作。那么只需要找到开始，每个处理了之后都推动下一个，就顺序完成了所欲的操作了。&lt;/p&gt;
&lt;h2 id=&#34;结语&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#结语&#34;&gt;#&lt;/a&gt; 结语&lt;/h2&gt;
&lt;p&gt;通过看  &lt;code&gt;Stream&lt;/code&gt;  相关的知识点，发现一篇文章是没法讲清楚的。&lt;/p&gt;
&lt;p&gt;这一次，我又果不其然的留下了两篇文章&lt;/p&gt;
&lt;ul class=&#34;task-list&#34;&gt;
&lt;li class=&#34;task-list-item&#34;&gt;&lt;input type=&#34;checkbox&#34; id=&#34;cbx_0&#34; disabled=&#34;true&#34;&gt;&lt;label for=&#34;cbx_0&#34;&gt;  &lt;code&gt;Stream&lt;/code&gt;  并行计算流&lt;/label&gt;&lt;/li&gt;
&lt;li class=&#34;task-list-item&#34;&gt;&lt;input type=&#34;checkbox&#34; id=&#34;cbx_1&#34; disabled=&#34;true&#34;&gt;&lt;label for=&#34;cbx_1&#34;&gt;  &lt;code&gt;Stream&lt;/code&gt;  的高级迭代器&lt;/label&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;请给我记代办～&lt;/p&gt;
&lt;p&gt;在分享 &lt;code&gt;并行计算流&lt;/code&gt; 的时候，我们需要以  &lt;code&gt;JDK1.7&lt;/code&gt;  中的  &lt;code&gt;forkJoin&lt;/code&gt;  框架为前提，来分析  &lt;code&gt;Stream&lt;/code&gt;  的  &lt;code&gt;parallelStream&lt;/code&gt; .&lt;/p&gt;
&lt;p&gt;在分享 &lt;code&gt;迭代器&lt;/code&gt; 的时候，我们也会分析一下 &lt;code&gt;JDK&lt;/code&gt;  中提供的 普通迭代器，比如  &lt;code&gt;ForEach&lt;/code&gt; ,  &lt;code&gt;iterator&lt;/code&gt; , 以及 &lt;code&gt;Stream&lt;/code&gt;  的高级迭代器  &lt;code&gt;spliterator&lt;/code&gt; . 也会由浅入深的分析一下，各种迭代器的优缺点。 也会自定义实现一个迭代器。&lt;/p&gt;
&lt;p&gt;敬请期待，防止走丢见文末。关注我，期望和你一起遇见更好的自己.&lt;/p&gt;
&lt;h2 id=&#34;最后&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#最后&#34;&gt;#&lt;/a&gt; 最后&lt;/h2&gt;
&lt;p&gt;期望和你一起遇见更好的自己&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/images/java/jdk/stream/qrcode.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://fangjiaxiaobai.github.io/2021/08/19/java%E7%B3%BB%E5%88%97/JVM/OOM/</guid>
            <title>JVM之你没见过的OOM</title>
            <link>https://fangjiaxiaobai.github.io/2021/08/19/java%E7%B3%BB%E5%88%97/JVM/OOM/</link>
            <category>OOM</category>
            <category>JVM</category>
            <category>Java</category>
            <pubDate>Thu, 19 Aug 2021 17:13:55 +0800</pubDate>
            <description><![CDATA[ &lt;p&gt;一文搞懂内存溢出，保内存平安，防止你被祭天:[手动滑稽]:&lt;/p&gt;
&lt;h2 id=&#34;释义&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#释义&#34;&gt;#&lt;/a&gt; 释义&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;OOM&lt;/code&gt;  的含义，到底是什么意思？&lt;br&gt;
 是 JVM 独有的吗？  &lt;code&gt;linux&lt;/code&gt;  是否也会存在，那又是怎么肥事？&lt;/p&gt;
&lt;p&gt;&lt;code&gt;OOM&lt;/code&gt;  :  &lt;code&gt;Out Of Memory&lt;/code&gt;  .  内存溢出。内存溢出来了，也就是说内存不够用了，就会发生这个问题了。&lt;/p&gt;
&lt;h3 id=&#34;内存又是什么呢&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#内存又是什么呢&#34;&gt;#&lt;/a&gt; 内存又是什么呢？&lt;/h3&gt;
&lt;p&gt;1、 内存 是计算机的重要部件之一。它用于暂时存放 CPU 中的运算数据，与硬盘等外部存储交换数据。是外存与 &lt;code&gt;CPU&lt;/code&gt;  进行沟通的桥梁。&lt;/p&gt;
&lt;p&gt;2、 &lt;code&gt;Java&lt;/code&gt;  内存。说到这里我们就不得说一下 java 的内存模型 (JMM) 了。如下图。&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/images/java/jvm/JMM.png&#34; alt=&#34;JMM&#34;&gt;&lt;/p&gt;
&lt;p&gt;就这个一个图就很不下几十个面试考点：比如 &lt;code&gt;votitle&lt;/code&gt;  关键字，内存栅栏，指令重排，5 项 &lt;code&gt;Happen-Before&lt;/code&gt;  原则，内存原子操作，数据 &lt;code&gt;IO&lt;/code&gt;  操作等等。&lt;/p&gt;
&lt;p&gt;闲话少扯，抛个问题， &lt;code&gt;OOM&lt;/code&gt;  发生区域会上图中那个部分发生呢？&lt;/p&gt;
&lt;h2 id=&#34;前言&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#前言&#34;&gt;#&lt;/a&gt; 前言&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;java&lt;/code&gt;  运行时内存区域  &lt;code&gt;JAVA RUNTIME MEMEORY AREA&lt;/code&gt; , 注意区分 &lt;code&gt;JMM&lt;/code&gt; .&lt;/p&gt;
&lt;p&gt;大家都知道的， &lt;code&gt;java&lt;/code&gt;  运行时内存区域，分为程序计数器 (PC 寄存器)，java 虚拟机栈，本地方法栈，堆，方法区，运行时常量池，堆外内存 (直接内存)&lt;/p&gt;
&lt;p&gt;1、程序计数器是一块较小的内存空间，是当前线程正在执行的那条字节码指令的地址。若当前线程正在执行的是一个本地方法，那么此时程序计数器为 &lt;code&gt;Undefined&lt;/code&gt; 。&lt;/p&gt;
&lt;p&gt;2、 &lt;code&gt;Java&lt;/code&gt;  虚拟机栈是描述  &lt;code&gt;Java&lt;/code&gt;  方法运行过程的内存模型。 &lt;code&gt;Java&lt;/code&gt;  虚拟机栈会为每一个即将运行的  &lt;code&gt;Java&lt;/code&gt;  方法创建一块叫做 “栈帧” 的区域，用于存放该方法运行过程中的一些信息，比如：局部变量表，操作数栈，动态链接，方法出口信息等，方法执行的过程即为栈帧压栈出栈的过程。&lt;/p&gt;
&lt;p&gt;3、本地方法栈是为  &lt;code&gt;JVM&lt;/code&gt;  运行  &lt;code&gt;Native&lt;/code&gt;  方法准备的空间，由于很多  &lt;code&gt;Native&lt;/code&gt;  方法都是用  &lt;code&gt;C&lt;/code&gt;  语言实现的，所以它通常又叫  &lt;code&gt;C&lt;/code&gt;  栈。它与  &lt;code&gt;Java&lt;/code&gt;  虚拟机栈实现的功能类似，只不过本地方法栈是描述本地方法运行过程的内存模型。&lt;/p&gt;
&lt;p&gt;4、堆是用来存放对象的内存空间，几乎所有的对象都存储在堆中。这一区域是线程共享，整个  &lt;code&gt;Java&lt;/code&gt;  虚拟机只有一个堆，所有的线程都访问同一个堆。堆又可划分为年轻代和老年代，年轻代内存又可以分为 &lt;code&gt;Eden&lt;/code&gt; ,  &lt;code&gt;from Surivor&lt;/code&gt; , &lt;code&gt;to Surivor&lt;/code&gt; , 并且默认以 8:1:1 的比例进行分配。&lt;/p&gt;
&lt;p&gt;5、方法区： &lt;code&gt;Java&lt;/code&gt;  虚拟机规范中定义方法区是堆的一个逻辑部分。方法区存放以下信息：已经被虚拟机加载的类信息，常亮，静态变量，即时编译编译器编译后的代码。线程共享的区域。为了与堆区分，方法还有一个别名： &lt;code&gt;Non-Heap&lt;/code&gt;  (非堆)。&lt;/p&gt;
&lt;p&gt;5.1 、运行时常量池：存放常量的区域。 在运行期间，可以向常量池中添加新的变量，如  &lt;code&gt;String&lt;/code&gt;  类的 &lt;code&gt;intern()&lt;/code&gt;  方法。&lt;/p&gt;
&lt;p&gt;6、堆外内存是 &lt;code&gt;java&lt;/code&gt;  虚拟机之外的内容，但也可能被 &lt;code&gt;java&lt;/code&gt;  使用。需要注意的是，这部分内容也会因内存不足而抛出  &lt;code&gt;OutOfMemoryError&lt;/code&gt; 、&lt;/p&gt;
&lt;p&gt;知道了 &lt;code&gt;Java&lt;/code&gt;  运行内存区域，那么可能发生  &lt;code&gt;OOM&lt;/code&gt;  的区域有哪些呢？&lt;/p&gt;
&lt;p&gt;我们都知道 &lt;code&gt;OOM&lt;/code&gt;  只的是内存溢出，所以 堆，非堆即方法区，本地方法栈，以及堆外内存 都是会发生  &lt;code&gt;OOM&lt;/code&gt;  的。&lt;/p&gt;
&lt;p&gt;那 &lt;code&gt;java&lt;/code&gt;  虚拟机栈呢？不会发生内容溢出吗？   会！但是 栈发生内容溢出的时候，报的错误是  &lt;code&gt;StackOverflowError&lt;/code&gt; .&lt;/p&gt;
&lt;p&gt;那程序计数器呢？  程序计数器，是不会发送内容溢出的。 因为 存储的是：当前线程正在执行的那条字节码指令的地址啊。&lt;/p&gt;
&lt;p&gt;如下图：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/images/java/jvm/OOM%E5%8C%BA%E5%9F%9F%E5%9B%BE.png&#34; alt=&#34;OOM区域图&#34;&gt;&lt;/p&gt;
&lt;p&gt;在上图中还指定了各区域大小的参数配置：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;-Xms&lt;/code&gt;  设置堆的最小空间大小。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;-Xmx&lt;/code&gt;  设置堆的最大空间大小。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;-XX:NewSize&lt;/code&gt;  设置新生代最小空间大小。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;-XX:MaxNewSize&lt;/code&gt;  设置新生代最大空间大小。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;-XX:PermSize&lt;/code&gt;  设置永久代最小空间大小。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;-XX:MaxPermSize&lt;/code&gt;  设置永久代最大空间大小。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;-Xss&lt;/code&gt;  设置每个线程的堆栈大小。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;没有直接设置老年代的参数，但是可以设置堆空间大小和新生代空间大小两个参数来间接控制。  &lt;code&gt;老年代空间大小=堆空间大小-年轻代大空间大小&lt;/code&gt;&lt;/p&gt;
&lt;h2 id=&#34;场景分析&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#场景分析&#34;&gt;#&lt;/a&gt; 场景分析&lt;/h2&gt;
&lt;p&gt;我们挨个分析下发生 &lt;code&gt;OOM&lt;/code&gt;  的 9 种场景&lt;/p&gt;
&lt;p&gt;什么时候会发生 &lt;code&gt;OOM&lt;/code&gt;  呢？  当内存严重不够用的时候就会发生   &lt;code&gt;java.lang.OutOfMemoryError&lt;/code&gt;  。&lt;/p&gt;
&lt;p&gt;我们来看下每个区域都有可能出现内存溢出问题.&lt;/p&gt;
&lt;h3 id=&#34;javaheap-space&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#javaheap-space&#34;&gt;#&lt;/a&gt;  &lt;code&gt;JavaHeap space&lt;/code&gt;&lt;/h3&gt;
&lt;p&gt;当堆内存（ &lt;code&gt;Heap Space&lt;/code&gt; ）没有足够空间存放新创建的对象时，就会抛出  &lt;code&gt;java.lang.OutOfMemoryError:Javaheap space&lt;/code&gt;  错误。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Javaheap space&lt;/code&gt;  错误产生的常见原因可以分为以下几类：&lt;/p&gt;
&lt;p&gt;1. 请求创建一个超大对象，通常是一个大数组。&lt;br&gt;
2. 超出预期的访问量 / 数据量，通常是上游系统请求流量飙升，常见于各类促销 / 秒杀活动，可以结合业务流量指标排查是否有尖状峰值。&lt;br&gt;
3. 过度使用终结器（ &lt;code&gt;Finalizer&lt;/code&gt; ），该对象没有立即被  &lt;code&gt;GC&lt;/code&gt; 。&lt;br&gt;
4. 内存泄漏（ &lt;code&gt;Memory Leak&lt;/code&gt; ），大量对象引用没有释放， &lt;code&gt;JVM&lt;/code&gt;  无法对其自动回收，常见于使用了  &lt;code&gt;File&lt;/code&gt;  等资源没有回收。&lt;/p&gt;
&lt;h4 id=&#34;解决方案&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#解决方案&#34;&gt;#&lt;/a&gt; 解决方案&lt;/h4&gt;
&lt;p&gt;针对大部分情况，通常只需要通过  &lt;code&gt;-Xmx&lt;/code&gt;  参数调高  &lt;code&gt;JVM&lt;/code&gt;  堆内存空间即可。如果仍然没有解决，可以参考以下情况做进一步处理：&lt;/p&gt;
&lt;p&gt;1、如果是超大对象，可以检查其合理性，比如是否一次性查询了数据库全部结果，而没有做结果数限制。&lt;br&gt;
2、如果是业务峰值压力，可以考虑添加机器资源，或者做限流降级。&lt;br&gt;
3、如果是内存泄漏，需要找到持有的对象，修改代码设计，比如关闭没有释放的连接。&lt;/p&gt;
&lt;h4 id=&#34;代码案例&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#代码案例&#34;&gt;#&lt;/a&gt; 代码案例&lt;/h4&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;/**&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt; * 演示大对象&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt; * -Xms128M -Xmx128M&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt; */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;static&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;bigObject&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;()&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;// 21 可以，22就会OOM&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;// 4* 1024 * 1024 = 4M * 32 = 128M&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt;[] integers = &lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt;[&lt;span class=&#34;number&#34;&gt;1024&lt;/span&gt;*&lt;span class=&#34;number&#34;&gt;1024&lt;/span&gt;*&lt;span class=&#34;number&#34;&gt;32&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;报错内容&lt;br&gt;
&lt;img data-src=&#34;/images/java/jvm/heapSpaceError.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;gc-overhead-limit-exceeded&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#gc-overhead-limit-exceeded&#34;&gt;#&lt;/a&gt;  &lt;code&gt;GC overhead limit exceeded&lt;/code&gt;&lt;/h3&gt;
&lt;p&gt;当  &lt;code&gt;Java&lt;/code&gt;  进程花费  &lt;code&gt;98%&lt;/code&gt;  以上的时间执行  &lt;code&gt;GC&lt;/code&gt; ，但只恢复了不到  &lt;code&gt;2%&lt;/code&gt;  的内存，且该动作连续重复了  &lt;code&gt;5&lt;/code&gt;  次，就会抛出  &lt;code&gt;java.lang.OutOfMemoryError:GC overhead limit exceeded&lt;/code&gt;  错误。简单地说，就是应用程序已经基本耗尽了所有可用内存，  &lt;code&gt;GC&lt;/code&gt;  也无法回收。&lt;/p&gt;
&lt;h4 id=&#34;解决方案-2&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#解决方案-2&#34;&gt;#&lt;/a&gt; 解决方案&lt;/h4&gt;
&lt;p&gt;同  &lt;code&gt;JavaHeap space&lt;/code&gt;  部分的异常解决方案。&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;/**&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt; * 演示 频繁GC&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt; * -Xms128M -Xmx128M&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt; */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;static&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;overHead&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;()&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    Map map = &lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; HashMap();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    Random r = &lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; Random();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;while&lt;/span&gt; (&lt;span class=&#34;keyword&#34;&gt;true&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        map.put(r.nextInt(), &lt;span class=&#34;string&#34;&gt;&amp;quot;value&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;报错内容:&lt;br&gt;
&lt;img data-src=&#34;/images/java/jvm/gcOverHead.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;permgen-spacejdk8-已废弃-see-元空间&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#permgen-spacejdk8-已废弃-see-元空间&#34;&gt;#&lt;/a&gt;  &lt;code&gt;Permgen space&lt;/code&gt; ( &lt;code&gt;JDK8&lt;/code&gt;  已废弃， &lt;code&gt;see&lt;/code&gt;  元空间。)&lt;/h3&gt;
&lt;div class=&#34;note info&#34;&gt;
&lt;p&gt;为什么会废弃 永久代？     &lt;code&gt;see&lt;/code&gt; ： &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL29wZW5qZGsuamF2YS5uZXQvamVwcy8xMjI=&#34;&gt;http://openjdk.java.net/jeps/122&lt;/span&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;该错误表示永久代（ &lt;code&gt;Permanent Generation&lt;/code&gt; ）已用满，通常是因为加载的  &lt;code&gt;class&lt;/code&gt;  数目太多或体积太大。&lt;/p&gt;
&lt;p&gt;永久代存储对象主要包括以下几类：&lt;/p&gt;
&lt;p&gt;加载 / 缓存到内存中的  &lt;code&gt;class&lt;/code&gt;  定义，包括类的名称，字段，方法和字节码；&lt;br&gt;
常量池；&lt;br&gt;
对象数组 / 类型数组所关联的  &lt;code&gt;class&lt;/code&gt; ；&lt;br&gt;
 &lt;code&gt;JIT&lt;/code&gt;  编译器优化后的  &lt;code&gt;class&lt;/code&gt;  信息。&lt;br&gt;
 &lt;code&gt;PermGen&lt;/code&gt;  的使用量与加载到内存的  &lt;code&gt;class&lt;/code&gt;  的数量 / 大小正相关。&lt;/p&gt;
&lt;h4 id=&#34;解决方案-3&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#解决方案-3&#34;&gt;#&lt;/a&gt; 解决方案&lt;/h4&gt;
&lt;p&gt;根据  &lt;code&gt;Permgen space&lt;/code&gt;  报错的时机，可以采用不同的解决方案，如下所示：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;程序启动报错，修改  &lt;code&gt;-XX:MaxPermSize&lt;/code&gt;  启动参数，调大永久代空间。&lt;/li&gt;
&lt;li&gt;应用重新部署时报错，很可能是没有应用没有重启，导致加载了多份  &lt;code&gt;class&lt;/code&gt;  信息，只需重启 JVM 即可解决。&lt;/li&gt;
&lt;li&gt;运行时报错，应用程序可能会动态创建大量  &lt;code&gt;class&lt;/code&gt; ，而这些  &lt;code&gt;class&lt;/code&gt;  的生命周期很短暂，但是 JVM 默认不会卸载  &lt;code&gt;class&lt;/code&gt; ，可以设置  &lt;code&gt;-XX:+CMSClassUnloadingEnabled&lt;/code&gt;  和  &lt;code&gt;-XX:+UseConcMarkSweepGC&lt;/code&gt;  这两个参数允许  &lt;code&gt;JVM&lt;/code&gt;  卸载  &lt;code&gt;class&lt;/code&gt; 。&lt;/li&gt;
&lt;li&gt;如果上述方法无法解决，可以通过  &lt;code&gt;jmap&lt;/code&gt;  命令  &lt;code&gt;dump&lt;/code&gt;  内存对象  &lt;code&gt;jmap-dump:format=b,file=dump.hprof&lt;/code&gt;  ，然后利用  &lt;code&gt;Eclipse MAT https://www.eclipse.org/mat&lt;/code&gt;  功能逐一分析开销最大的  &lt;code&gt;classloader&lt;/code&gt;  和重复  &lt;code&gt;class&lt;/code&gt; 。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;metaspace&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#metaspace&#34;&gt;#&lt;/a&gt;  &lt;code&gt;Metaspace&lt;/code&gt;&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;JDK 1.8&lt;/code&gt;  使用  &lt;code&gt;Metaspace&lt;/code&gt;  替换了永久代（ &lt;code&gt;Permanent Generation&lt;/code&gt; ）&lt;/p&gt;
&lt;p&gt;该错误表示  &lt;code&gt;Metaspace&lt;/code&gt;  已被用满，通常是因为加载的  &lt;code&gt;class&lt;/code&gt;  数目太多或体积太大。&lt;/p&gt;
&lt;p&gt;此类问题的原因与解决方法跟  &lt;code&gt;PermGenspace&lt;/code&gt;  非常类似，可以参考上文。&lt;/p&gt;
&lt;p&gt;需要特别注意的是调整  &lt;code&gt;Metaspace&lt;/code&gt;  空间大小的启动参数为  &lt;code&gt;-XX:MaxMetaspaceSize&lt;/code&gt; 。&lt;/p&gt;
&lt;h4 id=&#34;代码案例-2&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#代码案例-2&#34;&gt;#&lt;/a&gt; 代码案例&lt;/h4&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;/**&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt; * 演示  元数据区&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt; * &amp;lt;p&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt; * 在 `for` 循环中, 动态生成很多class, 最终将这些class加载到 Metaspace 中&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt; *&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt; * 注意配置: -XX:MaxMetaspaceSize=64m&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt; *&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt; * &lt;span class=&#34;doctag&#34;&gt;@throws&lt;/span&gt; Exception&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt; */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;static&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;metaSpace&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;throws&lt;/span&gt; Exception &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; i = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;; ; i++) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        Class c = cp.makeClass(&lt;span class=&#34;string&#34;&gt;&amp;quot;eu.plumbr.demo.Generated&amp;quot;&lt;/span&gt; + i).toClass();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        System.out.println(i);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;报错内容:&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/images/java/jvm/metaSpace.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;unable-to-create-new-native-thread&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#unable-to-create-new-native-thread&#34;&gt;#&lt;/a&gt;  &lt;code&gt;Unable to create new native thread&lt;/code&gt;&lt;/h3&gt;
&lt;p&gt;每个  &lt;code&gt;Java&lt;/code&gt;  线程都需要占用一定的内存空间，当  &lt;code&gt;JVM&lt;/code&gt;  向底层操作系统请求创建一个新的  &lt;code&gt;native&lt;/code&gt;  线程时，如果没有足够的资源分配就会报此类错误。&lt;/p&gt;
&lt;h4 id=&#34;原因分析&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#原因分析&#34;&gt;#&lt;/a&gt; 原因分析&lt;/h4&gt;
&lt;p&gt;&lt;code&gt;JVM&lt;/code&gt;  向  &lt;code&gt;OS&lt;/code&gt;  请求创建  &lt;code&gt;native&lt;/code&gt;  线程失败，就会抛出  &lt;code&gt;Unable to create new native thread&lt;/code&gt; ，常见的原因包括以下几类：&lt;/p&gt;
&lt;p&gt;线程数超过操作系统最大线程数  &lt;code&gt;ulimit&lt;/code&gt;  限制；&lt;br&gt;
线程数超过  &lt;code&gt;kernel.pid_max&lt;/code&gt; （只能重启）；&lt;br&gt;
 &lt;code&gt;native&lt;/code&gt;  内存不足；&lt;/p&gt;
&lt;p&gt;该问题发生的常见过程主要包括以下几步：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;JVM&lt;/code&gt;  内部的应用程序请求创建一个新的  &lt;code&gt;Java&lt;/code&gt;  线程；&lt;br&gt;
 &lt;code&gt;JVM native&lt;/code&gt;  方法代理了该次请求，并向操作系统请求创建一个  &lt;code&gt;native&lt;/code&gt;  线程；&lt;br&gt;
操作系统尝试创建一个新的  &lt;code&gt;native&lt;/code&gt;  线程，并为其分配内存；&lt;br&gt;
如果操作系统的虚拟内存已耗尽，或是受到 32 位进程的地址空间限制，操作系统就会拒绝本次  &lt;code&gt;native&lt;/code&gt;  内存分配；&lt;br&gt;
 &lt;code&gt;JVM&lt;/code&gt;  将抛出  &lt;code&gt;java.lang.OutOfMemoryError:Unableto createnewnativethread&lt;/code&gt;  错误。&lt;/p&gt;
&lt;h4 id=&#34;解决方案-4&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#解决方案-4&#34;&gt;#&lt;/a&gt; 解决方案&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;升级配置，为机器提供更多的内存；&lt;/li&gt;
&lt;li&gt;降低  &lt;code&gt;Java Heap Space&lt;/code&gt;  大小；&lt;/li&gt;
&lt;li&gt;修复应用程序的线程泄漏问题；&lt;/li&gt;
&lt;li&gt;限制线程池大小；&lt;/li&gt;
&lt;li&gt;使用  &lt;code&gt;-Xss&lt;/code&gt;  参数减少线程栈的大小；&lt;/li&gt;
&lt;li&gt;调高  &lt;code&gt;OS&lt;/code&gt;  层面的线程最大数：执行  &lt;code&gt;ulimit -a&lt;/code&gt;  查看最大线程数限制，使用  &lt;code&gt;ulimit -u xxx&lt;/code&gt;  调整最大线程数限制。&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;代码案例-3&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#代码案例-3&#34;&gt;#&lt;/a&gt; 代码案例&lt;/h4&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;/**&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt; * 演示: Unable to create new native thread&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt; */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;private&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;static&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;nativeThread&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;()&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;while&lt;/span&gt; (&lt;span class=&#34;keyword&#34;&gt;true&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; Thread(&lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; Runnable() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;run&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;()&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                &lt;span class=&#34;keyword&#34;&gt;try&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                    Thread.sleep(&lt;span class=&#34;number&#34;&gt;10000000&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                &amp;#125; &lt;span class=&#34;keyword&#34;&gt;catch&lt;/span&gt; (InterruptedException e) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;).start();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;报错内容:&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/images/java/jvm/unableCreateNative.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;out-of-swap-space&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#out-of-swap-space&#34;&gt;#&lt;/a&gt;  &lt;code&gt;Out of swap space&lt;/code&gt;&lt;/h3&gt;
&lt;p&gt;该错误表示所有可用的虚拟内存已被耗尽。虚拟内存（ &lt;code&gt;Virtual Memory&lt;/code&gt; ）由物理内存（ &lt;code&gt;Physical Memory&lt;/code&gt; ）和交换空间（ &lt;code&gt;Swap Space&lt;/code&gt; ）两部分组成。当运行时程序请求的虚拟内存溢出时就会报  &lt;code&gt;Outof swap space&lt;/code&gt;  错误。&lt;/p&gt;
&lt;p&gt;这个错误通常是操作系统层面的原因。&lt;/p&gt;
&lt;h4 id=&#34;原因分析-2&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#原因分析-2&#34;&gt;#&lt;/a&gt; 原因分析&lt;/h4&gt;
&lt;p&gt;该错误出现的常见原因包括以下几类：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;ol&gt;
&lt;li&gt;地址空间不足；&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;2. 物理内存已耗光；&lt;/li&gt;
&lt;li&gt;3. 应用程序的本地内存泄漏（ &lt;code&gt;native leak&lt;/code&gt; ），例如不断申请本地内存，却不释放。&lt;/li&gt;
&lt;li&gt;4. 执行  &lt;code&gt;jmap-histo:live&lt;/code&gt;  命令，强制执行  &lt;code&gt;Full GC&lt;/code&gt; ；如果几次执行后内存明显下降，则基本确认为  &lt;code&gt;Direct ByteBuffer&lt;/code&gt;  问题。&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;解决方案-5&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#解决方案-5&#34;&gt;#&lt;/a&gt; 解决方案&lt;/h4&gt;
&lt;p&gt;根据错误原因可以采取如下解决方案：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;ol&gt;
&lt;li&gt;升级地址空间为  &lt;code&gt;64 bit&lt;/code&gt; ；&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;使用  &lt;code&gt;Arthas&lt;/code&gt;  检查是否为  &lt;code&gt;Inflater/Deflater&lt;/code&gt;  解压缩问题，如果是，则显式调用  &lt;code&gt;end&lt;/code&gt;  方法。&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;ol start=&#34;3&#34;&gt;
&lt;li&gt;&lt;code&gt;Direct ByteBuffer&lt;/code&gt;  问题可以通过启动参数  &lt;code&gt;-XX:MaxDirectMemorySize&lt;/code&gt;  调低阈值。&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;ol start=&#34;4&#34;&gt;
&lt;li&gt;升级服务器配置 / 隔离部署，避免争用。&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;kill-process-or-sacrifice-child&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#kill-process-or-sacrifice-child&#34;&gt;#&lt;/a&gt;  &lt;code&gt;Kill process or sacrifice child&lt;/code&gt;&lt;/h3&gt;
&lt;p&gt;有一种内核作业（ &lt;code&gt;Kernel Job&lt;/code&gt; ）名为  &lt;code&gt;Out of Memory Killer&lt;/code&gt; ，它会在可用内存极低的情况下 “杀死”（ &lt;code&gt;kill&lt;/code&gt; ）某些进程。 &lt;code&gt;OOM Killer&lt;/code&gt;  会对所有进程进行打分，然后将评分较低的进程 “杀死”，具体的评分规则可以参考  &lt;code&gt;Surviving the Linux OOM Killer&lt;/code&gt; 。&lt;/p&gt;
&lt;p&gt;不同于其他的  &lt;code&gt;OOM&lt;/code&gt;  错误，  &lt;code&gt;Killprocessorsacrifice child&lt;/code&gt;  错误不是由  &lt;code&gt;JVM&lt;/code&gt;  层面触发的，而是由操作系统层面触发的。&lt;/p&gt;
&lt;h4 id=&#34;原因分析-3&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#原因分析-3&#34;&gt;#&lt;/a&gt; 原因分析&lt;/h4&gt;
&lt;p&gt;默认情况下， &lt;code&gt;Linux&lt;/code&gt;  内核允许进程申请的内存总量大于系统可用内存，通过这种 “错峰复用” 的方式可以更有效的利用系统资源。&lt;/p&gt;
&lt;p&gt;然而，这种方式也会无可避免地带来一定的 “超卖” 风险。例如某些进程持续占用系统内存，然后导致其他进程没有可用内存。此时，系统将自动激活  &lt;code&gt;OOM Killer&lt;/code&gt; ，寻找评分低的进程，并将其 “杀死”，释放内存资源。&lt;/p&gt;
&lt;h4 id=&#34;解决方案-6&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#解决方案-6&#34;&gt;#&lt;/a&gt; 解决方案&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;升级服务器配置 / 隔离部署，避免争用。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;OOM Killer&lt;/code&gt;  调优。&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;代码案例-4&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#代码案例-4&#34;&gt;#&lt;/a&gt; 代码案例&lt;/h4&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;/**&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt; * 演示:Kill process or sacrifice child&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt; */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;private&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;static&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;error&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;()&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    java.util.List&amp;lt;&lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt;[]&amp;gt; l = &lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; java.util.ArrayList();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; i = &lt;span class=&#34;number&#34;&gt;10000&lt;/span&gt;; i &amp;lt; &lt;span class=&#34;number&#34;&gt;100000&lt;/span&gt;; i++) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;try&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            l.add(&lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt;[&lt;span class=&#34;number&#34;&gt;100000000&lt;/span&gt;]);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125; &lt;span class=&#34;keyword&#34;&gt;catch&lt;/span&gt; (Throwable t) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            t.printStackTrace();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;报错内容&lt;br&gt;
&lt;img data-src=&#34;/images/java/jvm/killprocess.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;requested-array-size-exceeds-vm-limit&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#requested-array-size-exceeds-vm-limit&#34;&gt;#&lt;/a&gt;  &lt;code&gt;Requested array size exceeds VM limit&lt;/code&gt;&lt;/h3&gt;
&lt;p&gt;JVM 限制了数组的最大长度，该错误表示程序请求创建的数组超过最大长度限制。&lt;/p&gt;
&lt;p&gt;JVM 在为数组分配内存前，会检查要分配的数据结构在系统中是否可寻址，通常为  &lt;code&gt;Integer.MAX_VALUE-2&lt;/code&gt; 。&lt;/p&gt;
&lt;p&gt;此类问题比较罕见，通常需要检查代码，确认业务是否需要创建如此大的数组，是否可以拆分为多个块，分批执行。&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;private&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;static&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;error&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;()&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; i = &lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;; i &amp;gt;= &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;; i--) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;try&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt;[] arr = &lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt;[Integer.MAX_VALUE-i];&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            System.out.format(&lt;span class=&#34;string&#34;&gt;&amp;quot;Successfully initialized an array with %,d elements.\n&amp;quot;&lt;/span&gt;, Integer.MAX_VALUE-i);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125; &lt;span class=&#34;keyword&#34;&gt;catch&lt;/span&gt; (Throwable t) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            t.printStackTrace();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;报错内容&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/images/java/jvm/requestArraySize.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;direct-buffer-memory&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#direct-buffer-memory&#34;&gt;#&lt;/a&gt;  &lt;code&gt;Direct buffer memory&lt;/code&gt;&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;java&lt;/code&gt;  允许应用程序通过  &lt;code&gt;Direct ByteBuffer&lt;/code&gt;  直接访问堆外内存，许多高性能程序通过  &lt;code&gt;Direct ByteBuffer&lt;/code&gt;  结合内存映射文件（ &lt;code&gt;Memory Mapped File&lt;/code&gt; ）实现高速  &lt;code&gt;IO&lt;/code&gt; 。&lt;/p&gt;
&lt;h4 id=&#34;原因分析-4&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#原因分析-4&#34;&gt;#&lt;/a&gt; 原因分析&lt;/h4&gt;
&lt;p&gt;&lt;code&gt;Direct ByteBuffer&lt;/code&gt;  的默认大小为  &lt;code&gt;64 MB&lt;/code&gt; ，一旦使用超出限制，就会抛出  &lt;code&gt;Directbuffer memory&lt;/code&gt;  错误。&lt;/p&gt;
&lt;h4 id=&#34;解决方案-7&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#解决方案-7&#34;&gt;#&lt;/a&gt; 解决方案&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;Java&lt;/code&gt;  只能通过  &lt;code&gt;ByteBuffer&lt;/code&gt; . &lt;code&gt;allocateDirect&lt;/code&gt;  方法使用  &lt;code&gt;Direct ByteBuffer&lt;/code&gt; ，因此，可以通过  &lt;code&gt;Arthas&lt;/code&gt;  等在线诊断工具拦截该方法进行排查。&lt;/li&gt;
&lt;li&gt;检查是否直接或间接使用了  &lt;code&gt;NIO&lt;/code&gt; ，如  &lt;code&gt;netty&lt;/code&gt; ， &lt;code&gt;jetty&lt;/code&gt;  等。&lt;/li&gt;
&lt;li&gt;通过启动参数  &lt;code&gt;-XX:MaxDirectMemorySize&lt;/code&gt;  调整  &lt;code&gt;Direct ByteBuffer&lt;/code&gt;  的上限值。&lt;/li&gt;
&lt;li&gt;检查  &lt;code&gt;JVM&lt;/code&gt;  参数是否有  &lt;code&gt;-XX:+DisableExplicitGC&lt;/code&gt;  选项，如果有就去掉，因为该参数会使  &lt;code&gt;System.gc()&lt;/code&gt;  失效。&lt;/li&gt;
&lt;li&gt;检查堆外内存使用代码，确认是否存在内存泄漏；或者通过反射调用  &lt;code&gt;sun.misc.Cleaner&lt;/code&gt;  的  &lt;code&gt;clean()&lt;/code&gt;  方法来主动释放被  &lt;code&gt;Direct ByteBuffer&lt;/code&gt;  持有的内存空间。&lt;/li&gt;
&lt;li&gt;内存容量确实不足，升级配置。&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;代码案例-5&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#代码案例-5&#34;&gt;#&lt;/a&gt; 代码案例&lt;/h4&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;/**&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt; * 演示对外内存溢出&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt; * -Xms10m -Xmx10m -XX:+PrintGCDetails -XX:MaxDirectMemorySize=5m&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt; */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;private&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;static&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;error&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;()&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    System.out.println(&lt;span class=&#34;string&#34;&gt;&amp;quot;maxDirectMemory : &amp;quot;&lt;/span&gt; + (sun.misc.VM.maxDirectMemory() / (&lt;span class=&#34;keyword&#34;&gt;double&lt;/span&gt;) (&lt;span class=&#34;number&#34;&gt;1024&lt;/span&gt; * &lt;span class=&#34;number&#34;&gt;1024&lt;/span&gt;)) + &lt;span class=&#34;string&#34;&gt;&amp;quot;MB&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    ByteBuffer byteBuffer = ByteBuffer.allocateDirect(&lt;span class=&#34;number&#34;&gt;6&lt;/span&gt; * &lt;span class=&#34;number&#34;&gt;1024&lt;/span&gt; * &lt;span class=&#34;number&#34;&gt;1024&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    System.out.println(byteBuffer);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;报错内容&lt;br&gt;
&lt;img data-src=&#34;/images/java/jvm/directBuffer.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;排查思路&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#排查思路&#34;&gt;#&lt;/a&gt; 排查思路&lt;/h2&gt;
&lt;p&gt;分享遇到 &lt;code&gt;OOM&lt;/code&gt;  类问题如何快速定位问题，具体哪行代码发生了问题&lt;/p&gt;
&lt;p&gt;什么表现会发生 &lt;code&gt;OOM&lt;/code&gt;  呢？&lt;/p&gt;
&lt;p&gt;最直接的～，有报错， &lt;code&gt;outOfMemoryError&lt;/code&gt; 。 就是发生了。&lt;br&gt;
有频繁 &lt;code&gt;GC&lt;/code&gt;  的事件发生的时候，也要注意下，可能是在  &lt;code&gt;OOM&lt;/code&gt;  的边缘疯狂试探。 比如  &lt;code&gt;FullGC&lt;/code&gt; ，  &lt;code&gt;Young GC&lt;/code&gt; , 等。&lt;br&gt;
 &lt;code&gt;CPU&lt;/code&gt;  占用率较高。&lt;br&gt;
先说一个思路哈～&lt;/p&gt;
&lt;h3 id=&#34;止损&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#止损&#34;&gt;#&lt;/a&gt; 止损。&lt;/h3&gt;
&lt;p&gt;如果你在线上遇到了这个问题， 请，务必！ 先将服务重启！立刻，马上。 及时止损。  &lt;code&gt;ps&lt;/code&gt; : 可以留一台机器做案发现场，记得下掉该机器，不对外提供服务。&lt;/p&gt;
&lt;h3 id=&#34;问题排查&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#问题排查&#34;&gt;#&lt;/a&gt; 问题排查&lt;/h3&gt;
&lt;p&gt;注意观察线上服务情况，如果再次出现 &lt;code&gt;OOM&lt;/code&gt; , 影响业务，再问题没有解决完成之前，还是采用重启的方式解决。&lt;br&gt;
可以通过  &lt;code&gt;glowroot&lt;/code&gt;  等可视化的监控工具，观察。&lt;br&gt;
也可以通过在机器上 使用   &lt;code&gt;jstat -gc pid&lt;/code&gt;  来查看 &lt;code&gt;GC&lt;/code&gt;  情况。&lt;br&gt;
分析造成 &lt;code&gt;OOM&lt;/code&gt;  的问题。(具体如何排查，可参考案例模块)&lt;/p&gt;
&lt;p&gt;查到对应 &lt;code&gt;JVM&lt;/code&gt;  进程 =&amp;gt;  排查到占用内存打的 &lt;code&gt;jvm&lt;/code&gt;  线程 =&amp;gt; 查看对应线程栈信息 =&amp;gt; 使用 &lt;code&gt;Jmap&lt;/code&gt;  来生成线程堆栈信息文件 =&amp;gt; 分析大对象 &lt;code&gt;or&lt;/code&gt;  占用内存大的原因 =&amp;gt;  基本上改代码或者 &lt;code&gt;jvm&lt;/code&gt;  配置。&lt;/p&gt;
&lt;p&gt;其他排查问题思路和这个也是大差不差，使用的命令不同而已。&lt;/p&gt;
&lt;h3 id=&#34;案例&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#案例&#34;&gt;#&lt;/a&gt; 案例&lt;/h3&gt;
&lt;details class=&#34;warning&#34;&gt;&lt;summary&gt;举个栗子🌰吧&lt;/summary&gt;&lt;div&gt;
&lt;p&gt;比较常见的应该是：  &lt;code&gt;java.lang. outOfMemoryError: Java heap Space&lt;/code&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;/**&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt; * 演示OOM 排查过程&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt; */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;private&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;static&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;heapSpaceError&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;()&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    Thread thread = &lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; Thread(() -&amp;gt; bigObject());&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    thread.start();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;/**&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt; * 演示大对象&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt; * -Xms128M -Xmx128M&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt; */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;static&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;bigObject&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;()&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;// 21 可以，22就会OOM&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;// 4* 1024 * 1024 = 4M * 32 = 128M&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt;[] integers = &lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt;[&lt;span class=&#34;number&#34;&gt;1024&lt;/span&gt; * &lt;span class=&#34;number&#34;&gt;1024&lt;/span&gt; * &lt;span class=&#34;number&#34;&gt;22&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;执行后发现控制台打印出了 &lt;code&gt;OOM&lt;/code&gt;  :  &lt;code&gt;java heap space&lt;/code&gt; .  好吧，就装作看不见吧&lt;/p&gt;
&lt;p&gt;1、使用  &lt;code&gt;jps&lt;/code&gt;  命令获取到  &lt;code&gt;jvm&lt;/code&gt;  进程号&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/images/java/jvm/oom%E6%A1%88%E4%BE%8Bjps.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;2、使用  &lt;code&gt;jmap&lt;/code&gt;  命令 &lt;code&gt;dump&lt;/code&gt;  出 堆栈信息。&lt;br&gt;
&lt;img data-src=&#34;/images/java/jvm/jdump.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;3、使用  &lt;code&gt;mat&lt;/code&gt;  工具，分析 &lt;code&gt;dump&lt;/code&gt;  文件内容。  (下载地址:  &lt;code&gt;https://www.eclipse.org/mat/downloads.php&lt;/code&gt;    下载是真特🐴的慢啊，&lt;span class=&#34;label success&#34;&gt;❤️一般人我不告诉他：公众号回复 &lt;code&gt;MAT&lt;/code&gt;  就能直接获取&lt;/span&gt;)&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;如果下载之后无法启动的话，提示 无法创建虚拟机。需要简单配置下：&lt;br&gt;
 &lt;code&gt;-vm /Library/Java/JavaVirtualMachines/jdk1.8.0_251.jdk/Contents/Home/bin&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;3.1、下载下 &lt;code&gt;dump&lt;/code&gt;  文件，使用本地分析 &lt;code&gt;mat&lt;/code&gt;  工具进行分析。&lt;/p&gt;
&lt;p&gt;启动 &lt;code&gt;mat&lt;/code&gt; .&lt;br&gt;
&lt;img data-src=&#34;/images/java/jvm/mat.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Open a  heap Dump&lt;/code&gt;  之后，就可以愉快的分析了。&lt;/p&gt;
&lt;p&gt;具体分析方法请自行百度吧。&lt;/p&gt;
&lt;p&gt;3.2、如果 &lt;code&gt;dump&lt;/code&gt;  文件较小，也可以 &lt;code&gt;java&lt;/code&gt;  自带的工具 jhat 命令进行分析。&lt;br&gt;
&lt;img data-src=&#34;/images/java/jvm/jmap.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;然后访问本机的  &lt;code&gt;7000&lt;/code&gt;  端口，就可以到看到分析的内容了。&lt;br&gt;
&lt;img data-src=&#34;/images/java/jvm/image2021-4-15_19-8-56.png&#34; alt=&#34;&#34;&gt;&lt;br&gt;
进入之后，就可以看到堆内存占用情况的柱状图了。&lt;br&gt;
&lt;img data-src=&#34;/images/java/jvm/heapHistogram.png&#34; alt=&#34;&#34;&gt;&lt;br&gt;
发现有  &lt;code&gt;Class[I&lt;/code&gt;  占用最多，     &lt;code&gt;Class[I&lt;/code&gt;  表示的是  &lt;code&gt;int&lt;/code&gt;  数组。 那我们就查下代码里用到 &lt;code&gt;Class[I&lt;/code&gt;  中的地方，&lt;/p&gt;
&lt;p&gt;哇，果然是在  &lt;code&gt;new&lt;/code&gt;  了一个大的数据，撑爆了内存。&lt;/p&gt;
&lt;p&gt;补充下：&lt;/p&gt;
&lt;p&gt;先查看 jvm 进程号 &lt;br&gt;
 &lt;code&gt; jps &lt;/code&gt;   注意：只能查看属于当前用户 &lt;code&gt;java&lt;/code&gt;  进程&lt;br&gt;
  &lt;code&gt;ps -ef| grep java&lt;/code&gt;  找到对应服务的进程编号&lt;br&gt;
 &lt;code&gt;ps -ef| grep 服务名&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;如下图:&lt;br&gt;
&lt;img data-src=&#34;/images/java/jvm/%E8%A1%A5%E5%85%85.png&#34; alt=&#34;&#34;&gt;&lt;br&gt;
 需要注意下:&lt;/p&gt;
&lt;p&gt;1) 查看当前应用运行情况信息，查看是否配置了 &lt;code&gt;gc log：-Xloggc:/apps/srv/instance/damai.gaotu100.com/logs/damai.gaotu100.com-gc.log&lt;/code&gt;   , 可以从 &lt;code&gt;gc&lt;/code&gt;  日志中查到很多信息。&lt;/p&gt;
&lt;p&gt;2）查看是否有 &lt;code&gt;oom&lt;/code&gt;  自动打印二进制 &lt;code&gt;dump&lt;/code&gt;  文件：  &lt;code&gt;-XX:+HeapDumpOnOutOfMemoryError -XX:HeapDumpPath=/apps/srv/instance/damai.gaotu100.com/logs/heapdump.hprof&lt;/code&gt;   。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;如果没有配置，可以通过命令自行打印:   &lt;code&gt;jmap -dump:format=b,file=/apps/srv/instance/test-kefu-web.baijiahulian.com/logs/22316.1.hprof pid&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;这里推荐下，阿里开源的 jvm 排查工具  arthas（阿尔萨斯）  &lt;code&gt;https://arthas.aliyun.com/doc/&lt;/code&gt; 。文档很全，需要的自行阅读吧～～&lt;/p&gt;
&lt;/div&gt;&lt;/details&gt;
&lt;h2 id=&#34;解决方案-8&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#解决方案-8&#34;&gt;#&lt;/a&gt; 解决方案&lt;/h2&gt;
&lt;p&gt;分享遇到 &lt;code&gt;OOM&lt;/code&gt;  问题时怎样解决？&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;长兄于病视神，未有形而除之，故名不出于家。中兄治病，其在毫毛，故名不出于闾。若扁鹊者，镵血脉，投毒药，副肌肤，闲而名出闻于诸侯。 所以才有凡此者不病病，治之无名，使之无形，至功之成，其下谓之自然。&lt;br&gt;
这句话，用在我们这里就是  系统的整个生命周期中，不出现任何 &lt;code&gt;OOM&lt;/code&gt; , 其 谓之自然。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;根据上述的排查过程，找到了问题根源之后，那就&lt;br&gt;
 1. 改代码&lt;br&gt;
 2. 调整内存配置&lt;/p&gt;
&lt;p&gt;大刀阔斧的干吧！&lt;/p&gt;
&lt;div class=&#34;note success no-icon&#34;&gt;
&lt;p&gt;大家有什么建议呢？&lt;/p&gt;
&lt;/div&gt;
&lt;h2 id=&#34;总结&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#总结&#34;&gt;#&lt;/a&gt; 总结&lt;/h2&gt;
&lt;p&gt;我们看待 &lt;code&gt;OOM&lt;/code&gt;  应该从全面来看，有可能是  &lt;code&gt;jvm&lt;/code&gt;  内存确实盛不下要分配的对象，也有可能是 频繁 &lt;code&gt;GC&lt;/code&gt; ，且收效甚低导致的，还有可能是宿主机上内存不够杀死 &lt;code&gt;jvm&lt;/code&gt;  导致的，加载的类过大过多造成的，虚拟内存不够用等等。最后也不要忽略 堆外内存的内存溢出。&lt;/p&gt;
&lt;p&gt;线上遇到这类问题，第一要及时止损，方式很简单，重启就能解决。   保证线上可用之后，再去查问题，根治问题。  同时不用忘了监控线上服务是否有内存要溢出的情况，及时重启，为处理 &lt;code&gt;OOM&lt;/code&gt;  问题争取时间。&lt;/p&gt;
&lt;p&gt;排查问题时，首先找到对应 &lt;code&gt;jvm&lt;/code&gt;  进程，然后使用 &lt;code&gt;jmap&lt;/code&gt;  打印出 内存映射文件，然后使用 &lt;code&gt;jhat&lt;/code&gt;  或者  &lt;code&gt;mat&lt;/code&gt;  工具进行分析，定位原因。解决问题。&lt;/p&gt;
&lt;p&gt;最后，我们在 &lt;code&gt;coding&lt;/code&gt;  的时候，要注意下，不要编写导致 &lt;code&gt;OOM&lt;/code&gt;  代码。“未有形而除之～”&lt;/p&gt;
&lt;h2 id=&#34;抛个问题~&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#抛个问题~&#34;&gt;#&lt;/a&gt; 抛个问题～&lt;/h2&gt;
&lt;p&gt;发生 OOM，程序会退出吗？&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;下期见&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&#34;最后&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#最后&#34;&gt;#&lt;/a&gt; 最后&lt;/h4&gt;
&lt;p&gt;希望和你一起遇见更好的自己&lt;br&gt;
&lt;img data-src=&#34;/images/qrcode.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://fangjiaxiaobai.github.io/2021/08/19/LeetCode/001-%E5%8F%8D%E8%BD%AC%E6%95%B0%E7%BB%84/</guid>
            <title>LC:反转数组</title>
            <link>https://fangjiaxiaobai.github.io/2021/08/19/LeetCode/001-%E5%8F%8D%E8%BD%AC%E6%95%B0%E7%BB%84/</link>
            <category>数据结构</category>
            <category>leetCode</category>
            <category>数组</category>
            <category>面经之算法题</category>
            <pubDate>Thu, 19 Aug 2021 14:48:55 +0800</pubDate>
            <description><![CDATA[ &lt;h2 id=&#34;题目&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#题目&#34;&gt;#&lt;/a&gt; 题目&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;给定一个数组，将数组中的元素向右移动 k 个位置，其中 k 是非负数。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;进阶：&lt;/p&gt;
&lt;p&gt;尽可能想出更多的解决方案，至少有三种不同的方法可以解决这个问题。&lt;br&gt;
你可以使用空间复杂度为 O (1) 的 原地 算法解决这个问题吗？&lt;/p&gt;
&lt;p&gt;示例 1:&lt;/p&gt;
&lt;p&gt;输入: nums = [1,2,3,4,5,6,7], k = 3&lt;br&gt;
 输出: [5,6,7,1,2,3,4]&lt;br&gt;
 解释:&lt;br&gt;
 向右旋转 1 步: [7,1,2,3,4,5,6]&lt;br&gt;
 向右旋转 2 步: [6,7,1,2,3,4,5]&lt;br&gt;
 向右旋转 3 步: [5,6,7,1,2,3,4]&lt;/p&gt;
&lt;p&gt;示例 2:&lt;/p&gt;
&lt;p&gt;输入：nums = [-1,-100,3,99], k = 2&lt;br&gt;
 输出：[3,99,-1,-100]&lt;br&gt;
 解释:&lt;br&gt;
 向右旋转 1 步: [99,-1,-100,3]&lt;br&gt;
 向右旋转 2 步: [3,99,-1,-100]&lt;/p&gt;
&lt;div class=&#34;note warning&#34;&gt;
&lt;p&gt;提示&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;1 &amp;lt;= nums.length &amp;lt;= 2 * 104&lt;br&gt;
-231 &amp;lt;= nums[i] &amp;lt;= 231 - 1&lt;br&gt;
0 &amp;lt;= k &amp;lt;= 105&lt;/p&gt;
&lt;hr&gt;
&lt;div class=&#34;links&#34;&gt;&lt;div class=&#34;item&#34; title=&#34;力扣（LeetCode）&#34; style=&#34;--block-color:#ffa015;&#34;&gt;&lt;span class=&#34;exturl image&#34; data-url=&#34;aHR0cHM6Ly9sZWV0Y29kZS1jbi5jb20vcHJvYmxlbXMvcm90YXRlLWFycmF5&#34; data-background-image=&#34;https://static.leetcode-cn.com/cn-frontendx-assets/production/_next/static/images/lccn-logo-ce3d56eeedaae618e59e2ec5089e4834.svg&#34;&gt;&lt;/span&gt;
          &lt;div class=&#34;info&#34;&gt;
          &lt;span class=&#34;exturl title&#34; data-url=&#34;aHR0cHM6Ly9sZWV0Y29kZS1jbi5jb20vcHJvYmxlbXMvcm90YXRlLWFycmF5&#34;&gt;力扣（LeetCode）&lt;/span&gt;
          &lt;p class=&#34;desc&#34;&gt;https://leetcode-cn.com/&lt;/p&gt;
          &lt;/div&gt;&lt;/div&gt;&lt;/div&gt;
&lt;h2 id=&#34;分析&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#分析&#34;&gt;#&lt;/a&gt; 分析&lt;/h2&gt;
&lt;h3 id=&#34;解法1顺序后移法&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#解法1顺序后移法&#34;&gt;#&lt;/a&gt; 解法 1: 顺序后移法&lt;/h3&gt;
&lt;p&gt;将最后一个元素赋值给临时变量，然后将其他元素顺序后移一个位置。重复此操作 k 次。&lt;/p&gt;
&lt;p&gt;但是需要注意的是:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;时间复杂度。这种算法在最优时时间复杂度是 O (n). 最差情况下是 O (n^2). 在 LeetCode 上是没法 AC 的。&lt;/li&gt;
&lt;li&gt;k 是会大于数组长度的。&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;rotate&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(&lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt;[] nums, &lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; k)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (nums == &lt;span class=&#34;keyword&#34;&gt;null&lt;/span&gt; || k &amp;lt; &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (nums.length &amp;lt; k) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;comment&#34;&gt;// 解决k&amp;gt;nums.length问题&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        k = k % nums.length;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; length = nums.length;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; i = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;; i &amp;lt; k; i++) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; temp = nums[length - &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; j = length - &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;; j &amp;gt; &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;; j--) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            nums[j] = nums[j - &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        nums[&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;] = temp;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;这种解决方法在数据量较大的情况下就会报错 &lt;code&gt;超出时间限制了&lt;/code&gt; 。&lt;br&gt;
即使 你在循环修改使用  &lt;code&gt;System.arraycopy(nums, 0, nums, 1, length - 1);&lt;/code&gt;  来替换掉内层循环，也是不可以 &lt;code&gt;AC&lt;/code&gt;  的。&lt;/p&gt;
&lt;h3 id=&#34;解法2-优化解法1空间换时间&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#解法2-优化解法1空间换时间&#34;&gt;#&lt;/a&gt; 解法 2: 优化解法 1, 空间换时间&lt;/h3&gt;
&lt;p&gt;按照规律将 nums 数组中的值，赋值到新数组中。然后使用新数组覆盖原数组。&lt;br&gt;
那规律是什么呢？&lt;br&gt;
 设：&lt;br&gt;
 &lt;code&gt;i&lt;/code&gt;  为数组的的下标。  &lt;code&gt;newArr&lt;/code&gt;  为新的数组， &lt;code&gt;n&lt;/code&gt;  为数组总长度，&lt;br&gt;
 那么&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;newArr[(i+k)%n] = nums[i]&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;code&gt;AC&lt;/code&gt;  代码如下:&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;static&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;rotate&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(&lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt;[] nums, &lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; k)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (nums == &lt;span class=&#34;keyword&#34;&gt;null&lt;/span&gt; || k &amp;lt; &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; n = nums.length;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;// 新数组&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt;[] newArr = &lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt;[n];&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; i = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;; i &amp;lt; k; i++) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        newArr[(i + k) % n] = nums[i];&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    System.arraycopy(newArr, &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, nums, &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, n);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;AC 之后显示：&lt;br&gt;
执行用时  &lt;code&gt;1 ms&lt;/code&gt; &lt;br&gt;
 内存消耗： &lt;code&gt;55.1 MB&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;这种方式，时间复杂度得到显著的提升，但是带来了额外的空间消耗。而且这种空间消耗是等于原来占用的数据大小。&lt;/p&gt;
&lt;p&gt;那是否还有其他方式呢？&lt;/p&gt;
&lt;h3 id=&#34;解法3-反转&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#解法3-反转&#34;&gt;#&lt;/a&gt; 解法 3: 反转&lt;/h3&gt;
&lt;p&gt;这种方式是一种比较简单的方式，有点类似于脑筋急转弯的意思。抛开之前的环装思路。将这个数组看成具有方向的一组数据。将这组数据分成三组： &lt;code&gt;[0,k-1]&lt;/code&gt; , &lt;code&gt;k&lt;/code&gt; , &lt;code&gt;[k+1,length]&lt;/code&gt; . 先将  &lt;code&gt;[0,k-1]&lt;/code&gt;  反转，再把  &lt;code&gt;[k+1,length]&lt;/code&gt;  反转，最后把这个数组反转。这样操作之后，就是最后结果了。&lt;/p&gt;
&lt;p&gt;比如，数组： &lt;code&gt;[1,2,3,4,5,6,7]&lt;/code&gt; ,  &lt;code&gt;k=3&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;第一步：把整体数组进行反转:  &lt;code&gt;[1,2,3,4,5,6,7]&lt;/code&gt;  =&amp;gt;  &lt;code&gt;[7,6,5,4,3,2,1]&lt;/code&gt; &lt;br&gt;
 第二步：把 &lt;code&gt;[0,k-1=2]&lt;/code&gt;  的元素进行反转:  &lt;code&gt;[7,6,5,4,3,2,1]&lt;/code&gt;  =&amp;gt; &lt;code&gt;[5,6,7,4,3,2,1]&lt;/code&gt; &lt;br&gt;
 第三步：把 &lt;code&gt;[k,n-1]&lt;/code&gt;  的元素进行反转:  &lt;code&gt;[5,6,7,4,3,2,1]&lt;/code&gt;  =&amp;gt; &lt;code&gt;[5,6,7,1,2,3,4]&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;实现代码如下:&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;static&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;rotate&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(&lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt;[] nums, &lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; k)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    k %= nums.length;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    reverse(nums, &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, nums.length - &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    reverse(nums, &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, k - &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    reverse(nums, k, nums.length - &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;static&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;reverse&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(&lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt;[] nums, &lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; start, &lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; end)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;while&lt;/span&gt; (start &amp;lt; end) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; temp = nums[start];&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        nums[start] = nums[end];&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        nums[end] = temp;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        start += &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        end -= &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&#34;思考&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#思考&#34;&gt;#&lt;/a&gt; 思考&lt;/h2&gt;
&lt;p&gt;关于这道题目的一点小思考:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;这道题其实还有另外一种解法，就是通过公式去推导出元素应该最终所在的位置，直接进行位置交换。这种思路也是可行的。具体解决可以参照下官网的解题方法。&lt;/li&gt;
&lt;li&gt;这是一道很简单的题目，最后出奇的解法也是颇感意外的，总有一种豁然开朗的感觉。我一直在想此法的解题人是怎么想到的呢。&lt;span class=&#34;label warning&#34;&gt;这里面一定是蕴含一定的逻辑的。这种多次反转的逻辑，或许是一种规律？&lt;/span&gt; 我一直没有想通。&lt;/li&gt;
&lt;li&gt;当你想到这个可以用一个环去解决问题的时候，可能永远就想不出 &amp;quot;利用方向&amp;quot; 去解决这个问题了。反观题目来讲，一直都是说的数组，而 “环” 是我们自己强加的一个思维方式。确实，当我们从环的角度出发，看到的就不是题目本身了，看到的是你的题目。&lt;span class=&#34;label success&#34;&gt;✔️ 反观现实，你理解的现实就真正的是现实吗？你有没有陷入自己的 “环” 中去呢？不妨，重新看看你身边的人和事吧，尝试发现他们最真实的样子.&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;最后&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#最后&#34;&gt;#&lt;/a&gt; 最后&lt;/h2&gt;
&lt;p&gt;希望与你一起遇见更好的自己&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/images/qrcode.jpg&#34; alt=&#34;期望与你一起遇见更好的自己&#34;&gt;&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://fangjiaxiaobai.github.io/2021/08/18/git%E7%B3%BB%E5%88%97/%E7%B3%BB%E5%88%97%E5%BC%80%E7%AF%87/</guid>
            <title>git系列开篇</title>
            <link>https://fangjiaxiaobai.github.io/2021/08/18/git%E7%B3%BB%E5%88%97/%E7%B3%BB%E5%88%97%E5%BC%80%E7%AF%87/</link>
            <category>目录</category>
            <category>git</category>
            <pubDate>Wed, 18 Aug 2021 14:48:55 +0800</pubDate>
            <description><![CDATA[ &lt;p&gt;这个是继  &lt;code&gt;Redis&lt;/code&gt;  ,  &lt;code&gt;MySQL&lt;/code&gt;  之后的第三个系列了。&lt;br&gt;
然而，前两个系列还都没有写完。&lt;br&gt;
 &lt;code&gt;so&lt;/code&gt; ,  &lt;code&gt;Redis&lt;/code&gt;  和  &lt;code&gt;MySQL&lt;/code&gt;  pause.&lt;/p&gt;
&lt;p&gt;只是暂停～，我会在未来的三年内，将它们全部完成。&lt;/p&gt;
&lt;p&gt;叮～&lt;/p&gt;
&lt;p&gt;&lt;code&gt;git&lt;/code&gt; ！&lt;/p&gt;
&lt;p&gt;说到 &lt;code&gt;git&lt;/code&gt; ，我们先了解一个人， &lt;code&gt;linus Torvalds&lt;/code&gt;  （林纳斯・托瓦兹）&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/images/git%E7%B3%BB%E5%88%97/images/LinusTorvalds01.jpg&#34; alt=&#34;linus·Torvalds&#34;&gt;&lt;/p&gt;
&lt;p&gt;林纳斯・托瓦兹 是当今世界最著名的电脑程序员、黑客之一。他是 linux 内核的最早作者，随后发起了这个开源项目，担任 linux 内核的首要架构师和项目协调者。并于 2005 年 7 月 11 日，发布了仅用 10 天时间开发出的最早版本的 git 0.99。到今天 (2020 年 7 月 13 日)，最新的版本号是 2.27. 这个系列就以该版本进行分享。&lt;/p&gt;
&lt;p&gt;关于更多内容，查看这里 -&amp;gt; &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly96aC53aWtpcGVkaWEub3JnL3dpa2kvJUU2JTlFJTk3JUU3JUJBJUIzJUU2JTk2JUFGJUMyJUI3JUU2JTg5JTk4JUU3JTkzJUE2JUU1JTg1JUI5&#34;&gt;林纳斯・托瓦兹&lt;/span&gt;&lt;/p&gt;
&lt;h2 id=&#34;git&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#git&#34;&gt;#&lt;/a&gt; git&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;2002&lt;/code&gt;  年开始，林纳斯・托瓦斯 决定使用  &lt;code&gt;BitKeeper&lt;/code&gt;  作为主要的版本控制系统来维护代码。但是社区中很多人认为，应该使用开源的版本控制软件来维护代码 林纳斯・托瓦斯也考虑使用 &lt;code&gt;monotone&lt;/code&gt; ，但是 林纳斯・托瓦斯 嫌弃其性能不佳。在 &lt;code&gt;2005&lt;/code&gt;  年，林纳斯决定自行开发一套版本控制系统。&lt;/p&gt;
&lt;p&gt;为什么称为 &lt;code&gt;git&lt;/code&gt;  呢？&lt;/p&gt;
&lt;p&gt;&lt;code&gt;git&lt;/code&gt;  在英氏俚语中表示 不愉快的人。&lt;/p&gt;
&lt;p&gt;下面是 林纳斯・托瓦兹 对 &lt;code&gt;git&lt;/code&gt;  的描述&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;The name “git” was given by Linus Torvalds when he wrote the very first version. He described the tool as “the stupid content tracker” and the name as (depending on your way):&lt;br&gt;
random three-letter combination that is pronounceable, and not actually used by any common UNIX command. The fact that it is a mispronunciation of “get” may or may not be relevant.&lt;br&gt;
“global information tracker”: you’re in a good mood, and it actually works for you. Angels sing, and a light suddenly fills the room.&lt;br&gt;
stupid. contemptible and despicable. simple. Take your pick from the dictionary of slang.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;林纳斯・托瓦兹在编写第一个版本时就使用了 &lt;code&gt;“git”&lt;/code&gt;  这个名称。 他将工具描述为 “愚蠢的内容跟踪器”，并将其描述为（取决于您的方式）：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;可以发音念出的随机三个字母组合，而且并未被实际用在任何  &lt;code&gt;UNIX&lt;/code&gt;  指令上。它是 &lt;code&gt;“get”&lt;/code&gt;  的错误发音，这点可能相关也可能无关。&lt;/li&gt;
&lt;li&gt;“全局的信息跟踪器”：您的心情不错，对你而言它也确实说得通。天使唱歌，房间突然充满光明。( &lt;code&gt;Global Information tracker&lt;/code&gt; )&lt;/li&gt;
&lt;li&gt;愚蠢的。鄙视和卑鄙的。简单。从俚语字典中选择。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;git的实现原理&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#git的实现原理&#34;&gt;#&lt;/a&gt; git 的实现原理&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;git&lt;/code&gt;  更像是一个文件系统，直接从本机上获取数据，不用连接服务端，每个开发者都可有全部开发历史的本地副本， &lt;code&gt;changes&lt;/code&gt;  从这种本地 &lt;code&gt;repository&lt;/code&gt;  复制给其他开发者。这些 &lt;code&gt;changes&lt;/code&gt;  作为新增的开发分支被导入，可以与本地开发分支合并。&lt;/p&gt;
&lt;p&gt;而且，分支是轻量的，一个分支是对一个 &lt;code&gt;commit&lt;/code&gt;  的引用。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;git&lt;/code&gt;  使用 C 语言进行开发的，以追求更高的性能。 &lt;code&gt;git&lt;/code&gt;  自动完成了垃圾回收，也可以通过  &lt;code&gt;git gc --prune&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;git&lt;/code&gt;  存储每个新创建的 &lt;code&gt;object&lt;/code&gt;  作为一个单独文件。为了压缩存储空间占用，  &lt;code&gt;packs&lt;/code&gt;  操作把很多文件（启发式类似名字的文件往往具有类似内容）使用差分压缩入一个文件中（ &lt;code&gt;packfile&lt;/code&gt; ），并创建一个对应的索引文件，指明 &lt;code&gt;object&lt;/code&gt;  在 &lt;code&gt;packfile&lt;/code&gt;  中的偏移值。新创建的对象仍然作为单独文件存在。 &lt;code&gt;repacks&lt;/code&gt;  操作非常费时间， &lt;code&gt;git&lt;/code&gt;  会在空闲时间自动做此操作。也可用命令 &lt;code&gt;git gc&lt;/code&gt;  来直接启动 &lt;code&gt;repack&lt;/code&gt; 。 &lt;code&gt;packfile&lt;/code&gt;  与索引文件都用 SHA-1 作为校验和并作为文件名。 &lt;code&gt;git fsck&lt;/code&gt;  命令做校验和的完整性验证。&lt;/p&gt;
&lt;p&gt;Git 服务器典型的 TCP 监听端口为 &lt;code&gt;9418&lt;/code&gt; 。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;git&lt;/code&gt;  和其他版本控制系统（如 &lt;code&gt;CVS&lt;/code&gt; ）有不小的差别， &lt;code&gt;git&lt;/code&gt;  本身关心文件的整体性是否有改变，但多数的版本控制系统如 &lt;code&gt;CVS&lt;/code&gt;  或 &lt;code&gt;Subversion&lt;/code&gt;  系统则在乎文件内容的差异。 &lt;code&gt;git&lt;/code&gt;  拒绝保持每个文件的版本修订关系。因此查看一个文件的历史需要遍历各个 &lt;code&gt;history&lt;/code&gt;  快照； &lt;code&gt;git&lt;/code&gt;  隐式处理文件更名，即同名文件默认为其前身，如果没有同名文件则在前一个版本中搜索具有类似内容的文件.&lt;/p&gt;
&lt;p&gt;以上简要介绍，先到这里，我们来看下， &lt;code&gt;git&lt;/code&gt;  这一系列文章的目录。&lt;/p&gt;
&lt;ul class=&#34;task-list&#34;&gt;
&lt;li class=&#34;task-list-item&#34;&gt;&lt;input type=&#34;checkbox&#34; id=&#34;cbx_0&#34; checked=&#34;true&#34; disabled=&#34;true&#34;&gt;&lt;label for=&#34;cbx_0&#34;&gt; git 介绍&lt;/label&gt;&lt;/li&gt;
&lt;li class=&#34;task-list-item&#34;&gt;&lt;input type=&#34;checkbox&#34; id=&#34;cbx_1&#34; checked=&#34;true&#34; disabled=&#34;true&#34;&gt;&lt;label for=&#34;cbx_1&#34;&gt; git 安装&lt;/label&gt;&lt;/li&gt;
&lt;li class=&#34;task-list-item&#34;&gt;&lt;input type=&#34;checkbox&#34; id=&#34;cbx_2&#34; disabled=&#34;true&#34;&gt;&lt;label for=&#34;cbx_2&#34;&gt; git 简单使用&lt;br&gt;
介绍 git add、commit、merge、checkout、reset… 等基础命令的使用。&lt;/label&gt;&lt;/li&gt;
&lt;li class=&#34;task-list-item&#34;&gt;&lt;input type=&#34;checkbox&#34; id=&#34;cbx_3&#34; disabled=&#34;true&#34;&gt;&lt;label for=&#34;cbx_3&#34;&gt; git 使用进阶&lt;br&gt;
介绍：git diff、log、reflog，cherry-pick 等命令的使用&lt;/label&gt;&lt;/li&gt;
&lt;li class=&#34;task-list-item&#34;&gt;&lt;input type=&#34;checkbox&#34; id=&#34;cbx_4&#34; disabled=&#34;true&#34;&gt;&lt;label for=&#34;cbx_4&#34;&gt; git 高级命令&lt;/label&gt;&lt;/li&gt;
&lt;li class=&#34;task-list-item&#34;&gt;&lt;input type=&#34;checkbox&#34; id=&#34;cbx_5&#34; disabled=&#34;true&#34;&gt;&lt;label for=&#34;cbx_5&#34;&gt; git 底层命令&lt;/label&gt;&lt;/li&gt;
&lt;li class=&#34;task-list-item&#34;&gt;&lt;input type=&#34;checkbox&#34; id=&#34;cbx_6&#34; disabled=&#34;true&#34;&gt;&lt;label for=&#34;cbx_6&#34;&gt; git 分支&lt;/label&gt;&lt;/li&gt;
&lt;li class=&#34;task-list-item&#34;&gt;&lt;input type=&#34;checkbox&#34; id=&#34;cbx_7&#34; disabled=&#34;true&#34;&gt;&lt;label for=&#34;cbx_7&#34;&gt; git 远程仓库&lt;/label&gt;&lt;/li&gt;
&lt;li class=&#34;task-list-item&#34;&gt;&lt;input type=&#34;checkbox&#34; id=&#34;cbx_8&#34; disabled=&#34;true&#34;&gt;&lt;label for=&#34;cbx_8&#34;&gt; git 工作流&lt;/label&gt;&lt;/li&gt;
&lt;li class=&#34;task-list-item&#34;&gt;&lt;input type=&#34;checkbox&#34; id=&#34;cbx_9&#34; disabled=&#34;true&#34;&gt;&lt;label for=&#34;cbx_9&#34;&gt; git 搜索&lt;/label&gt;&lt;/li&gt;
&lt;li class=&#34;task-list-item&#34;&gt;&lt;input type=&#34;checkbox&#34; id=&#34;cbx_10&#34; disabled=&#34;true&#34;&gt;&lt;label for=&#34;cbx_10&#34;&gt; git 再谈重置&lt;/label&gt;&lt;/li&gt;
&lt;li class=&#34;task-list-item&#34;&gt;&lt;input type=&#34;checkbox&#34; id=&#34;cbx_11&#34; disabled=&#34;true&#34;&gt;&lt;label for=&#34;cbx_11&#34;&gt; git 安全性验证&lt;/label&gt;&lt;/li&gt;
&lt;li class=&#34;task-list-item&#34;&gt;&lt;input type=&#34;checkbox&#34; id=&#34;cbx_12&#34; disabled=&#34;true&#34;&gt;&lt;label for=&#34;cbx_12&#34;&gt; git 钩子&lt;/label&gt;&lt;/li&gt;
&lt;li class=&#34;task-list-item&#34;&gt;&lt;input type=&#34;checkbox&#34; id=&#34;cbx_13&#34; disabled=&#34;true&#34;&gt;&lt;label for=&#34;cbx_13&#34;&gt; git 传输协议&lt;/label&gt;&lt;/li&gt;
&lt;li class=&#34;task-list-item&#34;&gt;&lt;input type=&#34;checkbox&#34; id=&#34;cbx_14&#34; disabled=&#34;true&#34;&gt;&lt;label for=&#34;cbx_14&#34;&gt; git 数据维护和修复&lt;/label&gt;&lt;/li&gt;
&lt;li class=&#34;task-list-item&#34;&gt;&lt;input type=&#34;checkbox&#34; id=&#34;cbx_15&#34; disabled=&#34;true&#34;&gt;&lt;label for=&#34;cbx_15&#34;&gt; git 工作原理&lt;/label&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;推荐书籍&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#推荐书籍&#34;&gt;#&lt;/a&gt; 推荐书籍&lt;/h3&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXQtc2NtLmNvbS9ib29rL3poL3Yy&#34;&gt;git-doc&lt;/span&gt;&lt;br&gt;
&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cubGlhb3h1ZWZlbmcuY29tL3dpa2kvODk2MDQzNDg4MDI5NjAw&#34;&gt; 廖雪峰 Git 教程&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;b&gt;一个不错的 Github 仓库：&lt;/b&gt; &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL3Bjb3R0bGUvbGVhcm5HaXRCcmFuY2hpbmc=&#34;&gt;游戏中学 git&lt;/span&gt;&lt;/p&gt;
&lt;h3 id=&#34;最后&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#最后&#34;&gt;#&lt;/a&gt; 最后&lt;/h3&gt;
&lt;p&gt;期望与你一起遇见更好的自己&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/images/qrcode.jpg&#34; alt=&#34;期望与你一起遇见更好的自己&#34;&gt;&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://fangjiaxiaobai.github.io/2021/08/04/%E9%9D%A2%E7%BB%8F/%E7%BA%BF%E7%A8%8B%E6%B1%A0/</guid>
            <title>JDK的内置线程池</title>
            <link>https://fangjiaxiaobai.github.io/2021/08/04/%E9%9D%A2%E7%BB%8F/%E7%BA%BF%E7%A8%8B%E6%B1%A0/</link>
            <category>线程池</category>
            <category>面经</category>
            <pubDate>Wed, 04 Aug 2021 14:14:00 +0800</pubDate>
            <description><![CDATA[ &lt;h1 id=&#34;线程池是什么&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#线程池是什么&#34;&gt;#&lt;/a&gt; 线程池是什么？&lt;/h1&gt;
&lt;p&gt;线程池可以控制线程运行的数量，处理过程中将任务放到队列中，然后在线程创建后启动这些任务，如果线程数量超过了最大数量，那么超出数量的线程就会排队等候，等其他线程执行完毕，再从队列中取出任务来执行。&lt;/p&gt;
&lt;p&gt;主要特点为：&lt;br&gt;
1、降低资源消耗，通过重复利用已创建的线程创建和销毁造成的消耗。&lt;br&gt;
2、提供响应速度。当任务到达时，任务可以不需要等待线程创建，能够立即执行。&lt;br&gt;
3、提高线程的可管理性。线程是稀缺资源，如果无限制的创建，不仅会消耗系统资源，还会降低系统的稳定性。使用线程池可以进行统一的分配，调优和监控。&lt;/p&gt;
&lt;h1 id=&#34;线程池参数&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#线程池参数&#34;&gt;#&lt;/a&gt; 线程池参数：&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;corePoolSize&lt;/code&gt; : 线程池中常驻的线程数。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;maximumPoolSize&lt;/code&gt; : 线程池中能够容纳同时执行的最大线程数，此值必须大于 1.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;keepAliveTime&lt;/code&gt; : 多余的空闲线程的存活时间。当前线程池数量超过 &lt;code&gt;corePoolSize&lt;/code&gt;  时，当空闲时间达 &lt;code&gt;keepAliveTime&lt;/code&gt;  值时，多余的空闲线程会被销毁直到剩下 &lt;code&gt;corePoolSize&lt;/code&gt;  个线程为止。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;unit&lt;/code&gt; :  &lt;code&gt;keepAliveTime&lt;/code&gt;  的单位.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;workQueue&lt;/code&gt; : 任务队列，被提交但尚未执行的任务.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;threadFactory&lt;/code&gt; : 表示生成线程池中工作线程的线程工厂，用于创建线程。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;headler&lt;/code&gt; : 拒绝策略，表示当队列满了并且工作线程大于等于线程池的最大线程数 ( &lt;code&gt;maximumPoolSize&lt;/code&gt; ) 时采取的措施。&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;线程池运行原理&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#线程池运行原理&#34;&gt;#&lt;/a&gt; 线程池运行原理：&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;1&lt;/code&gt; . 在创建线程之后，等待提交过来的任务请求。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;2&lt;/code&gt; . 当调用 &lt;code&gt;execute()&lt;/code&gt;  方法添加一个请求任务时，线程池会做如下判断：
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;2.1&lt;/code&gt; 、如果正在运行的线程数量小于 &lt;code&gt;corePoolSize&lt;/code&gt; ，那么马上创建线程执行这个任务。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;2.2&lt;/code&gt; 、如果正在运行的线程数量大于或等于 &lt;code&gt;corePoolSize&lt;/code&gt; ，那么将这个任务放入队列。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;2.3&lt;/code&gt; 、如果这时候队列满了且正在运行的线程数量还小于 &lt;code&gt;maximumPoolSize&lt;/code&gt; , 那么创建非核心线程 l 立刻执行这个任务。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;2.4&lt;/code&gt; 、如果队列满了且正在运行的线程数量大于或者等于这个 &lt;code&gt;maximumPoolSize&lt;/code&gt; , 那么线程池会启动饱和拒绝策略来执行。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;3&lt;/code&gt; 、当线程执行完成任务时，它会从队列中取下一个任务来执行。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;4&lt;/code&gt; 、当线程无事可做超过一定的时间 ( &lt;code&gt;keepAliveTime&lt;/code&gt; ) 时，线程池会判断：&lt;br&gt;
如果当前运行的线程数大于 &lt;code&gt;corePoolSize&lt;/code&gt; ，那么这个线程就会被停掉。&lt;br&gt;
所以线程池的所有任务完成后它最终会收缩到 &lt;code&gt;corePoolSize&lt;/code&gt;  的大小。&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;线程池拒绝策略&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#线程池拒绝策略&#34;&gt;#&lt;/a&gt; 线程池拒绝策略&lt;/h1&gt;
&lt;p&gt;拒绝策略实现了  &lt;code&gt;RejectedExecutionHandler&lt;/code&gt;  接口。&lt;/p&gt;
&lt;h2 id=&#34;jdk内置的四种&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#jdk内置的四种&#34;&gt;#&lt;/a&gt; JDK 内置的四种:&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;AbortPolicy&lt;/code&gt;  (默认): 直接抛出 &lt;code&gt;RejectedExecutionException&lt;/code&gt;  异常阻止系统正常运行。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;CallerRunsPolicy&lt;/code&gt; : “调用者运行” 一种运行机制，该策略既不会 抛弃任务，也不会抛出异常，而是返回给调用者，从而减轻新任务流量。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;DiscardOldestPolicy&lt;/code&gt; : 抛弃队列中等待最久的任务，然后把当前任务加入队列中尝试再次提交当前任务。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;DiscardPolicy&lt;/code&gt; : 直接丢弃任务，不予任何处理也不会抛出异常。如果允许任务丢失，这是最好的&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;如何配置线程池参数&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#如何配置线程池参数&#34;&gt;#&lt;/a&gt; 如何配置线程池参数&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;CPU 密集型:&lt;br&gt;
 需要大量的运算，没有阻塞。CPU 一直在全速运行。&lt;br&gt;
CPU 密集型任务只有在真正的多核 CPU 上才可以得到加速&lt;/p&gt;
&lt;p&gt;&lt;b&gt;参考公式： CPU 核心数 + 1 个线程&lt;/b&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;IO 密集型：&lt;br&gt;
即该任务需要大量的 IO，即大量的阻塞。&lt;br&gt;
在单线程上运行 IO 密集型的任务会导致浪费大量的 CPU 运算能力浪费等待。所以在 IO 秘籍型任务重使用多线程可以大大的加速程序运行，即使在单核 CPU 上，这种加速主要就是利用了被浪费掉的阻塞时间。&lt;br&gt;
IO 密集型，大部分线程都会阻塞。所以需要多配置线程。配置方案有两种：&lt;/p&gt;
&lt;p&gt;&lt;b&gt;1、参考公式: CPU 核数 / 1 - 阻塞系数。 阻塞系数在 0.8-0.9 之间。&lt;/b&gt;&lt;br&gt;
比如 8 核 CPU:&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;katex&#34;&gt;&lt;span class=&#34;katex-mathml&#34;&gt;&lt;math xmlns=&#34;http://www.w3.org/1998/Math/MathML&#34;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;mfrac&gt;&lt;mn&gt;8&lt;/mn&gt;&lt;mrow&gt;&lt;mn&gt;1&lt;/mn&gt;&lt;mo&gt;−&lt;/mo&gt;&lt;mn&gt;0.9&lt;/mn&gt;&lt;/mrow&gt;&lt;/mfrac&gt;&lt;mo&gt;=&lt;/mo&gt;&lt;mn&gt;80&lt;/mn&gt;&lt;/mrow&gt;&lt;annotation encoding=&#34;application/x-tex&#34;&gt;\frac{8}{1-0.9}=80&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&#34;katex-html&#34; aria-hidden=&#34;true&#34;&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:1.2484389999999999em;vertical-align:-0.403331em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;&lt;span class=&#34;mopen nulldelimiter&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mfrac&#34;&gt;&lt;span class=&#34;vlist-t vlist-t2&#34;&gt;&lt;span class=&#34;vlist-r&#34;&gt;&lt;span class=&#34;vlist&#34; style=&#34;height:0.845108em;&#34;&gt;&lt;span style=&#34;top:-2.655em;&#34;&gt;&lt;span class=&#34;pstrut&#34; style=&#34;height:3em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;sizing reset-size6 size3 mtight&#34;&gt;&lt;span class=&#34;mord mtight&#34;&gt;&lt;span class=&#34;mord mtight&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;mbin mtight&#34;&gt;−&lt;/span&gt;&lt;span class=&#34;mord mtight&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;mord mtight&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;mord mtight&#34;&gt;9&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;top:-3.23em;&#34;&gt;&lt;span class=&#34;pstrut&#34; style=&#34;height:3em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;frac-line&#34; style=&#34;border-bottom-width:0.04em;&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;top:-3.394em;&#34;&gt;&lt;span class=&#34;pstrut&#34; style=&#34;height:3em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;sizing reset-size6 size3 mtight&#34;&gt;&lt;span class=&#34;mord mtight&#34;&gt;&lt;span class=&#34;mord mtight&#34;&gt;8&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;vlist-s&#34;&gt;​&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;vlist-r&#34;&gt;&lt;span class=&#34;vlist&#34; style=&#34;height:0.403331em;&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;mclose nulldelimiter&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2777777777777778em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mrel&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2777777777777778em;&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:0.64444em;vertical-align:0em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;8&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;个线程&lt;br&gt;
&lt;b&gt;2、参考公式: CPU 核数 * 2&lt;/b&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://fangjiaxiaobai.github.io/2021/08/02/Redis%E7%B3%BB%E5%88%97/C-1-Redis%E7%9A%84%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B9%8Bziplist/</guid>
            <title>Redis数据结构之详解 ziplist</title>
            <link>https://fangjiaxiaobai.github.io/2021/08/02/Redis%E7%B3%BB%E5%88%97/C-1-Redis%E7%9A%84%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B9%8Bziplist/</link>
            <category>Redis</category>
            <pubDate>Mon, 02 Aug 2021 18:18:55 +0800</pubDate>
            <description><![CDATA[ &lt;h2 id=&#34;解密-ziplist&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#解密-ziplist&#34;&gt;#&lt;/a&gt; 解密 ziplist.&lt;/h2&gt;
&lt;p&gt;为什么叫解密  &lt;code&gt;ziplist&lt;/code&gt;  呢？因为从 ziplist 中取到我们预期的值，真的和解密一样！烧脑，但是极其有趣！！&lt;/p&gt;
&lt;h3 id=&#34;引题&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#引题&#34;&gt;#&lt;/a&gt; 引题&lt;/h3&gt;
&lt;p&gt;在介绍  &lt;code&gt;Redis&lt;/code&gt;  的数据类型  &lt;code&gt;list&lt;/code&gt;  的时候，是我们第一次接触  &lt;code&gt;ziplist&lt;/code&gt;  这一数据结构。&lt;/p&gt;
&lt;p&gt;不知道是否还记得  &lt;code&gt;ziplist&lt;/code&gt;  这种数据结构的特性。如果不记得也没有关系，今天我们来详细的看下这个数据结构。&lt;/p&gt;
&lt;h3 id=&#34;重读-ziplist-数据结构&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#重读-ziplist-数据结构&#34;&gt;#&lt;/a&gt; 重读 ziplist 数据结构&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;ziplist&lt;/code&gt;  是经过特殊编码的双向链接列表，旨在提高内存效率。 它同时存储字符串和整数值，其中整数被编码为实际整数，而不是一系列字符。它允许在  &lt;code&gt;O(1)&lt;/code&gt;  时间在列表的任一侧进行推和弹出操作。&lt;/p&gt;
&lt;p&gt;但是，由于每个操作都需要重新分配 &lt;code&gt;ziplist&lt;/code&gt;  使用的内存，因此实际的复杂性与 &lt;code&gt;ziplist&lt;/code&gt;  使用的内存量有关。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;ziplist&lt;/code&gt;  的数据结构总览。如下图&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/images/Redis%E7%B3%BB%E5%88%97/images/ziplist-01-Ziplist%E7%9A%84%E7%BB%93%E6%9E%84.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;我来依次解释下这  &lt;code&gt;5&lt;/code&gt;  个部分.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;&amp;lt;uint32_t zlbytes&amp;gt;&lt;/code&gt;  : 存储的  &lt;code&gt;ziplist&lt;/code&gt;  占用的字节数 (包含  &lt;code&gt;zlbytes&lt;/code&gt;  字段本身的  &lt;code&gt;4&lt;/code&gt;  个字节)。因此：无需遍历就能直接知道这个数据结构的大小。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;&amp;lt;uint32_t zltail&amp;gt;&lt;/code&gt;  是列表中最后一个条目的偏移量。 这允许在列表的另一端进行弹出操作，而无需完全遍历。在任意一端进行  &lt;code&gt;pop&lt;/code&gt;  和  &lt;code&gt;push&lt;/code&gt;  操作的时间复杂度都是  &lt;code&gt;O(1)&lt;/code&gt;  .&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;&amp;lt;uint16_t zllen&amp;gt;&lt;/code&gt;  是条目数。当条目数超过 &lt;code&gt;2 ^ 16-2&lt;/code&gt;  时，此值将设置为 &lt;code&gt;2 ^ 16-1&lt;/code&gt; ，这时，我们需要遍历整个列表以了解其包含多少项了。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;&amp;lt;uint8_t zlend&amp;gt;&lt;/code&gt;  是代表 &lt;code&gt;ziplist&lt;/code&gt;  末尾的特殊条目。编码为等于 &lt;code&gt;255&lt;/code&gt;  的单个字节。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;&amp;lt;entry&amp;gt;&lt;/code&gt;  : 往下看.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;entry&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#entry&#34;&gt;#&lt;/a&gt;  &lt;code&gt;Entry&lt;/code&gt;&lt;/h4&gt;
&lt;p&gt;&lt;code&gt;ziplist&lt;/code&gt;  中的每个条目都以包含两个信息的元数据作为前缀。首先，存储前一个  &lt;code&gt;entry&lt;/code&gt;  的长度，以便能够从后到前遍历列表。第二，提供  &lt;code&gt;entry&lt;/code&gt;  编码。 它表示条目类型，整数或字符串，对于字符串，还表示字符串有效负载的长度。因此，能够像下面这样存储一个完整的  &lt;code&gt;entry&lt;/code&gt; .&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/images/Redis%E7%B3%BB%E5%88%97/images/ziplist-01-entry%E7%9A%84%E7%BB%93%E6%9E%84.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;有时， &lt;code&gt;encoding&lt;/code&gt;  也可以代表 &lt;code&gt;entry&lt;/code&gt;  本身，就像后面将要看到的小整数一样。在这种情况下， &lt;code&gt;&amp;lt;entry-data&amp;gt;&lt;/code&gt;  部分丢失了，我们的 &lt;code&gt;Entry&lt;/code&gt;  结构是这样的：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/images/Redis%E7%B3%BB%E5%88%97/images/ziplist-01-entry%E7%9A%84%E7%BB%93%E6%9E%842.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;我们来具体看下  &lt;code&gt;Entry&lt;/code&gt;  的编码方式.&lt;/p&gt;
&lt;h5 id=&#34;prevlen&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#prevlen&#34;&gt;#&lt;/a&gt;  &lt;code&gt;prevlen&lt;/code&gt;&lt;/h5&gt;
&lt;p&gt;&lt;code&gt;&amp;lt;prevlen&amp;gt;&lt;/code&gt;  表示 前一个  &lt;code&gt;entry&lt;/code&gt;  的长度。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;如果 前一个  &lt;code&gt;entry&lt;/code&gt;  的长度小于 254 个字节，那么这个  &lt;code&gt;Entry&lt;/code&gt;  只会消耗一个字节来表示该长度。一个无符号的  &lt;code&gt;8&lt;/code&gt;  位整数。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;如果前一个  &lt;code&gt;entry&lt;/code&gt;  长度大于或等于 &lt;code&gt;254&lt;/code&gt;  字节的时候，它将占用 5 个字节。第一个字节设置为  &lt;code&gt;254&lt;/code&gt; ( &lt;code&gt;FE&lt;/code&gt; ), 以指示随后的值更大。 其他的四个字节将作为前一个 entry 的长度的值。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;所以，我们就能知道了 下面这种编码方式.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;&amp;lt;prevlen form 9 to 253&amp;gt; &amp;lt;encoding&amp;gt; &amp;lt;entry-data&amp;gt;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;或者&lt;/p&gt;
&lt;p&gt;&lt;code&gt;&amp;lt;prevlen 4 bytes unsigned little endian prevlen&amp;gt; &amp;lt;encoding&amp;gt; &amp;lt;entry-data&amp;gt;&lt;/code&gt;&lt;/p&gt;
&lt;h5 id=&#34;encoding&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#encoding&#34;&gt;#&lt;/a&gt;  &lt;code&gt;encoding&lt;/code&gt;&lt;/h5&gt;
&lt;p&gt;&lt;code&gt;entry&lt;/code&gt;  中的  &lt;code&gt;encoding&lt;/code&gt;  字段取决于  &lt;code&gt;entry-data&lt;/code&gt;  的内容。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;如果  &lt;code&gt;entry-data&lt;/code&gt;  是字符串的时候， &lt;code&gt;encoding&lt;/code&gt;  第一个字节的前两位用于存储字符串长度的编码类型。然后是字符串的实际长度。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;如果  &lt;code&gt;entry&lt;/code&gt;  是整数时，前 &lt;code&gt;2&lt;/code&gt;  位都是 &lt;code&gt;1&lt;/code&gt; ,。 接下来的两位用于指定在此标头之后将存储哪种类型.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;由上面的两点，就足以确定  &lt;code&gt;entry-data&lt;/code&gt;  的类型.&lt;/p&gt;
&lt;p&gt;不同的类型和编码的概述如下:&lt;/p&gt;
&lt;h6 id=&#34;字符串类型&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#字符串类型&#34;&gt;#&lt;/a&gt; 字符串类型&lt;/h6&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;a&lt;/code&gt; .  &lt;code&gt;| 00pppppp |&lt;/code&gt;  : 含义是占用 &lt;code&gt;1&lt;/code&gt;  个字节来表示长度小于或等于 &lt;code&gt;63&lt;/code&gt;  个字节（ &lt;code&gt;6&lt;/code&gt;  位）的字符串值。   &lt;code&gt;pppppp&lt;/code&gt;  表示无符号的 6 位长度。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;b&lt;/code&gt; . &lt;code&gt;|01pppppp|qqqqqqqq|&lt;/code&gt;  含义是用 &lt;code&gt;2&lt;/code&gt;  个字节来表示小于等于  &lt;code&gt;16383(2^14)&lt;/code&gt;  个字节的字符串的长度. (&lt;b&gt;这里使用大端法计数&lt;/b&gt;)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;c&lt;/code&gt; . &lt;code&gt;|10000000|qqqqqqqq|rrrrrrrr|ssssssss|tttttttt|&lt;/code&gt;  含义是 使用 5 个字节来表示大于等于 16384 个字节长度的字符串，只有 4 个字节表示其最大长度为  &lt;code&gt;2^32-1&lt;/code&gt; . 低位的 6 位被设置成  &lt;code&gt;0&lt;/code&gt; .(&lt;b&gt;这里使用大端法计数&lt;/b&gt;)&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h6 id=&#34;整数类型&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#整数类型&#34;&gt;#&lt;/a&gt; 整数类型&lt;/h6&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;d&lt;/code&gt; . &lt;code&gt;|11000000|&lt;/code&gt; : 含义是用 &lt;code&gt;3&lt;/code&gt;  个字节表示一个 &lt;code&gt;16&lt;/code&gt;  位的有符号的短整形数 ( &lt;code&gt;short&lt;/code&gt; )。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;e&lt;/code&gt; . &lt;code&gt;|11010000|&lt;/code&gt;  : 含义是用 &lt;code&gt;5&lt;/code&gt;  个字节 表示一个 &lt;code&gt;32&lt;/code&gt;  位的有符合整数型 ( &lt;code&gt;int&lt;/code&gt; ).&lt;/li&gt;
&lt;li&gt;&lt;code&gt;f&lt;/code&gt; . &lt;code&gt;|11100000|&lt;/code&gt;  : 含义是用 &lt;code&gt;9&lt;/code&gt;  个字节，表示一个 &lt;code&gt;64&lt;/code&gt;  位的有符合长整数 ( &lt;code&gt;long&lt;/code&gt; )&lt;/li&gt;
&lt;li&gt;&lt;code&gt;g&lt;/code&gt; . &lt;code&gt;|11110000|&lt;/code&gt;  : 含义是用 &lt;code&gt;4&lt;/code&gt;  个字节表示 &lt;code&gt;24&lt;/code&gt;  位有符号整数 (只占用 3 个字节)。PS: 有什么作用呢？前面说的小整形数。节约空间。即如图&lt;/li&gt;
&lt;li&gt;&lt;code&gt;h&lt;/code&gt; . &lt;code&gt;|11111110|&lt;/code&gt;  :  含义是用 &lt;code&gt;2&lt;/code&gt;  个字节表示一个 &lt;code&gt;8&lt;/code&gt;  位的有符号小整形数。 &lt;code&gt;1&lt;/code&gt;  个字节。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;i&lt;/code&gt; . &lt;code&gt;|1111xxxx|&lt;/code&gt;  :&lt;br&gt;
 除去上面列举的几类编码标识，还有 &lt;code&gt;|1111xxxx|&lt;/code&gt;  的类别。&lt;br&gt;
( &lt;code&gt;xxxx&lt;/code&gt;  在 &lt;code&gt;0000&lt;/code&gt;  和 &lt;code&gt;1101&lt;/code&gt;  之间) 立即 &lt;code&gt;4&lt;/code&gt;  位整数。  &lt;code&gt;0&lt;/code&gt;  到 &lt;code&gt;12&lt;/code&gt;  之间的无符号整数。编码值实际上是 &lt;code&gt;1&lt;/code&gt;  到 &lt;code&gt;13&lt;/code&gt; ，因为不能使用 &lt;code&gt;0000&lt;/code&gt;  和 &lt;code&gt;1111&lt;/code&gt; ，因此应从编码的 &lt;code&gt;4&lt;/code&gt;  位值中减去 &lt;code&gt;1&lt;/code&gt;  以获得正确的值。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;j&lt;/code&gt; . &lt;code&gt;|11111111| &lt;/code&gt; - 表示  &lt;code&gt;ziplist&lt;/code&gt;  的特殊  &lt;code&gt;entry&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;这样，整个 &lt;code&gt;Entry&lt;/code&gt;  的编码方式我们就搞明白了。&lt;br&gt;
这些都是  &lt;code&gt;Redis&lt;/code&gt;  中定义的规定， 所以我们记住就行了。如果让我们自己去设计一套编码方案的时候，我们就可以参考这种思路去设计。&lt;/p&gt;
&lt;h3 id=&#34;那我们来举两个例子来试试身手吧&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#那我们来举两个例子来试试身手吧&#34;&gt;#&lt;/a&gt; 那我们来举两个例子来试试身手吧。&lt;/h3&gt;
&lt;h4 id=&#34;例子1-25&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#例子1-25&#34;&gt;#&lt;/a&gt; 例子 1:  &lt;code&gt;25&lt;/code&gt;&lt;/h4&gt;
&lt;h5 id=&#34;编码方式&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#编码方式&#34;&gt;#&lt;/a&gt; 编码方式&lt;/h5&gt;
&lt;p&gt;&lt;code&gt;[0f 00 00 00] [0c 00 00 00] [02 00] [00 f3] [02 f6] [ff]&lt;/code&gt;&lt;/p&gt;
&lt;h5 id=&#34;解析过程&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#解析过程&#34;&gt;#&lt;/a&gt; 解析过程&lt;/h5&gt;
&lt;p&gt;&lt;img data-src=&#34;/images/Redis%E7%B3%BB%E5%88%97/images/ziplist-01-Ziplist%E4%BE%8B%E5%AD%90%E7%9A%84%E7%BB%93%E6%9E%841.png&#34; alt=&#34;ziplist-01-Ziplist例子的结构1.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/images/Redis%E7%B3%BB%E5%88%97/images/ziplist-%E8%A7%A3%E6%9E%90%E6%95%B0%E6%8D%AE.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h4 id=&#34;例子2-hello-world&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#例子2-hello-world&#34;&gt;#&lt;/a&gt; 例子 2:  &lt;code&gt;Hello World&lt;/code&gt;&lt;/h4&gt;
&lt;p&gt;这里我们还是接着上面例子来讲，我们再设置一个 字符串  &lt;code&gt;Hello World&lt;/code&gt;  。&lt;/p&gt;
&lt;h5 id=&#34;编码格式&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#编码格式&#34;&gt;#&lt;/a&gt; 编码格式&lt;/h5&gt;
&lt;p&gt;&lt;code&gt;[02] [0b] [48 65 6c 6c 6f 20 57 6f 72 6c 64]&lt;/code&gt;&lt;/p&gt;
&lt;h5 id=&#34;解析过程-2&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#解析过程-2&#34;&gt;#&lt;/a&gt; 解析过程&lt;/h5&gt;
&lt;p&gt;&lt;img data-src=&#34;/images/Redis%E7%B3%BB%E5%88%97/images/ziplist-01-Ziplist%E4%BE%8B%E5%AD%90%E7%9A%84%E7%BB%93%E6%9E%842.png&#34; alt=&#34;ziplist-01-Ziplist例子的结构2.png&#34;&gt;&lt;/p&gt;
&lt;h5 id=&#34;附录-ascii码表可展示字符&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#附录-ascii码表可展示字符&#34;&gt;#&lt;/a&gt; 附录，ASCII 码表 (可展示字符)&lt;/h5&gt;
&lt;p&gt;&lt;img data-src=&#34;/images/Redis%E7%B3%BB%E5%88%97/images/ziplist-ASCII%E7%A0%81%E5%AD%97%E7%AC%A6%E8%A1%A8.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;以上内容，就是 &lt;code&gt;Redis&lt;/code&gt;  的 &lt;code&gt;ziplist&lt;/code&gt;  结构的内容了。&lt;/p&gt;
&lt;h3 id=&#34;总结&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#总结&#34;&gt;#&lt;/a&gt; 总结&lt;/h3&gt;
&lt;p&gt;本篇文章的内容主要是更加详细的分享了 &lt;code&gt;ziplist&lt;/code&gt;  的这种数据结构的内部结构以及编码方式.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;ziplist&lt;/code&gt;  由 &lt;code&gt;5&lt;/code&gt;  部分组成。存储了相关信息:  &lt;code&gt;&amp;lt;整个ziplist的长度&amp;gt;&amp;lt;最后一个entry的偏移量&amp;gt;&amp;lt;entry的总数&amp;gt;&amp;lt;entries&amp;gt;&amp;lt;表示结束的特殊entry&amp;gt;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;一个 &lt;code&gt;entry&lt;/code&gt;  由 &lt;code&gt;3&lt;/code&gt;  部分组成， &lt;code&gt;&amp;lt;前一个entry的长度&amp;gt;&amp;lt;编码方式&amp;gt;&amp;lt;entry的内容&amp;gt;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;其中 编码方式 是由 entry 的内容 决定的。有 10 条标准 (规定 / 协议)&lt;/li&gt;
&lt;li&gt;引用了两个示例 ( &lt;code&gt;25&lt;/code&gt;  和 &lt;code&gt;Hello World&lt;/code&gt; )，根据 &lt;code&gt;Redis&lt;/code&gt;  的方式来解码.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;最后&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#最后&#34;&gt;#&lt;/a&gt; 最后&lt;/h3&gt;
&lt;p&gt;期待您的关注，希望和你一起遇见更好的自己&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/images/Redis%E7%B3%BB%E5%88%97/images/qrcode.jpg&#34; alt=&#34;二维码&#34;&gt;&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://fangjiaxiaobai.github.io/2021/08/02/Redis%E7%B3%BB%E5%88%97/C-4-%E8%B7%B3%E8%A1%A8/</guid>
            <title>Redis中的数据结构之跳表及其原理</title>
            <link>https://fangjiaxiaobai.github.io/2021/08/02/Redis%E7%B3%BB%E5%88%97/C-4-%E8%B7%B3%E8%A1%A8/</link>
            <category>Redis</category>
            <category>数据结构</category>
            <pubDate>Mon, 02 Aug 2021 00:00:00 +0800</pubDate>
            <description><![CDATA[ &lt;h2 id=&#34;前言&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#前言&#34;&gt;#&lt;/a&gt; 前言&lt;/h2&gt;
&lt;p&gt;文中附代码实现. &lt;a href=&#34;#%E4%BB%A3%E7%A0%81%E5%AE%9E%E7%8E%B0&#34;&gt;电梯直达&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;在公众号回复 【跳表】 也可以获取哦。&lt;/p&gt;
&lt;h3 id=&#34;什么是跳表&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#什么是跳表&#34;&gt;#&lt;/a&gt; 什么是跳表&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;跳表是一种数据结构。它允许快速查询一个有序连续元素的数据链表。跳跃列表的平均查找和插入时间复杂度都是 O (log n)，优于普通队列的 O (n)。&lt;/p&gt;
&lt;/blockquote&gt;
 &lt;p align=right&gt; from. 维基百科&lt;/p&gt;
&lt;h3 id=&#34;引题&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#引题&#34;&gt;#&lt;/a&gt; 引题&lt;/h3&gt;
&lt;p&gt;线性表这种数据有两种具体实现，数组和链表。具体的内容之前的文章里也有说过，可以翻翻看哇～。在这里两种数据结构中，数组的优点是查找速度快，而链表的优点是增删的效率高，这也是我们常说的。其实，非也。&lt;/p&gt;
&lt;p&gt;数组是一种内存连续的数据结构，其优点是可以通过 &lt;code&gt;首地址+N*(sizeOf(Node))&lt;/code&gt;  来快速获取指定位置上的元素。假如我们不知道指定元素的位置呢？&lt;/p&gt;
&lt;p&gt;链表是一种非内存连续的数据，其优点是通过改变指针地址来快速增减元素。很明显的问题，你首先要知道你要增加 / 删除的目标元素是哪个！所以会浪费  &lt;code&gt;O(n)&lt;/code&gt;  的查询时间。&lt;/p&gt;
&lt;p&gt;要论效率，那就要说平衡树 ( &lt;code&gt;AVL&lt;/code&gt; ) 了。增删查的效率都是  &lt;code&gt;O(logN)&lt;/code&gt; 。 但是这种数据结构，原理比较复杂，实现起来那不是比较复杂了，那是相当复杂。增删操作，都需要其依靠平衡操作引发子树的调整。&lt;/p&gt;
&lt;p&gt;那么，掌声有请我们今天的主角: &lt;b&gt;跳表&lt;/b&gt;。&lt;/p&gt;
&lt;h2 id=&#34;跳表&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#跳表&#34;&gt;#&lt;/a&gt; 跳表&lt;/h2&gt;
&lt;h3 id=&#34;概念&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#概念&#34;&gt;#&lt;/a&gt; 概念&lt;/h3&gt;
&lt;p&gt;跳表 ( &lt;code&gt;skip list&lt;/code&gt; ) 全称 跳跃链表。 是一种类链表的数据结构。&lt;/p&gt;
&lt;p&gt;跳表的性能和平衡树的性能是一样的，在插入，删除，搜索的时间复杂度都是  &lt;code&gt;O(n)&lt;/code&gt; , 是一种利用空间换时间的数据结构。&lt;/p&gt;
&lt;p&gt;跳表是一种随机化的数据结构，目前开源软件 Redis 和 LevelDB 都有用到它。&lt;/p&gt;
&lt;p&gt;这里，先给大家看一个&lt;b&gt;可能&lt;/b&gt;的跳表结构。&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/images/Redis%E7%B3%BB%E5%88%97/images/%E8%B7%B3%E8%A1%A8-02-%E5%8F%AF%E8%83%BD%E7%9A%84%E8%B7%B3%E8%A1%A8%E7%BB%93%E6%9E%841.png&#34; alt=&#34;跳表-02-可能的跳表结构1.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;现在我要告诉你，上面的跳表是由下面的跳表经过层层优化得来的。&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/images/Redis%E7%B3%BB%E5%88%97/images/%E8%B7%B3%E8%A1%A8-01-%E6%9C%89%E5%BA%8F%E7%9A%84%E9%93%BE%E8%A1%A8.png&#34; alt=&#34;跳表-01-有序的链表&#34;&gt;&lt;/p&gt;
&lt;p&gt;下面我们针对上面的跳表结构来分析一下。&lt;/p&gt;
&lt;p&gt;刚才说过了，链表增删性能罪魁祸首就是查找操作！对于查找操作，效率最高的莫过于二分查找了。但是对于第一个有序链表中是无法使用二分查找的。但是呢，我们可以随机抽选中其中的几个元素，组成一个新的链表。就像下面这样。&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/images/Redis%E7%B3%BB%E5%88%97/images/%E8%B7%B3%E8%A1%A8-03-%E6%8A%BD%E8%B1%A1%E5%87%BA%E6%96%B0%E7%9A%84%E4%B8%80%E5%B1%82.png&#34; alt=&#34;跳表-03-抽象出新的一层.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;假设我们要找 &lt;code&gt;5&lt;/code&gt;  这个元素，在单独的有序链表中，我们必须从头结点依次遍历到  &lt;code&gt;5&lt;/code&gt;  这个节点。路径为 &lt;code&gt;1-&amp;gt;2-&amp;gt;3-&amp;gt;4-&amp;gt;5&lt;/code&gt; , 下图中黄色线路径。, 现在，我们只需要从  &lt;code&gt;1-&amp;gt;2-&amp;gt;4-&amp;gt;5&lt;/code&gt; . 下图中紫色线路径。既然我们可以原来的链表抽象出一个新的链表，那我们还可以从新的链表中再抽象出一个新的链表。这样的话，就直接可以  &lt;code&gt;1-&amp;gt;4-&amp;gt;5&lt;/code&gt; , 就可以查到一个我们的目标节点了。&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/images/Redis%E7%B3%BB%E5%88%97/images/%E8%B7%B3%E8%A1%A8-04-%E5%86%8D%E6%8A%BD%E8%B1%A1%E5%87%BA%E6%96%B0%E7%9A%84%E4%B8%80%E5%B1%82.png&#34; alt=&#34;跳表-04-再抽象出新的一层.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;如果你看到这里，我要告诉你一个重要的概念了。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;层：就是我们假设的抽象出来的新链表。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;可能你很好奇，层我们应该怎么存储呢？很简单啊！&lt;/p&gt;
&lt;p&gt;以后我们每个链表的元素是怎么定义的？？&lt;/p&gt;
&lt;figure class=&#34;highlight c++&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;typedef&lt;/span&gt; &lt;span class=&#34;class&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;struct&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;NODE&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    T data;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    Node *next;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125; node;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;我们只需要将 指向下一个元素的指针改成一个指针数组就可以了！&lt;/p&gt;
&lt;figure class=&#34;highlight c++&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;typedef&lt;/span&gt; &lt;span class=&#34;class&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;struct&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;NODE&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    T data;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;/// 指向后继元素的指针数组&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;class&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;struct&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;Node&lt;/span&gt; *&lt;span class=&#34;title&#34;&gt;next&lt;/span&gt;[&lt;span class=&#34;title&#34;&gt;i&lt;/span&gt;];&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125; node;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;了解了怎么存储之后，那怎样确定某个节点有几层呢？这里我告诉你吧，随机的！怎么随机的呢？就是通过随机数来确定的，也就是我们常说的 抛硬币的形式。 比如下面的这段代码.&lt;/p&gt;
&lt;figure class=&#34;highlight c++&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;/**&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt; * 生成一个随机数&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt; * @return 一个随机数&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt; */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;random_level&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;()&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; level = &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;while&lt;/span&gt; (&lt;span class=&#34;built_in&#34;&gt;rand&lt;/span&gt;() % &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        level++;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    level = (level &amp;lt; MAX_LEVEL) ? level : MAX_LEVEL;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; level;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;那我们就尝试着实现一个跳表。&lt;/p&gt;
&lt;h3 id=&#34;跳表的实现&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#跳表的实现&#34;&gt;#&lt;/a&gt; 跳表的实现&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;定义跳表的结构&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;经过上面的分析，每个节点指向下一个节点的指针是一个数组，所以我们得出下面的结构。(当然也有其他方式的实现，欢迎交流～)&lt;/p&gt;
&lt;figure class=&#34;highlight c++&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;/// 节点&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;NODE &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    T data,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;/// 指向下一个节点的数组，从1开始。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;/// 数组中的每个元素对应该层的下一个节点&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;/// next[1],是第一层的下一个节点的地址。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;/// next[2] 是第二层的下一个节点的地址。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    NODE []next;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;/// 跳表&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;SKIP_LIST&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    NODE head;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;/// 该跳表的层数&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; level;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;查找指定的元素&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;上面说过了 查找过程，我这里就直接给出伪代码了。&lt;/p&gt;
&lt;p&gt;主要逻辑是：从高层开始查找直到找到等于指定元素的节点 E 或者第一个大于指定元素的节点 G。如果是节点 E，那么直接返回就好了。如果是 G 节点，那么就以 G 节点的前一个节点 L, 在下一层进行查找，重复上面的逻辑，直到找到节点 E，或者到达跳表的结尾。&lt;/p&gt;
&lt;p&gt;比如下图中查找  &lt;code&gt;5&lt;/code&gt;  的过程为:&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/images/Redis%E7%B3%BB%E5%88%97/images/%E8%B7%B3%E8%A1%A8-08-%E6%9F%A5%E6%89%BE.png&#34; alt=&#34;跳表-08-查找&#34;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;head-&amp;gt;8&lt;/code&gt; ,  &lt;code&gt;8&amp;gt;5&lt;/code&gt; , 从 &lt;code&gt;head&lt;/code&gt;  开始，去下一层查找。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;head-&amp;gt;4-&amp;gt;8&lt;/code&gt; ,  &lt;code&gt;8&amp;gt;5&lt;/code&gt; , 从  &lt;code&gt;4&lt;/code&gt;  元素开始查找。去下一层查找&lt;/li&gt;
&lt;li&gt;&lt;code&gt;head-&amp;gt;4-&amp;gt;8&lt;/code&gt; ,  &lt;code&gt;8&amp;gt;5&lt;/code&gt; , 从  &lt;code&gt;4&lt;/code&gt;  元素开始查找。去下一层查找.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;head-&amp;gt;4-&amp;gt;6&lt;/code&gt; ,  &lt;code&gt;6&amp;gt;5&lt;/code&gt; , 从  &lt;code&gt;4&lt;/code&gt;  元素开始查找。去下一层查找.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;head-&amp;gt;4-&amp;gt;5&lt;/code&gt; ,  &lt;code&gt;5==5&lt;/code&gt; , 返回节点 &lt;code&gt;5&lt;/code&gt; .&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;如下面的伪代码。&lt;/p&gt;
&lt;figure class=&#34;highlight c++&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;search&lt;/span&gt;() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;/// i 表示层数，从最高层开始查找 。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; (; i &amp;gt;= &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;; i--) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;while&lt;/span&gt; ((q = p-&amp;gt;next[i]) &amp;amp;&amp;amp; q-&amp;gt;k &amp;lt; k) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            p = q;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (q &amp;amp;&amp;amp; k == q-&amp;gt;data) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &amp;amp;(q-&amp;gt;data);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;构建一个跳表。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;上面分析可以得出来，跳表是一个多层的有序链表。所以我们对于每一层都像操作普通链表一样就可以了。就像下面的这样:&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/images/Redis%E7%B3%BB%E5%88%97/images/%E8%B7%B3%E8%A1%A8-06-%E6%8F%92%E5%85%A5.png&#34; alt=&#34;跳表-06-插入&#34;&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight c++&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;insert&lt;/span&gt; () &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;// 找到要插入的节点位置。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;// level是本跳表的层数&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; (i = level&lt;span class=&#34;number&#34;&gt;-1&lt;/span&gt;; i &amp;gt;= &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;; i--) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;comment&#34;&gt;///遍历该层小于指定值的前一个元素&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;while&lt;/span&gt; ((q = p-&amp;gt;next[i]) &amp;amp;&amp;amp; q-&amp;gt;k &amp;lt; k) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            p = q;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;comment&#34;&gt;/// 新节点的前一个节点的层指针。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        update[i] = p;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;// 随机生成该节点的层数,如果生成的层数大于当前层，需要更新跳表中记录的level值。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    new_level = &lt;span class=&#34;built_in&#34;&gt;rand_level&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt;(new_level &amp;gt; level) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        level = new_level;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;// 生成新的节点，并针对每一层执行普通链表的插入操作。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    new_node = &lt;span class=&#34;built_in&#34;&gt;create_new_node&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; (i = level - &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;; i &amp;gt;= &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;; i--) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;comment&#34;&gt;/// 下面两行代码就是普通连接的增加方法。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;comment&#34;&gt;/// 新节点的前一个节点的第i层的节点。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        new_node-&amp;gt;next[i] = update[i]-&amp;gt;next[i];&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        update[i]-&amp;gt;next[i] = q;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;删除跳表的元素&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;主要逻辑是该节点的每一层都要删除.&lt;/p&gt;
&lt;p&gt;即对每一层，都要 要删除节点的上一个节点指向要删除节点的下一个节点。&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/images/Redis%E7%B3%BB%E5%88%97/images/%E8%B7%B3%E8%A1%A8-07-%E5%88%A0%E9%99%A4.png&#34; alt=&#34;跳表-07-删除.png&#34;&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight c++&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;del&lt;/span&gt;() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;/// 找到要删除的节点&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; (; i &amp;gt;= &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;; --i) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;while&lt;/span&gt; ((q = p-&amp;gt;next[i]) &amp;amp;&amp;amp; q-&amp;gt;k &amp;lt; k) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            p = q;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        update[i] = p;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;代码实现&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#代码实现&#34;&gt;#&lt;/a&gt; 代码实现&lt;/h3&gt;
&lt;p&gt;👉 &lt;a href=&#34;https://github.com/fangjiaxiaobai/data_structures_and_algorithms/tree/master/01_data_structures/skiplist/c/01_fangjiaxiaobai&#34;&gt;跳表 &lt;code&gt;C&lt;/code&gt;  语言版本&lt;/a&gt;&lt;br&gt;
👉 &lt;a href=&#34;https://github.com/fangjiaxiaobai/data_structures_and_algorithms/tree/master/01_data_structures/skiplist/java/fangjiaxiaobai&#34;&gt;跳表 &lt;code&gt;JAVA&lt;/code&gt;  版本&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;其他语言，比如  &lt;code&gt;python&lt;/code&gt; ,  &lt;code&gt;golang&lt;/code&gt; ,  &lt;code&gt;c++&lt;/code&gt; ,  &lt;code&gt;js&lt;/code&gt; ,  &lt;code&gt;php&lt;/code&gt; ,  &lt;code&gt;kotlin&lt;/code&gt;  版本的代码，你有没有兴趣搞一波呢？👉 &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL2ZhbmdqaWF4aWFvYmFpL2RhdGFfc3RydWN0dXJlc19hbmRfYWxnb3JpdGhtcw==&#34;&gt;赐教地址&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;各位看官可以选择自己熟悉的语言查看。实现代码仅供参考。如有高见，欢迎交流哇～，还请不吝赐教！&lt;/p&gt;
&lt;p&gt;也欢迎大侠提交自己擅长语言的代码到仓库～，集思广益，一起交流！期待～～&lt;/p&gt;
&lt;p&gt;(仓库中的数据结构与算法持续更新哦，欢迎 &lt;code&gt;star&lt;/code&gt; )&lt;/p&gt;
&lt;h3 id=&#34;时间复杂度的分析&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#时间复杂度的分析&#34;&gt;#&lt;/a&gt; 时间复杂度的分析&lt;/h3&gt;
&lt;p&gt;因为跳表的时间复杂度和跳表的层数以及该层上的节点数和节点分布的位置有关，而这些因素都是随机的。 此中涉及了很多复杂的概率统计学知识。所以我就摘自维基百科中的说明，如下:&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/images/Redis%E7%B3%BB%E5%88%97/images/%E8%B7%B3%E8%A1%A8-05-%E7%9A%84%E6%97%B6%E9%97%B4%E5%A4%8D%E6%9D%82%E5%BA%A6.png&#34; alt=&#34;跳表-05-的时间复杂度png&#34;&gt;&lt;/p&gt;
&lt;p&gt;如果看的不是很清晰，也可以这么想：&lt;/p&gt;
&lt;p&gt;如果每两个节点抽出一个节点作为上一级索引的节点，那第一级索引的节点个数大约就是  &lt;code&gt;n/2&lt;/code&gt;  , 第二级索引是  &lt;code&gt;n/4&lt;/code&gt; , 第三级就是  &lt;code&gt;n/8&lt;/code&gt; 。 也就是说 第  &lt;code&gt;k&lt;/code&gt;  级索引节点个数是  &lt;code&gt;n/(2^k)&lt;/code&gt; ;&lt;/p&gt;
&lt;p&gt;假设，我们有  &lt;code&gt;h&lt;/code&gt;  层，最高层索引有 &lt;code&gt;2&lt;/code&gt;  个节点，那么， 就是  &lt;code&gt;n/(2^k)=2&lt;/code&gt; , 那么 &lt;span class=&#34;katex&#34;&gt;&lt;span class=&#34;katex-mathml&#34;&gt;&lt;math xmlns=&#34;http://www.w3.org/1998/Math/MathML&#34;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;mi&gt;k&lt;/mi&gt;&lt;mo&gt;=&lt;/mo&gt;&lt;mi&gt;l&lt;/mi&gt;&lt;mi&gt;o&lt;/mi&gt;&lt;msub&gt;&lt;mi&gt;g&lt;/mi&gt;&lt;mn&gt;2&lt;/mn&gt;&lt;/msub&gt;&lt;mi&gt;N&lt;/mi&gt;&lt;mo&gt;−&lt;/mo&gt;&lt;mn&gt;1&lt;/mn&gt;&lt;/mrow&gt;&lt;annotation encoding=&#34;application/x-tex&#34;&gt;k=log_2N-1&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&#34;katex-html&#34; aria-hidden=&#34;true&#34;&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:0.69444em;vertical-align:0em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.03148em;&#34;&gt;k&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2777777777777778em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mrel&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2777777777777778em;&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:0.8888799999999999em;vertical-align:-0.19444em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.01968em;&#34;&gt;l&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;o&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.03588em;&#34;&gt;g&lt;/span&gt;&lt;span class=&#34;msupsub&#34;&gt;&lt;span class=&#34;vlist-t vlist-t2&#34;&gt;&lt;span class=&#34;vlist-r&#34;&gt;&lt;span class=&#34;vlist&#34; style=&#34;height:0.30110799999999993em;&#34;&gt;&lt;span style=&#34;top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;&#34;&gt;&lt;span class=&#34;pstrut&#34; style=&#34;height:2.7em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;sizing reset-size6 size3 mtight&#34;&gt;&lt;span class=&#34;mord mtight&#34;&gt;2&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;vlist-s&#34;&gt;​&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;vlist-r&#34;&gt;&lt;span class=&#34;vlist&#34; style=&#34;height:0.15em;&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.10903em;&#34;&gt;N&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2222222222222222em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mbin&#34;&gt;−&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2222222222222222em;&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:0.64444em;vertical-align:0em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;，这个链表的高度就是 &lt;span class=&#34;katex&#34;&gt;&lt;span class=&#34;katex-mathml&#34;&gt;&lt;math xmlns=&#34;http://www.w3.org/1998/Math/MathML&#34;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;mi&gt;l&lt;/mi&gt;&lt;mi&gt;o&lt;/mi&gt;&lt;msub&gt;&lt;mi&gt;g&lt;/mi&gt;&lt;mn&gt;2&lt;/mn&gt;&lt;/msub&gt;&lt;mi&gt;N&lt;/mi&gt;&lt;/mrow&gt;&lt;annotation encoding=&#34;application/x-tex&#34;&gt;log_2N&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&#34;katex-html&#34; aria-hidden=&#34;true&#34;&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:0.8888799999999999em;vertical-align:-0.19444em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.01968em;&#34;&gt;l&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;o&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.03588em;&#34;&gt;g&lt;/span&gt;&lt;span class=&#34;msupsub&#34;&gt;&lt;span class=&#34;vlist-t vlist-t2&#34;&gt;&lt;span class=&#34;vlist-r&#34;&gt;&lt;span class=&#34;vlist&#34; style=&#34;height:0.30110799999999993em;&#34;&gt;&lt;span style=&#34;top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;&#34;&gt;&lt;span class=&#34;pstrut&#34; style=&#34;height:2.7em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;sizing reset-size6 size3 mtight&#34;&gt;&lt;span class=&#34;mord mtight&#34;&gt;2&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;vlist-s&#34;&gt;​&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;vlist-r&#34;&gt;&lt;span class=&#34;vlist&#34; style=&#34;height:0.15em;&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.10903em;&#34;&gt;N&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;. 如果每一层要遍历  &lt;code&gt;m&lt;/code&gt;  个节点，那么在跳表中查询一个数据的时间复杂度就是 &lt;code&gt;O(m*logN)&lt;/code&gt; .&lt;/p&gt;
&lt;p&gt;由于随机分布的存在，我们可以把 m 当做一个常数，所以，时间复杂度大致可以认为是  &lt;code&gt;O(logN)&lt;/code&gt;&lt;/p&gt;
&lt;h3 id=&#34;空间复杂度的分析&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#空间复杂度的分析&#34;&gt;#&lt;/a&gt; 空间复杂度的分析&lt;/h3&gt;
&lt;p&gt;根据整体代码实现来看，我们使用了链表的形式来实现。其中， &lt;code&gt;next&lt;/code&gt;  改成了数组用来存储下一节点的指针，并没有真正的存储对象，. 也就是说，其实我们并没有使用很多的内存，当然，比一般的链表还是要多一些的。对于我们存储的对象来讲，用于存储指针的内存直接就可以忽略了。时间复杂度为  &lt;code&gt;O(N+m)&lt;/code&gt; , 其中  &lt;code&gt;N&amp;gt;&amp;gt;m&lt;/code&gt; ( &lt;code&gt;N&lt;/code&gt;  远远大于 &lt;code&gt;m&lt;/code&gt; ).&lt;/p&gt;
&lt;h3 id=&#34;比较&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#比较&#34;&gt;#&lt;/a&gt; 比较&lt;/h3&gt;
&lt;h4 id=&#34;跳表-与平衡树-哈希表的比较&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#跳表-与平衡树-哈希表的比较&#34;&gt;#&lt;/a&gt; 跳表 与平衡树、哈希表的比较&lt;/h4&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:center&#34;&gt;&lt;/th&gt;
&lt;th style=&#34;text-align:center&#34;&gt;跳表&lt;/th&gt;
&lt;th style=&#34;text-align:center&#34;&gt;平衡树&lt;/th&gt;
&lt;th style=&#34;text-align:center&#34;&gt;哈希表&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;有序性&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;有序&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;有序&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;无序&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;查找性能&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;O(logN)&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;O(logN)&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;O(N)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;实现逻辑&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;简单&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;复杂&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;简单&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;是否支持范围查找&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;支持&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;支持&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;不支持 (无序)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;时间复杂度&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;较少，取决 p 参数&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;较大 (和跳表比，占用左右子树的两个指针)&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;一般&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h4 id=&#34;解释如下&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#解释如下&#34;&gt;#&lt;/a&gt; 解释如下:&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;在做范围查找的时候，平衡树比跳表操作要复杂。在平衡树上，我们找到指定范围的小值之后，还需要以中序遍历的顺序继续寻找其它不超过大值的节点。如果不对平衡树进行一定的改造，这里的中序遍历并不容易实现。而在跳表上进行范围查找就非常简单，只需要在找到小值之后，对第 &lt;code&gt;1&lt;/code&gt;  层链表进行若干步的遍历就可以实现。&lt;/li&gt;
&lt;li&gt;平衡树的增删操作可能引发子树的平衡调整，而跳表的插入和删除只需要修改相邻节点的指针，操作简单又快速。&lt;/li&gt;
&lt;li&gt;从内存占用上来说，跳表比平衡树更灵活一些。一般来说，平衡树每个节点包含 &lt;code&gt;2&lt;/code&gt;  个指针（分别指向左右子树），而跳表每个节点包含的指针数目平均为 &lt;code&gt;1/(1-p)&lt;/code&gt; ，具体取决于参数 &lt;code&gt;p&lt;/code&gt;  的大小。如果像 &lt;code&gt;Redis&lt;/code&gt;  里的实现一样，取 &lt;code&gt;p=1/4&lt;/code&gt; ，那么平均每个节点包含 &lt;code&gt;1.33&lt;/code&gt;  个指针，比平衡树更有优势。&lt;/li&gt;
&lt;li&gt;查找单个 &lt;code&gt;key&lt;/code&gt; ，跳表和平衡树的时间复杂度都为 &lt;code&gt;O(log n)&lt;/code&gt; ，大体相当；而哈希表在保持较低的哈希值冲突概率的前提下，查找时间复杂度接近 &lt;code&gt;O(1)&lt;/code&gt; ，性能更高一些。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;我还从网上看到了 &lt;code&gt;Redis&lt;/code&gt;  的作者选择 跳表做为 &lt;code&gt;zset&lt;/code&gt;  底层数据结构的原因，贴在下面。&lt;/p&gt;
&lt;h4 id=&#34;redis中作者选择skiplist的原因&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#redis中作者选择skiplist的原因&#34;&gt;#&lt;/a&gt;  &lt;code&gt;Redis&lt;/code&gt;  中作者选择 SkipList 的原因:&lt;/h4&gt;
&lt;blockquote&gt;
&lt;p&gt;There are a few reasons:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;They are not very memory intensive. It’s up to you basically. Changing parameters about the probability of a node to have a given number of levels will make then less memory intensive than btrees.&lt;/li&gt;
&lt;li&gt;A sorted set is often target of many ZRANGE or ZREVRANGE operations, that is, traversing the skip list as a linked list. With this operation the cache locality of skip lists is at least as good as with other kind of balanced trees.&lt;/li&gt;
&lt;li&gt;They are simpler to implement, debug, and so forth. For instance thanks to the skip list simplicity I received a patch (already in Redis master) with augmented skip lists implementing ZRANK in O(log(N)). It required little changes to the code.&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;总结&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#总结&#34;&gt;#&lt;/a&gt; 总结&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;简单的从性能角度分析了数组和链表在性能方面的障碍，引出了我们今天的主角： 跳表。&lt;/li&gt;
&lt;li&gt;画了一个可能出现的跳表结构。这是与跳表的初次见面。并介绍了二分查找的变相应用。当前，这都是基于有序链表为前提的。&lt;/li&gt;
&lt;li&gt;介绍了链表的层的概念，这是跳表相对于链表最重要且唯一的概念，有了它才有了时间复杂度为 &lt;code&gt;O(logN)&lt;/code&gt;  的查询效率，从而实现了增删操作的时间复杂度也是 &lt;code&gt;O(logN)&lt;/code&gt; 。&lt;/li&gt;
&lt;li&gt;接下来，我们一起完成了跳表的实现逻辑。并且提供了多种语言的跳表实现版本。希望你也提交代码到仓库中，大家一起交流，期待。&lt;/li&gt;
&lt;li&gt;跳表在发展的过程中也出现几个变种，我们的这个只是一个最简答的实现。甚至我们都没有考虑过元素个数与层数的最优解等等问题。后面会有一篇文章分享的是 &lt;code&gt;Redis&lt;/code&gt;  中 &lt;code&gt;skiplist&lt;/code&gt;  的实现。敬请期待吧～&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;推荐&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#推荐&#34;&gt;#&lt;/a&gt; 推荐&lt;/h2&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cueW91dHViZS5jb20vd2F0Y2g/dj0yZzlPU1JLSnV6TQ==&#34;&gt;某高校跳表公开课 (需科学上网)&lt;/span&gt;&lt;/p&gt;
&lt;h2 id=&#34;最后&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#最后&#34;&gt;#&lt;/a&gt; 最后&lt;/h2&gt;
&lt;p&gt;期望与你一起遇见更好的自己&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/images/qrcode.jpg&#34; alt=&#34;期望与你一起遇见更好的自己&#34;&gt;&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://fangjiaxiaobai.github.io/2021/08/01/Redis%E7%B3%BB%E5%88%97/B-7-Redis%E7%9A%84%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B%E4%B9%8BHyperLogLogs/</guid>
            <title>Redis数据结构之 `HyperLogLogs`</title>
            <link>https://fangjiaxiaobai.github.io/2021/08/01/Redis%E7%B3%BB%E5%88%97/B-7-Redis%E7%9A%84%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B%E4%B9%8BHyperLogLogs/</link>
            <category>Redis</category>
            <pubDate>Sun, 01 Aug 2021 18:58:55 +0800</pubDate>
            <description><![CDATA[ &lt;h2 id=&#34;书接上回&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#书接上回&#34;&gt;#&lt;/a&gt; 书接上回&lt;/h2&gt;
&lt;p&gt;上一篇我们学习的  &lt;code&gt;bitmap&lt;/code&gt;  这一 &lt;code&gt;“数据类型”&lt;/code&gt; 。其内部是由 &lt;code&gt;sds&lt;/code&gt;  这种种数据结构编码的。&lt;br&gt;
如果不记得了，那就来坐穿梭机回去看看吧。 &lt;a href=&#34;./010-Redis%E7%9A%84%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B9%8B%E4%BD%8D%E5%9B%BEbitmap.md&#34;&gt;开始穿梭&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;接下来，我们继续学习一个新的 &lt;code&gt;&amp;quot;数据类型&amp;quot;&lt;/code&gt; , 位图， &lt;code&gt;HyperLogLogs&lt;/code&gt; .（注意啦，数据类型，我又加了引号！！）&lt;/p&gt;
&lt;h2 id=&#34;hyperloglogs简介&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#hyperloglogs简介&#34;&gt;#&lt;/a&gt;  &lt;code&gt;HyperLogLogs&lt;/code&gt;  简介&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;HyperLogLog&lt;/code&gt;  是一种&lt;b&gt;概率数据结构&lt;/b&gt;，用于对唯一事物进行计数（从技术上讲，这是指估计集合的基数）。&lt;/p&gt;
&lt;p&gt;注意哦，  &lt;code&gt;HyperlogLog&lt;/code&gt;  其实是一种基数计数算法，并非 &lt;code&gt;Redis&lt;/code&gt;  独有的。&lt;/p&gt;
&lt;p&gt;通常，对唯一项目进行计数需要使用与要计数的项目数量成比例的内存量，因为您需要记住过去已经看到的元素，以避免多次对其进行计数。但是，有一组算法会以内存换取精度：以 &lt;code&gt;Redis&lt;/code&gt;  实施为例，您得出的带有标准误差的估计度量最终会小于 &lt;code&gt;1％&lt;/code&gt; 。&lt;/p&gt;
&lt;p&gt;该算法的神奇之处在于，您不再需要使用与所计数项目数量成比例的内存量，而可以使用恒定数量的内存！在最坏的情况下为 &lt;code&gt;12k&lt;/code&gt;  字节，如果您的 &lt;code&gt;HyperLogLogs&lt;/code&gt;  看到的元素很少，而且少得多。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Redis&lt;/code&gt;  中的 &lt;code&gt;HyperLogLog&lt;/code&gt;  尽管在技术上是不同的数据结构，但被编码为 &lt;code&gt;Redis字符串&lt;/code&gt;  ( &lt;code&gt;sds&lt;/code&gt; )，因此您可以调用 &lt;code&gt;GET&lt;/code&gt;  来序列化 &lt;code&gt;HyperLogLogs&lt;/code&gt; ，然后调用 &lt;code&gt;SET&lt;/code&gt;  来将其反序列化回服务器。这里我们在文末会大体翻一下源码。&lt;/p&gt;
&lt;p&gt;接下来我们先看一下 HyperLogLog 有什么应用场景。&lt;/p&gt;
&lt;h3 id=&#34;hyperloglog-的应用场景&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#hyperloglog-的应用场景&#34;&gt;#&lt;/a&gt;  &lt;code&gt;HyperLogLog&lt;/code&gt;  的应用场景&lt;/h3&gt;
&lt;p&gt;根据 &lt;code&gt;HyperLogLog&lt;/code&gt;  的特性来看，使用了一种概率性计数的功能，这样的功能有一个特点就是当数据特别大的时候，其统计的值是不准确的。什么意思呢？&lt;/p&gt;
&lt;p&gt;就是比如统计一个网站的 &lt;code&gt;PV&lt;/code&gt; ， &lt;code&gt;PV&lt;/code&gt;  数值是  &lt;code&gt;123456789&lt;/code&gt;  或者  &lt;code&gt;123456000&lt;/code&gt;  这两者的值对于管理者来讲是一样的。对于一些&lt;b&gt;对精度要求不准确而且数据量很大&lt;/b&gt;的场景是非常适合的。&lt;/p&gt;
&lt;p&gt;比如以下场景：计算网站的 PV，UV，统计日活，月活，统计用户每天搜索的词条数等等。&lt;/p&gt;
&lt;h3 id=&#34;hyperloglog-的常用命令&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#hyperloglog-的常用命令&#34;&gt;#&lt;/a&gt;  &lt;code&gt;HyperLogLog&lt;/code&gt;  的常用命令&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;HyperLogLog&lt;/code&gt;  应该是 &lt;code&gt;Redis&lt;/code&gt;  所有结构中命令最少的了，只有三个命令。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;PFADD key element [element ...]&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;添加元素。&lt;br&gt;
如果一个 &lt;code&gt;HyperLogLog&lt;/code&gt;  的估计的近似基数在执行命令过程中发了变化，  &lt;code&gt;PFADD&lt;/code&gt;  返回 &lt;code&gt;1&lt;/code&gt; ，否则返回 &lt;code&gt;0&lt;/code&gt; ，如果指定的 &lt;code&gt;key&lt;/code&gt;  不存在，这个命令会自动创建一个空的 &lt;code&gt;HyperLogLog&lt;/code&gt;  结构（指定长度和编码的字符串）.&lt;/p&gt;
&lt;figure class=&#34;highlight r&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:&lt;span class=&#34;number&#34;&gt;6379&lt;/span&gt;&amp;gt; pfadd k96 v1 v2 v3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(integer) &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;127.0&lt;/span&gt;.0.1:&lt;span class=&#34;number&#34;&gt;6379&lt;/span&gt;&amp;gt; pfadd k96 v4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(integer) &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;127.0&lt;/span&gt;.0.1:&lt;span class=&#34;number&#34;&gt;6379&lt;/span&gt;&amp;gt; pfadd k96 v1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(integer) &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;127.0&lt;/span&gt;.0.1:&lt;span class=&#34;number&#34;&gt;6379&lt;/span&gt;&amp;gt; pfadd k96 v2 v3 v4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(integer) &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;127.0&lt;/span&gt;.0.1:&lt;span class=&#34;number&#34;&gt;6379&lt;/span&gt;&amp;gt; &lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;PFCOUNT key [key ...]&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;当参数为一个 &lt;code&gt;key&lt;/code&gt;  时，返回存储在 &lt;code&gt;HyperLogLog&lt;/code&gt;  结构体的该变量的近似基数，如果该变量不存在，则返回 &lt;code&gt;0&lt;/code&gt; .&lt;/p&gt;
&lt;p&gt;当参数为多个 &lt;code&gt;key&lt;/code&gt;  时，返回这些 &lt;code&gt;HyperLogLog&lt;/code&gt;  并集的近似基数，这个值是将所给定的所有 &lt;code&gt;key&lt;/code&gt;  的 &lt;code&gt;HyperLoglog&lt;/code&gt;  结构合并到一个临时的 &lt;code&gt;HyperLogLog&lt;/code&gt;  结构中计算而得到的.&lt;/p&gt;
&lt;figure class=&#34;highlight r&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:&lt;span class=&#34;number&#34;&gt;6379&lt;/span&gt;&amp;gt; pfadd k97 v1 v2 v3 v4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(integer) &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;127.0&lt;/span&gt;.0.1:&lt;span class=&#34;number&#34;&gt;6379&lt;/span&gt;&amp;gt; PFCOUNT k97&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(integer) &lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 测试多个key&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;127.0&lt;/span&gt;.0.1:&lt;span class=&#34;number&#34;&gt;6379&lt;/span&gt;&amp;gt; PFCOUNT k97 k96&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(integer) &lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;127.0&lt;/span&gt;.0.1:&lt;span class=&#34;number&#34;&gt;6379&lt;/span&gt;&amp;gt; PFADD k97 v5 v6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(integer) &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;127.0&lt;/span&gt;.0.1:&lt;span class=&#34;number&#34;&gt;6379&lt;/span&gt;&amp;gt; PFCOUNT k97 k96&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(integer) &lt;span class=&#34;number&#34;&gt;6&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;刚才说了， &lt;code&gt;HyperLogLog&lt;/code&gt;  只是存储总数的一种结构，而且其值也会和实际值有偏差。我们一起来验证一下这个结果&lt;/p&gt;
&lt;p&gt;我们往 &lt;code&gt;Redis&lt;/code&gt;  中插入 &lt;code&gt;10000&lt;/code&gt;  条数据，查看其  &lt;code&gt;pfcount&lt;/code&gt;  的值是多少。&lt;/p&gt;
&lt;p&gt;使用下面这个脚本去插入 ( &lt;code&gt;java&lt;/code&gt;  实现)。公众号回复  &lt;code&gt;RedisClient&lt;/code&gt;  可以获取完整源码。&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;String host = &lt;span class=&#34;string&#34;&gt;&amp;quot;10.1.14.159&amp;quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; port = &lt;span class=&#34;number&#34;&gt;6379&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;SocketRedisClient client = &lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; SocketRedisClient(host, port);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;String authCmd = client.exec(&lt;span class=&#34;string&#34;&gt;&amp;quot;auth moyang&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;System.out.println(&lt;span class=&#34;string&#34;&gt;&amp;quot;登录验证结果:&amp;quot;&lt;/span&gt; + authCmd);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;System.out.println(&lt;span class=&#34;string&#34;&gt;&amp;quot;删除已经存在的key :&amp;quot;&lt;/span&gt; + client.exec(&lt;span class=&#34;string&#34;&gt;&amp;quot;del k97&amp;quot;&lt;/span&gt;));&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; i = &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;; i &amp;lt;= &lt;span class=&#34;number&#34;&gt;10000&lt;/span&gt;; i++) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    String cmd = &lt;span class=&#34;string&#34;&gt;&amp;quot;pfadd k97 &amp;quot;&lt;/span&gt; + i;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    client.exec(cmd);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    String cmd2 = &lt;span class=&#34;string&#34;&gt;&amp;quot;pfcount k97 &amp;quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    String exec = client.exec(cmd2);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    System.out.println(&lt;span class=&#34;string&#34;&gt;&amp;quot;执行命令:&amp;quot;&lt;/span&gt; + cmd + &lt;span class=&#34;string&#34;&gt;&amp;quot; 返回结果:&amp;quot;&lt;/span&gt; + exec); &lt;span class=&#34;comment&#34;&gt;// 返回的结果是未解析Redis协议的。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;client.releases();&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;插入完成之后，如下图，我们可以看到  &lt;code&gt;pfCount&lt;/code&gt;  的结果是  &lt;code&gt;9988&lt;/code&gt; .&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/images/Redis%E7%B3%BB%E5%88%97/images/pf-%E6%89%A7%E8%A1%8C10000%E6%AC%A1%E6%8F%92%E5%85%A5%E7%BB%93%E6%9E%9C.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;如果不相信我们可以 在 &lt;code&gt;shell&lt;/code&gt;  里看看。&lt;/p&gt;
&lt;figure class=&#34;highlight r&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:&lt;span class=&#34;number&#34;&gt;6379&lt;/span&gt;&amp;gt; pfcount k97&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(integer) &lt;span class=&#34;number&#34;&gt;9988&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;我这次测试正好相等，其实由于脚本的问题呢，从程序里获取的值和 &lt;code&gt;shell&lt;/code&gt;  里获取的值，可能不一样，这种怎么解决呢？ 使用脚本单独再执行一次，就会一样了。具体原因，不赘述了。&lt;/p&gt;
&lt;p&gt;好了，我们插入了 &lt;code&gt;10000&lt;/code&gt;  次，但是得出的值却是  &lt;code&gt;9988&lt;/code&gt; ， 这也就验证了其不精确性。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;PFMERGE destkey sourcekey [sourcekey ...]&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;将多个  &lt;code&gt;HyperLogLog&lt;/code&gt;  合并（ &lt;code&gt;merge&lt;/code&gt; ）为一个  &lt;code&gt;HyperLogLog&lt;/code&gt;  ， 合并后的  &lt;code&gt;HyperLogLog&lt;/code&gt;  的基数接近于所有输入  &lt;code&gt;HyperLogLog&lt;/code&gt;  的可见集合（ &lt;code&gt;observed set&lt;/code&gt; ）的并集.&lt;/p&gt;
&lt;p&gt;合并得出的  &lt;code&gt;HyperLogLog&lt;/code&gt;  会被储存在目标变量（第一个参数）里面， 如果该键并不存在， 那么命令在执行之前， 会先为该键创建一个空的  &lt;code&gt;HyperLogLog&lt;/code&gt; .&lt;/p&gt;
&lt;figure class=&#34;highlight r&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:&lt;span class=&#34;number&#34;&gt;6379&lt;/span&gt;&amp;gt; pfadd k98 v1 v2 v3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(integer) &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;127.0&lt;/span&gt;.0.1:&lt;span class=&#34;number&#34;&gt;6379&lt;/span&gt;&amp;gt; pfadd k98_1 v2 v3 v4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(integer) &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;127.0&lt;/span&gt;.0.1:&lt;span class=&#34;number&#34;&gt;6379&lt;/span&gt;&amp;gt; pfadd k98_2 v3 v4 v5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(integer) &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;127.0&lt;/span&gt;.0.1:&lt;span class=&#34;number&#34;&gt;6379&lt;/span&gt;&amp;gt; pfmerge k98 k98_1 k98_2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;OK&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;127.0&lt;/span&gt;.0.1:&lt;span class=&#34;number&#34;&gt;6379&lt;/span&gt;&amp;gt; pfcount k98&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(integer) &lt;span class=&#34;number&#34;&gt;5&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;127.0&lt;/span&gt;.0.1:&lt;span class=&#34;number&#34;&gt;6379&lt;/span&gt;&amp;gt; pfcount k98_1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(integer) &lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;127.0&lt;/span&gt;.0.1:&lt;span class=&#34;number&#34;&gt;6379&lt;/span&gt;&amp;gt; pfcount k98_2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(integer) &lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;以上就是  &lt;code&gt;HyperLogLog&lt;/code&gt;  的命令，老规矩我们下一步来看看  &lt;code&gt;HyperLogLog&lt;/code&gt;  在 Redis 中是怎么实现的。&lt;/p&gt;
&lt;h3 id=&#34;hyperloglog的结构&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#hyperloglog的结构&#34;&gt;#&lt;/a&gt;  &lt;code&gt;HyperLogLog&lt;/code&gt;  的结构&lt;/h3&gt;
&lt;p&gt;在  &lt;code&gt;Clion&lt;/code&gt;  中直接查找 &lt;code&gt;hyperloglog&lt;/code&gt;  ，就是  &lt;code&gt;hyperloglog&lt;/code&gt;  的实现了。&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/images/Redis%E7%B3%BB%E5%88%97/images/hyperloglog-%E6%9F%A5%E6%89%BE%E7%9B%AE%E5%BD%95.png&#34; alt=&#34;hyperloglog-查找目录.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;我们可以看到有一个  &lt;code&gt;struct&lt;/code&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;class&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;struct&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;hllhdr&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;char&lt;/span&gt; magic[&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;];      &lt;span class=&#34;comment&#34;&gt;/* 魔数: &amp;quot;HYLL&amp;quot; */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;uint8_t&lt;/span&gt; encoding;   &lt;span class=&#34;comment&#34;&gt;/* HLL_DENSE或HLL_SPARSE */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;uint8_t&lt;/span&gt; notused[&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;]; &lt;span class=&#34;comment&#34;&gt;/* 保留以供将来使用，必须为零。 */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;uint8_t&lt;/span&gt; card[&lt;span class=&#34;number&#34;&gt;8&lt;/span&gt;];    &lt;span class=&#34;comment&#34;&gt;/* 缓存基数，小端。 */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;uint8_t&lt;/span&gt; registers[]; &lt;span class=&#34;comment&#34;&gt;/* 数据字节。 */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;这个就是  &lt;code&gt;HyperLogLog&lt;/code&gt;  的存储结构了。这里大家大体有个印象就可以了。HyperLogLog 是一种基数估算算法的实现。后面我们会介绍这种&lt;b&gt;基数估算法&lt;/b&gt;。&lt;/p&gt;
&lt;h2 id=&#34;预告&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#预告&#34;&gt;#&lt;/a&gt; 预告&lt;/h2&gt;
&lt;p&gt;最后一个 数据类型  &lt;code&gt;geohash&lt;/code&gt;  (多维空间点索引算法)！！！&lt;/p&gt;
&lt;h2 id=&#34;最后&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#最后&#34;&gt;#&lt;/a&gt; 最后&lt;/h2&gt;
&lt;p&gt;希望与你一起遇见更好的自己&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/images/Redis%E7%B3%BB%E5%88%97/images/qrcode.jpg&#34; alt=&#34;微信二维码&#34;&gt;&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://fangjiaxiaobai.github.io/2021/08/01/Redis%E7%B3%BB%E5%88%97/B-6-Redis%E7%9A%84%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B%E4%B9%8B%E4%BD%8D%E5%9B%BEbitmap/</guid>
            <title>Redis数据结构之位图 BitMap</title>
            <link>https://fangjiaxiaobai.github.io/2021/08/01/Redis%E7%B3%BB%E5%88%97/B-6-Redis%E7%9A%84%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B%E4%B9%8B%E4%BD%8D%E5%9B%BEbitmap/</link>
            <category>Redis</category>
            <pubDate>Sun, 01 Aug 2021 18:48:55 +0800</pubDate>
            <description><![CDATA[ &lt;h2 id=&#34;书接上回&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#书接上回&#34;&gt;#&lt;/a&gt; 书接上回&lt;/h2&gt;
&lt;p&gt;上一篇我们学习的  &lt;code&gt;zset&lt;/code&gt;  集合这一数据类型。其内部是由 &lt;code&gt;skiplist&lt;/code&gt;  和 &lt;code&gt;hashtable&lt;/code&gt;  这种两种数据结构编码的。&lt;br&gt;
如果不记得了，那就来坐穿梭机回去看看吧。 &lt;a href=&#34;/2021/08/01/Redis%E7%B3%BB%E5%88%97/B-5-Redis%E7%9A%84%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B%E4%B9%8B%E6%9C%89%E5%BA%8F%E9%9B%86%E5%90%88zset/&#34;&gt;开始穿梭&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;接下来，我们继续学习一个新的 &lt;code&gt;&amp;quot;数据类型&amp;quot;&lt;/code&gt; , 位图， &lt;code&gt;bitmap&lt;/code&gt; .（注意啦，数据类型，我加了引号！！）&lt;/p&gt;
&lt;h2 id=&#34;bitmap简介&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#bitmap简介&#34;&gt;#&lt;/a&gt;  &lt;code&gt;bitmap&lt;/code&gt;  简介&lt;/h2&gt;
&lt;p&gt;那么什么是 &lt;code&gt;bitmap&lt;/code&gt; , 我们先从名字上来说， &lt;code&gt;bit&lt;/code&gt; ，计算机中最小的单位，一个 &lt;code&gt;bit&lt;/code&gt;  表示一个二进制位。 &lt;code&gt;map&lt;/code&gt; ，映射，图。所以， &lt;code&gt;bitmap&lt;/code&gt;  就是表示对二进制位的映射。那具体是怎么回事呢？ &lt;code&gt;bitmap&lt;/code&gt;  其实就是以字符串的形式对二进制位进行操作，从而达到节约空间占用的作用。&lt;/p&gt;
&lt;p&gt;而且， &lt;code&gt;bitmap&lt;/code&gt; ，中文的意思就是位图。 不知道你用没用过 &lt;code&gt;C&lt;/code&gt;  语言的位图结构，他们的目的都是一样。&lt;/p&gt;
&lt;p&gt;可能你还是不理解，别急，往下看。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;bitmap&lt;/code&gt;  怎么用呢？&lt;/p&gt;
&lt;p&gt;恰巧，前几天小编在面试中被问到过这个问题。&lt;/p&gt;
&lt;p&gt;面试官说： &lt;b&gt;有个业务场景：我们这边有 10000 家线下门店，我们要对部分门店进行广告投放，怎么记录某条广告投放给哪家门店里了呢？我们的门店 &lt;code&gt;id&lt;/code&gt;  是递增的。&lt;/b&gt;&lt;/p&gt;
&lt;p&gt;首先我们可以有三张表，广告表 ( &lt;code&gt;G&lt;/code&gt;  表)，门店表（ &lt;code&gt;M&lt;/code&gt;  表），广告门店关联表（ &lt;code&gt;GM&lt;/code&gt;  表）。&lt;/p&gt;
&lt;p&gt;如果我们投放广告的时候，把每条广告和每个门店的关联作为一条数据插入到 &lt;code&gt;GM&lt;/code&gt;  表中，那么这个表中的数据量增长还是非常快的。如果有 &lt;code&gt;10&lt;/code&gt;  万家门店呢？广告的投放和撤销比较频繁。也就是说数据的修改也是比较频繁的。那怎么搞呢？&lt;/p&gt;
&lt;p&gt;门店的 &lt;code&gt;id&lt;/code&gt;  是递增的，那么我们可以这么搞，用 &lt;code&gt;10001&lt;/code&gt;  个二进制位表示 &lt;code&gt;10000&lt;/code&gt;  家门店的 id，如果该门店投放了该广告，就把该位置上的数字置为 &lt;code&gt;1&lt;/code&gt; 。并且每四个字节转换成一个整数型数，将（ &lt;code&gt;10000/8/4&lt;/code&gt; ） &lt;code&gt;313&lt;/code&gt;  个整形数按照一定的规则转换成字符串存储到 &lt;code&gt;GM&lt;/code&gt;  表中。表示一条广告已经投放的门店。这样我们就使用了 &lt;code&gt;0.1kb&lt;/code&gt;  左右的空间记录了某条广告投放门店的情况。&lt;/p&gt;
&lt;p&gt;其实呢，这就是使用 &lt;code&gt;bitmap&lt;/code&gt;  进行存储的。&lt;/p&gt;
&lt;p&gt;接下来，我们看下如何使用 位图。&lt;/p&gt;
&lt;h2 id=&#34;bitmap的基本命令&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#bitmap的基本命令&#34;&gt;#&lt;/a&gt;  &lt;code&gt;bitmap&lt;/code&gt;  的基本命令&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;SETBIT&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;setbit key offset value&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;对  &lt;code&gt;key&lt;/code&gt;  所储存的字符串值，设置或清除指定偏移量上的位 ( &lt;code&gt;bit&lt;/code&gt; )。&lt;br&gt;
位的设置或清除取决于  &lt;code&gt;value&lt;/code&gt;  参数，可以是  &lt;code&gt;0&lt;/code&gt;  也可以是  &lt;code&gt;1&lt;/code&gt;  。&lt;br&gt;
当  &lt;code&gt;key&lt;/code&gt;  不存在时，自动生成一个新的字符串值。&lt;br&gt;
字符串会进行伸展 ( &lt;code&gt;grown&lt;/code&gt; ) 以确保它可以将  &lt;code&gt;value&lt;/code&gt;  保存在指定的偏移量上。当字符串值进行伸展时，空白位置以  &lt;code&gt;0&lt;/code&gt;  填充。&lt;br&gt;
 &lt;code&gt;offset&lt;/code&gt;  参数必须大于或等于  &lt;code&gt;0&lt;/code&gt;  ，小于  &lt;code&gt;2^32&lt;/code&gt;  ( &lt;code&gt;bit&lt;/code&gt;  映射被限制在  &lt;code&gt;512 MB&lt;/code&gt;  之内)。&lt;/p&gt;
&lt;p&gt;假设我们使用 位图来存储 &lt;code&gt;Redis&lt;/code&gt;  这个字符串。&lt;/p&gt;
&lt;p&gt;在演示这个命令之前，我们首先来看下 如何使用二进制来表示字符串。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Redis&lt;/code&gt;  中的  &lt;code&gt;R&lt;/code&gt;  对应  &lt;code&gt;ASCII&lt;/code&gt;  码是:  &lt;code&gt;82&lt;/code&gt; . 转化成二进制就是:  &lt;code&gt;0b01010010&lt;/code&gt; , 其他字符依次如下所示：&lt;br&gt;
 &lt;code&gt;Redis&lt;/code&gt;  中的  &lt;code&gt;e&lt;/code&gt;  对应  &lt;code&gt;ASCII&lt;/code&gt;  码是:  &lt;code&gt;101&lt;/code&gt; . 转化成二进制就是:  &lt;code&gt;0b01100101&lt;/code&gt; ，&lt;br&gt;
 &lt;code&gt;Redis&lt;/code&gt;  中的  &lt;code&gt;d&lt;/code&gt;  对应  &lt;code&gt;ASCII&lt;/code&gt;  码是:  &lt;code&gt;100&lt;/code&gt; . 转化成二进制就是:  &lt;code&gt;0b01100100&lt;/code&gt; ，&lt;br&gt;
 &lt;code&gt;Redis&lt;/code&gt;  中的  &lt;code&gt;i&lt;/code&gt;  对应  &lt;code&gt;ASCII&lt;/code&gt;  码是:  &lt;code&gt;105&lt;/code&gt; . 转化成二进制就是:  &lt;code&gt;0b01101001&lt;/code&gt; ，&lt;br&gt;
 &lt;code&gt;Redis&lt;/code&gt;  中的  &lt;code&gt;s&lt;/code&gt;  对应  &lt;code&gt;ASCII&lt;/code&gt;  码是:  &lt;code&gt;115&lt;/code&gt; . 转化成二进制就是:  &lt;code&gt;0b01110011&lt;/code&gt; 。&lt;/p&gt;
&lt;p&gt;看到这里，我要告诉你一个知识点：对于位图的操作，我们可以实现 &lt;b&gt;  &lt;code&gt;零存整取&lt;/code&gt;  &lt;/b&gt;。 什么意思呢？&lt;/p&gt;
&lt;p&gt;我来给你演示一下&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/images/Redis%E7%B3%BB%E5%88%97/images/bitmap-R%E7%9A%84%E4%BA%8C%E8%BF%9B%E5%88%B6.png&#34; alt=&#34;R对应的位图&#34;&gt;&lt;/p&gt;
&lt;p&gt;如上图， &lt;code&gt;R&lt;/code&gt;  这个字符，对应的每个二进制上的数。由于位图会自动填充空位为 0，所以我们只需要设置二进制位上为 &lt;code&gt;1&lt;/code&gt;  的就可以了。具体命令如下&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; setbit k87 1 1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(integer) 0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; setbit k87 3 1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(integer) 0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; setbit k87 6 1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(integer) 0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; get k87&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;quot;R&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;解释一下，我们根据  &lt;code&gt;R&lt;/code&gt;  每个二进制位上数值设置到 k87 中，然后通过 &lt;code&gt;get k87&lt;/code&gt;  这个命令，返回了  &lt;code&gt;R&lt;/code&gt; 。 这就是所谓的  &lt;code&gt;零存整取&lt;/code&gt; 。如果我继续设置剩下的  &lt;code&gt;edis&lt;/code&gt;  字符串呢？&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/images/Redis%E7%B3%BB%E5%88%97/images/bitmap-Redis%E7%9A%84%E4%BA%8C%E8%BF%9B%E5%88%B6.png&#34; alt=&#34;Redis完整的位图&#34;&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; setbit k87 9 1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(integer) 0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; setbit k87 10 1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(integer) 0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; setbit k87 13 1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(integer) 0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; setbit k87 15 1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(integer) 0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; setbit k87 17 1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(integer) 0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; setbit k87 18 1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(integer) 0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; setbit k87 21 1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(integer) 0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; setbit k87 25 1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(integer) 0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; setbit k87 26 1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(integer) 0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; setbit k87 28 1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(integer) 0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; setbit k87 31 1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(integer) 0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; setbit k87 33 1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(integer) 0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; setbit k87 34 1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(integer) 0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; setbit k87 35 1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(integer) 0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; setbit k87 38 1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(integer) 0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; setbit k87 39 1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(integer) 0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; get k87&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;quot;Redis&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;这里你就可能说，有谁会这样使用，自己计算出每个位，然后去获取完整的？ 是啊，不过这里只是一个例子，来说明 位图  &lt;code&gt;零存整取&lt;/code&gt;  功能，接下来，我们接着看 位图  &lt;code&gt;整存零取&lt;/code&gt; 的功能。&lt;/p&gt;
&lt;p&gt;这里呢，就要介绍  &lt;code&gt;gitbit&lt;/code&gt;  这个命令。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;GETBIT&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;GETBIT key offset&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;对  &lt;code&gt;key&lt;/code&gt;  所储存的字符串值，获取指定 &lt;code&gt;offset&lt;/code&gt;  上的位 ( &lt;code&gt;bit&lt;/code&gt; ).&lt;/p&gt;
&lt;p&gt;如果 &lt;code&gt;key&lt;/code&gt;  不存在，获取 &lt;code&gt;offset&lt;/code&gt;  超出范围，返回 &lt;code&gt;0&lt;/code&gt; .&lt;/p&gt;
&lt;p&gt;首先我们设置 一个  &lt;code&gt;string&lt;/code&gt;  类型的字符串到 &lt;code&gt;Redis&lt;/code&gt;  中，然后依次获取每一位上的值。&lt;/p&gt;
&lt;p&gt;可以和下图进行比对。&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/images/Redis%E7%B3%BB%E5%88%97/images/bitmap-Redis%E7%9A%84%E4%BA%8C%E8%BF%9B%E5%88%B6.png&#34; alt=&#34;Redis完整的位图&#34;&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; set k88 Redis&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;OK&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; getbit k88 0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(integer) 0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; getbit k88 1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(integer) 1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; getbit k88 2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(integer) 0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; getbit k88 3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(integer) 1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; getbit k88 4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(integer) 0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; getbit k88 5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(integer) 0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; getbit k88 6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(integer) 1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; getbit k88 7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(integer) 0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; getbit k88 8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(integer) 0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; getbit k88 9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(integer) 1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; getbit k88 10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(integer) 1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;#&lt;/span&gt;&lt;span class=&#34;bash&#34;&gt; ....&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; getbit k88 38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(integer) 1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; getbit k88 39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(integer) 1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;#&lt;/span&gt;&lt;span class=&#34;bash&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 演示超出范围&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; getbit k88 40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(integer) 0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; getbit k88 41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(integer) 0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; getbit k88 42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(integer) 0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; &lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;这个就是 位图提供的   &lt;code&gt;整存零取&lt;/code&gt; 的功能了。综合上面的两项功能，我们轻而易举的就可以得出 Redis 的位图是可以  &lt;code&gt;零存零取&lt;/code&gt; 的。就是使用  &lt;code&gt;setbit&lt;/code&gt;  和  &lt;code&gt;gitbit&lt;/code&gt;  命令了。这里就不演示了。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;BITCOUNT&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;bitCount key [start] [end]&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;计算指定 &lt;code&gt;key&lt;/code&gt;  的对应字符串，被设置为 &lt;code&gt;1&lt;/code&gt;  的比特位的数量。&lt;/p&gt;
&lt;p&gt;还是以上面的 &lt;code&gt;Redis&lt;/code&gt;  为例，一共是 &lt;code&gt;19&lt;/code&gt;  位 &lt;code&gt;1&lt;/code&gt; . 我们来演示一下&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;#&lt;/span&gt;&lt;span class=&#34;bash&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 不存在的时候，返回0&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; bitcount k89&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(integer) 0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; set k89 Redis&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;OK&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; bitcount k89 &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(integer) 19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;#&lt;/span&gt;&lt;span class=&#34;bash&#34;&gt; 注意这里start end 都是表示字节。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; bitcount k89 0 1 &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(integer) 7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;这个适合什么场景下使用呢？ 比如，我们要计算某个用户登录天数。第一天登录的时候，我们 可以设置  &lt;code&gt;setbit user1 1 1&lt;/code&gt; , 第二天设置  &lt;code&gt;setbit use1 2 1&lt;/code&gt; , 那么使用  &lt;code&gt;bitcount user1&lt;/code&gt;  就能知道该用户总共的登录天数了，也能够计算出该用户在哪天登录了。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;BITPOS&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;bitpos key  bit [start] [end]&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;返回 key 的指定区段内容，第一个 bit 的位置。&lt;/p&gt;
&lt;p&gt;比如我们以  &lt;code&gt;Redis&lt;/code&gt;  为例，如下图&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;./images/bitmap-Redis%E7%9A%84%E4%BA%8C%E8%BF%9B%E5%88%B6.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; set key90 Redis&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;OK&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; bitops key90 1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(error) ERR unknown command `bitops`, with args beginning with: `key90`, `1`, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; bitpos key90 1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(integer) 1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; bitpos key90 0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(integer) 0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;#&lt;/span&gt;&lt;span class=&#34;bash&#34;&gt; 这里的start和end也指的是字节&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; bitpos key90 0 2 10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(integer) 16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; bitpos key90 1 2 10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(integer) 17&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;BITOP&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;BITOP operation destkey key [key …]&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;对一个或多个保存二进制位的字符串 key 进行位元操作，并将结果保存到 destkey 上。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;operation&lt;/code&gt;  可以是  &lt;code&gt;AND&lt;/code&gt;  、  &lt;code&gt;OR&lt;/code&gt;  、  &lt;code&gt;NOT&lt;/code&gt;  、  &lt;code&gt;XOR&lt;/code&gt;  这四种操作中的任意一种：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;BITOP AND destkey key [key ...]&lt;/code&gt;  ，对一个或多个  &lt;code&gt;key&lt;/code&gt;  求逻辑并，并将结果保存到  &lt;code&gt;destkey&lt;/code&gt;  。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;BITOP OR destkey key [key ...]&lt;/code&gt;  ，对一个或多个  &lt;code&gt;key&lt;/code&gt;  求逻辑或，并将结果保存到  &lt;code&gt;destkey&lt;/code&gt;  。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;BITOP XOR destkey key [key ...]&lt;/code&gt;  ，对一个或多个  &lt;code&gt;key&lt;/code&gt;  求逻辑异或，并将结果保存到  &lt;code&gt;destkey&lt;/code&gt;  。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;BITOP NOT destkey key&lt;/code&gt;  ，对给定  &lt;code&gt;key&lt;/code&gt;  求逻辑非，并将结果保存到  &lt;code&gt;destkey&lt;/code&gt;  。&lt;/p&gt;
&lt;p&gt;除了  &lt;code&gt;NOT&lt;/code&gt;  操作之外，其他操作都可以接受一个或多个  &lt;code&gt;key&lt;/code&gt;  作为输入。&lt;/p&gt;
&lt;p&gt;这里我们做一个简单例子。&lt;/p&gt;
&lt;figure class=&#34;highlight r&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;47&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:&lt;span class=&#34;number&#34;&gt;6379&lt;/span&gt;&amp;gt; setbit k91_1 &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(integer) &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;127.0&lt;/span&gt;.0.1:&lt;span class=&#34;number&#34;&gt;6379&lt;/span&gt;&amp;gt; setbit k91_1 &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(integer) &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;127.0&lt;/span&gt;.0.1:&lt;span class=&#34;number&#34;&gt;6379&lt;/span&gt;&amp;gt; setbit k91_1 &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(integer) &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;127.0&lt;/span&gt;.0.1:&lt;span class=&#34;number&#34;&gt;6379&lt;/span&gt;&amp;gt; setbit k91_1 &lt;span class=&#34;number&#34;&gt;3&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(integer) &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;127.0&lt;/span&gt;.0.1:&lt;span class=&#34;number&#34;&gt;6379&lt;/span&gt;&amp;gt; get k91_1 &lt;span class=&#34;comment&#34;&gt;# 1111 (低位-&amp;gt;高位)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;&amp;quot;\xf0&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;127.0&lt;/span&gt;.0.1:&lt;span class=&#34;number&#34;&gt;6379&lt;/span&gt;&amp;gt; setbit k91_2 &lt;span class=&#34;number&#34;&gt;3&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(integer) &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;127.0&lt;/span&gt;.0.1:&lt;span class=&#34;number&#34;&gt;6379&lt;/span&gt;&amp;gt; setbit k91_2 &lt;span class=&#34;number&#34;&gt;4&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(integer) &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;127.0&lt;/span&gt;.0.1:&lt;span class=&#34;number&#34;&gt;6379&lt;/span&gt;&amp;gt; setbit k91_2 &lt;span class=&#34;number&#34;&gt;5&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(integer) &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;127.0&lt;/span&gt;.0.1:&lt;span class=&#34;number&#34;&gt;6379&lt;/span&gt;&amp;gt; get k91_2 &lt;span class=&#34;comment&#34;&gt;# 000111 (低位-&amp;gt;高位)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;&amp;quot;\x1c&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;## and 操作&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;127.0&lt;/span&gt;.0.1:&lt;span class=&#34;number&#34;&gt;6379&lt;/span&gt;&amp;gt; bitop AND k91_d_1 k91_1 k91_2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(integer) &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;127.0&lt;/span&gt;.0.1:&lt;span class=&#34;number&#34;&gt;6379&lt;/span&gt;&amp;gt; get k91_d_1 &lt;span class=&#34;comment&#34;&gt;# 000100 (低位-&amp;gt;高位)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;&amp;quot;\x10&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;## OR 操作&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;127.0&lt;/span&gt;.0.1:&lt;span class=&#34;number&#34;&gt;6379&lt;/span&gt;&amp;gt; bitop OR k91_d_2 k91_1 k91_2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(integer) &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;127.0&lt;/span&gt;.0.1:&lt;span class=&#34;number&#34;&gt;6379&lt;/span&gt;&amp;gt; get k91_d_2 &lt;span class=&#34;comment&#34;&gt;# 111111 (低位-&amp;gt;高位)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;&amp;quot;\xfc&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;## XOR 亦或操作&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;127.0&lt;/span&gt;.0.1:&lt;span class=&#34;number&#34;&gt;6379&lt;/span&gt;&amp;gt; bitop XOR k91_d_3 k91_1 k92_2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(integer) &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;127.0&lt;/span&gt;.0.1:&lt;span class=&#34;number&#34;&gt;6379&lt;/span&gt;&amp;gt; get k91_d_3 &lt;span class=&#34;comment&#34;&gt;# 111011 (低位-&amp;gt;高位)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;&amp;quot;\xf0&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;## NOT 操作&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;127.0&lt;/span&gt;.0.1:&lt;span class=&#34;number&#34;&gt;6379&lt;/span&gt;&amp;gt; bitop NOT k91_d_4 k91_1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(integer) &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;127.0&lt;/span&gt;.0.1:&lt;span class=&#34;number&#34;&gt;6379&lt;/span&gt;&amp;gt; get k91_d_4 &lt;span class=&#34;comment&#34;&gt;# 00001111 (低位-&amp;gt;高位)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;&amp;quot;\x0f&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;127.0&lt;/span&gt;.0.1:&lt;span class=&#34;number&#34;&gt;6379&lt;/span&gt;&amp;gt; bitop NOT k91_d_5 k91_2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(integer) &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;127.0&lt;/span&gt;.0.1:&lt;span class=&#34;number&#34;&gt;6379&lt;/span&gt;&amp;gt; get k91_d_5 &lt;span class=&#34;comment&#34;&gt;# 111011 (低位-&amp;gt;高位)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;&amp;quot;\xe3&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;BITFIELD&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;BITFIELD key [GET type offset] [SET type offset value] [INCRBY type offset increment] [OVERFLOW WRAP|SAT|FAIL]&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;BITFIELD&lt;/code&gt;  命令可以将一个  &lt;code&gt;Redis&lt;/code&gt;  字符串看作是一个由二进制位组成的数组， 并对这个数组中储存的长度不同的整数进行访问 （被储存的整数无需进行对齐）。 换句话说， 通过这个命令， 用户可以执行诸如 “对偏移量  &lt;code&gt;1234&lt;/code&gt;  上的  &lt;code&gt;5&lt;/code&gt;  位长有符号整数进行设置”、 “获取偏移量  &lt;code&gt;4567&lt;/code&gt;  上的  &lt;code&gt;31&lt;/code&gt;  位长无符号整数” 等操作。 此外，  &lt;code&gt;BITFIELD&lt;/code&gt;  命令还可以对指定的整数执行加法操作和减法操作， 并且这些操作可以通过设置妥善地处理计算时出现的溢出情况。&lt;br&gt;
这是一个比较复杂的命令了。我们依次来看看。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;GET type offset&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;type&lt;/code&gt;  是什么呢？  &lt;code&gt;type&lt;/code&gt;  是返回的数值类型。可选值有： &lt;code&gt;i8&lt;/code&gt; （有符号 &lt;code&gt;8&lt;/code&gt;  个 &lt;code&gt;bit&lt;/code&gt;  位）, &lt;code&gt;i16&lt;/code&gt; （有符号 &lt;code&gt;16&lt;/code&gt;  个 &lt;code&gt;bi&lt;/code&gt; t 位）, &lt;code&gt;u8&lt;/code&gt; （无符号 &lt;code&gt;8&lt;/code&gt;  个 &lt;code&gt;bit&lt;/code&gt;  位）, &lt;code&gt;u16&lt;/code&gt; （无符号 &lt;code&gt;16&lt;/code&gt;  个 &lt;code&gt;bit&lt;/code&gt;  位）,…&lt;/p&gt;
&lt;p&gt;这个的命令的功能就是返回执行的二进制的范围，&lt;b&gt;offset 是指第几个二进制位&lt;/b&gt;。&lt;br&gt;
注意：&lt;br&gt;
 &lt;code&gt;BITFIELD&lt;/code&gt;  命令最大支持 &lt;code&gt;64&lt;/code&gt;  位长的有符号整数以及  &lt;code&gt;63&lt;/code&gt;  位长的无符号整数， 其中无符号整数的  &lt;code&gt;63&lt;/code&gt;  位长度限制是由于  &lt;code&gt;Redis&lt;/code&gt;  协议目前还无法返回  &lt;code&gt;64&lt;/code&gt;  位长的无符号整数而导致的。&lt;/p&gt;
&lt;p&gt;用下面这个例子来演示一下。&lt;/p&gt;
&lt;figure class=&#34;highlight r&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:&lt;span class=&#34;number&#34;&gt;6379&lt;/span&gt;&amp;gt; set k92 Redis&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;OK&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;127.0&lt;/span&gt;.0.1:&lt;span class=&#34;number&#34;&gt;6379&lt;/span&gt;&amp;gt; bitfield k92 get i8 &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;) (integer) &lt;span class=&#34;number&#34;&gt;82&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;127.0&lt;/span&gt;.0.1:&lt;span class=&#34;number&#34;&gt;6379&lt;/span&gt;&amp;gt; bitfield k92 get u8 &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;) (integer) &lt;span class=&#34;number&#34;&gt;82&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;127.0&lt;/span&gt;.0.1:&lt;span class=&#34;number&#34;&gt;6379&lt;/span&gt;&amp;gt; bitfield k92 get i16 &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;) (integer) &lt;span class=&#34;number&#34;&gt;21093&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;127.0&lt;/span&gt;.0.1:&lt;span class=&#34;number&#34;&gt;6379&lt;/span&gt;&amp;gt; bitfield k92 get u16 &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;) (integer) &lt;span class=&#34;number&#34;&gt;21093&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;结合上面的那张图，我们看下&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/images/Redis%E7%B3%BB%E5%88%97/images/bitmap-Redis%E7%9A%84%E4%BA%8C%E8%BF%9B%E5%88%B6.png&#34; alt=&#34;Redis的bitmap图&#34;&gt;&lt;/p&gt;
&lt;p&gt;我们手动的将前 &lt;code&gt;8&lt;/code&gt;  个 &lt;code&gt;bit&lt;/code&gt;  位装换成 &lt;code&gt;10&lt;/code&gt;  进制，就是 &lt;code&gt;82&lt;/code&gt; 。高位为 &lt;code&gt;0&lt;/code&gt; ，所以此时， &lt;code&gt;u8&lt;/code&gt;  和 &lt;code&gt;i8&lt;/code&gt;  的值是一样的。同样的  &lt;code&gt;u16&lt;/code&gt; , &lt;code&gt;i16&lt;/code&gt; , &lt;code&gt;u24&lt;/code&gt; , &lt;code&gt;u48&lt;/code&gt; , 大家可以自行验证一下。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;SET type offset value&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;这个命令是和 &lt;code&gt;GET&lt;/code&gt;  命令相反的一个命令。&lt;/p&gt;
&lt;p&gt;直接用一个例子来演示一下。&lt;/p&gt;
&lt;figure class=&#34;highlight r&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:&lt;span class=&#34;number&#34;&gt;6379&lt;/span&gt;&amp;gt; bitfield k93 SET u8 &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;82&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;) (integer) &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;127.0&lt;/span&gt;.0.1:&lt;span class=&#34;number&#34;&gt;6379&lt;/span&gt;&amp;gt; get k93&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;&amp;quot;R&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;127.0&lt;/span&gt;.0.1:&lt;span class=&#34;number&#34;&gt;6379&lt;/span&gt;&amp;gt; bitfield k93 SET u8 &lt;span class=&#34;number&#34;&gt;8&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;101&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;) (integer) &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;127.0&lt;/span&gt;.0.1:&lt;span class=&#34;number&#34;&gt;6379&lt;/span&gt;&amp;gt; get k93&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;&amp;quot;Re&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;127.0&lt;/span&gt;.0.1:&lt;span class=&#34;number&#34;&gt;6379&lt;/span&gt;&amp;gt; bitfield k93 SET u8 &lt;span class=&#34;number&#34;&gt;16&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;100&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;) (integer) &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;127.0&lt;/span&gt;.0.1:&lt;span class=&#34;number&#34;&gt;6379&lt;/span&gt;&amp;gt; get k93&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;&amp;quot;Red&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# ... &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 剩下的i和s，大家自己试一下吧&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;INCRBY type offset increment&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;从制定的偏移位开始，增加 &lt;code&gt;increment&lt;/code&gt; 。&lt;/p&gt;
&lt;p&gt;什么意思呢？&lt;/p&gt;
&lt;p&gt;来演示一下:&lt;/p&gt;
&lt;p&gt;字符 &lt;code&gt;A&lt;/code&gt;  的 &lt;code&gt;ASCII&lt;/code&gt;  码是 &lt;code&gt;65&lt;/code&gt; ， &lt;code&gt;R&lt;/code&gt;  是 &lt;code&gt;82&lt;/code&gt; ，如果从 &lt;code&gt;A&lt;/code&gt;  变成 &lt;code&gt;R&lt;/code&gt; ，需要增加 &lt;code&gt;17&lt;/code&gt; 。&lt;/p&gt;
&lt;figure class=&#34;highlight r&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:&lt;span class=&#34;number&#34;&gt;6379&lt;/span&gt;&amp;gt; set k94 A&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;OK&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;127.0&lt;/span&gt;.0.1:&lt;span class=&#34;number&#34;&gt;6379&lt;/span&gt;&amp;gt; bitfield k94 INCRBY u8 &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;17&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;) (integer) &lt;span class=&#34;number&#34;&gt;82&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;127.0&lt;/span&gt;.0.1:&lt;span class=&#34;number&#34;&gt;6379&lt;/span&gt;&amp;gt; get k94&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;&amp;quot;R&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;127.0&lt;/span&gt;.0.1:&lt;span class=&#34;number&#34;&gt;6379&lt;/span&gt;&amp;gt; bitfield k94 INCRBY u8 &lt;span class=&#34;number&#34;&gt;8&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;101&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;) (integer) &lt;span class=&#34;number&#34;&gt;101&lt;/span&gt;get&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;127.0&lt;/span&gt;.0.1:&lt;span class=&#34;number&#34;&gt;6379&lt;/span&gt;&amp;gt; get k94&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;&amp;quot;Re&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;OVERFLOW WRAP|SAT|FAIL&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;这是 &lt;code&gt;bitmap&lt;/code&gt;  对  &lt;code&gt;INCRBY&lt;/code&gt;  命令执行时，发生异常行为的控制。&lt;/p&gt;
&lt;p&gt;用户可以通过  &lt;code&gt;OVERFLOW&lt;/code&gt;  命令以及以下展示的三个参数， 指定  &lt;code&gt;BITFIELD&lt;/code&gt;  命令在执行自增或者自减操作时， 碰上向上溢出（ &lt;code&gt;overflow&lt;/code&gt; ）或者向下溢出（ &lt;code&gt;underflow&lt;/code&gt; ）情况时的行为：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;WRAP&lt;/code&gt;  ： 使用回绕（ &lt;code&gt;wrap around&lt;/code&gt; ）方法处理有符号整数和无符号整数的溢出情况。 对于无符号整数来说， 回绕就像使用数值本身与能够被储存的最大无符号整数执行取模计算， 这也是  &lt;code&gt;C&lt;/code&gt;  语言的标准行为。 对于有符号整数来说， 上溢将导致数字重新从最小的负数开始计算， 而下溢将导致数字重新从最大的正数开始计算。 比如说， 如果我们对一个值为  &lt;code&gt;127&lt;/code&gt;  的  &lt;code&gt;i8&lt;/code&gt;  整数执行加一操作， 那么将得到结果  &lt;code&gt;-128&lt;/code&gt;  。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;SAT&lt;/code&gt;  ： 使用饱和计算（ &lt;code&gt;saturation arithmetic&lt;/code&gt; ）方法处理溢出， 也即是说， 下溢计算的结果为最小的整数值， 而上溢计算的结果为最大的整数值。 举个例子， 如果我们对一个值为  &lt;code&gt;120&lt;/code&gt;  的  &lt;code&gt;i8&lt;/code&gt;  整数执行加  &lt;code&gt;10&lt;/code&gt;  计算， 那么命令的结果将为  &lt;code&gt;i8&lt;/code&gt;  类型所能储存的最大整数值  &lt;code&gt;127&lt;/code&gt;  。 与此相反， 如果一个针对  &lt;code&gt;i8&lt;/code&gt;  值的计算造成了下溢， 那么这个 i8 值将被设置为  &lt;code&gt;-127&lt;/code&gt;  。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;FAIL&lt;/code&gt;  ： 在这一模式下， 命令将拒绝执行那些会导致上溢或者下溢情况出现的计算， 并向用户返回空值表示计算未被执行。&lt;/p&gt;
&lt;p&gt;我们演示一下这几种情况&lt;/p&gt;
&lt;figure class=&#34;highlight r&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 使用 WRAP 方式，重复执行相同的命令，在一个2bit上，从 0,1,2,3 来回折返。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;127.0&lt;/span&gt;.0.1:&lt;span class=&#34;number&#34;&gt;6379&lt;/span&gt;&amp;gt; bitfield k95_1 OVERFLOW WRAP incrby u2 &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;) (integer) &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;127.0&lt;/span&gt;.0.1:&lt;span class=&#34;number&#34;&gt;6379&lt;/span&gt;&amp;gt; bitfield k95_1 OVERFLOW WRAP incrby u2 &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;) (integer) &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;127.0&lt;/span&gt;.0.1:&lt;span class=&#34;number&#34;&gt;6379&lt;/span&gt;&amp;gt; bitfield k95_1 OVERFLOW WRAP incrby u2 &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;) (integer) &lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;127.0&lt;/span&gt;.0.1:&lt;span class=&#34;number&#34;&gt;6379&lt;/span&gt;&amp;gt; bitfield k95_1 OVERFLOW WRAP incrby u2 &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;) (integer) &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;127.0&lt;/span&gt;.0.1:&lt;span class=&#34;number&#34;&gt;6379&lt;/span&gt;&amp;gt; bitfield k95_1 OVERFLOW WRAP incrby u2 &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;) (integer) &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;127.0&lt;/span&gt;.0.1:&lt;span class=&#34;number&#34;&gt;6379&lt;/span&gt;&amp;gt; bitfield k95_1 OVERFLOW WRAP incrby u2 &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;) (integer) &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;127.0&lt;/span&gt;.0.1:&lt;span class=&#34;number&#34;&gt;6379&lt;/span&gt;&amp;gt; bitfield k95_1 OVERFLOW WRAP incrby u2 &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;) (integer) &lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 使用 SAT 方式，当要发生溢出的时候，不再执行。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;127.0&lt;/span&gt;.0.1:&lt;span class=&#34;number&#34;&gt;6379&lt;/span&gt;&amp;gt; bitfield k95_2 OVERFLOW SAT incrby u2 &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;) (integer) &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;127.0&lt;/span&gt;.0.1:&lt;span class=&#34;number&#34;&gt;6379&lt;/span&gt;&amp;gt; bitfield k95_2 OVERFLOW SAT incrby u2 &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;) (integer) &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;127.0&lt;/span&gt;.0.1:&lt;span class=&#34;number&#34;&gt;6379&lt;/span&gt;&amp;gt; bitfield k95_2 OVERFLOW SAT incrby u2 &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;) (integer) &lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;127.0&lt;/span&gt;.0.1:&lt;span class=&#34;number&#34;&gt;6379&lt;/span&gt;&amp;gt; bitfield k95_2 OVERFLOW SAT incrby u2 &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;) (integer) &lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;127.0&lt;/span&gt;.0.1:&lt;span class=&#34;number&#34;&gt;6379&lt;/span&gt;&amp;gt; bitfield k95_2 OVERFLOW SAT incrby u2 &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;) (integer) &lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;127.0&lt;/span&gt;.0.1:&lt;span class=&#34;number&#34;&gt;6379&lt;/span&gt;&amp;gt; bitfield k95_2 OVERFLOW SAT incrby u2 &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;) (integer) &lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;127.0&lt;/span&gt;.0.1:&lt;span class=&#34;number&#34;&gt;6379&lt;/span&gt;&amp;gt; bitfield k95_2 OVERFLOW SAT incrby u2 &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;) (integer) &lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 使用FAIL模式，则返回(nil)，不执行且返回nil&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;127.0&lt;/span&gt;.0.1:&lt;span class=&#34;number&#34;&gt;6379&lt;/span&gt;&amp;gt; bitfield k95 OVERFLOW FAIL incrby u2 &lt;span class=&#34;number&#34;&gt;102&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;) (nil)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;code&gt;BITFIELD&lt;/code&gt;  命令的作用在于它能够将很多小的整数储存到一个长度较大的位图中， 又或者将一个非常庞大的键分割为多个较小的键来进行储存， 从而非常高效地使用内存， 使得 Redis 能够得到更多不同的应用 —— 特别是在实时分析领域：  &lt;code&gt;BITFIELD&lt;/code&gt;  能够以指定的方式对计算溢出进行控制的能力， 使得它可以被应用于这一领域。&lt;/p&gt;
&lt;p&gt;以上就是 &lt;code&gt;Redis&lt;/code&gt;  中 &lt;code&gt;bitmap&lt;/code&gt;  相关的命令了。下面我简单的来看下 bitmap 这种 &lt;code&gt;&amp;quot;数据结构&amp;quot;&lt;/code&gt;  是如何实现的。&lt;/p&gt;
&lt;p&gt;注意，这里的数据结构我还是加上了引号。具体为什么呢？&lt;/p&gt;
&lt;h3 id=&#34;bitmap-的实现&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#bitmap-的实现&#34;&gt;#&lt;/a&gt;  &lt;code&gt;bitmap&lt;/code&gt;  的实现&lt;/h3&gt;
&lt;p&gt;话不多说，我们直接去看看源码中是怎么实现的。直接搜文件  &lt;code&gt;bit&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/images/Redis%E7%B3%BB%E5%88%97/images/bitmap-%E6%9F%A5%E6%89%BE%E7%9B%AE%E5%BD%95.png&#34; alt=&#34;bitmap-查找目录&#34;&gt;&lt;/p&gt;
&lt;p&gt;我们要看 &lt;code&gt;src&lt;/code&gt;  目录下的，所以，直接看 &lt;code&gt;bitops.c&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;这里我们就是以一个命令 &lt;code&gt;setbit&lt;/code&gt;  为例简单的来看看 &lt;code&gt;bitmap&lt;/code&gt;  的运行过程。&lt;/p&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;figcaption&gt;&lt;span&gt;&amp;#123;.line-numbers&amp;#125;&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;/**&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt; * SETBIT 命令的实现&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt; * @param c 客户端对象&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt; */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;setbitCommand&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(client *c)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    robj *o; &lt;span class=&#34;comment&#34;&gt;///  setbit key offset value 中的 key对应的Redis Object。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;char&lt;/span&gt; *err = &lt;span class=&#34;string&#34;&gt;&amp;quot;bit is not an integer or out of range&amp;quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;size_t&lt;/span&gt; bitoffset; &lt;span class=&#34;comment&#34;&gt;/// 指定要修改的位的偏移量&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;ssize_t&lt;/span&gt; byte, bit;  &lt;span class=&#34;comment&#34;&gt;/// byte: 要修改的位 所占的字节。第byte个字节上。 bit，在所占字节中的第bit位上。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; byteval, bitval; &lt;span class=&#34;comment&#34;&gt;/// byteval: 要修改的位所占的字节的值。十进制数。  bitVal 是原来的指定bit上的值&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;long&lt;/span&gt; on; &lt;span class=&#34;comment&#34;&gt;/// 修改的值。就是 setbit key offset value 中的value。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;/// 解析 offset 参数，是否符合规范(是否位负数，是否超过512M)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (getBitOffsetFromArgument(c, c-&amp;gt;argv[&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;], &amp;amp;bitoffset, &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;) != C_OK)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;/// 解析 value 参数 =&amp;gt; 赋值给on变量&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (getLongFromObjectOrReply(c, c-&amp;gt;argv[&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;], &amp;amp;on, err) != C_OK)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;/// 验证on(value)只能是0或者1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (on &amp;amp; ~&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        addReplyError(c, err);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;/// 返回key对应的对象&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;/// 该对象是一个OBJ_STRING类型&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ((o = lookupStringForBitCommand(c, bitoffset)) == &lt;span class=&#34;literal&#34;&gt;NULL&lt;/span&gt;) &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;/// 获取当前位置上的值&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    byte = bitoffset &amp;gt;&amp;gt; &lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;; &lt;span class=&#34;comment&#34;&gt;/// 计算出字节，确定offset所在的字节。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    byteval = ((&lt;span class=&#34;keyword&#34;&gt;uint8_t&lt;/span&gt; *) o-&amp;gt;ptr)[byte]; &lt;span class=&#34;comment&#34;&gt;/// 将指定字节上的数转换成无符号整型数。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    bit = &lt;span class=&#34;number&#34;&gt;7&lt;/span&gt; - (bitoffset &amp;amp; &lt;span class=&#34;number&#34;&gt;0x7&lt;/span&gt;); &lt;span class=&#34;comment&#34;&gt;/// 计算要修改的位，是当前字节中的第几位。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    bitval = byteval &amp;amp; (&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt; &amp;lt;&amp;lt; bit); &lt;span class=&#34;comment&#34;&gt;/// 计算出修改后的值。(bitVal是修改后的整个字节上值)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;/* Update byte with new bit value and return original value */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;/// 更新 String 的值为 bitVal，并且返回原来的值。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    byteval &amp;amp;= ~(&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt; &amp;lt;&amp;lt; bit); &lt;span class=&#34;comment&#34;&gt;/// 将字节上原来的值，指定位上置为0.(即要赋值的位，bit为当前字节中的位。)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    byteval |= ((on &amp;amp; &lt;span class=&#34;number&#34;&gt;0x1&lt;/span&gt;) &amp;lt;&amp;lt; bit); &lt;span class=&#34;comment&#34;&gt;/// 将on的值复制给byteVal,取或运算，如果on为1，则1，若on为0，则0，上一行代码已经将指定位置置为了0.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    ((&lt;span class=&#34;keyword&#34;&gt;uint8_t&lt;/span&gt; *) o-&amp;gt;ptr)[byte] = byteval; &lt;span class=&#34;comment&#34;&gt;/// 修改对象中指定字节的值。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    signalModifiedKey(c-&amp;gt;db, c-&amp;gt;argv[&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;]); &lt;span class=&#34;comment&#34;&gt;/// 通知修改了key。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    notifyKeyspaceEvent(NOTIFY_STRING, &lt;span class=&#34;string&#34;&gt;&amp;quot;setbit&amp;quot;&lt;/span&gt;, c-&amp;gt;argv[&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;], c-&amp;gt;db-&amp;gt;id);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    server.dirty++; &lt;span class=&#34;comment&#34;&gt;// 从上次保存到数据库的更改次数&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    addReply(c, bitval ? shared.cone : shared.czero); &lt;span class=&#34;comment&#34;&gt;/// 返回原来的值&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;上面代码就是  &lt;code&gt;setBit&lt;/code&gt;  命令的实现过程了，这篇文章中我们不做研究&lt;b&gt;我们只看第 &lt;code&gt;27&lt;/code&gt;  行&lt;/b&gt;. 这一行中有一个  &lt;code&gt;lookupStringForBitCommand&lt;/code&gt;  方法。在这里我们猜测一下，&lt;b&gt; &lt;code&gt;bitmap&lt;/code&gt;  其实就是一个  &lt;code&gt;OBJ_STRING&lt;/code&gt;  类型的结构&lt;/b&gt;。&lt;/p&gt;
&lt;p&gt;到底是不是呢？&lt;/p&gt;
&lt;p&gt;看一下源码。&lt;/p&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;figcaption&gt;&lt;span&gt;&amp;#123;.line-numbers&amp;#125;&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;/**&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt; * 这是用于需要将位写入字符串对象的命令实现的辅助函数。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt; *&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt; * 否则，如果密钥持有错误的类型，则返回NULL，并且*向客户端发送错误。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt; * 该命令创建或填充字符串零，以便可以寻址“ maxbit”位。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt; * 该对象最终返回。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt; * 否则，如果密钥持有错误的类型，则返回NULL并将错误发送给客户端。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt; */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;robj *&lt;span class=&#34;title&#34;&gt;lookupStringForBitCommand&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(client *c, &lt;span class=&#34;keyword&#34;&gt;size_t&lt;/span&gt; maxbit)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;size_t&lt;/span&gt; byte = maxbit &amp;gt;&amp;gt; &lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;; &lt;span class=&#34;comment&#34;&gt;// 计算字节&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;/// 为写操作找出一个key。 【setbit key offset value】中argv[1] 即为key&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    robj *o = lookupKeyWrite(c-&amp;gt;db, c-&amp;gt;argv[&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;]);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;/// 是否找到了key&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (o == &lt;span class=&#34;literal&#34;&gt;NULL&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;comment&#34;&gt;/// 没有找到。 创建一个对象写入。对象为OBJ_STRING类型。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        o = createObject(OBJ_STRING, sdsnewlen(&lt;span class=&#34;literal&#34;&gt;NULL&lt;/span&gt;, byte + &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;));&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        dbAdd(c-&amp;gt;db, c-&amp;gt;argv[&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;], o);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125; &lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;comment&#34;&gt;/// 找到了key对象，如果不是 OBJ_STRING 类型直接返回。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (checkType(c, o, OBJ_STRING)) &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;literal&#34;&gt;NULL&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;comment&#34;&gt;/// 获取要修改的对象。上一行代码已经进行了判断，确定其为 OBJ_STRING 类型。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        o = dbUnshareStringValue(c-&amp;gt;db, c-&amp;gt;argv[&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;], o);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;comment&#34;&gt;/// 增加 STRING类型的长度&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        o-&amp;gt;ptr = sdsgrowzero(o-&amp;gt;ptr, byte + &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; o;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;在第 &lt;code&gt;17&lt;/code&gt;  行和第 &lt;code&gt;23&lt;/code&gt;  行。就很清楚了。&lt;/p&gt;
&lt;p&gt;所以，在文章一开始加上引号的 数据结构 ，谜题就解开了。&lt;/p&gt;
&lt;p&gt;&lt;b&gt; &lt;code&gt;bitmap&lt;/code&gt;  并不是一个新的数据结构，本质上是用  &lt;code&gt;STRING&lt;/code&gt;  这个数据结构来实现的。&lt;/b&gt;&lt;/p&gt;
&lt;p&gt;如果你想看 &lt;code&gt;bitmap&lt;/code&gt;  的全部源码，那么满足你！！👉👉 &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRlZS5jb20vZmFuZ2ppYXhpYW9iYWkvcmVkaXMuZ2l0&#34;&gt;点击这里&lt;/span&gt;👈👈&lt;/p&gt;
&lt;p&gt;&lt;b&gt;公众号里回复  &lt;code&gt;redis源码&lt;/code&gt; ，即可获取完整路径哦&lt;/b&gt;&lt;/p&gt;
&lt;p&gt;虽然 redis 源码不是我写的，但是我看过的都加上注释啦～&lt;/p&gt;
&lt;p&gt;除此之外，小白还自己实现了一个  &lt;code&gt;bitmap&lt;/code&gt; 。感兴趣的朋友欢迎  &lt;code&gt;star&lt;/code&gt; .👉👉 &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL2ZhbmdqaWF4aWFvYmFpL2NvZGVfcmVwby9ibG9iL21hc3Rlci8wMV9kYXRhX3N0cnVjdHVyZXMvYml0bWFwL2JpdG1hcC9CaXRNYXAuamF2YQ==&#34;&gt;bitMap 源码，点击这里&lt;/span&gt; 👈👈&lt;/p&gt;
&lt;p&gt;&lt;b&gt;公众号里回复  &lt;code&gt;bitmap&lt;/code&gt; , 即可获取完整路径哦&lt;/b&gt;&lt;/p&gt;
&lt;p&gt;当然: JDK 也提供了一个 &lt;code&gt;BitMap&lt;/code&gt;  的实现，叫 &lt;code&gt;BitSet&lt;/code&gt; ，位于 &lt;code&gt;java.util&lt;/code&gt;  包下。其底层使用的是一个 &lt;code&gt;long&lt;/code&gt;  类型的数组，一个 &lt;code&gt;long&lt;/code&gt;  代表一个 &lt;code&gt;word&lt;/code&gt; 。但 &lt;code&gt;BitSet&lt;/code&gt;  没有解决上面提到的输入稀疏的问题。谷歌开源的 &lt;code&gt;EWAHCompressedBitMap&lt;/code&gt;  解决了输入稀疏的问题。&lt;/p&gt;
&lt;p&gt;这里我们总结一下。&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;code&gt;Redis&lt;/code&gt;  的数据类型&lt;/th&gt;
&lt;th style=&#34;text-align:center&#34;&gt;底层实现结构&lt;/th&gt;
&lt;th style=&#34;text-align:center&#34;&gt;文章参考&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;STRING&lt;/code&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;code&gt;sds&lt;/code&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s/0sGGSYe5zYNiLUrK5XTsWQ&#34;&gt;数据类型之 &lt;code&gt;String&lt;/code&gt; &lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;list&lt;/code&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;code&gt;quicklist&lt;/code&gt; ,  &lt;code&gt;ziplist&lt;/code&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s/n9fzELpKXR1d02yn0usyvg&#34;&gt;数据类型之 &lt;code&gt;list&lt;/code&gt; &lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;hash&lt;/code&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;code&gt;ziplist&lt;/code&gt; ,  &lt;code&gt;dict&lt;/code&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s/bQ-jnUuHKLC8-M4G8HpZ9w&#34;&gt;数据类型之 &lt;code&gt;hash&lt;/code&gt; &lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;set&lt;/code&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;code&gt;dict&lt;/code&gt;  , &lt;code&gt;intset&lt;/code&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s/qK-CujsG43kAjGpgXYhQWg&#34;&gt;数据类型之 &lt;code&gt;set&lt;/code&gt; &lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;zset&lt;/code&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;code&gt;dict&lt;/code&gt; ,  &lt;code&gt;skipList&lt;/code&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s/4fyT9XCLv2MYCtB1WH0Jvg&#34;&gt;数据类型之 &lt;code&gt;zset&lt;/code&gt; &lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;bitmap&lt;/code&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;code&gt;sds&lt;/code&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;a href=&#34;#&#34;&gt;数据类型之 &lt;code&gt;bitmap&lt;/code&gt; &lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id=&#34;最后&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#最后&#34;&gt;#&lt;/a&gt; 最后&lt;/h2&gt;
&lt;p&gt;希望与你一起遇见更好的自己&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/images/Redis%E7%B3%BB%E5%88%97/images/qrcode.jpg&#34; alt=&#34;微信二维码&#34;&gt;&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://fangjiaxiaobai.github.io/2021/08/01/Redis%E7%B3%BB%E5%88%97/B-5-Redis%E7%9A%84%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B%E4%B9%8B%E6%9C%89%E5%BA%8F%E9%9B%86%E5%90%88zset/</guid>
            <title>Redis数据结构之有序集合 zset</title>
            <link>https://fangjiaxiaobai.github.io/2021/08/01/Redis%E7%B3%BB%E5%88%97/B-5-Redis%E7%9A%84%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B%E4%B9%8B%E6%9C%89%E5%BA%8F%E9%9B%86%E5%90%88zset/</link>
            <category>Redis</category>
            <pubDate>Sun, 01 Aug 2021 18:38:55 +0800</pubDate>
            <description><![CDATA[ &lt;h2 id=&#34;书接上回&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#书接上回&#34;&gt;#&lt;/a&gt; 书接上回&lt;/h2&gt;
&lt;p&gt;上一篇我们学习的  &lt;code&gt;set&lt;/code&gt;  集合这一数据类型。其内部是由 &lt;code&gt;inset&lt;/code&gt;  和 &lt;code&gt;hashtable&lt;/code&gt;  这种两种数据结构编码的。&lt;br&gt;
如果不记得了，那就来坐穿梭机回去看看吧。 &lt;a href=&#34;/2021/08/01/Redis%E7%B3%BB%E5%88%97/B-4-Redis%E7%9A%84%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B%E4%B9%8B%E9%9B%86%E5%90%88set/&#34;&gt;开始穿梭&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;接下来，我们继续学习一个新的数据类型，有序集合.  &lt;code&gt;zset&lt;/code&gt; .&lt;/p&gt;
&lt;h2 id=&#34;zset简介&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#zset简介&#34;&gt;#&lt;/a&gt;  &lt;code&gt;zset&lt;/code&gt;  简介&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;zset&lt;/code&gt;  , 中文名字叫 有序集合。序这个字，在 &lt;code&gt;Redis&lt;/code&gt;  的实现是  &lt;code&gt;score&lt;/code&gt;  字段。我们先不急这个字段，后面会介绍。&lt;/p&gt;
&lt;p&gt;在 &lt;code&gt;Redis&lt;/code&gt;  中有序的数据类型，还有一个就是我们前面学习的  &lt;code&gt;list&lt;/code&gt;  了。 它们还都可以获得某一定范围内的元素。&lt;/p&gt;
&lt;p&gt;而  &lt;code&gt;zset&lt;/code&gt;  的优点是：  &lt;code&gt;list&lt;/code&gt;  通过链表实现，在两端操作数据都很方便。但是操作中间的数据就比较慢了。  &lt;code&gt;zset&lt;/code&gt;  是用  &lt;code&gt;hashtable&lt;/code&gt;  和  &lt;code&gt;skiplist&lt;/code&gt;  来实现的。即使是操作中间数据，速度也很快。时间复杂度为:  &lt;code&gt;O(logN)&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;zset&lt;/code&gt;  的缺点就是：就是比较耗费内存。&lt;/p&gt;
&lt;h2 id=&#34;zset类型的应用场景&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#zset类型的应用场景&#34;&gt;#&lt;/a&gt;  &lt;code&gt;zset&lt;/code&gt;  类型的应用场景&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;存储学生成绩快速做成绩排名功能。&lt;/li&gt;
&lt;li&gt;排行榜，比如：列出某用户当前的全球排名，比赛中胜场数排名。&lt;/li&gt;
&lt;li&gt;带权重的消息队列功能&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;zset的基本命令&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#zset的基本命令&#34;&gt;#&lt;/a&gt;  &lt;code&gt;zset&lt;/code&gt;  的基本命令&lt;/h2&gt;
&lt;h3 id=&#34;zadd&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#zadd&#34;&gt;#&lt;/a&gt;  &lt;code&gt;zadd&lt;/code&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;语法&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;ZADD key [NX|XX] [CH] [INCR] score member [score member ...]&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;解释&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;将 &lt;code&gt;member&lt;/code&gt;  添加有序集合中.&lt;/p&gt;
&lt;p&gt;如果 &lt;code&gt;member&lt;/code&gt;  存在，会更新 &lt;code&gt;member&lt;/code&gt;  的 &lt;code&gt;score&lt;/code&gt;  值。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;NX&lt;/code&gt;  表示存在相同的 &lt;code&gt;member&lt;/code&gt;  就会设置失败，NX 的作用就是 新增 &lt;code&gt;member&lt;/code&gt; ，不会修改 &lt;code&gt;Member&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;XX&lt;/code&gt;  表示不存在相同的 &lt;code&gt;member&lt;/code&gt;  就会设置失败。所以:  &lt;code&gt;XX&lt;/code&gt;  总是更新元素。不会新增元素&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;CH&lt;/code&gt; ( &lt;code&gt;change&lt;/code&gt; ): 返回修改的元素个数。更改的元素是添加的新元素以及已为其更新分数的现有元素。因此，命令行中指定的具有与过去相同分数的元素将不计算在内。注意：通常， &lt;code&gt;ZADD&lt;/code&gt;  的返回值仅计算添加的新元素的数量。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;INCR&lt;/code&gt; : 指定此选项后， &lt;code&gt;ZADD&lt;/code&gt;  的行为类似于&lt;a href=&#34;#ZINCRBY&#34;&gt; &lt;code&gt;ZINCRBY&lt;/code&gt; &lt;/a&gt;。在此模式下只能指定一对得分元素。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;演示&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;63&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;#&lt;/span&gt;&lt;span class=&#34;bash&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 设置一个元素&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; ZADD k67 1 m1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(integer) 1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;#&lt;/span&gt;&lt;span class=&#34;bash&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 设置多个元素&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; ZADD k67 2 m2 3 m3 4 m4 5 m5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(integer) 4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;#&lt;/span&gt;&lt;span class=&#34;bash&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 演示 NX 语义,只能新增.&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; ZADD k67 NX 5 m5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(integer) 0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; ZADD k67 NX 6 m6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(integer) 1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; ZADD k67 NX 6 m6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(integer) 0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;#&lt;/span&gt;&lt;span class=&#34;bash&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 演示 XX 语言,只能修改&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; ZADD k67 XX 7 m7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(integer) 0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; ZADD k67 7 m7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(integer) 1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;#&lt;/span&gt;&lt;span class=&#34;bash&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 进行修改，注意返回值. 如果要返回个数，则加 CH&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; ZADD k67 XX 7 m7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(integer) 0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; ZADD k67 XX 77 m7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(integer) 0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;#&lt;/span&gt;&lt;span class=&#34;bash&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 演示CH, 返回修改的个数&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; ZADD k67 CH 8 m8 9 m9 10 m10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(integer) 3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; ZADD k67 CH 8 m8 999 m9 10 m10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(integer) 1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;#&lt;/span&gt;&lt;span class=&#34;bash&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 演示INCR, 增长&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; ZADD k67 11 m11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(integer) 1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;#&lt;/span&gt;&lt;span class=&#34;bash&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 此时 score 表示的是步长&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; ZADD k67 INCR 10 m11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;quot;21&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;#&lt;/span&gt;&lt;span class=&#34;bash&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 查看设置的值。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; ZRANGE k67 0 -1 WITHSCORES&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; 1) &amp;quot;m1&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; 2) &amp;quot;1&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; 3) &amp;quot;m2&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; 4) &amp;quot;2&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; 5) &amp;quot;m3&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; 6) &amp;quot;3&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; 7) &amp;quot;m4&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; 8) &amp;quot;4&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; 9) &amp;quot;m5&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10) &amp;quot;5&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11) &amp;quot;m6&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12) &amp;quot;6&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13) &amp;quot;m8&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14) &amp;quot;8&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15) &amp;quot;m10&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16) &amp;quot;10&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17) &amp;quot;m11&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18) &amp;quot;21&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19) &amp;quot;m7&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20) &amp;quot;77&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21) &amp;quot;m9&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22) &amp;quot;999&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;zscore&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#zscore&#34;&gt;#&lt;/a&gt;  &lt;code&gt;zscore&lt;/code&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;语法&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;ZSCORE key member&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;解释&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;zset score&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;查看对应元素的 &lt;code&gt;score&lt;/code&gt;  值&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;* 当`key`不存在或者`member`不存在的时候,返回`(nil)`
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;返回 &lt;code&gt;score&lt;/code&gt;  的值。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;演示&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight sh&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 验证k68不存在的时候，返回nil&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; ZSCORE k68 m1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(nil)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; ZADD k68 1 m1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(&lt;span class=&#34;built_in&#34;&gt;integer&lt;/span&gt;) 1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 返回元素的score值&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; ZSCORE k68 m1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;&amp;quot;1&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 验证 member 不存在的时候，返回&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; ZSCORE k68 m2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(nil)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;zincrby&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#zincrby&#34;&gt;#&lt;/a&gt;  &lt;code&gt;zincrby&lt;/code&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;语法&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;ZINCRBY key increment member&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;解释&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;zset increment by&lt;/code&gt; &lt;br&gt;
*  &lt;code&gt;increment&lt;/code&gt; : 步长。&lt;br&gt;
*  &lt;code&gt;member&lt;/code&gt; : 指定的成员&lt;/p&gt;
&lt;p&gt;为有序集合 &lt;code&gt;key&lt;/code&gt;  的成员 &lt;code&gt;member&lt;/code&gt;  的 &lt;code&gt;score&lt;/code&gt;  值加上  &lt;code&gt;increment&lt;/code&gt; 。&lt;/p&gt;
&lt;p&gt;如果 &lt;code&gt;key&lt;/code&gt;  或者 &lt;code&gt;member&lt;/code&gt;  不存在，则新增一个元素。相当于  &lt;code&gt;zadd&lt;/code&gt; .&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;演示&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight sh&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 插入一个不存在的key。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; ZINCRBY k69 10 m1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;&amp;quot;10&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; ZRANGE k69 0 -1 WITHSCORES&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1) &lt;span class=&#34;string&#34;&gt;&amp;quot;m1&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2) &lt;span class=&#34;string&#34;&gt;&amp;quot;10&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#累加&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; ZINCRBY k69 10 m1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;&amp;quot;20&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; ZRANGE k69 0 -1 WITHSCORES&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1) &lt;span class=&#34;string&#34;&gt;&amp;quot;m1&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2) &lt;span class=&#34;string&#34;&gt;&amp;quot;20&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 累加一个负数&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; ZINCRBY k69 -30 m1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;&amp;quot;-10&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; ZRANGE k69 0 -1 WITHSCORES&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1) &lt;span class=&#34;string&#34;&gt;&amp;quot;m1&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2) &lt;span class=&#34;string&#34;&gt;&amp;quot;-10&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;zcard&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#zcard&#34;&gt;#&lt;/a&gt;  &lt;code&gt;zcard&lt;/code&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;语法&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;ZCARD key&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;解释&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;返回 有序集合的 &lt;code&gt;key&lt;/code&gt;  中的元素个数。即 &lt;code&gt;member&lt;/code&gt;  的个数。&lt;br&gt;
不存在的时候，返回 &lt;code&gt;0&lt;/code&gt; .&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;演示&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;#&lt;/span&gt;&lt;span class=&#34;bash&#34;&gt; 返回member的个数&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; ZADD k70 1 m1 2 m2 3 m3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(integer) 3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; ZCARD k70&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(integer) 3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; ZADD k70 4 m4 5 m5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(integer) 2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; ZCARD k70&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(integer) 5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;#&lt;/span&gt;&lt;span class=&#34;bash&#34;&gt; 不存在的时候，返回0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; EXISTS k70_1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(integer) 0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; ZCARD k70_1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(integer) 0&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;zcount&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#zcount&#34;&gt;#&lt;/a&gt;  &lt;code&gt;zcount&lt;/code&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;语法&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;ZCOUNT key min max&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;解释&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;返回  &lt;code&gt;score&lt;/code&gt;  值在 &lt;code&gt;min&lt;/code&gt;  和  &lt;code&gt;max&lt;/code&gt;  之间的元素的个数。包括等于  &lt;code&gt;min&lt;/code&gt;  和  &lt;code&gt;max&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;演示&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight sh&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; ZADD k71 1 m1 2 m2 3 m3 4 m4 5 m5 6 m6 7 m7 8 m8 9 m9 10 m10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(&lt;span class=&#34;built_in&#34;&gt;integer&lt;/span&gt;) 10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; ZCOUNT k71 2 5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(&lt;span class=&#34;built_in&#34;&gt;integer&lt;/span&gt;) 4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#不存在的key或者不在区间内时，返回0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; zcount k71_1 0 10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(&lt;span class=&#34;built_in&#34;&gt;integer&lt;/span&gt;) 0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; zcount k71 11 12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(&lt;span class=&#34;built_in&#34;&gt;integer&lt;/span&gt;) 0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; zcount k71 12 11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(&lt;span class=&#34;built_in&#34;&gt;integer&lt;/span&gt;) 0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; &lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;zrange&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#zrange&#34;&gt;#&lt;/a&gt;  &lt;code&gt;zrange&lt;/code&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;语法&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;ZRANGE key start stop [WITHSCORES]&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;解释&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;这个命令我们已经用过，就是返回指定开始结束位置上的元素。从  &lt;code&gt;0&lt;/code&gt;  开始。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;演示&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight sh&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; ZRANGE k72 1 3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1) &lt;span class=&#34;string&#34;&gt;&amp;quot;m2&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2) &lt;span class=&#34;string&#34;&gt;&amp;quot;m3&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3) &lt;span class=&#34;string&#34;&gt;&amp;quot;m4&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; ZRANGE k72 1 3 WITHSCORES&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1) &lt;span class=&#34;string&#34;&gt;&amp;quot;m2&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2) &lt;span class=&#34;string&#34;&gt;&amp;quot;2&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3) &lt;span class=&#34;string&#34;&gt;&amp;quot;m3&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4) &lt;span class=&#34;string&#34;&gt;&amp;quot;3&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5) &lt;span class=&#34;string&#34;&gt;&amp;quot;m4&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6) &lt;span class=&#34;string&#34;&gt;&amp;quot;4&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;zrevrange&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#zrevrange&#34;&gt;#&lt;/a&gt;  &lt;code&gt;zrevrange&lt;/code&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;语法&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;ZREVRANGE key start stop [WITHSCORES]&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;解释&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;返回有序集合中指定区间的成员。&lt;br&gt;
其中成员的位置按  &lt;code&gt;score&lt;/code&gt;  值递减 (从大到小) 来排列。 具有相同  &lt;code&gt;score&lt;/code&gt;  值的成员按字典序的逆序 ( &lt;code&gt;reverse lexicographical order&lt;/code&gt; ) 排列。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;演示&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight sh&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; ZADD k73 1 m1 2 m2 3 m3 4 m4 5 m5 6 m6 7 m7 8 m8 9 m9 10 m10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(&lt;span class=&#34;built_in&#34;&gt;integer&lt;/span&gt;) 10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 使用 zrange 正序返回数据&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; ZRANGE k73 0 3 WITHSCORES&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1) &lt;span class=&#34;string&#34;&gt;&amp;quot;m1&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2) &lt;span class=&#34;string&#34;&gt;&amp;quot;1&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3) &lt;span class=&#34;string&#34;&gt;&amp;quot;m2&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4) &lt;span class=&#34;string&#34;&gt;&amp;quot;2&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5) &lt;span class=&#34;string&#34;&gt;&amp;quot;m3&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6) &lt;span class=&#34;string&#34;&gt;&amp;quot;3&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7) &lt;span class=&#34;string&#34;&gt;&amp;quot;m4&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8) &lt;span class=&#34;string&#34;&gt;&amp;quot;4&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 使用 zrevrange 倒序返回数据&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; ZREVRANGE k73 0 3 WITHSCORES&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1) &lt;span class=&#34;string&#34;&gt;&amp;quot;m10\x11&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2) &lt;span class=&#34;string&#34;&gt;&amp;quot;10&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3) &lt;span class=&#34;string&#34;&gt;&amp;quot;m9&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4) &lt;span class=&#34;string&#34;&gt;&amp;quot;9&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5) &lt;span class=&#34;string&#34;&gt;&amp;quot;m8&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6) &lt;span class=&#34;string&#34;&gt;&amp;quot;8&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7) &lt;span class=&#34;string&#34;&gt;&amp;quot;m7&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8) &lt;span class=&#34;string&#34;&gt;&amp;quot;7&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;zrangebyscore&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#zrangebyscore&#34;&gt;#&lt;/a&gt;  &lt;code&gt;zrangebyscore&lt;/code&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;语法&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;ZRANGEBYSCORE key min max [WITHSCORES] [LIMIT offset count]&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;解释&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;zset range by score&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;类似  &lt;code&gt;zrange&lt;/code&gt; , 不过是按照  &lt;code&gt;score&lt;/code&gt;  的值进行排序的。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;[LIMIT offset count]&lt;/code&gt; , 是从 offset 开始，返回 &lt;code&gt;count&lt;/code&gt;  个。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;演示&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight sh&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 返回 score值在 [9,10]之间的member。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; ZADD k74 1 m1 2 m2 3 m3 4 m4 5 m5 6 m6 7 m7 8 m8 9 m9 10 m10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(&lt;span class=&#34;built_in&#34;&gt;integer&lt;/span&gt;) 10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; ZRANGEBYSCORE k74 9 10 WITHSCORES&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1) &lt;span class=&#34;string&#34;&gt;&amp;quot;m9&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2) &lt;span class=&#34;string&#34;&gt;&amp;quot;9&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3) &lt;span class=&#34;string&#34;&gt;&amp;quot;m10\x11&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4) &lt;span class=&#34;string&#34;&gt;&amp;quot;10&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 从第2个(区间内索引为1)开始，返回1个元素&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; ZRANGEBYSCORE k74 9 10 WITHSCORES LIMIT 1 1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1) &lt;span class=&#34;string&#34;&gt;&amp;quot;m10\x11&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2) &lt;span class=&#34;string&#34;&gt;&amp;quot;10&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;zrevrangebyscore&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#zrevrangebyscore&#34;&gt;#&lt;/a&gt;  &lt;code&gt;zrevrangebyscore&lt;/code&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;语法&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;ZREVRANGEBYSCORE key max min [WITHSCORES] [LIMIT offset count]&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;解释&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;返回有序集  &lt;code&gt;key&lt;/code&gt;  中，  &lt;code&gt;score&lt;/code&gt;  值介于  &lt;code&gt;max&lt;/code&gt;  和  &lt;code&gt;min&lt;/code&gt;  之间 (默认包括等于  &lt;code&gt;max&lt;/code&gt;  或  &lt;code&gt;min&lt;/code&gt;  ) 的所有的成员。有序集成员按  &lt;code&gt;score&lt;/code&gt;  值递减 (从大到小) 的次序排列。&lt;/p&gt;
&lt;p&gt;注意各个参数的位置哦。这里和  &lt;code&gt;zrevrange&lt;/code&gt;  的参数不一样。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;演示&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight sh&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; ZADD k75 1 m1 2 m2 3 m3 4 m4 5 m5 6 m6 7 m7 8 m8 9 m9 10 m10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(&lt;span class=&#34;built_in&#34;&gt;integer&lt;/span&gt;) 10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; ZREVRANGEBYSCORE k75 8 6 WITHSCORES &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1) &lt;span class=&#34;string&#34;&gt;&amp;quot;m8&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2) &lt;span class=&#34;string&#34;&gt;&amp;quot;8&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3) &lt;span class=&#34;string&#34;&gt;&amp;quot;m7&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4) &lt;span class=&#34;string&#34;&gt;&amp;quot;7&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5) &lt;span class=&#34;string&#34;&gt;&amp;quot;m6&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6) &lt;span class=&#34;string&#34;&gt;&amp;quot;6&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; ZREVRANGEBYSCORE k75 8 6 WITHSCORES  LIMIT 1  1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1) &lt;span class=&#34;string&#34;&gt;&amp;quot;m7&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2) &lt;span class=&#34;string&#34;&gt;&amp;quot;7&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;zrank&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#zrank&#34;&gt;#&lt;/a&gt;  &lt;code&gt;zrank&lt;/code&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;语法&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;ZRANK key member&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;解释&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;返回有序集  &lt;code&gt;key&lt;/code&gt;  中成员  &lt;code&gt;member&lt;/code&gt;  的排名。其中有序集成员按  &lt;code&gt;score&lt;/code&gt;  值递增 (从小到大) 顺序排列&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;演示&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight sh&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; ZADD k76 1 m1 2 m2 3 m3 4 m4 5 m5 6 m6 7 m7 8 m8 9 m9 10 m10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(&lt;span class=&#34;built_in&#34;&gt;integer&lt;/span&gt;) 10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; zrank k76 m4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(&lt;span class=&#34;built_in&#34;&gt;integer&lt;/span&gt;) 3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; zrank k76 m10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(&lt;span class=&#34;built_in&#34;&gt;integer&lt;/span&gt;) 9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;zrevrank&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#zrevrank&#34;&gt;#&lt;/a&gt;  &lt;code&gt;zrevrank&lt;/code&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;语法&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;ZREVRANK key member&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;解释&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;返回有序集  &lt;code&gt;key&lt;/code&gt;  中成员  &lt;code&gt;member&lt;/code&gt;  的排名。其中有序集成员按  &lt;code&gt;score&lt;/code&gt;  值递减 (从大到小) 排序。&lt;/p&gt;
&lt;p&gt;排名以  &lt;code&gt;0&lt;/code&gt;  为底，也就是说，  &lt;code&gt;score&lt;/code&gt;  值最大的成员排名为  &lt;code&gt;0&lt;/code&gt;  。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;演示&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight sh&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; ZADD k77 1 m1 2 m2 3 m3 4 m4 5 m5 6 m6 7 m7 8 m8 9 m9 10 m10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(&lt;span class=&#34;built_in&#34;&gt;integer&lt;/span&gt;) 10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; ZREVRANK k77 m10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(&lt;span class=&#34;built_in&#34;&gt;integer&lt;/span&gt;) 0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; ZREVRANK k77 m4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(&lt;span class=&#34;built_in&#34;&gt;integer&lt;/span&gt;) 6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;zrem&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#zrem&#34;&gt;#&lt;/a&gt;  &lt;code&gt;zrem&lt;/code&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;语法&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;ZREM key member [member ...]&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;解释&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;zset remove&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;移除有序集  &lt;code&gt;key&lt;/code&gt;  中的一个或多个成员，不存在的成员将被忽略。&lt;/p&gt;
&lt;p&gt;当  &lt;code&gt;key&lt;/code&gt;  存在但不是有序集类型时，返回一个错误。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;演示&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight sh&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; ZADD k78 1 m1 2 m2 3 m3 4 m4 5 m5 6 m6 7 m7 8 m8 9 m9 10 m10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(&lt;span class=&#34;built_in&#34;&gt;integer&lt;/span&gt;) 10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 删除m2,m3,m4&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; ZREM k78 m2 m3 m4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(&lt;span class=&#34;built_in&#34;&gt;integer&lt;/span&gt;) 3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; ZRANGE k78 0 -1 WITHSCORES&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; 1) &lt;span class=&#34;string&#34;&gt;&amp;quot;m1&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; 2) &lt;span class=&#34;string&#34;&gt;&amp;quot;1&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; 3) &lt;span class=&#34;string&#34;&gt;&amp;quot;m5&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; 4) &lt;span class=&#34;string&#34;&gt;&amp;quot;5&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; 5) &lt;span class=&#34;string&#34;&gt;&amp;quot;m6&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; 6) &lt;span class=&#34;string&#34;&gt;&amp;quot;6&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; 7) &lt;span class=&#34;string&#34;&gt;&amp;quot;m7&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; 8) &lt;span class=&#34;string&#34;&gt;&amp;quot;7&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; 9) &lt;span class=&#34;string&#34;&gt;&amp;quot;m8&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10) &lt;span class=&#34;string&#34;&gt;&amp;quot;8&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11) &lt;span class=&#34;string&#34;&gt;&amp;quot;m9&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12) &lt;span class=&#34;string&#34;&gt;&amp;quot;9&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13) &lt;span class=&#34;string&#34;&gt;&amp;quot;m10&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14) &lt;span class=&#34;string&#34;&gt;&amp;quot;10&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;zremrangebyrank&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#zremrangebyrank&#34;&gt;#&lt;/a&gt;  &lt;code&gt;zremrangebyrank&lt;/code&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;语法&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;ZREMRANGEBYRANK key start stop&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;解释&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;移除有序集  &lt;code&gt;key&lt;/code&gt;  中，指定排名 ( &lt;code&gt;rank&lt;/code&gt; ) 区间内的所有成员。&lt;/p&gt;
&lt;p&gt;区间分别以下标参数  &lt;code&gt;start&lt;/code&gt;  和  &lt;code&gt;stop&lt;/code&gt;  指出，包含  &lt;code&gt;start&lt;/code&gt;  和  &lt;code&gt;stop&lt;/code&gt;  在内。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;演示&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight sh&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; ZADD k79 1 m1 2 m2 3 m3 4 m4 5 m5 6 m6 7 m7 8 m8 9 m9 10 m10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(&lt;span class=&#34;built_in&#34;&gt;integer&lt;/span&gt;) 10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 删除排名第2到排名第4的member&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; ZREMRANGEBYRANK k79 1 3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(&lt;span class=&#34;built_in&#34;&gt;integer&lt;/span&gt;) 3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; ZRANGE k79 0 -1 WITHSCORES&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; 1) &lt;span class=&#34;string&#34;&gt;&amp;quot;m1&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; 2) &lt;span class=&#34;string&#34;&gt;&amp;quot;1&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; 3) &lt;span class=&#34;string&#34;&gt;&amp;quot;m5&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; 4) &lt;span class=&#34;string&#34;&gt;&amp;quot;5&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; 5) &lt;span class=&#34;string&#34;&gt;&amp;quot;m6&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; 6) &lt;span class=&#34;string&#34;&gt;&amp;quot;6&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; 7) &lt;span class=&#34;string&#34;&gt;&amp;quot;m7&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; 8) &lt;span class=&#34;string&#34;&gt;&amp;quot;7&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; 9) &lt;span class=&#34;string&#34;&gt;&amp;quot;m8&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10) &lt;span class=&#34;string&#34;&gt;&amp;quot;8&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11) &lt;span class=&#34;string&#34;&gt;&amp;quot;m9&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12) &lt;span class=&#34;string&#34;&gt;&amp;quot;9&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13) &lt;span class=&#34;string&#34;&gt;&amp;quot;m10&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14) &lt;span class=&#34;string&#34;&gt;&amp;quot;10&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;zremrangebyscore&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#zremrangebyscore&#34;&gt;#&lt;/a&gt; zremrangebyscore&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;语法&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;ZREMRANGEBYSCORE key min max&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;解释&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;移除有序集  &lt;code&gt;key&lt;/code&gt;  中，所有  &lt;code&gt;score&lt;/code&gt;  值介于  &lt;code&gt;min&lt;/code&gt;  和  &lt;code&gt;max&lt;/code&gt;  之间 (包括等于  &lt;code&gt;min&lt;/code&gt;  或  &lt;code&gt;max&lt;/code&gt;  ) 的成员。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;演示&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight sh&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; ZADD k80 1 m1 2 m2 3 m3 4 m4 5 m5 6 m6 7 m7 8 m8 9 m9 10 m10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(&lt;span class=&#34;built_in&#34;&gt;integer&lt;/span&gt;) 10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 删除 score&amp;gt;=1 and score &amp;lt;=9 的元素&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; ZREMRANGEBYSCORE k80 1 9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(&lt;span class=&#34;built_in&#34;&gt;integer&lt;/span&gt;) 9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; zrange k80 0 -1  WITHSCORES&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1) &lt;span class=&#34;string&#34;&gt;&amp;quot;m10&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2) &lt;span class=&#34;string&#34;&gt;&amp;quot;10&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;zrangebylex&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#zrangebylex&#34;&gt;#&lt;/a&gt; zrangebylex&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;语法&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;ZRANGEBYLEX key min max [LIMIT offset count]&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;解释&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;当有序集合的所有成员都具有相同的分值时， 有序集合的元素会根据成员的字典序（ &lt;code&gt;lexicographical ordering&lt;/code&gt; ）来进行排序， 而这个命令则可以返回给定的有序集合键  &lt;code&gt;key&lt;/code&gt;  中， 值介于  &lt;code&gt;min&lt;/code&gt;  和  &lt;code&gt;max&lt;/code&gt;  之间的成员。&lt;/p&gt;
&lt;p&gt;注意:&lt;/p&gt;
&lt;p&gt;合法的  &lt;code&gt;min&lt;/code&gt;  和  &lt;code&gt;max&lt;/code&gt;  参数必须包含 ( 或者  &lt;code&gt;[&lt;/code&gt;  ， 其中  &lt;code&gt;(&lt;/code&gt;  表示开区间（指定的值不会被包含在范围之内）， 而  &lt;code&gt;[&lt;/code&gt;  则表示闭区间（指定的值会被包含在范围之内）。&lt;/p&gt;
&lt;p&gt;特殊值  &lt;code&gt;+&lt;/code&gt;  和  &lt;code&gt;-&lt;/code&gt;  在  &lt;code&gt;min&lt;/code&gt;  参数以及  &lt;code&gt;max&lt;/code&gt;  参数中具有特殊的意义， 其中  &lt;code&gt;+&lt;/code&gt;  表示正无限， 而  &lt;code&gt;-&lt;/code&gt;  表示负无限。 因此， 向一个所有成员的分值都相同的有序集合发送命令  &lt;code&gt;ZRANGEBYLEX &amp;lt;zset&amp;gt; - + &lt;/code&gt; ， 命令将返回有序集合中的所有元素&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;lex&lt;/code&gt; :&lt;br&gt;
 表示如果 &lt;code&gt;score&lt;/code&gt;  相等，则按照 &lt;code&gt;member&lt;/code&gt;  的字典顺序排序。&lt;br&gt;
此外这个命令，比如 &lt;code&gt;ZRANGBYSCORE&lt;/code&gt;  稍微强大一点儿。可以指定区间范围，当只知道 &lt;code&gt;member&lt;/code&gt; ，不知道 score 的时候，可以是使用带有  &lt;code&gt;lex&lt;/code&gt;  的命令。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;演示&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight sh&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; zadd k81 1 a 2 b 3 c 4 d 5 f 6 g&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(&lt;span class=&#34;built_in&#34;&gt;integer&lt;/span&gt;) 6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 返回 score值在a的score值和c的score值之间的member&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 即: score&amp;gt; Score(a) &amp;amp;&amp;amp; score &amp;lt;= Score(c)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; ZRANGEBYLEX k81 (a  [c &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1) &lt;span class=&#34;string&#34;&gt;&amp;quot;b&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2) &lt;span class=&#34;string&#34;&gt;&amp;quot;c&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 返回 小于等于c的Score值的元素&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; ZRANGEBYLEX k81 -  [c &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1) &lt;span class=&#34;string&#34;&gt;&amp;quot;a&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2) &lt;span class=&#34;string&#34;&gt;&amp;quot;b&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3) &lt;span class=&#34;string&#34;&gt;&amp;quot;c&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 返回所有元素&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; ZRANGEBYLEX k81 - + &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1) &lt;span class=&#34;string&#34;&gt;&amp;quot;a&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2) &lt;span class=&#34;string&#34;&gt;&amp;quot;b&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3) &lt;span class=&#34;string&#34;&gt;&amp;quot;c&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4) &lt;span class=&#34;string&#34;&gt;&amp;quot;d&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5) &lt;span class=&#34;string&#34;&gt;&amp;quot;f&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6) &lt;span class=&#34;string&#34;&gt;&amp;quot;g&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;zlexcount&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#zlexcount&#34;&gt;#&lt;/a&gt;  &lt;code&gt;zlexcount&lt;/code&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;语法&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;ZLEXCOUNT key min max&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;解释&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;对于一个所有成员的分值都相同的有序集合键  &lt;code&gt;key&lt;/code&gt;  来说， 这个命令会返回该集合中， 成员介于  &lt;code&gt;min&lt;/code&gt;  和  &lt;code&gt;max&lt;/code&gt;  范围内的元素数量。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;演示&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight sh&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; zadd k82 1 a 2 b 3 c 4 d 5 f 6 g&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(&lt;span class=&#34;built_in&#34;&gt;integer&lt;/span&gt;) 6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; ZLEXCOUNT k82 2 5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(error) ERR min or max not valid string range item&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; ZLEXCOUNT k82 a b&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 大于Score(a),小于等于Score(b)的member,只有b.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; ZLEXCOUNT k82 (a [b&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(&lt;span class=&#34;built_in&#34;&gt;integer&lt;/span&gt;) 1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 大于Score(a),小于等于Score(d)的member,有b.c.d，三个&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; ZLEXCOUNT k82 (a [d&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(&lt;span class=&#34;built_in&#34;&gt;integer&lt;/span&gt;) 3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;zremrangebylex&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#zremrangebylex&#34;&gt;#&lt;/a&gt;  &lt;code&gt;zremrangebylex&lt;/code&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;语法&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;ZREMRANGEBYLEX key min max&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;解释&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;对于一个所有成员的分值都相同的有序集合键  &lt;code&gt;key&lt;/code&gt;  来说， 这个命令会移除该集合中， 成员介于  &lt;code&gt;min&lt;/code&gt;  和  &lt;code&gt;max&lt;/code&gt;  范围内的所有元素。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;演示&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight sh&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; zadd k83 1 a 2 b 3 c 4 d 5 f 6 g&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(&lt;span class=&#34;built_in&#34;&gt;integer&lt;/span&gt;) 6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 删除 score值在 (Score(a),Score(c)] 之间的member&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; ZREMRANGEBYLEX k83 (a [c&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(&lt;span class=&#34;built_in&#34;&gt;integer&lt;/span&gt;) 2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 删除了，b,c&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; zrange k83 0 -1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1) &lt;span class=&#34;string&#34;&gt;&amp;quot;a&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2) &lt;span class=&#34;string&#34;&gt;&amp;quot;d&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3) &lt;span class=&#34;string&#34;&gt;&amp;quot;f&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4) &lt;span class=&#34;string&#34;&gt;&amp;quot;g&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;zscan&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#zscan&#34;&gt;#&lt;/a&gt; zscan&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;语法&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;ZSCAN key cursor [MATCH pattern] [COUNT count]&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;解释&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;这是一个查询命令。 同  &lt;code&gt;SCAN&lt;/code&gt;  命令。可以参考这篇文章 &lt;a href=&#34;./010-%E5%85%B6%E4%BB%96%E5%91%BD%E4%BB%A4.md&#34;&gt;010 - 其他命令&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;SCAN&lt;/code&gt;  命令是一个基于游标的迭代器（ &lt;code&gt;cursor based iterator&lt;/code&gt; ）：  &lt;code&gt;SCAN&lt;/code&gt;  命令每次被调用之后， 都会向用户返回一个新的游标， 用户在下次迭代时需要使用这个新游标作为  &lt;code&gt;SCAN&lt;/code&gt;  命令的游标参数， 以此来延续之前的迭代过程。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;演示&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight sh&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; ZADD k84 1 m1 2 m2 3 m3 4 m4 5 m5 6 m6 7 m7 8 m8 9 m9 10 m10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(&lt;span class=&#34;built_in&#34;&gt;integer&lt;/span&gt;) 10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; zscan k84 0 MATCH m* COUNT 3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1) &lt;span class=&#34;string&#34;&gt;&amp;quot;0&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2)  1) &lt;span class=&#34;string&#34;&gt;&amp;quot;m1&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    2) &lt;span class=&#34;string&#34;&gt;&amp;quot;1&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    3) &lt;span class=&#34;string&#34;&gt;&amp;quot;m2&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    4) &lt;span class=&#34;string&#34;&gt;&amp;quot;2&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    5) &lt;span class=&#34;string&#34;&gt;&amp;quot;m3&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    6) &lt;span class=&#34;string&#34;&gt;&amp;quot;3&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    7) &lt;span class=&#34;string&#34;&gt;&amp;quot;m4&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    8) &lt;span class=&#34;string&#34;&gt;&amp;quot;4&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    9) &lt;span class=&#34;string&#34;&gt;&amp;quot;m5&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   10) &lt;span class=&#34;string&#34;&gt;&amp;quot;5&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   11) &lt;span class=&#34;string&#34;&gt;&amp;quot;m6&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   12) &lt;span class=&#34;string&#34;&gt;&amp;quot;6&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   13) &lt;span class=&#34;string&#34;&gt;&amp;quot;m7&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   14) &lt;span class=&#34;string&#34;&gt;&amp;quot;7&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   15) &lt;span class=&#34;string&#34;&gt;&amp;quot;m8&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   16) &lt;span class=&#34;string&#34;&gt;&amp;quot;8&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   17) &lt;span class=&#34;string&#34;&gt;&amp;quot;m9&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   18) &lt;span class=&#34;string&#34;&gt;&amp;quot;9&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   19) &lt;span class=&#34;string&#34;&gt;&amp;quot;m10&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   20) &lt;span class=&#34;string&#34;&gt;&amp;quot;10&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;zunionstore&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#zunionstore&#34;&gt;#&lt;/a&gt;  &lt;code&gt;zunionstore&lt;/code&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;语法&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;ZUNIONSTORE destination numkeys key [key ...] [WEIGHTS weight] [AGGREGATE SUM|MIN|MAX]&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;解释&lt;br&gt;
计算给定的一个或多个有序集合的并集，其中给定 key 的数量必须以 numkeys 参数指定，并将该并集 (结果集) 储存到 destination 。&lt;br&gt;
如果 key 相同的时候，对应的 score 值会相加。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;WEIGHTS&lt;/code&gt; : 使用  &lt;code&gt;WEIGHTS&lt;/code&gt;  选项，你可以为 每个 给定有序集 分别 指定一个乘法因子 ( &lt;code&gt;multiplication factor&lt;/code&gt; )，每个给定有序集的所有成员的  &lt;code&gt;score&lt;/code&gt;  值在传递给聚合函数 ( &lt;code&gt;aggregation function&lt;/code&gt; ) 之前都要先乘以该有序集的因子。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;AGGREGATE&lt;/code&gt; : 使用  &lt;code&gt;AGGREGATE&lt;/code&gt;  选项，你可以指定并集的结果集的聚合方式。&lt;br&gt;
默认使用的参数  &lt;code&gt;SUM&lt;/code&gt;  ，可以将所有集合中某个成员的  &lt;code&gt;score&lt;/code&gt;  值之 和 作为结果集中该成员的  &lt;code&gt;score&lt;/code&gt;  值；使用参数  &lt;code&gt;MIN&lt;/code&gt;  ，可以将所有集合中某个成员的 最小  &lt;code&gt;score&lt;/code&gt;  值作为结果集中该成员的  &lt;code&gt;score&lt;/code&gt;  值；而参数  &lt;code&gt;MAX&lt;/code&gt;  则是将所有集合中某个成员的 最大  &lt;code&gt;score&lt;/code&gt;  值作为结果集中该成员的  &lt;code&gt;score&lt;/code&gt;  值。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;演示&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight sh&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;48&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; ZADD k85_1 1 m1 2 m2 3 m3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(&lt;span class=&#34;built_in&#34;&gt;integer&lt;/span&gt;) 3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; ZADD k85_2 1 m1 4 m4 5 m5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(&lt;span class=&#34;built_in&#34;&gt;integer&lt;/span&gt;) 3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; ZUNIONSTORE k85 2 k85_1 k85_2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(&lt;span class=&#34;built_in&#34;&gt;integer&lt;/span&gt;) 5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; zrange k85 0 -1 WITHSCORES&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; 1) &lt;span class=&#34;string&#34;&gt;&amp;quot;m1&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; 2) &lt;span class=&#34;string&#34;&gt;&amp;quot;2&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; 3) &lt;span class=&#34;string&#34;&gt;&amp;quot;m2&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; 4) &lt;span class=&#34;string&#34;&gt;&amp;quot;2&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; 5) &lt;span class=&#34;string&#34;&gt;&amp;quot;m3&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; 6) &lt;span class=&#34;string&#34;&gt;&amp;quot;3&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; 7) &lt;span class=&#34;string&#34;&gt;&amp;quot;m4&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; 8) &lt;span class=&#34;string&#34;&gt;&amp;quot;4&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; 9) &lt;span class=&#34;string&#34;&gt;&amp;quot;m5&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10) &lt;span class=&#34;string&#34;&gt;&amp;quot;5&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 演示 Weights参数： WEIGHTS 2 3&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 指: 第一个zset的所有元素 *2 ，第二个有序集合中的元素 *3&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; ZUNIONSTORE k85 2 k85_1 k85_2 WEIGHTS 2 3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(&lt;span class=&#34;built_in&#34;&gt;integer&lt;/span&gt;) 5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; ZRANGE k85 0 -1 WITHSCORES&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; 1) &lt;span class=&#34;string&#34;&gt;&amp;quot;m2&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; 2) &lt;span class=&#34;string&#34;&gt;&amp;quot;4&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; 3) &lt;span class=&#34;string&#34;&gt;&amp;quot;m1&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; 4) &lt;span class=&#34;string&#34;&gt;&amp;quot;5&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; 5) &lt;span class=&#34;string&#34;&gt;&amp;quot;m3&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; 6) &lt;span class=&#34;string&#34;&gt;&amp;quot;6&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; 7) &lt;span class=&#34;string&#34;&gt;&amp;quot;m4&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; 8) &lt;span class=&#34;string&#34;&gt;&amp;quot;12&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; 9) &lt;span class=&#34;string&#34;&gt;&amp;quot;m5&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10) &lt;span class=&#34;string&#34;&gt;&amp;quot;15&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 演示 Weights参数： WEIGHTS 2 4&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 指: 第一个zset的所有元素 *2 ，第二个有序集合中的元素 *3&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; ZUNIONSTORE k85 2 k85_1 k85_2 WEIGHTS 2 4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(&lt;span class=&#34;built_in&#34;&gt;integer&lt;/span&gt;) 5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; ZRANGE k85 0 -1 WITHSCORES&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; 1) &lt;span class=&#34;string&#34;&gt;&amp;quot;m2&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; 2) &lt;span class=&#34;string&#34;&gt;&amp;quot;4&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; 3) &lt;span class=&#34;string&#34;&gt;&amp;quot;m1&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; 4) &lt;span class=&#34;string&#34;&gt;&amp;quot;6&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; 5) &lt;span class=&#34;string&#34;&gt;&amp;quot;m3&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; 6) &lt;span class=&#34;string&#34;&gt;&amp;quot;6&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; 7) &lt;span class=&#34;string&#34;&gt;&amp;quot;m4&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; 8) &lt;span class=&#34;string&#34;&gt;&amp;quot;16&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; 9) &lt;span class=&#34;string&#34;&gt;&amp;quot;m5&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10) &lt;span class=&#34;string&#34;&gt;&amp;quot;20&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;zinterstore&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#zinterstore&#34;&gt;#&lt;/a&gt; zinterstore&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;语法&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;ZINTERSTORE destination numkeys key [key …] [WEIGHTS weight [weight …]] [AGGREGATE SUM|MIN|MAX]&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;解释&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;计算给定的一个或多个有序集的交集，其中给定  &lt;code&gt;key&lt;/code&gt;  的数量必须以  &lt;code&gt;numkeys&lt;/code&gt;  参数指定，并将该交集 (结果集) 储存到  &lt;code&gt;destination&lt;/code&gt;  。&lt;/p&gt;
&lt;p&gt;默认情况下，结果集中某个成员的  &lt;code&gt;score&lt;/code&gt;  值是所有给定集下该成员  &lt;code&gt;score&lt;/code&gt;  值之和.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;演示&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight sh&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; zadd k86_1 1 m1 2 m2 3 m3 4 m4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(&lt;span class=&#34;built_in&#34;&gt;integer&lt;/span&gt;) 4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; ZADD k86_2 20 m2 30 m3 50 m5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(&lt;span class=&#34;built_in&#34;&gt;integer&lt;/span&gt;) 3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; ZINTERSTORE k86 2 k86_1 k86_2 &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(&lt;span class=&#34;built_in&#34;&gt;integer&lt;/span&gt;) 2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 取交集(默认相加)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; zrange k86 0 -1 WITHSCORES&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1) &lt;span class=&#34;string&#34;&gt;&amp;quot;m2&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2) &lt;span class=&#34;string&#34;&gt;&amp;quot;22&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3) &lt;span class=&#34;string&#34;&gt;&amp;quot;m3&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4) &lt;span class=&#34;string&#34;&gt;&amp;quot;33&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# WEIGTHS 参数和上面的 ZUNIONSTORE命令一样.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 这里演示一下, AGGREGATE参数&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 默认使用的是SUM. 就是本命令中上面的例子了.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 下面演示MIN 和 MAX&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; ZINTERSTORE k86 2 k86_1 k86_2 AGGREGATE MIN&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(&lt;span class=&#34;built_in&#34;&gt;integer&lt;/span&gt;) 2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; ZRANGE k86 0 -1 WITHSCORES&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1) &lt;span class=&#34;string&#34;&gt;&amp;quot;m2&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2) &lt;span class=&#34;string&#34;&gt;&amp;quot;2&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3) &lt;span class=&#34;string&#34;&gt;&amp;quot;m3&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4) &lt;span class=&#34;string&#34;&gt;&amp;quot;3&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; ZINTERSTORE k86 2 k86_1 k86_2 AGGREGATE MAX&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(&lt;span class=&#34;built_in&#34;&gt;integer&lt;/span&gt;) 2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; ZRANGE k86 0 -1 WITHSCORES&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1) &lt;span class=&#34;string&#34;&gt;&amp;quot;m2&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2) &lt;span class=&#34;string&#34;&gt;&amp;quot;20&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3) &lt;span class=&#34;string&#34;&gt;&amp;quot;m3&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4) &lt;span class=&#34;string&#34;&gt;&amp;quot;30&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&#34;zset的内部结构&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#zset的内部结构&#34;&gt;#&lt;/a&gt;  &lt;code&gt;zset&lt;/code&gt;  的内部结构&lt;/h2&gt;
&lt;p&gt;这里我们主要看 &lt;code&gt;skiplist&lt;/code&gt; ，如果忘记了 &lt;code&gt;hashtable&lt;/code&gt; ，就看着&lt;a href=&#34;2021/08/01/Redis%E7%B3%BB%E5%88%97/C-8-Redis%E4%B8%AD%E7%9A%84%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B9%8B%E5%AD%97%E5%85%B8Dict/&#34;&gt;这篇文章&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;我们从命令 &lt;code&gt;zadd&lt;/code&gt;  入手，找到 &lt;code&gt;zset&lt;/code&gt;  的 &lt;code&gt;add&lt;/code&gt;  通用方法 &lt;code&gt;zaddGenericCommand(c,ZADD_NONE);&lt;/code&gt;  来看一下。省略了部分代码。&lt;/p&gt;
&lt;figure class=&#34;highlight c++&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;...&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (server.zset_max_ziplist_entries == &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt; ||&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            server.zset_max_ziplist_value &amp;lt; &lt;span class=&#34;built_in&#34;&gt;sdslen&lt;/span&gt;(c-&amp;gt;argv[scoreidx+&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;]-&amp;gt;ptr))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;/// 创建 OBJ_ENCODING_SKIPLIST 编码的结构&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    zobj = &lt;span class=&#34;built_in&#34;&gt;createZsetObject&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125; &lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;/// 创建 OBJ_ZSET 编码的结构&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    zobj = &lt;span class=&#34;built_in&#34;&gt;createZsetZiplistObject&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;....&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;来看一下  &lt;code&gt;createZsetObject()&lt;/code&gt;  方法的实现，就再清晰不过了。&lt;/p&gt;
&lt;figure class=&#34;highlight c++&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;/// 创建 Zset 对象。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;robj *&lt;span class=&#34;title&#34;&gt;createZsetObject&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(&lt;span class=&#34;keyword&#34;&gt;void&lt;/span&gt;)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    zset *zs = &lt;span class=&#34;built_in&#34;&gt;zmalloc&lt;/span&gt;(&lt;span class=&#34;built_in&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;sizeof&lt;/span&gt;&lt;/span&gt;(*zs));&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    robj *o;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    zs-&amp;gt;dict = &lt;span class=&#34;built_in&#34;&gt;dictCreate&lt;/span&gt;(&amp;amp;zsetDictType, &lt;span class=&#34;literal&#34;&gt;NULL&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    zs-&amp;gt;zsl = &lt;span class=&#34;built_in&#34;&gt;zslCreate&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    o = &lt;span class=&#34;built_in&#34;&gt;createObject&lt;/span&gt;(OBJ_ZSET, zs);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    o-&amp;gt;encoding = OBJ_ENCODING_SKIPLIST;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; o;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;到这里，就是我们和  &lt;code&gt;zset&lt;/code&gt;  这种数据类型的初次深入见面了。 我们先看下  &lt;code&gt;zset&lt;/code&gt;  这种结构体的定义。&lt;/p&gt;
&lt;figure class=&#34;highlight c++&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;/// 有序集合的结构定义&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;typedef&lt;/span&gt; &lt;span class=&#34;class&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;struct&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;zset&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;/// 字典，键为成员,值为score&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;/// 用于支持 O(1) 复杂度的按成员分值操作。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    dict *dict;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;/// 跳跃表,按分值排序成员&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;/// 用于支持平均复杂度为 O(logN)的按分值定位成员以及范围的操作。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    zskiplist *zsl;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125; zset;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;code&gt;dict&lt;/code&gt;  前面已经看过了，这里来看下 &lt;code&gt;zskiplist&lt;/code&gt; 。&lt;/p&gt;
&lt;h3 id=&#34;skiplist&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#skiplist&#34;&gt;#&lt;/a&gt;  &lt;code&gt;skiplist&lt;/code&gt;&lt;/h3&gt;
&lt;figure class=&#34;highlight c++&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;/// 跳跃表&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;typedef&lt;/span&gt; &lt;span class=&#34;class&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;struct&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;zskiplist&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;/// 表头，表尾&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;class&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;struct&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;zskiplistNode&lt;/span&gt; *&lt;span class=&#34;title&#34;&gt;header&lt;/span&gt;, *&lt;span class=&#34;title&#34;&gt;tail&lt;/span&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;/// 表中节点的数量&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;unsigned&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;long&lt;/span&gt; length;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;/// 表中层数最大的节点的层数&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; level;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125; zskiplist;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;typedef&lt;/span&gt; &lt;span class=&#34;class&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;struct&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;zskiplistNode&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    sds ele;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;/// 分数&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;double&lt;/span&gt; score;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;/// 后退的指针&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;class&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;struct&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;zskiplistNode&lt;/span&gt; *&lt;span class=&#34;title&#34;&gt;backward&lt;/span&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;/// 层&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;class&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;struct&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;zskiplistLevel&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;comment&#34;&gt;/// 前进指针&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;class&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;struct&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;zskiplistNode&lt;/span&gt; *&lt;span class=&#34;title&#34;&gt;forward&lt;/span&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;comment&#34;&gt;/// 跨度&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;unsigned&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;long&lt;/span&gt; span;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125; level[];&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125; zskiplistNode;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&#34;总结&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#总结&#34;&gt;#&lt;/a&gt; 总结&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;本章是一个新的常用数据类型， &lt;code&gt;ZSET&lt;/code&gt;  有序集合。底层的数据结构是使用的是  &lt;code&gt;skipList&lt;/code&gt;  和  &lt;code&gt;hashtable&lt;/code&gt;  . 关于 &lt;code&gt;Skiplist&lt;/code&gt;  的初步了解文章&lt;a href=&#34;#&#34;&gt;穿梭机&lt;/a&gt; 和  &lt;code&gt;Redis&lt;/code&gt;  中  &lt;code&gt;skiplist&lt;/code&gt;  的实现源码解读&lt;a href=&#34;&#34;&gt;穿梭机&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;然后简单介绍了  &lt;code&gt;Redis ZSET&lt;/code&gt;  数据类型的基础使用场景。关键字有  &lt;code&gt;有序&lt;/code&gt; ， &lt;code&gt;排名&lt;/code&gt; ， &lt;code&gt;权重&lt;/code&gt; 等.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ZSET&lt;/code&gt;  的  &lt;code&gt;20&lt;/code&gt;  个常有命令。 后面我会针对这  &lt;code&gt;20&lt;/code&gt;  个命令的实现进行简单的分享.&lt;/li&gt;
&lt;li&gt;然后简单的看了一下 &lt;code&gt;Redis&lt;/code&gt;  中的数据结构的实现，还是那句话， &lt;code&gt;Redis&lt;/code&gt;  的数据结构是动态编码的，  &lt;code&gt;ZSET&lt;/code&gt;  是有 &lt;code&gt;hashtable&lt;/code&gt;  和  &lt;code&gt;skiplist&lt;/code&gt;  实现的。 skiplist 是一个非常高效的数据结构，增删查的效率都是  &lt;code&gt;O(logN)&lt;/code&gt; . 实现原理可以参考这篇文章&lt;a href=&#34;#&#34;&gt;直通车&lt;/a&gt;，里面有几种流行的语言的实现，可以针对自己擅长的语言进行查看。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;最后&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#最后&#34;&gt;#&lt;/a&gt; 最后&lt;/h2&gt;
&lt;p&gt;期望与你一起遇见更好的自己&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/images/qrcode.jpg&#34; alt=&#34;期望与你一起遇见更好的自己&#34;&gt;&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://fangjiaxiaobai.github.io/2021/08/01/Redis%E7%B3%BB%E5%88%97/B-4-Redis%E7%9A%84%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B%E4%B9%8B%E9%9B%86%E5%90%88set/</guid>
            <title>Redis数据结构之集合 Set</title>
            <link>https://fangjiaxiaobai.github.io/2021/08/01/Redis%E7%B3%BB%E5%88%97/B-4-Redis%E7%9A%84%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B%E4%B9%8B%E9%9B%86%E5%90%88set/</link>
            <category>Redis</category>
            <pubDate>Sun, 01 Aug 2021 18:28:55 +0800</pubDate>
            <description><![CDATA[ &lt;h2 id=&#34;书接上回&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#书接上回&#34;&gt;#&lt;/a&gt; 书接上回&lt;/h2&gt;
&lt;p&gt;前一篇文章，我们学习的是 &lt;a href=&#34;/2021/08/01/Redis%E7%B3%BB%E5%88%97/B-3-Redis%E7%9A%84%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B%E4%B9%8Bhash/&#34;&gt;Redis 的数据结构之 hash&lt;/a&gt;， 学习了其基本的操作和使用内部数据结构是 &lt;code&gt;hashtable&lt;/code&gt;  和 &lt;code&gt;ziplist&lt;/code&gt; ，其中 &lt;code&gt;Redis&lt;/code&gt;  中的 &lt;code&gt;hashtable&lt;/code&gt;  是用  &lt;code&gt;dict&lt;/code&gt;  表示的。如果不记得了其内部构成，就再看看看着&lt;a href=&#34;/2021/08/01/Redis%E7%B3%BB%E5%88%97/B-3-Redis%E7%9A%84%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B%E4%B9%8Bhash/&#34;&gt;上篇文章&lt;/a&gt;吧。现在我们继续学习下一个数据类型  &lt;code&gt;set&lt;/code&gt; 。&lt;/p&gt;
&lt;h2 id=&#34;set简介&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#set简介&#34;&gt;#&lt;/a&gt;  &lt;code&gt;set&lt;/code&gt;  简介&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;Redis&lt;/code&gt;  的  &lt;code&gt;set&lt;/code&gt;  数据类型表示 一堆不重复值的集合。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Redis&lt;/code&gt;  的 &lt;code&gt;set&lt;/code&gt;  数据类型有两种编码方式.  &lt;code&gt;OBJ_ENCODING_INTSET&lt;/code&gt;  和  &lt;code&gt;OBJ_ENCODING_HT&lt;/code&gt; .&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;OBJ_ENCODING_HT&lt;/code&gt;  这种编码方式在上一篇文章 &lt;a href=&#34;/2021/08/01/Redis%E7%B3%BB%E5%88%97/B-3-Redis%E7%9A%84%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B%E4%B9%8Bhash/&#34;&gt;07-Redis 的数据类型之 hash&lt;/a&gt; 中已经简单的介绍过了。其实现的数据结构为  &lt;code&gt;dict&lt;/code&gt; 。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;OBJ_ENCODING_INTSET&lt;/code&gt; , 这种编码方式是我们要新学习的编码方式。 &lt;a href=&#34;#intset&#34;&gt;电梯直达&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;如果你看到这句话，那就说明你是一个特别认真的人。哈哈哈，我们还是先遵循惯例。先学习 &lt;code&gt;set&lt;/code&gt;  类型相关的命令。&lt;/p&gt;
&lt;h2 id=&#34;set类型的应用场景&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#set类型的应用场景&#34;&gt;#&lt;/a&gt;  &lt;code&gt;set&lt;/code&gt;  类型的应用场景&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;社交系统中存储关注信息，点赞信息，利用交并差运算，计算共同好友等业务中。比如 &lt;code&gt;qq&lt;/code&gt;  的好友推荐逻辑，就可以使用差集运算。&lt;/li&gt;
&lt;li&gt;需要去重的业务逻辑中。某一时间端内系统的增长人数。&lt;/li&gt;
&lt;li&gt;统计访问网站的独立 &lt;code&gt;IP&lt;/code&gt; 。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;set的基本命令&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#set的基本命令&#34;&gt;#&lt;/a&gt;  &lt;code&gt;set&lt;/code&gt;  的基本命令&lt;/h2&gt;
&lt;h3 id=&#34;sadd&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#sadd&#34;&gt;#&lt;/a&gt;  &lt;code&gt;sadd&lt;/code&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;语法&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;SADD key member [member ...]&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;解释&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;set add&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;将一个或多个  &lt;code&gt;member&lt;/code&gt;  元素加入到集合  &lt;code&gt;key&lt;/code&gt;  当中，已经存在于集合的  &lt;code&gt;member&lt;/code&gt;  元素将被忽略。&lt;/p&gt;
&lt;p&gt;假如  &lt;code&gt;key&lt;/code&gt;  不存在，则创建一个只包含  &lt;code&gt;member&lt;/code&gt;  元素作成员的集合。&lt;/p&gt;
&lt;p&gt;当  &lt;code&gt;key&lt;/code&gt;  不是集合类型时，返回一个错误。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;演示&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight sh&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; sadd k52 mem1 mem2 &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(&lt;span class=&#34;built_in&#34;&gt;integer&lt;/span&gt;) 2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; sadd k52 mem1 &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(&lt;span class=&#34;built_in&#34;&gt;integer&lt;/span&gt;) 0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; sadd k52 mem1 mem3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(&lt;span class=&#34;built_in&#34;&gt;integer&lt;/span&gt;) 1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;smembers&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#smembers&#34;&gt;#&lt;/a&gt;  &lt;code&gt;smembers&lt;/code&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;语法&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;SMEMBERS key&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;解释&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;set members&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;返回集合  &lt;code&gt;key&lt;/code&gt;  中的所有成员。&lt;/p&gt;
&lt;p&gt;不存在的  &lt;code&gt;key&lt;/code&gt;  被视为空集合&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;演示&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight sh&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 查询元素， 注意保存是无序的.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; SADD k53 m1 m2 m3 m4 m5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(&lt;span class=&#34;built_in&#34;&gt;integer&lt;/span&gt;) 5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; SMEMBERS k53&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1) &lt;span class=&#34;string&#34;&gt;&amp;quot;m4&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2) &lt;span class=&#34;string&#34;&gt;&amp;quot;m3&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3) &lt;span class=&#34;string&#34;&gt;&amp;quot;m2&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4) &lt;span class=&#34;string&#34;&gt;&amp;quot;m1&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5) &lt;span class=&#34;string&#34;&gt;&amp;quot;m5&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;sismember&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#sismember&#34;&gt;#&lt;/a&gt;  &lt;code&gt;sismember&lt;/code&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;语法&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;SISMEMBER key member&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;解释&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;set is members&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;判断  &lt;code&gt;member&lt;/code&gt;  元素是否集合  &lt;code&gt;key&lt;/code&gt;  的成员。&lt;/p&gt;
&lt;p&gt;如果  &lt;code&gt;member&lt;/code&gt;  元素是集合的成员，返回  &lt;code&gt;1&lt;/code&gt;  。 如果  &lt;code&gt;member&lt;/code&gt;  元素不是集合的成员，或  &lt;code&gt;key&lt;/code&gt;  不存在，返回  &lt;code&gt;0&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;演示&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight sh&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; SADD k54 m1 m2 m3 m4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(&lt;span class=&#34;built_in&#34;&gt;integer&lt;/span&gt;) 4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; SISMEMBER k54 m2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(&lt;span class=&#34;built_in&#34;&gt;integer&lt;/span&gt;) 1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; SISMEMBER k54 m5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(&lt;span class=&#34;built_in&#34;&gt;integer&lt;/span&gt;) 0&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;spop&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#spop&#34;&gt;#&lt;/a&gt;  &lt;code&gt;spop&lt;/code&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;语法&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;SPOP key [count]&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;解释&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;set pop&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;移除并返回集合中的 &lt;b&gt;随机一个&lt;/b&gt; 元素。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;演示&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight sh&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; SADD k55 m1 m2 m3 m4 m5 m6 m7 m8 m9 m10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(&lt;span class=&#34;built_in&#34;&gt;integer&lt;/span&gt;) 10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 随机移除一个元素&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; spop k55&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;&amp;quot;m9&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; spop k55&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;&amp;quot;m2&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; spop k55&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;&amp;quot;m3&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 随机移除3个元素&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; spop k55 3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1) &lt;span class=&#34;string&#34;&gt;&amp;quot;m5&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2) &lt;span class=&#34;string&#34;&gt;&amp;quot;m4&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3) &lt;span class=&#34;string&#34;&gt;&amp;quot;m10&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 查看所有元素&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; SMEMBERS k55&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1) &lt;span class=&#34;string&#34;&gt;&amp;quot;m1&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2) &lt;span class=&#34;string&#34;&gt;&amp;quot;m7&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3) &lt;span class=&#34;string&#34;&gt;&amp;quot;m8&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4) &lt;span class=&#34;string&#34;&gt;&amp;quot;m6&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;srandmemeber&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#srandmemeber&#34;&gt;#&lt;/a&gt;  &lt;code&gt;srandmemeber&lt;/code&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;语法&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;SRANDMEMBER key [count]&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;解释&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;set rand member&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;返回集合中的 随机  &lt;code&gt;count&lt;/code&gt;  个元素 (不会删除元素)&lt;/p&gt;
&lt;p&gt;如果  &lt;code&gt;count&lt;/code&gt;  为正数，且小于集合基数，那么命令返回一个包含  &lt;code&gt;count&lt;/code&gt;  个元素的数组，数组中的元素各不相同。如果  &lt;code&gt;count&lt;/code&gt;  大于等于集合基数，那么返回整个集合。&lt;/p&gt;
&lt;p&gt;如果  &lt;code&gt;count&lt;/code&gt;  为负数，那么命令返回一个数组，数组中的元素可能会重复出现多次，而数组的长度为  &lt;code&gt;count&lt;/code&gt;  的绝对值。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;演示&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight sh&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;50&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; SADD k56 m1 m2 m3 m4 m5 m6 m7 m8 m9 m10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(&lt;span class=&#34;built_in&#34;&gt;integer&lt;/span&gt;) 10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 随机返回一个元素&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; SRANDMEMBER k56 &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;&amp;quot;m1&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; SRANDMEMBER k56 &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;&amp;quot;m9&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; SRANDMEMBER k56 &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;&amp;quot;m5&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# count是正数，小于集合的元素数,返回count个元素，无重复元素&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; SRANDMEMBER k56 5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1) &lt;span class=&#34;string&#34;&gt;&amp;quot;m7&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2) &lt;span class=&#34;string&#34;&gt;&amp;quot;m1&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3) &lt;span class=&#34;string&#34;&gt;&amp;quot;m5&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4) &lt;span class=&#34;string&#34;&gt;&amp;quot;m6&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5) &lt;span class=&#34;string&#34;&gt;&amp;quot;m3&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# count是正数，大于集合的元素数,返回整个集合&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; SRANDMEMBER k56 20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; 1) &lt;span class=&#34;string&#34;&gt;&amp;quot;m5&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; 2) &lt;span class=&#34;string&#34;&gt;&amp;quot;m6&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; 3) &lt;span class=&#34;string&#34;&gt;&amp;quot;m4&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; 4) &lt;span class=&#34;string&#34;&gt;&amp;quot;m8&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; 5) &lt;span class=&#34;string&#34;&gt;&amp;quot;m7&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; 6) &lt;span class=&#34;string&#34;&gt;&amp;quot;m1&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; 7) &lt;span class=&#34;string&#34;&gt;&amp;quot;m10&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; 8) &lt;span class=&#34;string&#34;&gt;&amp;quot;m3&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; 9) &lt;span class=&#34;string&#34;&gt;&amp;quot;m2&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10) &lt;span class=&#34;string&#34;&gt;&amp;quot;m9&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# count为负数， 返回20个集合中的元素，元素会重复&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; SRANDMEMBER k56 -20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; 1) &lt;span class=&#34;string&#34;&gt;&amp;quot;m6&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; 2) &lt;span class=&#34;string&#34;&gt;&amp;quot;m6&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; 3) &lt;span class=&#34;string&#34;&gt;&amp;quot;m9&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; 4) &lt;span class=&#34;string&#34;&gt;&amp;quot;m7&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; 5) &lt;span class=&#34;string&#34;&gt;&amp;quot;m6&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; 6) &lt;span class=&#34;string&#34;&gt;&amp;quot;m5&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; 7) &lt;span class=&#34;string&#34;&gt;&amp;quot;m6&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; 8) &lt;span class=&#34;string&#34;&gt;&amp;quot;m9&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; 9) &lt;span class=&#34;string&#34;&gt;&amp;quot;m1&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10) &lt;span class=&#34;string&#34;&gt;&amp;quot;m6&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11) &lt;span class=&#34;string&#34;&gt;&amp;quot;m1&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12) &lt;span class=&#34;string&#34;&gt;&amp;quot;m9&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13) &lt;span class=&#34;string&#34;&gt;&amp;quot;m2&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14) &lt;span class=&#34;string&#34;&gt;&amp;quot;m1&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15) &lt;span class=&#34;string&#34;&gt;&amp;quot;m2&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16) &lt;span class=&#34;string&#34;&gt;&amp;quot;m5&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17) &lt;span class=&#34;string&#34;&gt;&amp;quot;m9&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18) &lt;span class=&#34;string&#34;&gt;&amp;quot;m2&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19) &lt;span class=&#34;string&#34;&gt;&amp;quot;m4&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20) &lt;span class=&#34;string&#34;&gt;&amp;quot;m6&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;srem&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#srem&#34;&gt;#&lt;/a&gt;  &lt;code&gt;srem&lt;/code&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;语法&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;SREM key member [member ...]&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;解释&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;set remove&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;移除集合  &lt;code&gt;key&lt;/code&gt;  中的一个或多个  &lt;code&gt;member&lt;/code&gt;  元素，不存在的  &lt;code&gt;member&lt;/code&gt;  元素会被忽略。&lt;/p&gt;
&lt;p&gt;当  &lt;code&gt;key&lt;/code&gt;  不是集合类型，返回一个错误。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;演示&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight sh&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; SADD k57 m1 m2 m3 m4 m5 m6 m7 m8 m9 m10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(&lt;span class=&#34;built_in&#34;&gt;integer&lt;/span&gt;) 10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; SREM k57 m1 m2 m3 &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(&lt;span class=&#34;built_in&#34;&gt;integer&lt;/span&gt;) 3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; SMEMBERS k57&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1) &lt;span class=&#34;string&#34;&gt;&amp;quot;m7&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2) &lt;span class=&#34;string&#34;&gt;&amp;quot;m8&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3) &lt;span class=&#34;string&#34;&gt;&amp;quot;m5&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4) &lt;span class=&#34;string&#34;&gt;&amp;quot;m6&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5) &lt;span class=&#34;string&#34;&gt;&amp;quot;m4&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6) &lt;span class=&#34;string&#34;&gt;&amp;quot;m10&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7) &lt;span class=&#34;string&#34;&gt;&amp;quot;m9&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; SREM k57 m11 m12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(&lt;span class=&#34;built_in&#34;&gt;integer&lt;/span&gt;) 0&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;smove&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#smove&#34;&gt;#&lt;/a&gt;  &lt;code&gt;smove&lt;/code&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;语法&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;SMOVE source destination member&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;解释&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;set move&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;将  &lt;code&gt;member&lt;/code&gt;  元素从  &lt;code&gt;source&lt;/code&gt;  集合移动到  &lt;code&gt;destination&lt;/code&gt;  集合。&lt;/p&gt;
&lt;p&gt;&lt;b&gt; &lt;code&gt;SMOVE&lt;/code&gt;  是原子性操作&lt;/b&gt;。&lt;/p&gt;
&lt;p&gt;如果  &lt;code&gt;source&lt;/code&gt;  集合不存在或不包含指定的  &lt;code&gt;member&lt;/code&gt;  元素，则  &lt;code&gt;SMOVE&lt;/code&gt;  命令不执行任何操作，仅返回  &lt;code&gt;0&lt;/code&gt;  。否则，  &lt;code&gt;member&lt;/code&gt;  元素从  &lt;code&gt;source&lt;/code&gt;  集合中被移除，并添加到  &lt;code&gt;destination&lt;/code&gt;  集合中去。&lt;/p&gt;
&lt;p&gt;当  &lt;code&gt;destination&lt;/code&gt;  集合已经包含  &lt;code&gt;member&lt;/code&gt;  元素时，  &lt;code&gt;SMOVE&lt;/code&gt;  命令只是简单地将  &lt;code&gt;source&lt;/code&gt;  集合中的  &lt;code&gt;member&lt;/code&gt;  元素删除。&lt;/p&gt;
&lt;p&gt;当  &lt;code&gt;source&lt;/code&gt;  或  &lt;code&gt;destination&lt;/code&gt;  不是集合类型时，返回一个错误。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;演示&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight sh&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; SADD k58 m1 m2 m3 m4 m5 m6 m7 m8 m9 m10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(&lt;span class=&#34;built_in&#34;&gt;integer&lt;/span&gt;) 10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 移动两个元素到k58_dis&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; SMOVE k58 k58_dis m1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(&lt;span class=&#34;built_in&#34;&gt;integer&lt;/span&gt;) 1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; SMOVE k58 k58_dis m2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(&lt;span class=&#34;built_in&#34;&gt;integer&lt;/span&gt;) 1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; SMOVE k58 k58_dis m1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(&lt;span class=&#34;built_in&#34;&gt;integer&lt;/span&gt;) 0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# k58中的m1，m2 已被移除。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; SMEMBERS k58&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1) &lt;span class=&#34;string&#34;&gt;&amp;quot;m7&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2) &lt;span class=&#34;string&#34;&gt;&amp;quot;m8&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3) &lt;span class=&#34;string&#34;&gt;&amp;quot;m5&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4) &lt;span class=&#34;string&#34;&gt;&amp;quot;m6&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5) &lt;span class=&#34;string&#34;&gt;&amp;quot;m4&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6) &lt;span class=&#34;string&#34;&gt;&amp;quot;m10&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7) &lt;span class=&#34;string&#34;&gt;&amp;quot;m3&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8) &lt;span class=&#34;string&#34;&gt;&amp;quot;m9&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# k58_dis中的m1,m2&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; SMEMBERS k58_dis&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1) &lt;span class=&#34;string&#34;&gt;&amp;quot;m2&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2) &lt;span class=&#34;string&#34;&gt;&amp;quot;m1&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;scard&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#scard&#34;&gt;#&lt;/a&gt;  &lt;code&gt;scard&lt;/code&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;语法&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;SCARD key&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;解释&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;返回集合  &lt;code&gt;key&lt;/code&gt;  的基数 (集合中元素的数量)。&lt;br&gt;
集合的基数。 当  &lt;code&gt;key&lt;/code&gt;  不存在时，返回  &lt;code&gt;0&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;演示&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight sh&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; SADD k59 m1 m2 m3 m4 m5 m6 m7 m8 m9 m10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(&lt;span class=&#34;built_in&#34;&gt;integer&lt;/span&gt;) 10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 获取元素个数&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; SCARD k59&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(&lt;span class=&#34;built_in&#34;&gt;integer&lt;/span&gt;) 10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;sinter&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#sinter&#34;&gt;#&lt;/a&gt;  &lt;code&gt;sinter&lt;/code&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;语法&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt; SINTER key [key ...]&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;解释&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;set intersection&lt;/code&gt;  :  &lt;code&gt;set&lt;/code&gt;  的交集&lt;/p&gt;
&lt;p&gt;返回一个集合的全部成员，该集合是所有给定集合的交集。&lt;/p&gt;
&lt;p&gt;不存在的  &lt;code&gt;key&lt;/code&gt;  被视为空集。&lt;/p&gt;
&lt;p&gt;当给定集合当中有一个空集时，结果也为空集 (根据集合运算定律)。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;演示&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight sh&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; SADD k60_1 m1 m2 m3 m4 m5 &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(&lt;span class=&#34;built_in&#34;&gt;integer&lt;/span&gt;) 5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; SADD k60_2 m2 m3 m4 m5 m6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(&lt;span class=&#34;built_in&#34;&gt;integer&lt;/span&gt;) 5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; SADD k60_3 m4 m5 m6 m7 m8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(&lt;span class=&#34;built_in&#34;&gt;integer&lt;/span&gt;) 5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 指定了一个key，返回集合的所有元素&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; SINTER k60_1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1) &lt;span class=&#34;string&#34;&gt;&amp;quot;m4&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2) &lt;span class=&#34;string&#34;&gt;&amp;quot;m3&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3) &lt;span class=&#34;string&#34;&gt;&amp;quot;m2&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4) &lt;span class=&#34;string&#34;&gt;&amp;quot;m1&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5) &lt;span class=&#34;string&#34;&gt;&amp;quot;m5&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 多个key的时候，返回集合的交集。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; SINTER k60_1 k60_2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1) &lt;span class=&#34;string&#34;&gt;&amp;quot;m4&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2) &lt;span class=&#34;string&#34;&gt;&amp;quot;m3&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3) &lt;span class=&#34;string&#34;&gt;&amp;quot;m2&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4) &lt;span class=&#34;string&#34;&gt;&amp;quot;m5&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 多个key的时候，返回集合的交集。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; SINTER k60_1 k60_2 k60_3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1) &lt;span class=&#34;string&#34;&gt;&amp;quot;m4&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2) &lt;span class=&#34;string&#34;&gt;&amp;quot;m5&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# k60_4不存在，为空集&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; SINTER k60_1 k60_4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(empty list or &lt;span class=&#34;built_in&#34;&gt;set&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;sinterstore&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#sinterstore&#34;&gt;#&lt;/a&gt;  &lt;code&gt;sinterstore&lt;/code&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;语法&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;SINTERSTORE destination key [key ...]&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;解释&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;set intersection and store&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;这个命令类似于 SINTER key [key …] 命令，返回集合的交集。但它将结果保存到 destination 集合，而不是简单地返回结果集。&lt;/p&gt;
&lt;p&gt;如果 destination 集合已经存在，则将其覆盖。&lt;/p&gt;
&lt;p&gt;destination 可以是 key 本身。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;演示&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight sh&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; SADD k61_1 m1 m2 m3 m4 m5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(&lt;span class=&#34;built_in&#34;&gt;integer&lt;/span&gt;) 5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; SADD k61_2 m4 m5 m6 m7 m8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(&lt;span class=&#34;built_in&#34;&gt;integer&lt;/span&gt;) 5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 将k61_1 和 k61_2 集合的交集存储到k61_dis中&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; SINTERSTORE k61_dis k61_1 k61_2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(&lt;span class=&#34;built_in&#34;&gt;integer&lt;/span&gt;) 2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 查看 k61_dis&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; SMEMBERS k61_dis&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1) &lt;span class=&#34;string&#34;&gt;&amp;quot;m4&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2) &lt;span class=&#34;string&#34;&gt;&amp;quot;m5&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# k61_1 和 k61_2 没有变化&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; SMEMBERS k61_1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1) &lt;span class=&#34;string&#34;&gt;&amp;quot;m4&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2) &lt;span class=&#34;string&#34;&gt;&amp;quot;m3&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3) &lt;span class=&#34;string&#34;&gt;&amp;quot;m2&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4) &lt;span class=&#34;string&#34;&gt;&amp;quot;m1&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5) &lt;span class=&#34;string&#34;&gt;&amp;quot;m5&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; SMEMBERS k61_2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1) &lt;span class=&#34;string&#34;&gt;&amp;quot;m7&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2) &lt;span class=&#34;string&#34;&gt;&amp;quot;m8&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3) &lt;span class=&#34;string&#34;&gt;&amp;quot;m5&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4) &lt;span class=&#34;string&#34;&gt;&amp;quot;m6&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5) &lt;span class=&#34;string&#34;&gt;&amp;quot;m4&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 如果目标集合(k61_dis)存在，元素会被覆盖掉。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; SADD k61_3 m1 m2 m3 &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(&lt;span class=&#34;built_in&#34;&gt;integer&lt;/span&gt;) 3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; SINTERSTORE k61_dis k61_1 k61_3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(&lt;span class=&#34;built_in&#34;&gt;integer&lt;/span&gt;) 3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; SMEMBERS k61_dis&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1) &lt;span class=&#34;string&#34;&gt;&amp;quot;m1&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2) &lt;span class=&#34;string&#34;&gt;&amp;quot;m2&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3) &lt;span class=&#34;string&#34;&gt;&amp;quot;m3&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;sunion&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#sunion&#34;&gt;#&lt;/a&gt;  &lt;code&gt;sunion&lt;/code&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;语法&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;SUNION key [key ...]&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;解释&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;set union&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;返回一个集合的全部成员，如果是多个集合 (key), 返回所有给定集合的并集。&lt;/p&gt;
&lt;p&gt;不存在的 key 被视为空集。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;演示&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight sh&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; SADD k62_1 m1 m2 m3 &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(&lt;span class=&#34;built_in&#34;&gt;integer&lt;/span&gt;) 3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; SADD k62_2 m2 m3 m4 m5 m6 &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(&lt;span class=&#34;built_in&#34;&gt;integer&lt;/span&gt;) 5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 一个key，返回整个集合。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; SUNION k62_1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1) &lt;span class=&#34;string&#34;&gt;&amp;quot;m1&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2) &lt;span class=&#34;string&#34;&gt;&amp;quot;m2&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3) &lt;span class=&#34;string&#34;&gt;&amp;quot;m3&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 多个key，返回并集&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; SUNION k62_1 k62_2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1) &lt;span class=&#34;string&#34;&gt;&amp;quot;m3&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2) &lt;span class=&#34;string&#34;&gt;&amp;quot;m1&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3) &lt;span class=&#34;string&#34;&gt;&amp;quot;m5&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4) &lt;span class=&#34;string&#34;&gt;&amp;quot;m6&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5) &lt;span class=&#34;string&#34;&gt;&amp;quot;m2&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6) &lt;span class=&#34;string&#34;&gt;&amp;quot;m4&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;sunionstore&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#sunionstore&#34;&gt;#&lt;/a&gt;  &lt;code&gt;sunionstore&lt;/code&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;语法&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;SUNIONSTORE destination key [key ...]&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;解释&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;set union and store&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;同 SINTERSTORE , 只不过存储的是并集的结果。 将多个集合的并集存储到 distination 中。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;演示&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight sh&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; SADD k63_1 m1 m2 m3 &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(&lt;span class=&#34;built_in&#34;&gt;integer&lt;/span&gt;) 3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; SADD k63_2 m2 m3 m4 m5 m6 &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(&lt;span class=&#34;built_in&#34;&gt;integer&lt;/span&gt;) 5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; SUNIONSTORE k63_dis k62_1 k62_2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(&lt;span class=&#34;built_in&#34;&gt;integer&lt;/span&gt;) 6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; SMEMBERS k63_dis&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1) &lt;span class=&#34;string&#34;&gt;&amp;quot;m3&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2) &lt;span class=&#34;string&#34;&gt;&amp;quot;m1&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3) &lt;span class=&#34;string&#34;&gt;&amp;quot;m5&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4) &lt;span class=&#34;string&#34;&gt;&amp;quot;m6&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5) &lt;span class=&#34;string&#34;&gt;&amp;quot;m2&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6) &lt;span class=&#34;string&#34;&gt;&amp;quot;m4&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;sdiff&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#sdiff&#34;&gt;#&lt;/a&gt;  &lt;code&gt;sdiff&lt;/code&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;语法&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;SDIFF key [key ...]&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;解释&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;set difference&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;如果指定一个集合， &lt;code&gt;key&lt;/code&gt; ，返回一个集合的全部成员，&lt;/p&gt;
&lt;p&gt;如果指定了多个集合 ( &lt;code&gt;key&lt;/code&gt; ), 则返回 所有给定集合之间的差集。&lt;/p&gt;
&lt;p&gt;不存在的  &lt;code&gt;key&lt;/code&gt;  被视为空集。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;演示&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight sh&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; SADD k64_1 m1 m2 m3 &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(&lt;span class=&#34;built_in&#34;&gt;integer&lt;/span&gt;) 3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; SADD k64_2 m2 m3 m4 m5 m6 &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(&lt;span class=&#34;built_in&#34;&gt;integer&lt;/span&gt;) 5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 返回 k64_1 - k64_2&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; SDIFF k64_1 k64_2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1) &lt;span class=&#34;string&#34;&gt;&amp;quot;m1&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 返回 k64_2 - k64_1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; SDIFF k64_2 k64_1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1) &lt;span class=&#34;string&#34;&gt;&amp;quot;m6&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2) &lt;span class=&#34;string&#34;&gt;&amp;quot;m4&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3) &lt;span class=&#34;string&#34;&gt;&amp;quot;m5&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;sdiffstore&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#sdiffstore&#34;&gt;#&lt;/a&gt;  &lt;code&gt;sdiffstore&lt;/code&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;语法&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;SDIFFSTORE destination key [key ...]&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;解释&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;将集合的差集存储到  &lt;code&gt;destination&lt;/code&gt;  集合中.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;演示&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight sh&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; SADD k65_1 m1 m2 m3 &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(&lt;span class=&#34;built_in&#34;&gt;integer&lt;/span&gt;) 3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; SADD k65_2 m2 m3 m4 m5 m6 &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(&lt;span class=&#34;built_in&#34;&gt;integer&lt;/span&gt;) 5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; SDIFFSTORE k65_dis_1 k65_1 k65_2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(&lt;span class=&#34;built_in&#34;&gt;integer&lt;/span&gt;) 1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; SMEMBERS k65_dis_1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1) &lt;span class=&#34;string&#34;&gt;&amp;quot;m1&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; SDIFFSTORE k65_dis_2 k65_2 k65_1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(&lt;span class=&#34;built_in&#34;&gt;integer&lt;/span&gt;) 3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; SMEMBERS k65_dis_2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1) &lt;span class=&#34;string&#34;&gt;&amp;quot;m6&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2) &lt;span class=&#34;string&#34;&gt;&amp;quot;m4&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3) &lt;span class=&#34;string&#34;&gt;&amp;quot;m5&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;sscan&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#sscan&#34;&gt;#&lt;/a&gt;  &lt;code&gt;sscan&lt;/code&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;语法&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;SSCAN key cursor [MATCH pattern] [COUNT count]&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;解释&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;set scan&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;这是一个查询命令。 同  &lt;code&gt;SCAN&lt;/code&gt;  命令。可以参考这篇文章 &lt;a href=&#34;./010-%E5%85%B6%E4%BB%96%E5%91%BD%E4%BB%A4.md&#34;&gt;010 - 其他命令&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;SCAN&lt;/code&gt;  命令是一个基于游标的迭代器（ &lt;code&gt;cursor based iterator&lt;/code&gt; ）：  &lt;code&gt;SCAN&lt;/code&gt;  命令每次被调用之后， 都会向用户返回一个新的游标， 用户在下次迭代时需要使用这个新游标作为  &lt;code&gt;SCAN&lt;/code&gt;  命令的游标参数， 以此来延续之前的迭代过程。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;演示&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight sh&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; SSCAN k66 1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1) &lt;span class=&#34;string&#34;&gt;&amp;quot;0&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2) 1) &lt;span class=&#34;string&#34;&gt;&amp;quot;m1&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   2) &lt;span class=&#34;string&#34;&gt;&amp;quot;m3&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   3) &lt;span class=&#34;string&#34;&gt;&amp;quot;m2&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   4) &lt;span class=&#34;string&#34;&gt;&amp;quot;m4&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   5) &lt;span class=&#34;string&#34;&gt;&amp;quot;m5&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; SSCAN k66 0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1) &lt;span class=&#34;string&#34;&gt;&amp;quot;0&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2) 1) &lt;span class=&#34;string&#34;&gt;&amp;quot;m6&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   2) &lt;span class=&#34;string&#34;&gt;&amp;quot;m1&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   3) &lt;span class=&#34;string&#34;&gt;&amp;quot;m3&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   4) &lt;span class=&#34;string&#34;&gt;&amp;quot;m2&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   5) &lt;span class=&#34;string&#34;&gt;&amp;quot;m4&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   6) &lt;span class=&#34;string&#34;&gt;&amp;quot;m5&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; SSCAN k66 1 MATCH m2 Count 10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1) &lt;span class=&#34;string&#34;&gt;&amp;quot;0&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2) 1) &lt;span class=&#34;string&#34;&gt;&amp;quot;m2&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; &lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&#34;set的内部结构&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#set的内部结构&#34;&gt;#&lt;/a&gt;  &lt;code&gt;set&lt;/code&gt;  的内部结构&lt;/h2&gt;
&lt;p&gt;在 t_set.c 这个文件中。&lt;/p&gt;
&lt;figure class=&#34;highlight c++&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;robj *&lt;span class=&#34;title&#34;&gt;setTypeCreate&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(sds value)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (&lt;span class=&#34;built_in&#34;&gt;isSdsRepresentableAsLongLong&lt;/span&gt;(value,&lt;span class=&#34;literal&#34;&gt;NULL&lt;/span&gt;) == C_OK)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;createIntsetObject&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;createSetObject&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;表明， &lt;code&gt;set&lt;/code&gt;  数据类型是由两种数据结构来实现的。&lt;/p&gt;
&lt;p&gt;而在  &lt;code&gt;createSetObject()&lt;/code&gt; ，指明了其编码方式是  &lt;code&gt;OBJ_ENCODING_HT&lt;/code&gt; , 即哈希表的方式，也就是使用 dict 这种数据结构来存储的。&lt;/p&gt;
&lt;figure class=&#34;highlight c++&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;robj *&lt;span class=&#34;title&#34;&gt;createSetObject&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(&lt;span class=&#34;keyword&#34;&gt;void&lt;/span&gt;)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    dict *d = &lt;span class=&#34;built_in&#34;&gt;dictCreate&lt;/span&gt;(&amp;amp;setDictType, &lt;span class=&#34;literal&#34;&gt;NULL&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    robj *o = &lt;span class=&#34;built_in&#34;&gt;createObject&lt;/span&gt;(OBJ_SET, d);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    o-&amp;gt;encoding = OBJ_ENCODING_HT;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; o;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;hashtable&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#hashtable&#34;&gt;#&lt;/a&gt;  &lt;code&gt;hashtable&lt;/code&gt;&lt;/h3&gt;
&lt;p&gt;这里就不赘述了。直接上&lt;a href=&#34;/2021/08/01/Redis%E7%B3%BB%E5%88%97/B-3-Redis%E7%9A%84%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B%E4%B9%8Bhash/&#34;&gt;穿梭机&lt;/a&gt;吧。&lt;/p&gt;
&lt;h3 id=&#34;intset&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#intset&#34;&gt;#&lt;/a&gt; intset&lt;/h3&gt;
&lt;p&gt;在 &lt;code&gt;createIntsetObject()&lt;/code&gt;  中指明了使用的编码方式是  &lt;code&gt;OBJ_ENCODING_INTSET&lt;/code&gt; . 如下。&lt;/p&gt;
&lt;figure class=&#34;highlight c++&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;robj *&lt;span class=&#34;title&#34;&gt;createIntsetObject&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(&lt;span class=&#34;keyword&#34;&gt;void&lt;/span&gt;)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    intset *is = &lt;span class=&#34;built_in&#34;&gt;intsetNew&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    robj *o = &lt;span class=&#34;built_in&#34;&gt;createObject&lt;/span&gt;(OBJ_SET, is);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    o-&amp;gt;encoding = OBJ_ENCODING_INTSET;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; o;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;我们来看看  &lt;code&gt;intset&lt;/code&gt;  到底什么何方利器.&lt;/p&gt;
&lt;p&gt;我直接全项目搜索:  &lt;code&gt;intset&lt;/code&gt;  ，就找到了  &lt;code&gt;intset.h&lt;/code&gt; .&lt;/p&gt;
&lt;figure class=&#34;highlight c++&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;typedef&lt;/span&gt; &lt;span class=&#34;class&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;struct&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;intset&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;uint32_t&lt;/span&gt; encoding; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;uint32_t&lt;/span&gt; length;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;int8_t&lt;/span&gt; contents[];&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125; intset;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&#34;字段解释&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#字段解释&#34;&gt;#&lt;/a&gt; 字段解释:&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;encoding&lt;/code&gt; : 数据编码，表示 &lt;code&gt;intset&lt;/code&gt;  中的每个数据元素用几个字节来存储。它有三种可能的取值： &lt;code&gt;INTSET_ENC_INT16&lt;/code&gt;  表示每个元素用 &lt;code&gt;2&lt;/code&gt;  个字节存储， &lt;code&gt;INTSET_ENC_INT32&lt;/code&gt;  表示每个元素用 &lt;code&gt;4&lt;/code&gt;  个字节存储， &lt;code&gt;INTSET_ENC_INT64&lt;/code&gt;  表示每个元素用 &lt;code&gt;8&lt;/code&gt;  个字节存储。因此， &lt;code&gt;intset&lt;/code&gt;  中存储的整数最多只能占用 &lt;code&gt;64bit&lt;/code&gt; 。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;length&lt;/code&gt; : 表示 &lt;code&gt;intset&lt;/code&gt;  中的元素个数。 &lt;code&gt;encoding&lt;/code&gt;  和 &lt;code&gt;length&lt;/code&gt;  两个字段构成了 &lt;code&gt;intset&lt;/code&gt;  的头部（ &lt;code&gt;header&lt;/code&gt; ）。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;contents&lt;/code&gt; : 是一个柔性数组（ &lt;code&gt;flexible array member&lt;/code&gt; ），表示 &lt;code&gt;intset&lt;/code&gt;  的 &lt;code&gt;header&lt;/code&gt;  后面紧跟着数据元素。这个数组的总长度（即总字节数）等于 &lt;code&gt;encoding * length&lt;/code&gt; 。柔性数组在 &lt;code&gt;Redis&lt;/code&gt;  的很多数据结构的定义中都出现过（例如 &lt;code&gt;sds&lt;/code&gt; ,  &lt;code&gt;quicklist&lt;/code&gt; ,  &lt;code&gt;skiplist&lt;/code&gt; ），用于表达一个偏移量。 &lt;code&gt;contents&lt;/code&gt;  需要单独为其分配空间，这部分内存不包含在 &lt;code&gt;intset&lt;/code&gt;  结构当中。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;这里有个问题.&lt;/p&gt;
&lt;p&gt;Redis 是如何决定一个 set 使用哪种编码方式的呢？&lt;/p&gt;
&lt;p&gt;set 的编码是由第一个元素决定的。&lt;/p&gt;
&lt;figure class=&#34;highlight c++&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;robj *&lt;span class=&#34;title&#34;&gt;setTypeCreate&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(sds value)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (&lt;span class=&#34;built_in&#34;&gt;isSdsRepresentableAsLongLong&lt;/span&gt;(value,&lt;span class=&#34;literal&#34;&gt;NULL&lt;/span&gt;) == C_OK)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;createIntsetObject&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;createSetObject&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;isSdsRepresentableAsLongLong&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(sds s, &lt;span class=&#34;keyword&#34;&gt;long&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;long&lt;/span&gt; *llval)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;string2ll&lt;/span&gt;(s, &lt;span class=&#34;built_in&#34;&gt;sdslen&lt;/span&gt;(s), llval) ? C_OK : C_ERR;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;如果  &lt;code&gt;value&lt;/code&gt;  可以转换成  &lt;code&gt;long long&lt;/code&gt;  类型的话，就使用  &lt;code&gt;inset&lt;/code&gt;  编码方式。&lt;/p&gt;
&lt;p&gt;通过看源码发现:&lt;/p&gt;
&lt;p&gt;当 &lt;code&gt;intset&lt;/code&gt;  的元素个数超过  &lt;code&gt;set_max_intset_entries&lt;/code&gt;  这个配置的时候，就会从 &lt;code&gt;intset&lt;/code&gt;  编码 ( &lt;code&gt;OBJ_ENCODING_INTSET&lt;/code&gt; ) 转换成  &lt;code&gt;ht&lt;/code&gt;  编码 ( &lt;code&gt;OBJ_ENCODING_HT&lt;/code&gt; )。&lt;/p&gt;
&lt;p&gt;这个我们会在后续文章中说明这里的方案。&lt;/p&gt;
&lt;p&gt;好了，关于 set 类型的介绍就到这里了。&lt;/p&gt;
&lt;h2 id=&#34;总结&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#总结&#34;&gt;#&lt;/a&gt; 总结&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;set&lt;/code&gt;  这种类型是一种无重复元素的集合。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;set&lt;/code&gt;  的业务场景关键字：去重，交并差运算。但是一定是无序的。如果要求有序的话，那就 &lt;a href=&#34;./09-Redis%E7%9A%84%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B%E4%B9%8B%E6%9C%89%E5%BA%8F%E9%9B%86%E5%90%88zset.md&#34;&gt;下一篇文章  zset&lt;/a&gt; ~&lt;/li&gt;
&lt;li&gt;&lt;code&gt;set&lt;/code&gt;  的  &lt;code&gt;15&lt;/code&gt;  个命令，务必熟记！！！&lt;/li&gt;
&lt;li&gt;&lt;code&gt;set&lt;/code&gt;  的内部编码方式。哈希表编码和 &lt;code&gt;intset&lt;/code&gt;  编码。后面会有 关于  &lt;code&gt;intset&lt;/code&gt;  数据结构的详细介绍的文章～&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;最后&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#最后&#34;&gt;#&lt;/a&gt; 最后&lt;/h2&gt;
&lt;p&gt;期望与你一起遇见更好的自己&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/images/qrcode.jpg&#34; alt=&#34;期望与你一起遇见更好的自己&#34;&gt;&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://fangjiaxiaobai.github.io/2021/08/01/Redis%E7%B3%BB%E5%88%97/B-3-Redis%E7%9A%84%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B%E4%B9%8Bhash/</guid>
            <title>Redis数据结构之 Hash</title>
            <link>https://fangjiaxiaobai.github.io/2021/08/01/Redis%E7%B3%BB%E5%88%97/B-3-Redis%E7%9A%84%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B%E4%B9%8Bhash/</link>
            <category>Redis</category>
            <pubDate>Sun, 01 Aug 2021 15:18:55 +0800</pubDate>
            <description><![CDATA[ &lt;h2 id=&#34;书接上回&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#书接上回&#34;&gt;#&lt;/a&gt; 书接上回&lt;/h2&gt;
&lt;p&gt;前一篇文章，我们学习的是 &lt;a href=&#34;/2021/08/01/Redis%E7%B3%BB%E5%88%97/B-2-Redis%E7%9A%84%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B%E4%B9%8Blist/&#34;&gt;Redis 的数据结构 list&lt;/a&gt;， 学习了其基本的操作和使用内部数据结构是 &lt;code&gt;quicklist&lt;/code&gt;  和 &lt;code&gt;ziplist&lt;/code&gt; ，这两种数据结构虽然起得名字是 &lt;code&gt;list&lt;/code&gt; ，但是其内部结构却是链表。如果不记得了其内部构成，就再看看看着&lt;a href=&#34;/2021/08/01/Redis%E7%B3%BB%E5%88%97/B-2-Redis%E7%9A%84%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B%E4%B9%8Blist/&#34;&gt;上篇文章&lt;/a&gt;吧。现在我们继续学习下一个数据类型  &lt;code&gt;hash&lt;/code&gt;&lt;/p&gt;
&lt;h2 id=&#34;hash简介&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#hash简介&#34;&gt;#&lt;/a&gt;  &lt;code&gt;hash&lt;/code&gt;  简介&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;hash&lt;/code&gt;  是一个键值对集合。是  &lt;code&gt;string&lt;/code&gt;  类型的  &lt;code&gt;key&lt;/code&gt;  和  &lt;code&gt;value&lt;/code&gt;  的映射表，hash 特别适合用于存储对象，每个 &lt;code&gt;hash&lt;/code&gt;  类型可以存储  &lt;code&gt;2^32-1&lt;/code&gt;  个键值对。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;hash&lt;/code&gt;  实际上就是一个 哈希表。类似于  &lt;code&gt;Java&lt;/code&gt;  里的 &lt;code&gt;HashTable&lt;/code&gt; 。&lt;/p&gt;
&lt;p&gt;但是  &lt;code&gt;Redis&lt;/code&gt;  的哈希是有两种数据结构 (内部编码) 来表示的。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;一种是  &lt;code&gt;ziplist&lt;/code&gt;  , 上篇文章中我们简单的介绍了 &lt;code&gt;ziplist&lt;/code&gt;  的内部构成，见 &lt;a href=&#34;./06-Redis%E7%9A%84%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B%E4%B9%8Blist.md&#34;&gt;Redis 的数据结构 list&lt;/a&gt;, 以及 &lt;code&gt;ziplist&lt;/code&gt;  的编码方式，可以看这篇文章 &lt;a href=&#34;/2021/08/01/Redis%E7%B3%BB%E5%88%97/C-1-Redis%E7%9A%84%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B9%8Bziplist/&#34;&gt;10-Redis 的数据结构之 ziplist.md&lt;/a&gt;. 那么  &lt;code&gt;Redis&lt;/code&gt;  什么时候会使用 &lt;code&gt;ziplist&lt;/code&gt;  这种编码方式呢？&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;当  &lt;code&gt;hash&lt;/code&gt;  类型的元素的个数小于  &lt;code&gt;hash-max-ziplist-enties&lt;/code&gt;  配置，默认 &lt;code&gt;512&lt;/code&gt; .&lt;/li&gt;
&lt;li&gt;所有的值都小于 &lt;code&gt;hash-max-ziplist-value&lt;/code&gt;  的值，默认是 &lt;code&gt;64&lt;/code&gt;  个字节的时候。&lt;br&gt;
当同时满足以上两个条件的时候， 就会使用  &lt;code&gt;ziplist&lt;/code&gt;  这种结构。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;这种方式最大的优点就是节约空间。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;另一种就是使用  &lt;code&gt;hashtable&lt;/code&gt;  来编码了。当不满足上面提及的两个条件时，就会使用  &lt;code&gt;hashtable&lt;/code&gt;  来编码。实际上是  &lt;code&gt;dict&lt;/code&gt;  这种数据结构。这里我们又可以学习到一个新的数据结构  &lt;code&gt;dict&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;hash的应用场景&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#hash的应用场景&#34;&gt;#&lt;/a&gt; hash 的应用场景&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;缓存对象信息：对象的每个属性对应着 &lt;code&gt;hash&lt;/code&gt;  的一个键值对。改变的时候，只需要改变对应的某个 &lt;code&gt;filed-value&lt;/code&gt;  即可。&lt;/li&gt;
&lt;li&gt;缓存购物车的信息：用户的 &lt;code&gt;id&lt;/code&gt;  为 &lt;code&gt;key&lt;/code&gt; ， 商品的 &lt;code&gt;id&lt;/code&gt;  为  &lt;code&gt;field&lt;/code&gt; . 商品的数量为 &lt;code&gt;value&lt;/code&gt; 。 比如:  &lt;code&gt;hset userId productId productCount&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;hash的基本命令&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#hash的基本命令&#34;&gt;#&lt;/a&gt;  &lt;code&gt;hash&lt;/code&gt;  的基本命令&lt;/h2&gt;
&lt;h3 id=&#34;hset&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#hset&#34;&gt;#&lt;/a&gt;  &lt;code&gt;hset&lt;/code&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;语法&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;hset key field value&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;解释&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;将哈希表  &lt;code&gt;hash&lt;/code&gt;  中域  &lt;code&gt;field&lt;/code&gt;  的值设置为  &lt;code&gt;value&lt;/code&gt;  。&lt;/p&gt;
&lt;p&gt;如果给定的哈希表并不存在， 那么一个新的哈希表将被创建并执行  &lt;code&gt;HSET&lt;/code&gt;  操作。&lt;/p&gt;
&lt;p&gt;如果域  &lt;code&gt;field&lt;/code&gt;  已经存在于哈希表中， 那么它的旧值将被新值  &lt;code&gt;value&lt;/code&gt;  覆盖。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;演示&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight sh&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;## 设置一个hash结构&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; HSET k38 f1 v38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(&lt;span class=&#34;built_in&#34;&gt;integer&lt;/span&gt;) 1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 获取一个字段&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; HGET k38 f1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;&amp;quot;v38&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 设置一个已经存在的值, 注意返回的值。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; HSET k38 f1 v38v38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(&lt;span class=&#34;built_in&#34;&gt;integer&lt;/span&gt;) 0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; HGET k38 f1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;&amp;quot;v38v38&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;hsetnx&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#hsetnx&#34;&gt;#&lt;/a&gt;  &lt;code&gt;hsetnx&lt;/code&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;语法&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;HSETNX key field value&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;解释&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;当且仅当域  &lt;code&gt;field&lt;/code&gt;  尚未存在于哈希表的情况下， 将它的值设置为  &lt;code&gt;value&lt;/code&gt;  。&lt;/p&gt;
&lt;p&gt;如果给定域已经存在于哈希表当中， 那么命令将放弃执行设置操作。&lt;/p&gt;
&lt;p&gt;如果哈希表  &lt;code&gt;hash&lt;/code&gt;  不存在， 那么一个新的哈希表将被创建并执行  &lt;code&gt;HSETNX&lt;/code&gt;  命令。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;演示&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight sh&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 设置一个不存在的 key&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; HSETNX k39 f1 v39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(&lt;span class=&#34;built_in&#34;&gt;integer&lt;/span&gt;) 1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; HGET k39 f1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;&amp;quot;v39&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 再次设置&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; HSETNX k39 f1 v39v39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(&lt;span class=&#34;built_in&#34;&gt;integer&lt;/span&gt;) 0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; HGET k39 f1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;&amp;quot;v39&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;hget&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#hget&#34;&gt;#&lt;/a&gt;  &lt;code&gt;hget&lt;/code&gt;&lt;/h3&gt;
&lt;p&gt;这个命令上面已经用到了。这里就不浪费时间了。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;语法&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;HGET key field&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;解释&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;获取对应的  &lt;code&gt;key&lt;/code&gt;  下的域  &lt;code&gt;field&lt;/code&gt;  的值。不存在的时候，返回  &lt;code&gt;nil&lt;/code&gt;&lt;/p&gt;
&lt;h3 id=&#34;hgetall&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#hgetall&#34;&gt;#&lt;/a&gt;  &lt;code&gt;hgetall&lt;/code&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;语法&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;HGETALL key&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;解释&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;返回哈希表  &lt;code&gt;key&lt;/code&gt;  中，所有的域和值。&lt;/p&gt;
&lt;p&gt;在返回值里，紧跟每个域名 ( &lt;code&gt;field name&lt;/code&gt; ) 之后是域的值 ( &lt;code&gt;value&lt;/code&gt; )，所以返回值的长度是哈希表大小的两倍。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;演示&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight sh&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; HGETALL k39 &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1) &lt;span class=&#34;string&#34;&gt;&amp;quot;f1&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2) &lt;span class=&#34;string&#34;&gt;&amp;quot;v39&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; hset k39 f2 v39_2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(&lt;span class=&#34;built_in&#34;&gt;integer&lt;/span&gt;) 1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; HGETALL k39 &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1) &lt;span class=&#34;string&#34;&gt;&amp;quot;f1&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2) &lt;span class=&#34;string&#34;&gt;&amp;quot;v39&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3) &lt;span class=&#34;string&#34;&gt;&amp;quot;f2&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4) &lt;span class=&#34;string&#34;&gt;&amp;quot;v39_2&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;hexists&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#hexists&#34;&gt;#&lt;/a&gt;  &lt;code&gt;hexists&lt;/code&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;语法&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt; HEXISTS key field&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;解释&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;检查给定域  &lt;code&gt;field&lt;/code&gt;  是否存在于哈希表  &lt;code&gt;hash&lt;/code&gt;  当中。&lt;/p&gt;
&lt;p&gt;存在返回 &lt;code&gt;1&lt;/code&gt; , 不存在返回 &lt;code&gt;0&lt;/code&gt; 。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;演示&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight sh&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; HEXISTS k40 f1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(&lt;span class=&#34;built_in&#34;&gt;integer&lt;/span&gt;) 0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; HSET k40 f1 v40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(&lt;span class=&#34;built_in&#34;&gt;integer&lt;/span&gt;) 1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; HEXISTS k40 f1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(&lt;span class=&#34;built_in&#34;&gt;integer&lt;/span&gt;) 1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;del&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#del&#34;&gt;#&lt;/a&gt;  &lt;code&gt;del&lt;/code&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;语法&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;HDEL key field [field ...]&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;解释&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;删除哈希表 key 中的一个或多个指定域，不存在的域将被忽略。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;演示&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight sh&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; HSET k41 f1 v41_1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(&lt;span class=&#34;built_in&#34;&gt;integer&lt;/span&gt;) 1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; HSET k41 f2 v41_2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(&lt;span class=&#34;built_in&#34;&gt;integer&lt;/span&gt;) 1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; HSET k41 f3 v41_3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(&lt;span class=&#34;built_in&#34;&gt;integer&lt;/span&gt;) 1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; HGETALL k41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1) &lt;span class=&#34;string&#34;&gt;&amp;quot;f1&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2) &lt;span class=&#34;string&#34;&gt;&amp;quot;v41_1&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3) &lt;span class=&#34;string&#34;&gt;&amp;quot;f2&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4) &lt;span class=&#34;string&#34;&gt;&amp;quot;v41_2&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5) &lt;span class=&#34;string&#34;&gt;&amp;quot;f3&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6) &lt;span class=&#34;string&#34;&gt;&amp;quot;v41_3&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; HDEL k41 f1 f3 f4 &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(&lt;span class=&#34;built_in&#34;&gt;integer&lt;/span&gt;) 2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; HGETALL k41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1) &lt;span class=&#34;string&#34;&gt;&amp;quot;f2&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2) &lt;span class=&#34;string&#34;&gt;&amp;quot;v41_2&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;hlen&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#hlen&#34;&gt;#&lt;/a&gt;  &lt;code&gt;hlen&lt;/code&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;语法&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;HLEN key&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;解释&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;返回哈希表  &lt;code&gt;key&lt;/code&gt;  中域的数量。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;演示&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight sh&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; HSET k42 f1 v42_1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(&lt;span class=&#34;built_in&#34;&gt;integer&lt;/span&gt;) 1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; HSET k42 f2 v42_2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(&lt;span class=&#34;built_in&#34;&gt;integer&lt;/span&gt;) 1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; HSET k42 f3 v42_3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(&lt;span class=&#34;built_in&#34;&gt;integer&lt;/span&gt;) 1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; hlen k42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(&lt;span class=&#34;built_in&#34;&gt;integer&lt;/span&gt;) 3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;hstrlen&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#hstrlen&#34;&gt;#&lt;/a&gt;  &lt;code&gt;hstrlen&lt;/code&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;语法&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;HSTRLEN key field&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;解释&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;返回哈希表  &lt;code&gt;key&lt;/code&gt;  中， 与给定域  &lt;code&gt;field&lt;/code&gt;  相关联的值的字符串长度（ &lt;code&gt;string length&lt;/code&gt; ）。&lt;/p&gt;
&lt;p&gt;如果给定的键或者域不存在， 那么命令返回  &lt;code&gt;0&lt;/code&gt;  。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;演示&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight sh&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; HSET k43 f1 &lt;span class=&#34;string&#34;&gt;&amp;quot;Hello World&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(&lt;span class=&#34;built_in&#34;&gt;integer&lt;/span&gt;) 1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; HSTRLEN k43 f1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(&lt;span class=&#34;built_in&#34;&gt;integer&lt;/span&gt;) 11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; HSTRLEN k43 f2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(&lt;span class=&#34;built_in&#34;&gt;integer&lt;/span&gt;) 0&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;hincrby&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#hincrby&#34;&gt;#&lt;/a&gt; hincrby&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;语法&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;HINCRBY key field increment&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;解释&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;为哈希表  &lt;code&gt;key&lt;/code&gt;  中的域  &lt;code&gt;field&lt;/code&gt;  的值加上增量  &lt;code&gt;increment&lt;/code&gt;  。&lt;/p&gt;
&lt;p&gt;增量也可以为负数，相当于对给定域进行减法操作。&lt;/p&gt;
&lt;p&gt;如果  &lt;code&gt;key&lt;/code&gt;  不存在，一个新的哈希表被创建并执行  &lt;code&gt;HINCRBY&lt;/code&gt;  命令。&lt;/p&gt;
&lt;p&gt;如果域  &lt;code&gt;field&lt;/code&gt;  不存在，那么在执行命令前，域的值被初始化为  &lt;code&gt;0&lt;/code&gt;  。&lt;/p&gt;
&lt;p&gt;对一个储存字符串值的域  &lt;code&gt;field&lt;/code&gt;  执行  &lt;code&gt;HINCRBY&lt;/code&gt;  命令将造成一个错误。&lt;/p&gt;
&lt;p&gt;本操作的值被限制在  &lt;code&gt;64&lt;/code&gt;  位 ( &lt;code&gt;bit&lt;/code&gt; ) 有符号数字表示之内。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;演示&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight sh&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 不存在的key与域 field&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; HINCRBY k45 f1 100&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(&lt;span class=&#34;built_in&#34;&gt;integer&lt;/span&gt;) 100&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; HINCRBY k45 f1 -200&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(&lt;span class=&#34;built_in&#34;&gt;integer&lt;/span&gt;) -100&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; HINCRBY k45 f1 200&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(&lt;span class=&#34;built_in&#34;&gt;integer&lt;/span&gt;) 100&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 错误的类型&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; HSET k45 f2 v45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(&lt;span class=&#34;built_in&#34;&gt;integer&lt;/span&gt;) 1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; HINCRBY k45 f2 100&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(error) ERR &lt;span class=&#34;built_in&#34;&gt;hash&lt;/span&gt; value is not an &lt;span class=&#34;built_in&#34;&gt;integer&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;hincrbyfloat&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#hincrbyfloat&#34;&gt;#&lt;/a&gt;  &lt;code&gt;hincrbyfloat&lt;/code&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;语法&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;HINCRBYFLOAT  key field increment&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;解释&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;为哈希表  &lt;code&gt;key&lt;/code&gt;  中的域  &lt;code&gt;field&lt;/code&gt;  加上浮点数增量  &lt;code&gt;increment&lt;/code&gt;  。&lt;/p&gt;
&lt;p&gt;如果哈希表中没有域  &lt;code&gt;field&lt;/code&gt;  ，那么  &lt;code&gt;HINCRBYFLOAT&lt;/code&gt;  会先将域  &lt;code&gt;field&lt;/code&gt;  的值设为  &lt;code&gt;0&lt;/code&gt;  ，然后再执行加法操作。&lt;/p&gt;
&lt;p&gt;如果键  &lt;code&gt;key&lt;/code&gt;  不存在，那么  &lt;code&gt;HINCRBYFLOAT&lt;/code&gt;  会先创建一个哈希表，再创建域  &lt;code&gt;field&lt;/code&gt;  ，最后再执行加法操作。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;演示&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight sh&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; HINCRBYFLOAT  k46 f1 100.5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;&amp;quot;100.5&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; HINCRBYFLOAT  k46 f1 100.5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;&amp;quot;201&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; HINCRBYFLOAT  k46 f1 -100.5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;&amp;quot;100.5&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; HSET k46 f2 v46_2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(&lt;span class=&#34;built_in&#34;&gt;integer&lt;/span&gt;) 1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;hmset&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#hmset&#34;&gt;#&lt;/a&gt;  &lt;code&gt;hmset&lt;/code&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;语法&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;HMSET key field value [field value ...]&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;解释&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;同时将多个  &lt;code&gt;field-value&lt;/code&gt;  (域 - 值) 对设置到哈希表  &lt;code&gt;key&lt;/code&gt;  中。&lt;/p&gt;
&lt;p&gt;此命令会覆盖哈希表中已存在的域。&lt;/p&gt;
&lt;p&gt;如果  &lt;code&gt;key&lt;/code&gt;  不存在，一个空哈希表被创建并执行  &lt;code&gt;HMSET&lt;/code&gt;  操作。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;演示&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight sh&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; HMSET k47  f1 v47_1 f2 v47_2 f3 v47_3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;OK&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; HGETALL k47&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1) &lt;span class=&#34;string&#34;&gt;&amp;quot;f1&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2) &lt;span class=&#34;string&#34;&gt;&amp;quot;v47_1&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3) &lt;span class=&#34;string&#34;&gt;&amp;quot;f2&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4) &lt;span class=&#34;string&#34;&gt;&amp;quot;v47_2&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5) &lt;span class=&#34;string&#34;&gt;&amp;quot;f3&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6) &lt;span class=&#34;string&#34;&gt;&amp;quot;v47_3&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;hmget&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#hmget&#34;&gt;#&lt;/a&gt;  &lt;code&gt;hmget&lt;/code&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;语法&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;HMGET key field [field ...]&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;解释&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;返回哈希表  &lt;code&gt;key&lt;/code&gt;  中，一个或多个给定域的值。&lt;/p&gt;
&lt;p&gt;如果给定的域不存在于哈希表，那么返回一个  &lt;code&gt;nil&lt;/code&gt;  值。&lt;/p&gt;
&lt;p&gt;因为不存在的  &lt;code&gt;key&lt;/code&gt;  被当作一个空哈希表来处理，所以对一个不存在的  &lt;code&gt;key&lt;/code&gt;  进行  &lt;code&gt;HMGET&lt;/code&gt;  操作将返回一个只带有  &lt;code&gt;nil&lt;/code&gt;  值的表。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;演示&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight sh&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; HMSET k48 f1 v1 f2 v2 f3 v3 f4 v4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;OK&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; hmget k48 f1 f3 f4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1) &lt;span class=&#34;string&#34;&gt;&amp;quot;v1&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2) &lt;span class=&#34;string&#34;&gt;&amp;quot;v3&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3) &lt;span class=&#34;string&#34;&gt;&amp;quot;v4&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; &lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;hkeys&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#hkeys&#34;&gt;#&lt;/a&gt;  &lt;code&gt;hkeys&lt;/code&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;语法&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;HKEYS key&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;解释&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;返回哈希表  &lt;code&gt;key&lt;/code&gt;  中的所有域。&lt;/p&gt;
&lt;p&gt;当  &lt;code&gt;key&lt;/code&gt;  不存在时，返回一个空表。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;演示&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight sh&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; HMSET k49 f1 v1 f2 v2 f3 v3 f4 v4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;OK&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; HKEYS k49&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1) &lt;span class=&#34;string&#34;&gt;&amp;quot;f1&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2) &lt;span class=&#34;string&#34;&gt;&amp;quot;f2&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3) &lt;span class=&#34;string&#34;&gt;&amp;quot;f3&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4) &lt;span class=&#34;string&#34;&gt;&amp;quot;f4&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;hvals&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#hvals&#34;&gt;#&lt;/a&gt;  &lt;code&gt;hvals&lt;/code&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;语法&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;HVALS key&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;解释&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;返回  &lt;code&gt;key&lt;/code&gt;  对应的所有的 &lt;code&gt;value&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;演示&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight sh&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; HMSET k50 f1 v1 f2 v2 f3 v3 f4 v4 &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;OK&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; HVALS k50&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1) &lt;span class=&#34;string&#34;&gt;&amp;quot;v1&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2) &lt;span class=&#34;string&#34;&gt;&amp;quot;v2&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3) &lt;span class=&#34;string&#34;&gt;&amp;quot;v3&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4) &lt;span class=&#34;string&#34;&gt;&amp;quot;v4&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;hscan&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#hscan&#34;&gt;#&lt;/a&gt;  &lt;code&gt;hscan&lt;/code&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;语法&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;HSCAN key cursor [MATCH pattern] [COUNT count]&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;解释&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;这是一个查询命令。 同 SCAN 命令。可以参考这篇文章 &lt;a href=&#34;./010-%E5%85%B6%E4%BB%96%E5%91%BD%E4%BB%A4.md&#34;&gt;010 - 其他命令&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;SCAN&lt;/code&gt;  命令是一个基于游标的迭代器（ &lt;code&gt;cursor based iterator&lt;/code&gt; ）：  &lt;code&gt;SCAN&lt;/code&gt;  命令每次被调用之后， 都会向用户返回一个新的游标， 用户在下次迭代时需要使用这个新游标作为  &lt;code&gt;SCAN&lt;/code&gt;  命令的游标参数， 以此来延续之前的迭代过程。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;演示&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight sh&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; HMSET k51  f1 v1 f2 v2 f3 v3 f4 v4 f5 v5 f6 v6 f7 v7 f8 v8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;OK&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; hscan k51 0 &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1) &lt;span class=&#34;string&#34;&gt;&amp;quot;0&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2)  1) &lt;span class=&#34;string&#34;&gt;&amp;quot;f1&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    2) &lt;span class=&#34;string&#34;&gt;&amp;quot;v1&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    3) &lt;span class=&#34;string&#34;&gt;&amp;quot;f2&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    4) &lt;span class=&#34;string&#34;&gt;&amp;quot;v2&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    5) &lt;span class=&#34;string&#34;&gt;&amp;quot;f3&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    6) &lt;span class=&#34;string&#34;&gt;&amp;quot;v3&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    7) &lt;span class=&#34;string&#34;&gt;&amp;quot;f4&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    8) &lt;span class=&#34;string&#34;&gt;&amp;quot;v4&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    9) &lt;span class=&#34;string&#34;&gt;&amp;quot;f5&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   10) &lt;span class=&#34;string&#34;&gt;&amp;quot;v5&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   11) &lt;span class=&#34;string&#34;&gt;&amp;quot;f6&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   12) &lt;span class=&#34;string&#34;&gt;&amp;quot;v6&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   13) &lt;span class=&#34;string&#34;&gt;&amp;quot;f7&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   14) &lt;span class=&#34;string&#34;&gt;&amp;quot;v7&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   15) &lt;span class=&#34;string&#34;&gt;&amp;quot;f8&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   16) &lt;span class=&#34;string&#34;&gt;&amp;quot;v8&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;以上，就是  &lt;code&gt;Redis&lt;/code&gt;  中 &lt;code&gt;hash&lt;/code&gt;  类型相关的 &lt;code&gt;15&lt;/code&gt;  个命令了。务必熟记～&lt;/p&gt;
&lt;h2 id=&#34;hash的内部结构&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#hash的内部结构&#34;&gt;#&lt;/a&gt;  &lt;code&gt;hash&lt;/code&gt;  的内部结构&lt;/h2&gt;
&lt;p&gt;在  &lt;code&gt;hash&lt;/code&gt;  类型简介的时候，我们就说过  &lt;code&gt;hash&lt;/code&gt;  是用两种数据结构来编码的。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;ziplist&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;hashtable&lt;/code&gt; ( &lt;code&gt;dict&lt;/code&gt; )&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;ziplist&lt;/code&gt;  之前已经分享过了。具体参考之前的文章吧。 &lt;a href=&#34;./06-Redis%E7%9A%84%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B%E4%B9%8Blist.md&#34;&gt;链接&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;这里我们就简单的来看下  &lt;code&gt;hashtable&lt;/code&gt; .&lt;/p&gt;
&lt;p&gt;我们直接搜索  &lt;code&gt;hash&lt;/code&gt;  , 可以发现  &lt;code&gt;t_hash.c&lt;/code&gt;  这个文件，引入了  &lt;code&gt;server.h&lt;/code&gt;  . 大体看了一下，都是函数的实现。那我们看下  &lt;code&gt;server.h&lt;/code&gt;  ，应该存在对  &lt;code&gt;hastable&lt;/code&gt;  的定义吧。然而，并没有。&lt;/p&gt;
&lt;p&gt;那我们来看下 &lt;code&gt;t_hash.c&lt;/code&gt;  中添加方法的实现吧.  &lt;code&gt;int hashTypeSet(robj *o, sds field, sds value, int flags)&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;源码太长了，这里就不粘了， 可以看&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRlZS5jb20vZmFuZ2ppYXhpYW9iYWkvcmVkaXMvYmxvYi9yZWRpczUuMF9jaGluZXNlX3RyYW5zbGF0ZS9zcmMvdF9oYXNoLmM=&#34;&gt;源码&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;通过查看源码可以得出:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;hash&lt;/code&gt;  类型的默认编码是  &lt;code&gt;OBJ_ZIPLIST&lt;/code&gt; . 即默认是使用  &lt;code&gt;ziplist&lt;/code&gt;  这种数据结构进行编码存储的。&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight c++&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;robj *&lt;span class=&#34;title&#34;&gt;createHashObject&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(&lt;span class=&#34;keyword&#34;&gt;void&lt;/span&gt;)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;unsigned&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;char&lt;/span&gt; *zl = &lt;span class=&#34;built_in&#34;&gt;ziplistNew&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    robj *o = &lt;span class=&#34;built_in&#34;&gt;createObject&lt;/span&gt;(OBJ_HASH, zl);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    o-&amp;gt;encoding = OBJ_ENCODING_ZIPLIST;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; o;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;当 &lt;code&gt;hash&lt;/code&gt;  元素的个数大于  &lt;code&gt;hash_max_ziplist_entries&lt;/code&gt;  时会，转换成  &lt;code&gt;hashTable&lt;/code&gt; ( &lt;code&gt;OBJ_ENCODING_HT&lt;/code&gt; ),&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight c++&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;...&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (&lt;span class=&#34;built_in&#34;&gt;hashTypeLength&lt;/span&gt;(o) &amp;gt; server.hash_max_ziplist_entries)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;built_in&#34;&gt;hashTypeConvert&lt;/span&gt;(o, OBJ_ENCODING_HT);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;...&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;但是在  &lt;code&gt;redis 5.0.7&lt;/code&gt;  中暂时不支持这种方式，还没有实现。(&lt;b&gt;没有实现从 &lt;code&gt;ziplist&lt;/code&gt;  编码转化成 &lt;code&gt;hash&lt;/code&gt;  编码。&lt;/b&gt;)&lt;/p&gt;
&lt;figure class=&#34;highlight c++&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;hashTypeConvert&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(robj *o, &lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; enc)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (o-&amp;gt;encoding == OBJ_ENCODING_ZIPLIST) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;built_in&#34;&gt;hashTypeConvertZiplist&lt;/span&gt;(o, enc);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;/// 这里！！！&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (o-&amp;gt;encoding == OBJ_ENCODING_HT) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;built_in&#34;&gt;serverPanic&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;Not implemented&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125; &lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;built_in&#34;&gt;serverPanic&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;Unknown hash encoding&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;当创建的 &lt;code&gt;hash&lt;/code&gt;  类型是  &lt;code&gt;hashtable&lt;/code&gt;  编码 ( &lt;code&gt;OBJ_ENCODING_HT&lt;/code&gt; ) 时，是使用 &lt;code&gt;dict&lt;/code&gt;  这种类型存储的.&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight c++&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;/// dict类型&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;typedef&lt;/span&gt; &lt;span class=&#34;class&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;struct&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;dict&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    dictType *type;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;void&lt;/span&gt; *privdata;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;/// 2个哈希表来实现&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    dictht ht[&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;long&lt;/span&gt; rehashidx; &lt;span class=&#34;comment&#34;&gt;/* rehashing not in progress if rehashidx == -1 */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;unsigned&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;long&lt;/span&gt; iterators; &lt;span class=&#34;comment&#34;&gt;/* number of iterators currently running */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125; dict;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;/// 哈希表实现&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;typedef&lt;/span&gt; &lt;span class=&#34;class&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;struct&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;dictht&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    dictEntry **table; &lt;span class=&#34;comment&#34;&gt;/// 哈希表节点指针数据(java源码中的桶的概念)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;unsigned&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;long&lt;/span&gt; size; &lt;span class=&#34;comment&#34;&gt;/// 指针数组的大小&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;unsigned&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;long&lt;/span&gt; sizemask; &lt;span class=&#34;comment&#34;&gt;/// 指针数据的长度掩码,用于计算索引值&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;unsigned&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;long&lt;/span&gt; used; &lt;span class=&#34;comment&#34;&gt;/// 哈希表现有的节点数量&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125; dictht;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;///哈希表的节点&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;typedef&lt;/span&gt; &lt;span class=&#34;class&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;struct&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;dictEntry&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;/// 键&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;void&lt;/span&gt; *key;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;/// 值&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;class&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;union&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;void&lt;/span&gt; *val;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;uint64_t&lt;/span&gt; u64;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;int64_t&lt;/span&gt; s64;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;double&lt;/span&gt; d;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125; v;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;/// 下一个节点: dictht 是使用链地址法来处理hash冲突。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;class&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;struct&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;dictEntry&lt;/span&gt; *&lt;span class=&#34;title&#34;&gt;next&lt;/span&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125; dictEntry;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;整个  &lt;code&gt;dict&lt;/code&gt;  结构就可以这么表示:&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/images/Redis%E7%B3%BB%E5%88%97/images/Redis-01-dict%E7%BB%93%E6%9E%84%E5%AD%98%E5%82%A8.png&#34; alt=&#34;Redis-01-dict结构存储&#34;&gt;&lt;/p&gt;
&lt;p&gt;到这里，我们就知道了  &lt;code&gt;hash&lt;/code&gt;  这种类型，是如何存储的了。 如果你还想了解&lt;br&gt;
 &lt;code&gt;dict&lt;/code&gt;  是如何  &lt;code&gt;rehash&lt;/code&gt; , 扩容，缩容。以及  &lt;code&gt;dict api&lt;/code&gt;  相关实现的话，移驾这篇文章吧。 &lt;a href=&#34;./Redis%E4%B8%AD%E7%9A%84dict%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84.md&#34;&gt;起驾～&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;总结&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#总结&#34;&gt;#&lt;/a&gt; 总结&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;hash&lt;/code&gt;  结构，是一种哈希表结构。通过两种数据结构 &lt;code&gt;ziplist&lt;/code&gt;  和  &lt;code&gt;hashtable&lt;/code&gt; ( &lt;code&gt;dict&lt;/code&gt; ) 实现。&lt;/li&gt;
&lt;li&gt;要熟练掌握的  &lt;code&gt;hash&lt;/code&gt;  相关的 &lt;code&gt;15&lt;/code&gt;  个命令。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;hashtable&lt;/code&gt;  的编码格式，实际上就是使用的  &lt;code&gt;dict&lt;/code&gt;  这种编码方式。我们简单的学习了 &lt;code&gt;Redis&lt;/code&gt;  中 &lt;code&gt;dict&lt;/code&gt;  结构的实现。还有一篇专门的文章，来介绍  &lt;code&gt;dict&lt;/code&gt;  的详细内容。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;最后&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#最后&#34;&gt;#&lt;/a&gt; 最后&lt;/h2&gt;
&lt;p&gt;期望与你一起遇见更好的自己&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/images/qrcode.jpg&#34; alt=&#34;期望与你一起遇见更好的自己&#34;&gt;&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://fangjiaxiaobai.github.io/2021/08/01/Redis%E7%B3%BB%E5%88%97/B-2-Redis%E7%9A%84%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B%E4%B9%8Blist/</guid>
            <title>Redis数据结构之 List</title>
            <link>https://fangjiaxiaobai.github.io/2021/08/01/Redis%E7%B3%BB%E5%88%97/B-2-Redis%E7%9A%84%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B%E4%B9%8Blist/</link>
            <category>Redis</category>
            <pubDate>Sun, 01 Aug 2021 15:08:55 +0800</pubDate>
            <description><![CDATA[ &lt;h2 id=&#34;书接上回&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#书接上回&#34;&gt;#&lt;/a&gt; 书接上回&lt;/h2&gt;
&lt;p&gt;上一篇文章 &lt;a href=&#34;/2021/08/01/Redis%E7%B3%BB%E5%88%97/B-1-Redis%E7%9A%84%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B%E4%B9%8BString/&#34;&gt;Redis 的数据结构 string&lt;/a&gt; 我们一起学习了这种类型的常用命令，并且还学习了  &lt;code&gt;Redis&lt;/code&gt;  中的字符串的结构表示以及好处，这里我们接着学习另外一种数据结构  &lt;code&gt;list&lt;/code&gt; 。&lt;/p&gt;
&lt;h2 id=&#34;list-简介&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#list-简介&#34;&gt;#&lt;/a&gt;  &lt;code&gt;list&lt;/code&gt;  简介&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;list&lt;/code&gt; , 一般都会称为列表。在 &lt;code&gt;Redis&lt;/code&gt;  中，这种数据结构是一种比较灵活的结构，由于其元素的是有序的，所以可以充当栈和队列这两种数据结构。实际在开发总也有很多应用场景。&lt;/p&gt;
&lt;p&gt;一个 &lt;code&gt;List&lt;/code&gt;  最多可以包含  &lt;code&gt;2^32-1&lt;/code&gt;  个元素。&lt;/p&gt;
&lt;p&gt;很多人都会以为 &lt;code&gt;list&lt;/code&gt;  是用数组来实现的，非也，非也。它内部是 &lt;code&gt;quicklist&lt;/code&gt;  这种数据结构。想要先睹为快的，那么坐&lt;a href=&#34;##%60list%60%E5%86%85%E9%83%A8%E7%BB%93%E6%9E%84%E4%B9%8B%60quicklist%60&#34;&gt;电梯直达&lt;/a&gt;吧。&lt;/p&gt;
&lt;h2 id=&#34;list的相关命令&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#list的相关命令&#34;&gt;#&lt;/a&gt;  &lt;code&gt;list&lt;/code&gt;  的相关命令&lt;/h2&gt;
&lt;h3 id=&#34;lpush命令&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#lpush命令&#34;&gt;#&lt;/a&gt;  &lt;code&gt;LPUSH&lt;/code&gt;  命令&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;语法&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;LPUSH key value [value …]&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;解释&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;lpush&lt;/code&gt;  :  &lt;code&gt;left push&lt;/code&gt; 。&lt;/p&gt;
&lt;p&gt;将一个或者多个值插入到列表 &lt;code&gt;key&lt;/code&gt;  的表头，返回列表的长度。元素可以是重复的。&lt;/p&gt;
&lt;p&gt;如果 &lt;code&gt;key&lt;/code&gt;  不存在，那么会先穿件一个列表，然后再执行 &lt;code&gt;push&lt;/code&gt;  操作.&lt;/p&gt;
&lt;p&gt;如果 &lt;code&gt;key&lt;/code&gt;  值存在，但是 &lt;code&gt;value&lt;/code&gt;  类型不是列表类型时，会返回一个错误。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;演示&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;#&lt;/span&gt;&lt;span class=&#34;bash&#34;&gt; 设置一个列表&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; LPUSH k22 v22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(integer) 1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;#&lt;/span&gt;&lt;span class=&#34;bash&#34;&gt; 查询指定区间内的数据,使用lrange命令&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; LRANGE k22 0 10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1) &amp;quot;v22&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;#&lt;/span&gt;&lt;span class=&#34;bash&#34;&gt; 一次插入多个值&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; LPUSH k22 v22_1 v22_2 v22_3 v22_4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(integer) 5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; LRANGE k22 0 10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1) &amp;quot;v22_4&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2) &amp;quot;v22_3&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3) &amp;quot;v22_2&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4) &amp;quot;v22_1&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5) &amp;quot;v22&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;lpushx-命令&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#lpushx-命令&#34;&gt;#&lt;/a&gt;  &lt;code&gt;lpushx&lt;/code&gt;  命令&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;语法&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;LPUSHX key value&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;解释&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;仅当  &lt;code&gt;key&lt;/code&gt;  存在的时候，才将  &lt;code&gt;value&lt;/code&gt;  插入列表的表头。返回列表中元素的个数。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;演示&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight sh&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 当key值不存在的时候，不会放入列表中&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; LPUSHX k23 v23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(&lt;span class=&#34;built_in&#34;&gt;integer&lt;/span&gt;) 0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 再次尝试放入，也不可以。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; LPUSHX k23 v23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(&lt;span class=&#34;built_in&#34;&gt;integer&lt;/span&gt;) 0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 先往数组放入一个元素&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; lpush k23 v23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(&lt;span class=&#34;built_in&#34;&gt;integer&lt;/span&gt;) 1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 再次尝试使用lpushx放入数据&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; LPUSHX k23 v23_1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(&lt;span class=&#34;built_in&#34;&gt;integer&lt;/span&gt;) 2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 再次尝试使用lpushx放入数据&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; LPUSHX k23 v23_2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(&lt;span class=&#34;built_in&#34;&gt;integer&lt;/span&gt;) 3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 查看列表 k23 中的数据。注意：和插入的顺序是相反的。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; Lrange k23 0 -1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1) &lt;span class=&#34;string&#34;&gt;&amp;quot;v23_2&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2) &lt;span class=&#34;string&#34;&gt;&amp;quot;v23_1&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3) &lt;span class=&#34;string&#34;&gt;&amp;quot;v23&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;rpush-命令&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#rpush-命令&#34;&gt;#&lt;/a&gt;  &lt;code&gt;rpush&lt;/code&gt;  命令&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;语法&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;RPUSH key value [value ...]&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;解释&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;rpush&lt;/code&gt;  就是 &lt;code&gt;right push&lt;/code&gt; 。将一个或多个值  &lt;code&gt;value&lt;/code&gt;  插入到列表  &lt;code&gt;key&lt;/code&gt;  的表尾 (最右边)。返回列表的长度。&lt;/p&gt;
&lt;p&gt;如果  &lt;code&gt;key&lt;/code&gt;  不存在的时候，会创建一个空列表，然后在执行  &lt;code&gt;rpush&lt;/code&gt;  操作。&lt;/p&gt;
&lt;p&gt;如果  &lt;code&gt;key&lt;/code&gt;  存在，但是不是一个列表类型时，返回一个错误。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;演示&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;#&lt;/span&gt;&lt;span class=&#34;bash&#34;&gt; 往列表中加入数据&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; RPUSH k24 v24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(integer) 1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; RPUSH k24 v24_1 v25_2 v25_3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(integer) 4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; lrange k24 0 -1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1) &amp;quot;v24&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2) &amp;quot;v24_1&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3) &amp;quot;v25_2&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4) &amp;quot;v25_3&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;#&lt;/span&gt;&lt;span class=&#34;bash&#34;&gt; 演示 key 存在，但是不是一个列表类型&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; set k24_1 v24_1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;OK&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; rpush k24_1 v24_1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(error) WRONGTYPE Operation against a key holding the wrong kind of value&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;rpushx-命令&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#rpushx-命令&#34;&gt;#&lt;/a&gt;  &lt;code&gt;rpushx&lt;/code&gt;  命令&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;语法&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;rpushx key value&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;解释&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;与  &lt;code&gt;lpushx&lt;/code&gt;  类似，如果 &lt;code&gt;key&lt;/code&gt;  不存在时，什么都不会操作。如果 &lt;code&gt;key&lt;/code&gt;  存在，才会将元素添加到表尾。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;演示&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;#&lt;/span&gt;&lt;span class=&#34;bash&#34;&gt; key不存在的时候，不会插入数据&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; rpushx k25 v25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(integer) 0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;#&lt;/span&gt;&lt;span class=&#34;bash&#34;&gt; 先设置一个列表&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; rpush k25 v25_1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(integer) 1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; rpushx k25 v25_2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(integer) 2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; rpushx k25 v25_3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(integer) 3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;#&lt;/span&gt;&lt;span class=&#34;bash&#34;&gt; 查看列表中的数据。注意和插入的顺序是一致的。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; lrange k25 0 -1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1) &amp;quot;v25_1&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2) &amp;quot;v25_2&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3) &amp;quot;v25_3&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;lpop-命令&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#lpop-命令&#34;&gt;#&lt;/a&gt;  &lt;code&gt;lpop&lt;/code&gt;  命令&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;语法&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;LPOP key&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;解释&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;left pop&lt;/code&gt; ;&lt;/p&gt;
&lt;p&gt;移除并返回列表的头元素。当 &lt;code&gt;key&lt;/code&gt;  不存在的时候，返回 &lt;code&gt;nil&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;演示&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;#&lt;/span&gt;&lt;span class=&#34;bash&#34;&gt; key不存在的时候，返回nil&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; LPOP k26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(nil)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;#&lt;/span&gt;&lt;span class=&#34;bash&#34;&gt; 设置一个列表，有三个元素&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; lpush k26 v26_1 v26_2 v26_3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(integer) 3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;#&lt;/span&gt;&lt;span class=&#34;bash&#34;&gt; 查看列表中的元素&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; lrange k26 0 -1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1) &amp;quot;v26_3&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2) &amp;quot;v26_2&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3) &amp;quot;v26_1&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;#&lt;/span&gt;&lt;span class=&#34;bash&#34;&gt; 依次pop出元素&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; lpop k26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;quot;v26_3&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; lpop k26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;quot;v26_2&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; lpop k26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;quot;v26_1&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; lpop k26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(nil)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;tip：  &lt;code&gt;lpush&lt;/code&gt;  +  &lt;code&gt;lpop&lt;/code&gt;  =&amp;gt; 栈， &lt;code&gt;rpush&lt;/code&gt;  +  &lt;code&gt;lpop&lt;/code&gt;  =&amp;gt; 队列。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;rpop-命令&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#rpop-命令&#34;&gt;#&lt;/a&gt;  &lt;code&gt;rpop&lt;/code&gt;  命令&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;语法&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;rpop key&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;解释&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;rpop&lt;/code&gt;  ：  &lt;code&gt;right pop&lt;/code&gt; ;&lt;/p&gt;
&lt;p&gt;和 lpop 相反。移除并返回列表的尾元素。如果 key 不存在返回 nil。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;演示&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight sh&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# key 不存在，返回nil&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; rpop k27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(nil)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 先设置一个列表&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; lpush k27 v27_1 v27_2 v27_3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(&lt;span class=&#34;built_in&#34;&gt;integer&lt;/span&gt;) 3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; lrange k27 0 -1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1) &lt;span class=&#34;string&#34;&gt;&amp;quot;v27_3&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2) &lt;span class=&#34;string&#34;&gt;&amp;quot;v27_2&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3) &lt;span class=&#34;string&#34;&gt;&amp;quot;v27_1&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 一次pop每个值&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; rpop k27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;&amp;quot;v27_1&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; rpop k27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;&amp;quot;v27_2&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; rpop k27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;&amp;quot;v27_3&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; rpop k27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(nil)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;tip:  &lt;code&gt;lpush&lt;/code&gt;  +  &lt;code&gt;rpop&lt;/code&gt;  =&amp;gt; 队列， &lt;code&gt;rpush&lt;/code&gt;  +  &lt;code&gt;rpop&lt;/code&gt;  =&amp;gt; 栈。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;lrange-命令&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#lrange-命令&#34;&gt;#&lt;/a&gt;  &lt;code&gt;lrange&lt;/code&gt;  命令&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;语法&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;LRANGE key start stop&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;解释&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;获取指定区间内的元素。0 表示第一个元素。如果超过了实际范围就返回空数组。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;演示&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight sh&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; LRANGE k22 0 10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1) &lt;span class=&#34;string&#34;&gt;&amp;quot;v22_4&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2) &lt;span class=&#34;string&#34;&gt;&amp;quot;v22_3&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3) &lt;span class=&#34;string&#34;&gt;&amp;quot;v22_2&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4) &lt;span class=&#34;string&#34;&gt;&amp;quot;v22_1&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5) &lt;span class=&#34;string&#34;&gt;&amp;quot;v22&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; LRANGE k22 0 1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1) &lt;span class=&#34;string&#34;&gt;&amp;quot;v22_4&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2) &lt;span class=&#34;string&#34;&gt;&amp;quot;v22_3&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; LRANGE k22 10 100&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(empty list or &lt;span class=&#34;built_in&#34;&gt;set&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;rpoplpush-命令&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#rpoplpush-命令&#34;&gt;#&lt;/a&gt;  &lt;code&gt;rpoplpush&lt;/code&gt;  命令&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;语法&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;RPOPLPUSH source destination&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;解释&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;将  &lt;code&gt;source&lt;/code&gt;  的尾元素插入到 &lt;code&gt;destination&lt;/code&gt;  列表的头元素中，返回该元素。 注意，这是一个原子操作。&lt;/p&gt;
&lt;p&gt;比如:  &lt;code&gt;source&lt;/code&gt; :  &lt;code&gt;a,b,c&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;distination&lt;/code&gt; :  &lt;code&gt;1,2,3&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;使用  &lt;code&gt;RPOPLPUSH source distination&lt;/code&gt;  , 则：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;source&lt;/code&gt; :  &lt;code&gt;a,b&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;distination&lt;/code&gt; :  &lt;code&gt;c,1,2,3&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;演示&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight sh&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 设置列表1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; lpush k28_1 v28_c v28_b v28_a&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(&lt;span class=&#34;built_in&#34;&gt;integer&lt;/span&gt;) 3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 设置列表2&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; lpush k28_2 v28_3 v28_2 v28_1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(&lt;span class=&#34;built_in&#34;&gt;integer&lt;/span&gt;) 3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 使用 rpoppush命令&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; RPOPLPUSH k28_1 k28_2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;&amp;quot;v28_c&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 查看列表1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; lrange k28_1 0 -1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1) &lt;span class=&#34;string&#34;&gt;&amp;quot;v28_a&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2) &lt;span class=&#34;string&#34;&gt;&amp;quot;v28_b&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 查看列表2&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; lrange k28_2 0 -1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1) &lt;span class=&#34;string&#34;&gt;&amp;quot;v28_c&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2) &lt;span class=&#34;string&#34;&gt;&amp;quot;v28_1&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3) &lt;span class=&#34;string&#34;&gt;&amp;quot;v28_2&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4) &lt;span class=&#34;string&#34;&gt;&amp;quot;v28_3&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;lrem-命令&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#lrem-命令&#34;&gt;#&lt;/a&gt;  &lt;code&gt;lrem&lt;/code&gt;  命令&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;语法&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;LREM key count value&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;解释&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;至多移除列表中  &lt;code&gt;count&lt;/code&gt;  个与参数  &lt;code&gt;value&lt;/code&gt;  相等的元素。&lt;/p&gt;
&lt;p&gt;有以下情況:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;count &amp;gt; 0&lt;/code&gt;  : 从表头开始向表尾搜索，移除与  &lt;code&gt;value&lt;/code&gt;  相等的元素，最多移除 &lt;code&gt;count&lt;/code&gt;  个 。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;count &amp;lt; 0&lt;/code&gt;  : 从表尾开始向表头搜索，移除与  &lt;code&gt;value&lt;/code&gt;  相等的元素，最多移除 &lt;code&gt;|count|&lt;/code&gt;  个。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;count = 0&lt;/code&gt;  : 移除表中所有与  &lt;code&gt;value&lt;/code&gt;  相等的值。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;演示&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;#&lt;/span&gt;&lt;span class=&#34;bash&#34;&gt; 演示 count&amp;gt;0 时&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;#&lt;/span&gt;&lt;span class=&#34;bash&#34;&gt; 设置一个列表&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; lpush k29_1 v29_1  v29  v29_2 v29 v29_3 v29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(integer) 6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;#&lt;/span&gt;&lt;span class=&#34;bash&#34;&gt; 从表头开始，移除2个 v29&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; lrem k29_1 2 v29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(integer) 2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; lrange k29_1 0 -1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1) &amp;quot;v29_3&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2) &amp;quot;v29_2&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3) &amp;quot;v29&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4) &amp;quot;v29_1&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;#&lt;/span&gt;&lt;span class=&#34;bash&#34;&gt; 演示count&amp;lt;0 时&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; lpush k29_2 v29_1 v29  v29_2 v29 v29_3 v29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(integer) 6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; lrem k29_2 -2 v29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(integer) 2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; LRANGE k29_2 0 -1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1) &amp;quot;v29&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2) &amp;quot;v29_3&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3) &amp;quot;v29_2&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4) &amp;quot;v29_1&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;#&lt;/span&gt;&lt;span class=&#34;bash&#34;&gt; 演示count=0时&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; lpush k29_3 v29_1 v29  v29_2 v29 v29_3 v29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(integer) 6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; lrem k29_3 0 v29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(integer) 3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; LRANGE k29_3 0 -1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1) &amp;quot;v29_3&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2) &amp;quot;v29_2&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3) &amp;quot;v29_1&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;llen-命令&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#llen-命令&#34;&gt;#&lt;/a&gt;  &lt;code&gt;llen&lt;/code&gt;  命令&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;语法&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;LLEN key&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;解释&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;获取列表的长度。&lt;/p&gt;
&lt;p&gt;如果  &lt;code&gt;key&lt;/code&gt;  不存在的时候，返回 &lt;code&gt;0&lt;/code&gt; .&lt;/p&gt;
&lt;p&gt;如果  &lt;code&gt;key&lt;/code&gt;  对应类型不是  &lt;code&gt;list&lt;/code&gt;  ，则返回一个错误。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;演示&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight sh&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; llen k30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(&lt;span class=&#34;built_in&#34;&gt;integer&lt;/span&gt;) 0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; lpush k30 v30_1 v30_2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(&lt;span class=&#34;built_in&#34;&gt;integer&lt;/span&gt;) 2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; llen k30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(&lt;span class=&#34;built_in&#34;&gt;integer&lt;/span&gt;) 2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 删掉k30，演示，类型不是list的时候，报错&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; del k30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(&lt;span class=&#34;built_in&#34;&gt;integer&lt;/span&gt;) 1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; &lt;span class=&#34;built_in&#34;&gt;set&lt;/span&gt; k30 v30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;OK&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; llen k30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(error) WRONGTYPE Operation against a key holding the wrong kind of value&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;lindex-命令&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#lindex-命令&#34;&gt;#&lt;/a&gt;  &lt;code&gt;lindex&lt;/code&gt;  命令&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;语法&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;lindex key index&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;解释&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;返回列表中，下标为  &lt;code&gt;index&lt;/code&gt;  的元素.  &lt;code&gt;-1&lt;/code&gt;  表示列表的最后一个元素，如果 &lt;code&gt;key&lt;/code&gt;  不存在，或者 &lt;code&gt;index&lt;/code&gt;  超出范围，返回 &lt;code&gt;nil&lt;/code&gt; ， 如果 key 不是一个列表类型，返回一个错误。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;演示&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; lpush k31 v31_3 v31_2 v31_1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(integer) 3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; LINDEX k31 2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;quot;v31_3&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; LINDEX k31 1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;quot;v31_2&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; LINDEX k31 0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;quot;v31_1&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;linsert-命令&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#linsert-命令&#34;&gt;#&lt;/a&gt;  &lt;code&gt;linsert&lt;/code&gt;  命令&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;语法&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;linsert key BEFORE|AFTER pivot value&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;解释&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;将 &lt;code&gt;value&lt;/code&gt;  插入到 &lt;code&gt;key&lt;/code&gt;  队列 &lt;code&gt;pivot&lt;/code&gt;  值之前或者之后。返回插入完成之后列表的长度。&lt;/p&gt;
&lt;p&gt;如果  &lt;code&gt;pivot&lt;/code&gt;  不存在 或者  &lt;code&gt;key&lt;/code&gt;  不存在，不执行任何操作。&lt;/p&gt;
&lt;p&gt;如果  &lt;code&gt;key&lt;/code&gt;  对应的不是一个列表类型，返回一个错误。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;演示&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; linsert k32 BEFORE k31_1 k31_0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(integer) 0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; lpush k32 v32_1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(integer) 1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;#&lt;/span&gt;&lt;span class=&#34;bash&#34;&gt; k32_3 =&amp;gt; pivot不存在&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; linsert k32 BEFORE v32_3 v31_2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(integer) -1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;#&lt;/span&gt;&lt;span class=&#34;bash&#34;&gt; pivot之前插入&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; linsert k32 BEFORE v32_1 v31_0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(integer) 2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;#&lt;/span&gt;&lt;span class=&#34;bash&#34;&gt; pivot之后插入&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; linsert k32 AFTER v32_1 v31_2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(integer) 3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;lset-命令&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#lset-命令&#34;&gt;#&lt;/a&gt; lset 命令&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;语法&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;lset key index value&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;解释&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;将列表中的 索引为 &lt;code&gt;index&lt;/code&gt;  的值设置为 &lt;code&gt;value&lt;/code&gt; 。 如果 &lt;code&gt;index&lt;/code&gt;  超出范围，则返回一个错误&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;演示&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight sh&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; lpush k33 v33_3 v33_1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(&lt;span class=&#34;built_in&#34;&gt;integer&lt;/span&gt;) 2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; lrange k33 0 -1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1) &lt;span class=&#34;string&#34;&gt;&amp;quot;v33_1&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2) &lt;span class=&#34;string&#34;&gt;&amp;quot;v33_3&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;## 将第二个值，索引为1，设置为v33_2&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; lset k33 1 v33_2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;OK&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; lrange k33 0 -1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1) &lt;span class=&#34;string&#34;&gt;&amp;quot;v33_1&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2) &lt;span class=&#34;string&#34;&gt;&amp;quot;v33_2&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 超出范围返回错误&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; lset k33 2 v33_2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(error) ERR index out of range&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;ltrim-命令&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#ltrim-命令&#34;&gt;#&lt;/a&gt;  &lt;code&gt;ltrim&lt;/code&gt;  命令&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;语法&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;ltrim key start stop&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;解释&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;保留列表从 &lt;code&gt;start&lt;/code&gt;  到 &lt;code&gt;stop&lt;/code&gt;  之间的元素。其他元素都将被删除。 注意：包含 (不删除) &lt;code&gt;start&lt;/code&gt;  和 &lt;code&gt;stop&lt;/code&gt;  两个元素.&lt;/p&gt;
&lt;p&gt;如果 &lt;code&gt;key&lt;/code&gt;  不存在，直接返回 &lt;code&gt;OK&lt;/code&gt; , 如果 &lt;code&gt;key&lt;/code&gt;  对应的不是列表，直接返回错误。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;演示&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight sh&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; lpush k34 v34_1 v34_2 v34_3 v34_4 v34_5 v34_6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(&lt;span class=&#34;built_in&#34;&gt;integer&lt;/span&gt;) 6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; ltrim k34 1 4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;OK&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; lrange k34  0 -1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1) &lt;span class=&#34;string&#34;&gt;&amp;quot;v34_5&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2) &lt;span class=&#34;string&#34;&gt;&amp;quot;v34_4&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3) &lt;span class=&#34;string&#34;&gt;&amp;quot;v34_3&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4) &lt;span class=&#34;string&#34;&gt;&amp;quot;v34_2&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;blpop-命令&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#blpop-命令&#34;&gt;#&lt;/a&gt; blpop 命令&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;语法&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;BLPOP key [key ...] timeout&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;解释&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;lpop&lt;/code&gt;  的 阻塞版本。  &lt;code&gt;block left pop&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;当给定列表内没有任何元素可供弹出的时候，连接将被 BLPOP 命令阻塞，直到等待超时或发现可弹出元素为止。&lt;br&gt;
当给定多个 key 参数时，按参数 key 的先后顺序依次检查各个列表，弹出第一个非空列表的头元素。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;演示&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight sh&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# push到三组列表，分别三个元素&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; lpush k35 v35_1 v35_2 v35_3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(&lt;span class=&#34;built_in&#34;&gt;integer&lt;/span&gt;) 3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; lrange k35 0 -1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1) &lt;span class=&#34;string&#34;&gt;&amp;quot;v35_3&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2) &lt;span class=&#34;string&#34;&gt;&amp;quot;v35_2&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3) &lt;span class=&#34;string&#34;&gt;&amp;quot;v35_1&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; lpush k35_1 v35_1 v35_2 v35_3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(&lt;span class=&#34;built_in&#34;&gt;integer&lt;/span&gt;) 3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; lpush k35_2 v35_1 v35_2 v35_3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(&lt;span class=&#34;built_in&#34;&gt;integer&lt;/span&gt;) 3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 阻塞调用lpop, 从左到右 依次pop元素，直到有一个元素可以pop。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; blpop k35 k35_1 k35_2 10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1) &lt;span class=&#34;string&#34;&gt;&amp;quot;k35&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2) &lt;span class=&#34;string&#34;&gt;&amp;quot;v35_3&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; blpop k35 k35_1 k35_2 10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1) &lt;span class=&#34;string&#34;&gt;&amp;quot;k35&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2) &lt;span class=&#34;string&#34;&gt;&amp;quot;v35_2&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; blpop k35 k35_1 k35_2 10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1) &lt;span class=&#34;string&#34;&gt;&amp;quot;k35&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2) &lt;span class=&#34;string&#34;&gt;&amp;quot;v35_1&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; blpop k35 k35_1 k35_2 10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1) &lt;span class=&#34;string&#34;&gt;&amp;quot;k35_1&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2) &lt;span class=&#34;string&#34;&gt;&amp;quot;v35_3&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; blpop k35 k35_1 k35_2 10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1) &lt;span class=&#34;string&#34;&gt;&amp;quot;k35_1&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2) &lt;span class=&#34;string&#34;&gt;&amp;quot;v35_2&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; blpop k35 k35_1 k35_2 10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1) &lt;span class=&#34;string&#34;&gt;&amp;quot;k35_1&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2) &lt;span class=&#34;string&#34;&gt;&amp;quot;v35_1&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; blpop k35 k35_1 k35_2 10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1) &lt;span class=&#34;string&#34;&gt;&amp;quot;k35_2&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2) &lt;span class=&#34;string&#34;&gt;&amp;quot;v35_3&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; blpop k35 k35_1 k35_2 10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1) &lt;span class=&#34;string&#34;&gt;&amp;quot;k35_2&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2) &lt;span class=&#34;string&#34;&gt;&amp;quot;v35_2&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; blpop k35 k35_1 k35_2 10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1) &lt;span class=&#34;string&#34;&gt;&amp;quot;k35_2&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2) &lt;span class=&#34;string&#34;&gt;&amp;quot;v35_1&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; blpop k35 k35_1 k35_2 10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 没有元素的时候会阻塞一直到超时。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(nil)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(10.59s)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;brpop-命令&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#brpop-命令&#34;&gt;#&lt;/a&gt;  &lt;code&gt;brpop&lt;/code&gt;  命令&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;语法&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;BRPOP key [key ...] timeout&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;解释&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;rpop&lt;/code&gt;  的阻塞版本。  &lt;code&gt;block right pop&lt;/code&gt; &lt;br&gt;
 当给定多个 &lt;code&gt;key&lt;/code&gt;  的时候，按照 &lt;code&gt;key&lt;/code&gt;  的先后顺序依次检查各个列表。直到弹出一个元素或者超时。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;演示&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight sh&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 设置两个列表&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; lpush k36 v36_1 v36_2 v36_3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(&lt;span class=&#34;built_in&#34;&gt;integer&lt;/span&gt;) 3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; lpush k36_1 v36_1 v36_2 v36_3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(&lt;span class=&#34;built_in&#34;&gt;integer&lt;/span&gt;) 3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 阻塞式的pop出每个值。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; BRPOP k36 k36_1 10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1) &lt;span class=&#34;string&#34;&gt;&amp;quot;k36&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2) &lt;span class=&#34;string&#34;&gt;&amp;quot;v36_1&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; BRPOP k36 k36_1 10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1) &lt;span class=&#34;string&#34;&gt;&amp;quot;k36&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2) &lt;span class=&#34;string&#34;&gt;&amp;quot;v36_2&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; BRPOP k36 k36_1 10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1) &lt;span class=&#34;string&#34;&gt;&amp;quot;k36&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2) &lt;span class=&#34;string&#34;&gt;&amp;quot;v36_3&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; BRPOP k36 k36_1 10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1) &lt;span class=&#34;string&#34;&gt;&amp;quot;k36_1&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2) &lt;span class=&#34;string&#34;&gt;&amp;quot;v36_1&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; BRPOP k36 k36_1 10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1) &lt;span class=&#34;string&#34;&gt;&amp;quot;k36_1&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2) &lt;span class=&#34;string&#34;&gt;&amp;quot;v36_2&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; BRPOP k36 k36_1 10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1) &lt;span class=&#34;string&#34;&gt;&amp;quot;k36_1&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2) &lt;span class=&#34;string&#34;&gt;&amp;quot;v36_3&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; BRPOP k36 k36_1 10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 阻塞10s&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(nil)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(10.61s)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;Tips:  &lt;code&gt;lpush&lt;/code&gt;  +  &lt;code&gt;brpop&lt;/code&gt;  =&amp;gt; 阻塞队列。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;brpoplpush-命令&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#brpoplpush-命令&#34;&gt;#&lt;/a&gt;  &lt;code&gt;brpoplpush&lt;/code&gt;  命令&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;语法&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;BRPOPLPUSH source destination timeout&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;解释&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;rpoplpush&lt;/code&gt;  的阻塞版本。  &lt;code&gt;block right left push&lt;/code&gt; 。&lt;/p&gt;
&lt;p&gt;当列表  &lt;code&gt;source&lt;/code&gt;  为空的时候，该命令将阻塞，直到超时，或者 source 中有一个元素可以 pop。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;演示&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight sh&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 设置一个列表&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; lpush k37_source v37_1 v37_2 v37_3 v37_4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(&lt;span class=&#34;built_in&#34;&gt;integer&lt;/span&gt;) 4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 将source移动到distination中。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; BRPOPLPUSH k37_source k37_distination 10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;&amp;quot;v37_1&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 查看下distination。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; lrange k37_distination 0 -1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1) &lt;span class=&#34;string&#34;&gt;&amp;quot;v37_1&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; BRPOPLPUSH k37_source k37_distination 10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;&amp;quot;v37_2&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; BRPOPLPUSH k37_source k37_distination 10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;&amp;quot;v37_3&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; BRPOPLPUSH k37_source k37_distination 10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;&amp;quot;v37_4&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 这时我们启动两个客户端,演示阻塞直到另一个客户端执行source列表中的插入操作。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 客户端1中继续执行 BRPOPLPUSH, 然后马上在客户端2中，输入&amp;quot;LPUSH k37_source v37_5&amp;quot;.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 客户端1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; BRPOPLPUSH k37_source k37_distination 10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;&amp;quot;v37_5&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(3.02s)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 客户端2&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; LPUSH k37_source v37_5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(&lt;span class=&#34;built_in&#34;&gt;integer&lt;/span&gt;) 1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&#34;list内部结构之quicklist&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#list内部结构之quicklist&#34;&gt;#&lt;/a&gt;  &lt;code&gt;list&lt;/code&gt;  内部结构之 &lt;code&gt;quicklist&lt;/code&gt;&lt;/h2&gt;
&lt;h3 id=&#34;quicklist&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#quicklist&#34;&gt;#&lt;/a&gt;  &lt;code&gt;quicklist&lt;/code&gt;&lt;/h3&gt;
&lt;p&gt;我们来看一下 &lt;code&gt;list&lt;/code&gt;  的内部实现  &lt;code&gt;quicklist&lt;/code&gt;  结构.&lt;/p&gt;
&lt;p&gt;特别注明：  &lt;code&gt;quicklist&lt;/code&gt;  是双向的链表结构。&lt;/p&gt;
&lt;p&gt;在 &lt;code&gt;Redis&lt;/code&gt;  中使用如下结构体表示.&lt;/p&gt;
&lt;figure class=&#34;highlight c++&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;typedef&lt;/span&gt; &lt;span class=&#34;class&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;struct&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;quicklist&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;// 头结点&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    quicklistNode *head;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;// 尾结点&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    quicklistNode *tail;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;// 列表的元素个数&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;unsigned&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;long&lt;/span&gt; count;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;// 链表的长度&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;unsigned&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;long&lt;/span&gt; len;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;// 单个节点的填充因子&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; fill : &lt;span class=&#34;number&#34;&gt;16&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;// 不进行节点压缩的最大深度&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;// 超过这个节点就会进行节点压缩&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;unsigned&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; compress : &lt;span class=&#34;number&#34;&gt;16&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125; quicklist;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;code&gt;quicklist&lt;/code&gt;  是回一个通用的双向链接快速列表实现。它的每个节点用  &lt;code&gt;quicklistNode&lt;/code&gt;  表示。&lt;/p&gt;
&lt;p&gt;一起来看下  &lt;code&gt;qucklistNode&lt;/code&gt;  是什么吧。&lt;/p&gt;
&lt;h3 id=&#34;quicklistnode&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#quicklistnode&#34;&gt;#&lt;/a&gt;  &lt;code&gt;quicklistNode&lt;/code&gt;&lt;/h3&gt;
&lt;figure class=&#34;highlight c++&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;typedef&lt;/span&gt; &lt;span class=&#34;class&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;struct&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;quicklistNode&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;// 前一个节点&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;class&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;struct&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;quicklistNode&lt;/span&gt; *&lt;span class=&#34;title&#34;&gt;prev&lt;/span&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;// 后一个节点&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;class&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;struct&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;quicklistNode&lt;/span&gt; *&lt;span class=&#34;title&#34;&gt;next&lt;/span&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;// 数据指针。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;// 如果指向的数据没有被压缩,那么会指向zipList结构。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;// 如果进行了压缩，那么会指向 quickLZF结构。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;unsigned&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;char&lt;/span&gt; *zl;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;// 当前节点的大小&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;unsigned&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; sz;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;// 元素的个数&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;unsigned&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; count : &lt;span class=&#34;number&#34;&gt;16&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;// 编码方式，1=RAW，2=LZF&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;// 1 表示未被压缩&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;// 2 表示使用LZF结构进行的压缩&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;unsigned&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; encoding : &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;;   &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;// 使用的容器是什么？1=NONE,2=ZIPLIST&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;unsigned&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; container : &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;// 前一个节点是否被压缩&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;unsigned&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; recompress : &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;// 是否压缩&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;unsigned&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; attempted_compress : &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;// 暂时留出来，以后使用。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;unsigned&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; extra : &lt;span class=&#34;number&#34;&gt;10&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125; quicklistNode;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;code&gt;quicklistNode&lt;/code&gt;  是一个 &lt;code&gt;32byte&lt;/code&gt;  的结构体，用于描述一个 &lt;code&gt;quicklist&lt;/code&gt;  的一个节点。从代码中可看出，使用了位图来节约空间。在上面的代码中我们还提到两种数据结构，对应的是代码中  &lt;code&gt;zl&lt;/code&gt;  指针，指向的位置，如果数据被压缩，指向 &lt;code&gt;quicklistLZF&lt;/code&gt;  和 没有数据没有被压缩就是指向  &lt;code&gt;ziplist&lt;/code&gt; .&lt;/p&gt;
&lt;h3 id=&#34;ziplist&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#ziplist&#34;&gt;#&lt;/a&gt;  &lt;code&gt;ziplist&lt;/code&gt;&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;ziplist&lt;/code&gt;  这种结构比较复杂，而且在源码中也没有给出明确定义。那  &lt;code&gt;ziplist&lt;/code&gt;  这么神秘的结构到底是什么样的呢？&lt;/p&gt;
&lt;p&gt;别着急，我们先大体熟悉下 &lt;code&gt;ziplist&lt;/code&gt;  这种结构的设计意图。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;ziplist&lt;/code&gt;  是一个经过特殊编码的双向链表，它的设计意图就是 提高存储效率，  &lt;code&gt;ziplist&lt;/code&gt;  可以用于存储字符串或者整数，其中整数是按照真正的二进制进行编码的。 它能以 &lt;code&gt;O(1)&lt;/code&gt;  的效率在表的两端进行 &lt;code&gt;pop&lt;/code&gt;  和 &lt;code&gt;push&lt;/code&gt;  操作。&lt;/p&gt;
&lt;p&gt;我们都知道，普通的链表每项都是一块独立的内存空间，各项之间都是通过指针连接起来的。这种方式，会带来大量的空间碎片，指针引用也会占用部分空间内存。所以 &lt;code&gt;ziplist&lt;/code&gt;  是将表中每项放在连续的空间内存中 (类似数组)， &lt;code&gt;ziplist&lt;/code&gt;  还对值采取了一个可变长度的存储方式，大的值就用大空间，小的值就用小空间。&lt;/p&gt;
&lt;h4 id=&#34;ziplist结构的官方定义&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#ziplist结构的官方定义&#34;&gt;#&lt;/a&gt; ziplist 结构的官方定义。&lt;/h4&gt;
&lt;blockquote&gt;
&lt;p&gt;The general layout of the ziplist is as follows:&lt;br&gt;
 &lt;code&gt;&amp;lt;zlbytes&amp;gt; &amp;lt;zltail&amp;gt; &amp;lt;zllen&amp;gt; &amp;lt;entry&amp;gt; &amp;lt;entry&amp;gt; ... &amp;lt;entry&amp;gt; &amp;lt;zlend&amp;gt;&lt;/code&gt; &lt;br&gt;
 &lt;code&gt;&amp;lt;uint32_t zlbytes&amp;gt;&lt;/code&gt;  is an unsigned integer to hold the number of bytes that  the ziplist occupies, including the four bytes of the zlbytes field itself.  This value needs to be stored to be able to resize the entire structure  without the need to traverse it first.&lt;br&gt;
 &lt;code&gt;&amp;lt;uint32_t zltail&amp;gt;&lt;/code&gt;  is the offset to the last entry in the list. This allows  a pop operation on the far side of the list without the need for full  traversal.&lt;br&gt;
 &lt;code&gt;&amp;lt;uint16_t zllen&amp;gt;&lt;/code&gt;  is the number of entries. When there are more than  2^16-2 entries, this value is set to 2^16-1 and we need to traverse the entire list to know how many items it holds.&lt;br&gt;
 &lt;code&gt;&amp;lt;uint8_t zlend&amp;gt;&lt;/code&gt;  is a special entry representing the end of the ziplist. Is encoded as a single byte equal to 255. No other normal entry starts with a byte set to the value of 255.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;根据上面中解释我们可以得出以下这种模型：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;./images/ziplist-01-Ziplist%E7%9A%84%E7%BB%93%E6%9E%84.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;如果没有特殊指定的话，都是采用小尾数法存储的。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;zlbytes&lt;/code&gt; : 存储一个无符号整数，用于存储 ziplist 的所用的字节数，(包括 zlbytes 字段本身的四个字节)，当重新分配内容的时候，不需要遍历整个列表来计算内存大小。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;zltail&lt;/code&gt; : 一个无符号整数，表示 ziplist 中最后一个元素的偏移字节数，这样可以方便的找到最后一个元素，从而可以以 O (1) 的复杂度在尾端进行 pop 和 push。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;zllen：压缩列表包含的结点的个数，即entry的个数。&lt;/code&gt; &lt;br&gt;
这里的 &lt;code&gt;zllen&lt;/code&gt;  是占用 &lt;code&gt;16bit&lt;/code&gt; , 也就是说最多存储  &lt;code&gt;2^16-2&lt;/code&gt;  个。但是 &lt;code&gt;ziplist&lt;/code&gt;  超了 &lt;code&gt;2^16-2&lt;/code&gt;  个也是可以表示的。那种情况就是 &lt;code&gt;16&lt;/code&gt;  个 &lt;code&gt;1&lt;/code&gt;  的时候，只需要从头遍历到尾就好了。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;entry&lt;/code&gt; : 真正存放数据的数据项，每个数据项都有自己的内部结构。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;zlend&lt;/code&gt; :  &lt;code&gt;ziplist&lt;/code&gt;  的最后一个字节，值固定等于 &lt;code&gt;255&lt;/code&gt; ，就是一个结束标记。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;entry-结构&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#entry-结构&#34;&gt;#&lt;/a&gt; entry 结构&lt;/h4&gt;
&lt;p&gt;&lt;code&gt;entry&lt;/code&gt;  是由三部分构成的。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;previous length（pre_entry_length）&lt;/code&gt; ： 表示前一个数据节点占用的总字节数，这个字段的用处是为了让 ziplist 能够从后向前遍历（从后一项的位置，只需向前偏移 &lt;code&gt;previous length&lt;/code&gt;  个字节，就找到了前一项）。这个字段采用变长编码。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;encoding&lt;/code&gt; （ &lt;code&gt;encoding&amp;amp;cur_entry_length&lt;/code&gt; ）：表示当前数据节点 content 的内容类型以及长度。也采用变长编码。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;entry-data&lt;/code&gt; ：表示当前节点存储的数据， &lt;code&gt;entry-data&lt;/code&gt;  的内容类型有整数类型和字节数组类型，且某些条件下 &lt;code&gt;entry-data&lt;/code&gt;  的长度可能为 &lt;code&gt;0&lt;/code&gt; 。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;所以我们可以得出  &lt;code&gt;ziplist&lt;/code&gt;  是一个这样的结构。&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;./images/ziplist-01-entry%E7%9A%84%E7%BB%93%E6%9E%84.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;有时，encoding 也可以代表 entry 本身，就像小整数一样。&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;./images/ziplist-01-entry%E7%9A%84%E7%BB%93%E6%9E%842.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;这里就是大体的了解下 ziplist 这种数据结构。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;这里是一篇关于 &lt;a href=&#34;./10-Redis%E7%9A%84%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B9%8Bziplist.md&#34;&gt;ziplist&lt;/a&gt; 详细解读的文章。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;quicklistlzf&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#quicklistlzf&#34;&gt;#&lt;/a&gt;  &lt;code&gt;quicklistLZF&lt;/code&gt;&lt;/h3&gt;
&lt;p&gt;看完了比较神秘的 &lt;code&gt;ziplist&lt;/code&gt;  结构，我们来看一个比较简单的 &lt;code&gt;quicklist&lt;/code&gt;  的压缩节点的结构  &lt;code&gt;quicklistLZF&lt;/code&gt; 。&lt;/p&gt;
&lt;figure class=&#34;highlight c++&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;/**&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt; * quicklistLZF是一个4 + N字节的 struct。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt; * sz 是 compressed 字段的字节长度。&amp;#x27;compressed&amp;#x27; 是长度为 sz的 LZF数据。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt; *&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt; * 未被压缩的长度保存到 quicklistNode-&amp;gt;sz中。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt; *&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt; * 当压缩了quicklistNode-&amp;gt;zl时，quicklistNode-&amp;gt;zl指向的是一个 quicklistLZF类型的数据。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt; * 未压缩的时候，指向的是ziplist.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt; */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;typedef&lt;/span&gt; &lt;span class=&#34;class&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;struct&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;quicklistLZF&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;///compressed数组长度 &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;unsigned&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; sz; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;char&lt;/span&gt; compressed[];&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125; quicklistLZF;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&#34;总结&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#总结&#34;&gt;#&lt;/a&gt; 总结&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;list&lt;/code&gt;  相关的命令。以及常见的应用场景。比如栈和队列等等。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;list&lt;/code&gt;  其实是一种链表结构，但是不是一个普通的链表结构。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;list&lt;/code&gt;  是由  &lt;code&gt;quicklist&lt;/code&gt;  这种数据结构实现的。 &lt;code&gt;quicklist&lt;/code&gt;  中的每个节点是 &lt;code&gt;quicklistNode&lt;/code&gt; , 而 &lt;code&gt;quicklist&lt;/code&gt;  中 &lt;code&gt;zl&lt;/code&gt;  指针，指向的是 一个 &lt;code&gt;ziplist&lt;/code&gt;  或者 &lt;code&gt;quickListLZF&lt;/code&gt; 。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ziplist&lt;/code&gt;  是一个比较神秘的数据结构，有 &lt;code&gt;5&lt;/code&gt;  部分构成，是连续存储的，可以实现 &lt;code&gt;O(1)&lt;/code&gt;  的尾端 &lt;code&gt;pop&lt;/code&gt;  和 &lt;code&gt;push&lt;/code&gt;  操作。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;最后&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#最后&#34;&gt;#&lt;/a&gt; 最后&lt;/h2&gt;
&lt;p&gt;期望与你一起遇见更好的自己&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/images/qrcode.jpg&#34; alt=&#34;期望与你一起遇见更好的自己&#34;&gt;&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://fangjiaxiaobai.github.io/2021/08/01/Redis%E7%B3%BB%E5%88%97/B-1-Redis%E7%9A%84%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B%E4%B9%8BString/</guid>
            <title>Redis数据结构之 String</title>
            <link>https://fangjiaxiaobai.github.io/2021/08/01/Redis%E7%B3%BB%E5%88%97/B-1-Redis%E7%9A%84%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B%E4%B9%8BString/</link>
            <category>Redis</category>
            <pubDate>Sun, 01 Aug 2021 14:58:55 +0800</pubDate>
            <description><![CDATA[ &lt;p&gt;今天来聊聊  &lt;code&gt;Redis&lt;/code&gt;  的 &lt;code&gt;string&lt;/code&gt; ，这一数据结构。&lt;/p&gt;
&lt;h3 id=&#34;string简介&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#string简介&#34;&gt;#&lt;/a&gt;  &lt;code&gt;string&lt;/code&gt;  简介&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;string&lt;/code&gt;  是 &lt;code&gt;Redis&lt;/code&gt;  中最基本，也是最简单的数据结构。一个键 ( &lt;code&gt;key&lt;/code&gt; ) 对应着一个 &lt;code&gt;string&lt;/code&gt;  类型的值 ( &lt;code&gt;value&lt;/code&gt; ). 我们都知道 &lt;code&gt;redis&lt;/code&gt;  是使用 &lt;code&gt;C&lt;/code&gt;  语言来编写的，但是  &lt;code&gt;string&lt;/code&gt;  这一个数据结构并非是使用 &lt;code&gt;C&lt;/code&gt;  语言的  &lt;code&gt;string(char[])&lt;/code&gt;  来实现的，要想先了解，那就做电梯吧 -&amp;gt;( &lt;a href=&#34;#%60Redis%60%E5%A6%82%E4%BD%95%E5%AE%9E%E7%8E%B0%E8%BF%99%E4%B8%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84&#34;&gt;电梯直达&lt;/a&gt; ).&lt;/p&gt;
&lt;p&gt;现在，先暂且抛开内部实现，我们先看看有怎么使用这一数据结构。&lt;/p&gt;
&lt;h3 id=&#34;string相关常用命令&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#string相关常用命令&#34;&gt;#&lt;/a&gt;  &lt;code&gt;string&lt;/code&gt;  相关常用命令&lt;/h3&gt;
&lt;h4 id=&#34;set命令&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#set命令&#34;&gt;#&lt;/a&gt;  &lt;code&gt;set&lt;/code&gt;  命令&lt;/h4&gt;
&lt;p&gt;&lt;code&gt;SET key value [expiration EX seconds|PX milliseconds] [NX|XX]&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;使用示例:&lt;/p&gt;
&lt;figure class=&#34;highlight sh&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 1.设置一个键值对 f1=&amp;gt;f1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; &lt;span class=&#34;built_in&#34;&gt;set&lt;/span&gt; k1 v1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;OK&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 根据键查询值&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; get k1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;&amp;quot;v1&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 2.设置一个键值对(f2=&amp;gt;f2),设置超时时间为10s&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# EX 表示秒&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; &lt;span class=&#34;built_in&#34;&gt;set&lt;/span&gt; k2 v2 EX 10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;OK&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; get k2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;&amp;quot;v2&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 等待10s之后去查询f2&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; get k2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(nil)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 3.设置一个键值对(f3=&amp;gt;f3),设置超时时间为 10000毫秒&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# PX 表示为毫秒&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; &lt;span class=&#34;built_in&#34;&gt;set&lt;/span&gt; k3 v3 PX 10000&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;OK&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; get k3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;&amp;quot;v3&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; get k3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(nil)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 4.设置键值对k4=&amp;gt;v4,验证&amp;quot;存在相同的key就设置失败&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# setnx 命令也可实现,注意返回值。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; &lt;span class=&#34;built_in&#34;&gt;set&lt;/span&gt; k4 v4 NX&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;OK&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 如果存在相同的key就设置失败(与下面的注意对比)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; &lt;span class=&#34;built_in&#34;&gt;set&lt;/span&gt; k4 v4 NX&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(nil)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 5.验证&amp;quot;不存在相同的key就设置失败&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; &lt;span class=&#34;built_in&#34;&gt;set&lt;/span&gt; k5 v5 XX&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(nil)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 先设置一个键值对,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; &lt;span class=&#34;built_in&#34;&gt;set&lt;/span&gt; k5 v5 &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;OK&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 设置不存在相同的key就设置失败&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; &lt;span class=&#34;built_in&#34;&gt;set&lt;/span&gt; k5 v5 XX&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;OK&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&#34;setnx命令&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#setnx命令&#34;&gt;#&lt;/a&gt;  &lt;code&gt;setnx&lt;/code&gt;  命令&lt;/h4&gt;
&lt;p&gt;&lt;code&gt;setnx key value&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;set if not exists&lt;/code&gt;  的缩写。如果已存在 key, 返回 0, 不存在返回 1. 常用于分布式锁。&lt;/p&gt;
&lt;p&gt;使用实例&lt;/p&gt;
&lt;figure class=&#34;highlight sh&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 设置一个不存在的键值对 k6=&amp;gt;v6&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; setnx k6 v6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(&lt;span class=&#34;built_in&#34;&gt;integer&lt;/span&gt;) 1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 如果key已经存在,则返回0。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; setnx k6 v6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(&lt;span class=&#34;built_in&#34;&gt;integer&lt;/span&gt;) 0&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&#34;setex-命令&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#setex-命令&#34;&gt;#&lt;/a&gt;  &lt;code&gt;setEx&lt;/code&gt;  命令&lt;/h4&gt;
&lt;p&gt;&lt;code&gt;setex key seconds value&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;给键值对设置生存时间 (秒级别)。&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;#&lt;/span&gt;&lt;span class=&#34;bash&#34;&gt; 设置k7=&amp;gt;v7这个键值对的生存时间为5s&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; setex k7 5 v7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;OK&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; get k7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;quot;v7&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;#&lt;/span&gt;&lt;span class=&#34;bash&#34;&gt; 过5s秒钟之后,再查看。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; get k7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(nil)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; &lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&#34;psetex-命令&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#psetex-命令&#34;&gt;#&lt;/a&gt;  &lt;code&gt;psetEx&lt;/code&gt;  命令&lt;/h4&gt;
&lt;p&gt;&lt;code&gt;psetex key milliseconds value&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;tip&lt;/code&gt; : 命令助记:  &lt;code&gt;psetex&lt;/code&gt;  ,  &lt;code&gt;p&lt;/code&gt;  直接的是毫秒。可以参考 &lt;code&gt;set&lt;/code&gt;  命令的 &lt;code&gt;PX&lt;/code&gt;  选项。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;给键值对设置生存时间 (毫秒级别)。&lt;/p&gt;
&lt;figure class=&#34;highlight sh&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 设置键值对&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; psetex k8 5000 v8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;OK&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 获取k8的值&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; get k8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;&amp;quot;v8&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 5s之后，获取k8的值&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; get k8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(nil)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&#34;get命令&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#get命令&#34;&gt;#&lt;/a&gt;  &lt;code&gt;get&lt;/code&gt;  命令&lt;/h4&gt;
&lt;p&gt;这个命令不多说了，获取 &lt;code&gt;key&lt;/code&gt;  相关联的 &lt;code&gt;value&lt;/code&gt; .  &lt;code&gt;get key&lt;/code&gt;&lt;/p&gt;
&lt;h4 id=&#34;getset命令&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#getset命令&#34;&gt;#&lt;/a&gt;  &lt;code&gt;getset&lt;/code&gt;  命令&lt;/h4&gt;
&lt;p&gt;&lt;code&gt;getset key value&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;设置键值对， &lt;code&gt;key=&amp;gt;value&lt;/code&gt; , 如果 &lt;code&gt;key&lt;/code&gt;  已经存在，返回旧值。不存在返回  &lt;code&gt;nil&lt;/code&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight sh&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 设置键值对&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; getset k9 v9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(nil)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 获取值&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; get k9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;&amp;quot;v9&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 在设置一次k9,值为vv9,返回旧值 v9&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; getset k9 vv9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;&amp;quot;v9&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;ps: 如果原来的存在 key，但是 value 的类型与新设置的类型不一致，会抛出命令错误。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;figure class=&#34;highlight sh&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 设置一个list类型，key为k9_1, Value中只有一个元素v9_1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; lpush k9_1 v9_1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(&lt;span class=&#34;built_in&#34;&gt;integer&lt;/span&gt;) 1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 使用getset命令载设置一次,抛出命令错误。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; getset k9_1 vv9_1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(error) WRONGTYPE Operation against a key holding the wrong kind of value&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&#34;strlen-命令&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#strlen-命令&#34;&gt;#&lt;/a&gt;  &lt;code&gt;strlen&lt;/code&gt;  命令&lt;/h4&gt;
&lt;p&gt;&lt;code&gt;strlen key&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;返回字符串的长度。如果 key 不存在的时候，返回 0, 如果 key 对应的不是一个字符串时，返回错误.&lt;/p&gt;
&lt;figure class=&#34;highlight sh&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; &lt;span class=&#34;built_in&#34;&gt;set&lt;/span&gt; k10 v10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;OK&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; strlen k10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(&lt;span class=&#34;built_in&#34;&gt;integer&lt;/span&gt;) 3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 演示报错&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; lpush k10_1 v10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(&lt;span class=&#34;built_in&#34;&gt;integer&lt;/span&gt;) 1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; strlen k10_1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(error) WRONGTYPE Operation against a key holding the wrong kind of value&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&#34;append命令&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#append命令&#34;&gt;#&lt;/a&gt;  &lt;code&gt;APPEND&lt;/code&gt;  命令&lt;/h4&gt;
&lt;p&gt;&lt;code&gt;APPEND key value&lt;/code&gt;  命令&lt;/p&gt;
&lt;p&gt;根据 key，给 key 对应的值追加字符串。如果 key 不存在，就设置一对键值对。&lt;/p&gt;
&lt;figure class=&#34;highlight sh&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 如果key不存在则设置键值对&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; append k11 v11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(&lt;span class=&#34;built_in&#34;&gt;integer&lt;/span&gt;) 3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; get k11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;&amp;quot;v11&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 如果存在，则追加&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; append k11 v11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(&lt;span class=&#34;built_in&#34;&gt;integer&lt;/span&gt;) 6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; get k11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;&amp;quot;v11v11&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&#34;setrange命令&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#setrange命令&#34;&gt;#&lt;/a&gt;  &lt;code&gt;setrange&lt;/code&gt;  命令&lt;/h4&gt;
&lt;p&gt;&lt;code&gt;setrange key offset value&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;从偏移量  &lt;code&gt;offset&lt;/code&gt;  开始覆写原来 &lt;code&gt;key&lt;/code&gt;  的值。如果 &lt;code&gt;key&lt;/code&gt;  不存的时候当作空字符串处理。返回被设置后 &lt;code&gt;Value&lt;/code&gt;  的长度。&lt;/p&gt;
&lt;figure class=&#34;highlight sh&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 设置不存在的key&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; setrange k12 3 v12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(&lt;span class=&#34;built_in&#34;&gt;integer&lt;/span&gt;) 6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 在offset前的空位置会用 \x00 填充&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; get k12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;&amp;quot;\x00\x00\x00v12&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 设置已经存在的key&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; setrange k12 4 v12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(&lt;span class=&#34;built_in&#34;&gt;integer&lt;/span&gt;) 7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; get k12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;&amp;quot;\x00\x00\x00vv12&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&#34;getrange命令&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#getrange命令&#34;&gt;#&lt;/a&gt;  &lt;code&gt;getrange&lt;/code&gt;  命令&lt;/h4&gt;
&lt;p&gt;&lt;code&gt;getrange key start end&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;获取指定区间的值。报错 start 和 end 位置。索引位置是从 0 开始的。&lt;/p&gt;
&lt;p&gt;负数偏移量表示从字符创的末位开始计数。&lt;/p&gt;
&lt;figure class=&#34;highlight sh&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; &lt;span class=&#34;built_in&#34;&gt;set&lt;/span&gt; k13 v13v13v13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;OK&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; getrange k13 2 5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;&amp;quot;3v13&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 从索引为2处，到倒数第4位。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; getrange k13 2 -4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;&amp;quot;3v13&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 如果end大于Value的长度，返回目前start到结束的部分&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; getrange k13 3 10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;&amp;quot;v13v13&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 超过Value的长度返回为 &amp;quot;&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; getrange k13 100 120&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&#34;incr-命令&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#incr-命令&#34;&gt;#&lt;/a&gt;  &lt;code&gt;incr&lt;/code&gt;  命令&lt;/h4&gt;
&lt;p&gt;&lt;code&gt;incr key&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;在 key 对应的 Value 上进行自增 1. 如果 Value 可以解释为数据，则自增，反之，返回错误。&lt;/p&gt;
&lt;p&gt;返回值为自增后的值。&lt;/p&gt;
&lt;p&gt;如果 ke 不存在，则先初始化 key 对应的 Value=0， 然后再自增。&lt;/p&gt;
&lt;p&gt;相对的是: &lt;a href=&#34;#%60DECR%60%E5%91%BD%E4%BB%A4&#34;&gt; &lt;code&gt;DECR&lt;/code&gt;  命令&lt;/a&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight sh&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; incr k14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(&lt;span class=&#34;built_in&#34;&gt;integer&lt;/span&gt;) 1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; get k14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;&amp;quot;1&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; incr k14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(&lt;span class=&#34;built_in&#34;&gt;integer&lt;/span&gt;) 2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&#34;incrby命令&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#incrby命令&#34;&gt;#&lt;/a&gt;  &lt;code&gt;incrby&lt;/code&gt;  命令&lt;/h4&gt;
&lt;p&gt;&lt;code&gt;incrby key increment&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;带有步长的自增命令。&lt;/p&gt;
&lt;p&gt;相对的命令是: &lt;a href=&#34;%60DECRBY%60%E5%91%BD%E4%BB%A4&#34;&gt; &lt;code&gt;DECRBY&lt;/code&gt;  命令&lt;/a&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight sh&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; incrby k15 5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(&lt;span class=&#34;built_in&#34;&gt;integer&lt;/span&gt;) 5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; INCRBY k15 5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(&lt;span class=&#34;built_in&#34;&gt;integer&lt;/span&gt;) 10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; INCRBY k15 5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(&lt;span class=&#34;built_in&#34;&gt;integer&lt;/span&gt;) 15&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&#34;incrbyfloat命令&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#incrbyfloat命令&#34;&gt;#&lt;/a&gt;  &lt;code&gt;INCRBYFLOAT&lt;/code&gt;  命令&lt;/h4&gt;
&lt;p&gt;&lt;code&gt;INCRBYFLOAT key increment&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;带有步长的浮点数自增&lt;/p&gt;
&lt;figure class=&#34;highlight sh&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; INCRBYFLOAT k16 5.0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;&amp;quot;5&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; INCRBYFLOAT k16 5.2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;&amp;quot;10.2&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; INCRBYFLOAT k16 5.4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;&amp;quot;15.6&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&#34;decr命令&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#decr命令&#34;&gt;#&lt;/a&gt;  &lt;code&gt;DECR&lt;/code&gt;  命令&lt;/h4&gt;
&lt;p&gt;&lt;code&gt;DECR key&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;自减 &lt;code&gt;1&lt;/code&gt; .&lt;/p&gt;
&lt;figure class=&#34;highlight sh&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 如果key，不存在，同样会初始化为0，然后自减1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; DECR k17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(&lt;span class=&#34;built_in&#34;&gt;integer&lt;/span&gt;) -1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; DECR k17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(&lt;span class=&#34;built_in&#34;&gt;integer&lt;/span&gt;) -2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; DECR k17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(&lt;span class=&#34;built_in&#34;&gt;integer&lt;/span&gt;) -3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&#34;decrby命令&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#decrby命令&#34;&gt;#&lt;/a&gt;  &lt;code&gt;DECRBY&lt;/code&gt;  命令&lt;/h4&gt;
&lt;p&gt;带有步长的自减命令，与 &lt;a href=&#34;%60INCRBY%60%E5%91%BD%E4%BB%A4&#34;&gt; &lt;code&gt;INCRBY&lt;/code&gt;  命令&lt;/a&gt;相对。&lt;/p&gt;
&lt;figure class=&#34;highlight sh&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 如果key不存在，会初始化为0，在进行自减。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; DECRBY k18 5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(&lt;span class=&#34;built_in&#34;&gt;integer&lt;/span&gt;) -5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; DECRBY k18 5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(&lt;span class=&#34;built_in&#34;&gt;integer&lt;/span&gt;) -10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&#34;mget命令&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#mget命令&#34;&gt;#&lt;/a&gt;  &lt;code&gt;mget&lt;/code&gt;  命令&lt;/h4&gt;
&lt;p&gt;&lt;code&gt;mget key [key ...]&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;一次性返回多个 &lt;code&gt;key&lt;/code&gt;  的值。 如果 &lt;code&gt;key&lt;/code&gt;  不存在，返回  &lt;code&gt;(nil)&lt;/code&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight sh&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; &lt;span class=&#34;built_in&#34;&gt;set&lt;/span&gt; k19_0 v19_0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;OK&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; &lt;span class=&#34;built_in&#34;&gt;set&lt;/span&gt; k19_1 v19_1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;OK&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; mget k19_0 k19_1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1) &lt;span class=&#34;string&#34;&gt;&amp;quot;v19_0&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2) &lt;span class=&#34;string&#34;&gt;&amp;quot;v19_1&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 如果key不存在的时候，返回 (nil)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; mget k19_0 k19_1 k10_2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1) &lt;span class=&#34;string&#34;&gt;&amp;quot;v19_0&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2) &lt;span class=&#34;string&#34;&gt;&amp;quot;v19_1&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3) (nil)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&#34;mset命令&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#mset命令&#34;&gt;#&lt;/a&gt;  &lt;code&gt;mset&lt;/code&gt;  命令&lt;/h4&gt;
&lt;p&gt;同时为设置多个键值对。 如果 key 已经存在，直接覆盖掉。&lt;/p&gt;
&lt;p&gt;注意： 这个原子性操作。所有给定的 key 都会在同一时间内被设置。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;tips: 如果希望，已经存在的 key 不被覆盖，可以参考 &lt;a href=&#34;#%60msetnx%60%E5%91%BD%E4%BB%A4&#34;&gt; &lt;code&gt;msetnx&lt;/code&gt;  命令&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;figure class=&#34;highlight sh&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 一下设置三对&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; mset k20_0 v20_0 k20_1 v20_1 k20_2 v20_2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;OK&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; mget k20_0 k20_1 k20_2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1) &lt;span class=&#34;string&#34;&gt;&amp;quot;v20_0&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2) &lt;span class=&#34;string&#34;&gt;&amp;quot;v20_1&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3) &lt;span class=&#34;string&#34;&gt;&amp;quot;v20_2&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 演示已有的key对应的值会被覆盖掉。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; mset k20_2 vv20_2 k20_3 v20_3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;OK&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; mget k20_2 k20_3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1) &lt;span class=&#34;string&#34;&gt;&amp;quot;vv20_2&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2) &lt;span class=&#34;string&#34;&gt;&amp;quot;v20_3&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&#34;msetnx命令&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#msetnx命令&#34;&gt;#&lt;/a&gt;  &lt;code&gt;msetnx&lt;/code&gt;  命令&lt;/h4&gt;
&lt;p&gt;&lt;code&gt;MSETNX key value [key value ...]&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;当且仅当所有给定的 key 不存在的时候，才会设置键值对。即使有一个 key 存在，该命令也不会设置其他的 key 对应的键值对.&lt;/p&gt;
&lt;figure class=&#34;highlight sh&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 演示设置成功&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; MSETNX k21_0 v21_0 k21_1 v21_1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(&lt;span class=&#34;built_in&#34;&gt;integer&lt;/span&gt;) 1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; MGET k21_0 k21_1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1) &lt;span class=&#34;string&#34;&gt;&amp;quot;v21_0&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2) &lt;span class=&#34;string&#34;&gt;&amp;quot;v21_1&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 存在其中的一个给定key，就不能设置成功&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; msetnx k21_1 vv21_1 k21_2 v21_2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(&lt;span class=&#34;built_in&#34;&gt;integer&lt;/span&gt;) 0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; MGET k21_1 k21_2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1) &lt;span class=&#34;string&#34;&gt;&amp;quot;v21_1&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2) (nil)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;redis如何实现string这一数据结构&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#redis如何实现string这一数据结构&#34;&gt;#&lt;/a&gt;  &lt;code&gt;Redis&lt;/code&gt;  如何实现 &lt;code&gt;String&lt;/code&gt;  这一数据结构&lt;/h3&gt;
&lt;p&gt;在  &lt;code&gt;string&lt;/code&gt;  的相关命令介绍的时候，我其实使用一个错误的描述。就是将 &lt;code&gt;Redis&lt;/code&gt;  的 &lt;code&gt;String&lt;/code&gt;  类型称为字符串。这种说法其实不正确的。&lt;/p&gt;
&lt;p&gt;在  &lt;code&gt;redis&lt;/code&gt;  中， &lt;code&gt;string&lt;/code&gt;  这一数据结构使用 &lt;code&gt;sds&lt;/code&gt;  来表示的。&lt;/p&gt;
&lt;h4 id=&#34;sds&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#sds&#34;&gt;#&lt;/a&gt;  &lt;code&gt;sds&lt;/code&gt;&lt;/h4&gt;
&lt;p&gt;&lt;code&gt;sds&lt;/code&gt;  是  &lt;code&gt;simple dynamic string&lt;/code&gt;  的简称。 意思是  &lt;code&gt;简单的动态字符串&lt;/code&gt; 。 这里面的 &lt;code&gt;string&lt;/code&gt;  就是实打实的 &lt;code&gt;C&lt;/code&gt;  语言中的字符串 ( &lt;code&gt;char[]&lt;/code&gt; ).  &lt;code&gt;Redis&lt;/code&gt;  也并非一点也没有使用  &lt;code&gt;C&lt;/code&gt;  语言的字符串，像一些字面量常亮，日志都是使用 &lt;code&gt;C&lt;/code&gt;  语言的字符串。&lt;/p&gt;
&lt;p&gt;那  &lt;code&gt;sds&lt;/code&gt;  到底是一个什么样的结构呢？&lt;/p&gt;
&lt;p&gt;在源码的  &lt;code&gt;src&lt;/code&gt;  目录下，我找到了  &lt;code&gt;sds.h&lt;/code&gt;  这样一个文件。这里规定了  &lt;code&gt;sds&lt;/code&gt;  结构。&lt;/p&gt;
&lt;figure class=&#34;highlight c++&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;class&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;struct&lt;/span&gt; __&lt;span class=&#34;title&#34;&gt;attribute__&lt;/span&gt; ((__&lt;span class=&#34;title&#34;&gt;packed__&lt;/span&gt;)) &lt;span class=&#34;title&#34;&gt;sdshdr64&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;// 表示已使用的长度,即buf[]的长度。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;uint64_t&lt;/span&gt; len; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;// 已分配的长度(包括未使用的长度)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;// alloc-len,对应着之前版本的free&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;uint64_t&lt;/span&gt; alloc; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;unsigned&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;char&lt;/span&gt; flags; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;char&lt;/span&gt; buf[];&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;tips: 如果你注意到了这个结构体的命名。那么来看下&lt;a href=&#34;&#34;&gt;这篇文章&lt;/a&gt;吧。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;code&gt;sds&lt;/code&gt;  保留了  &lt;code&gt;C&lt;/code&gt;  字符串以空字符结尾的惯例。保留的这个空字符的长度不会保存在  &lt;code&gt;len&lt;/code&gt;  字段中。保留这一惯例的好处就是可以使用 &lt;code&gt;C&lt;/code&gt;  字符串函数库的一些方法。&lt;/p&gt;
&lt;p&gt;假设我们分配了 &lt;code&gt;10&lt;/code&gt;  个字节空间，只保存了  &lt;code&gt;redis&lt;/code&gt;  这个 &lt;code&gt;C&lt;/code&gt;  字符串，那么 在 &lt;code&gt;sds&lt;/code&gt;  中，是这么表示的：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/images/Redis%E7%B3%BB%E5%88%97/images/01-01-sds%E7%A4%BA%E6%84%8F%E5%9B%BE.png&#34; alt=&#34;01-01-sds示意图.png&#34;&gt;&lt;/p&gt;
&lt;h4 id=&#34;使用sds比使用c字符串有什么好处呢&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#使用sds比使用c字符串有什么好处呢&#34;&gt;#&lt;/a&gt; 使用 &lt;code&gt;sds&lt;/code&gt;  比使用 &lt;code&gt;C&lt;/code&gt;  字符串有什么好处呢？&lt;/h4&gt;
&lt;h5 id=&#34;获取字符长度的时间复杂度为-o1&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#获取字符长度的时间复杂度为-o1&#34;&gt;#&lt;/a&gt; 获取字符长度的时间复杂度为  &lt;code&gt;O(1)&lt;/code&gt;&lt;/h5&gt;
&lt;p&gt;&lt;code&gt;C&lt;/code&gt;  语言获取一个字符串的长度为  &lt;code&gt;O(N)&lt;/code&gt; . 需要遍历字符串并累加，判断字符是否为  &lt;code&gt;&#39;\0&#39;&lt;/code&gt;  来获得字符串的长度。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;sds&lt;/code&gt;  只需要根据  &lt;code&gt;len&lt;/code&gt;  字段获取即可。怎么获取的呢？&lt;/p&gt;
&lt;p&gt;我们来看下源码。&lt;/p&gt;
&lt;figure class=&#34;highlight c++&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;// 定义char类型的指针类型。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;typedef&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;char&lt;/span&gt; *sds;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;// 获取长度的结构体指针的宏.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;// 可根据指向buf的指针返回指向sdshdr结构体首地址的宏&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;#&lt;span class=&#34;meta-keyword&#34;&gt;define&lt;/span&gt; SDS_HDR(T,s) ((struct sdshdr##T *)((s)-(sizeof(struct sdshdr##T))))&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;// sds 直接指向结构体里的buf&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;static&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;inline&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;size_t&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;sdslen&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(&lt;span class=&#34;keyword&#34;&gt;const&lt;/span&gt; sds s)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;// sds是直接指向结构体里的buf数据, 当获取len等字段的信息,只需要减去结构体长度，回退一下指针就可以了。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;// 这里使用的尾指针法。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;unsigned&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;char&lt;/span&gt; flags = s[&lt;span class=&#34;number&#34;&gt;-1&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;// 判断属于那种 sdshdr,对应减去不同的地址。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;built_in&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;switch&lt;/span&gt;&lt;/span&gt;(flags&amp;amp;SDS_TYPE_MASK) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;case&lt;/span&gt; SDS_TYPE_5:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;SDS_TYPE_5_LEN&lt;/span&gt;(flags);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;case&lt;/span&gt; SDS_TYPE_8:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;SDS_HDR&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;8&lt;/span&gt;,s)-&amp;gt;len;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;case&lt;/span&gt; SDS_TYPE_16:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;SDS_HDR&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;16&lt;/span&gt;,s)-&amp;gt;len;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;case&lt;/span&gt; SDS_TYPE_32:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;SDS_HDR&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;32&lt;/span&gt;,s)-&amp;gt;len;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;case&lt;/span&gt; SDS_TYPE_64:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;SDS_HDR&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;64&lt;/span&gt;,s)-&amp;gt;len;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h5 id=&#34;可以杜绝缓冲区溢出&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#可以杜绝缓冲区溢出&#34;&gt;#&lt;/a&gt; 可以杜绝缓冲区溢出&lt;/h5&gt;
&lt;p&gt;&lt;code&gt;C&lt;/code&gt;  语言是不会判断数组是否越界的。比如  &lt;code&gt;strcat&lt;/code&gt;  方法，如果当前的数据不能容纳拼接之后字符时，必然会发生缓存区溢出。&lt;br&gt;
但是  &lt;code&gt;sds&lt;/code&gt;  则不会。我们来看下  &lt;code&gt;sds&lt;/code&gt;  的字符串拼接的方法  &lt;code&gt;sdscat&lt;/code&gt; 。&lt;/p&gt;
&lt;figure class=&#34;highlight c++&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;// s 原来的字符串，t是要拼接的字符串&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;sds &lt;span class=&#34;title&#34;&gt;sdscat&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(sds s, &lt;span class=&#34;keyword&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;char&lt;/span&gt; *t)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;sdscatlen&lt;/span&gt;(s, t, &lt;span class=&#34;built_in&#34;&gt;strlen&lt;/span&gt;(t));&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;sds &lt;span class=&#34;title&#34;&gt;sdscatlen&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(sds s, &lt;span class=&#34;keyword&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;void&lt;/span&gt; *t, &lt;span class=&#34;keyword&#34;&gt;size_t&lt;/span&gt; len)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;// 获取原来字符串的长度。(见上面的方法)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;size_t&lt;/span&gt; curlen = &lt;span class=&#34;built_in&#34;&gt;sdslen&lt;/span&gt;(s);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;// 扩大sds字符串末尾的可用空间，&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;//以便调用者确保在调用此函数后可以覆盖字符串末尾的addlen字节，&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;//再为null项再加上一个字节。 具体实现，参考源码(sds.c:204)。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    s = &lt;span class=&#34;built_in&#34;&gt;sdsMakeRoomFor&lt;/span&gt;(s,len);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;// 如果内存分配失败，就会返回null&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (s == &lt;span class=&#34;literal&#34;&gt;NULL&lt;/span&gt;) &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;literal&#34;&gt;NULL&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;// 调用C语言的分配&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;built_in&#34;&gt;memcpy&lt;/span&gt;(s+curlen, t, len);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;// sds设置 sdshdr的len字段的值。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;built_in&#34;&gt;sdssetlen&lt;/span&gt;(s, curlen+len);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;// 添加最后一个字符为: &amp;#x27;\0&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    s[curlen+len] = &lt;span class=&#34;string&#34;&gt;&amp;#x27;\0&amp;#x27;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; s;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h5 id=&#34;sds-优化了c语言的内存分配策略&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#sds-优化了c语言的内存分配策略&#34;&gt;#&lt;/a&gt; sds 优化了 C 语言的内存分配策略&lt;/h5&gt;
&lt;h6 id=&#34;空间预分配&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#空间预分配&#34;&gt;#&lt;/a&gt; 空间预分配&lt;/h6&gt;
&lt;p&gt;空间预分配策略遵循下面的公式:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;如果 &lt;code&gt;SDS&lt;/code&gt;  的长度小于最大的预分配空间 ( &lt;code&gt;1MB&lt;/code&gt; ), 那么会分配两倍的新空间，再加上结尾的空字符 &lt;code&gt;&#39;\0&#39;&lt;/code&gt;  举个例子：原有的 &lt;code&gt;sds&lt;/code&gt;  的 &lt;code&gt;len&lt;/code&gt;  为 &lt;code&gt;5&lt;/code&gt; , &lt;code&gt;alloc&lt;/code&gt;  为 &lt;code&gt;5&lt;/code&gt; , 要拼接的字符串长度为 &lt;code&gt;15&lt;/code&gt; , 那么新分配的空间大小是:  &lt;code&gt;(5byte+15byte)*2 + 1byte = 41byte&lt;/code&gt; .&lt;/li&gt;
&lt;li&gt;如果 &lt;code&gt;sds&lt;/code&gt;  的长度大于等于默认的预分配空间，那么就在新分配的空间大小基础上，在分配 &lt;code&gt;1MB&lt;/code&gt;  的空间。如果修改后的， &lt;code&gt;SDS&lt;/code&gt;  的 &lt;code&gt;len&lt;/code&gt;  是  &lt;code&gt;20M&lt;/code&gt; ，那么 &lt;code&gt;alloc&lt;/code&gt;  就是  &lt;code&gt;20M + 1M + 1byte&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;具体分配过程见下面的源码&lt;/p&gt;
&lt;figure class=&#34;highlight c++&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;48&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;// SDS 默认最大的预分配空间为1M&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;#&lt;span class=&#34;meta-keyword&#34;&gt;define&lt;/span&gt; SDS_MAX_PREALLOC (1024*1024)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;// sds 预分配空间&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;sds &lt;span class=&#34;title&#34;&gt;sdsMakeRoomFor&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(sds s, &lt;span class=&#34;keyword&#34;&gt;size_t&lt;/span&gt; addlen)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;void&lt;/span&gt; *sh, *newsh;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;size_t&lt;/span&gt; avail = &lt;span class=&#34;built_in&#34;&gt;sdsavail&lt;/span&gt;(s);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;size_t&lt;/span&gt; len, newlen;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;char&lt;/span&gt; type, oldtype = s[&lt;span class=&#34;number&#34;&gt;-1&lt;/span&gt;] &amp;amp; SDS_TYPE_MASK;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; hdrlen;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;/* 如果空间足够，直接返回 */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (avail &amp;gt;= addlen) &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; s;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    len = &lt;span class=&#34;built_in&#34;&gt;sdslen&lt;/span&gt;(s);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    sh = (&lt;span class=&#34;keyword&#34;&gt;char&lt;/span&gt;*)s-&lt;span class=&#34;built_in&#34;&gt;sdsHdrSize&lt;/span&gt;(oldtype);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    newlen = (len+addlen);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (newlen &amp;lt; SDS_MAX_PREALLOC)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        newlen *= &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        newlen += SDS_MAX_PREALLOC;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    type = &lt;span class=&#34;built_in&#34;&gt;sdsReqType&lt;/span&gt;(newlen);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;/* Don&amp;#x27;t use type 5: the user is appending to the string and type 5 is&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;     * not able to remember empty space, so sdsMakeRoomFor() must be called&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;     * at every appending operation. */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (type == SDS_TYPE_5) type = SDS_TYPE_8;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    hdrlen = &lt;span class=&#34;built_in&#34;&gt;sdsHdrSize&lt;/span&gt;(type);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (oldtype==type) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        newsh = &lt;span class=&#34;built_in&#34;&gt;s_realloc&lt;/span&gt;(sh, hdrlen+newlen+&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (newsh == &lt;span class=&#34;literal&#34;&gt;NULL&lt;/span&gt;) &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;literal&#34;&gt;NULL&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        s = (&lt;span class=&#34;keyword&#34;&gt;char&lt;/span&gt;*)newsh+hdrlen;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125; &lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;comment&#34;&gt;/* Since the header size changes, need to move the string forward,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;         * and can&amp;#x27;t use realloc */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        newsh = &lt;span class=&#34;built_in&#34;&gt;s_malloc&lt;/span&gt;(hdrlen+newlen+&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (newsh == &lt;span class=&#34;literal&#34;&gt;NULL&lt;/span&gt;) &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;literal&#34;&gt;NULL&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;built_in&#34;&gt;memcpy&lt;/span&gt;((&lt;span class=&#34;keyword&#34;&gt;char&lt;/span&gt;*)newsh+hdrlen, s, len+&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;built_in&#34;&gt;s_free&lt;/span&gt;(sh);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        s = (&lt;span class=&#34;keyword&#34;&gt;char&lt;/span&gt;*)newsh+hdrlen;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        s[&lt;span class=&#34;number&#34;&gt;-1&lt;/span&gt;] = type;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;built_in&#34;&gt;sdssetlen&lt;/span&gt;(s, len);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;built_in&#34;&gt;sdssetalloc&lt;/span&gt;(s, newlen);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; s;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h6 id=&#34;惰性空间释放&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#惰性空间释放&#34;&gt;#&lt;/a&gt; 惰性空间释放&lt;/h6&gt;
&lt;p&gt;当对 sds 进行缩短操作时，程序并不会立马对内存重分配来回收收缩的空间，而是仅仅改变 &lt;code&gt;len&lt;/code&gt;  属性，并且在队对应的位置上将字符设置为:  &lt;code&gt;&#39;\0&#39;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;以 函数  &lt;code&gt;sdstrim&lt;/code&gt;  为例。&lt;/p&gt;
&lt;figure class=&#34;highlight c++&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;sds &lt;span class=&#34;title&#34;&gt;sdstrim&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(sds s, &lt;span class=&#34;keyword&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;char&lt;/span&gt; *cset)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;char&lt;/span&gt; *start, *end, *sp, *ep;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;size_t&lt;/span&gt; len;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    sp = start = s;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    ep = end = s+&lt;span class=&#34;built_in&#34;&gt;sdslen&lt;/span&gt;(s)&lt;span class=&#34;number&#34;&gt;-1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;while&lt;/span&gt;(sp &amp;lt;= end &amp;amp;&amp;amp; &lt;span class=&#34;built_in&#34;&gt;strchr&lt;/span&gt;(cset, *sp)) sp++;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;while&lt;/span&gt;(ep &amp;gt; sp &amp;amp;&amp;amp; &lt;span class=&#34;built_in&#34;&gt;strchr&lt;/span&gt;(cset, *ep)) ep--;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    len = (sp &amp;gt; ep) ? &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt; : ((ep-sp)+&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;// 进行移位&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (s != sp) &lt;span class=&#34;built_in&#34;&gt;memmove&lt;/span&gt;(s, sp, len);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;// 设置字符串结束符&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    s[len] = &lt;span class=&#34;string&#34;&gt;&amp;#x27;\0&amp;#x27;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;// 设置len字段的值&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;built_in&#34;&gt;sdssetlen&lt;/span&gt;(s,len);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; s;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;上述实现中，并没有进行内存回收。 &lt;code&gt;sds&lt;/code&gt;  也提供了内存回收的函数 &lt;code&gt;sds_free&lt;/code&gt; . 具体可以看 &lt;code&gt;Redis 5.0.7&lt;/code&gt;  版源码.  &lt;code&gt;sds.c&lt;/code&gt;  第 &lt;code&gt;1120&lt;/code&gt;  行。这里不再深入学习了。&lt;/p&gt;
&lt;h4 id=&#34;二进制安全&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#二进制安全&#34;&gt;#&lt;/a&gt; 二进制安全&lt;/h4&gt;
&lt;p&gt;&lt;code&gt;sds&lt;/code&gt;  的 &lt;code&gt;API&lt;/code&gt;  都是二进制安全的。因为 &lt;code&gt;Redis&lt;/code&gt;  对  &lt;code&gt;sds&lt;/code&gt;  结构中的 &lt;code&gt;buf&lt;/code&gt;  数组中的数据都是以二进制的方式处理的。&lt;/p&gt;
&lt;h4 id=&#34;兼容部分的c字符串函数&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#兼容部分的c字符串函数&#34;&gt;#&lt;/a&gt; 兼容部分的 &lt;code&gt;C&lt;/code&gt;  字符串函数&lt;/h4&gt;
&lt;p&gt;&lt;code&gt;Redis&lt;/code&gt;  还是遵循了 &lt;code&gt;C&lt;/code&gt;  字符串以  &lt;code&gt;&#39;\0&#39;&lt;/code&gt;  结尾的习惯，所以保存了文本数据的 &lt;code&gt;sds&lt;/code&gt;  是可以复用  &lt;code&gt;&amp;lt;string.h&amp;gt;&lt;/code&gt;  库中的函数。&lt;/p&gt;
&lt;h3 id=&#34;总结&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#总结&#34;&gt;#&lt;/a&gt; 总结&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;string&lt;/code&gt;  是 &lt;code&gt;redis&lt;/code&gt;  中最简单的数据结构.  &lt;code&gt;string&lt;/code&gt;  不是 &lt;code&gt;C&lt;/code&gt;  字符串，而是对 &lt;code&gt;C&lt;/code&gt;  字符串进行了封装.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;学习了 &lt;code&gt;string&lt;/code&gt;  类型相关的 &lt;code&gt;api&lt;/code&gt; 。  &lt;code&gt;set&lt;/code&gt; , &lt;code&gt;setnx&lt;/code&gt; , &lt;code&gt;setex&lt;/code&gt; ,  &lt;code&gt;get&lt;/code&gt; ,  &lt;code&gt;getset&lt;/code&gt; ,  &lt;code&gt;incr&lt;/code&gt; ,  &lt;code&gt;decr&lt;/code&gt; ,…&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;sds&lt;/code&gt;  这种设计的好处，提高了性能，优化内存分配，二进制安全，兼容 &lt;code&gt;C&lt;/code&gt;  字符串。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;最后&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#最后&#34;&gt;#&lt;/a&gt; 最后&lt;/h2&gt;
&lt;p&gt;期望与你一起遇见更好的自己&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/images/qrcode.jpg&#34; alt=&#34;期望与你一起遇见更好的自己&#34;&gt;&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://fangjiaxiaobai.github.io/2021/08/01/Redis%E7%B3%BB%E5%88%97/02-Redis%E7%9A%84%E5%A4%9A%E4%B8%AA%E6%95%B0%E6%8D%AE%E5%BA%93/</guid>
            <title>Redis 多个数据库</title>
            <link>https://fangjiaxiaobai.github.io/2021/08/01/Redis%E7%B3%BB%E5%88%97/02-Redis%E7%9A%84%E5%A4%9A%E4%B8%AA%E6%95%B0%E6%8D%AE%E5%BA%93/</link>
            <category>Redis</category>
            <pubDate>Sun, 01 Aug 2021 14:48:55 +0800</pubDate>
            <description><![CDATA[ &lt;p&gt;&lt;code&gt;Redis&lt;/code&gt;  默认提供了 &lt;code&gt;16&lt;/code&gt;  个数据库。每个数据库都有一个 &lt;code&gt;id&lt;/code&gt; , 从  &lt;code&gt;0&lt;/code&gt;  开始，[0,15]。 不同的数据库中数据隔离保存。我们可以通过修改 redis 的配置文件进行修改数据库的数量。&lt;/p&gt;
&lt;figure class=&#34;highlight properties&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;attr&#34;&gt;database&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;32&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;使用  &lt;code&gt;select &amp;lt;ID&amp;gt;&lt;/code&gt;  可以切换数据库.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;示例如下:&lt;/p&gt;
&lt;figure class=&#34;highlight sh&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; select 1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;OK&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 演示数据隔离&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379[1]&amp;gt; &lt;span class=&#34;built_in&#34;&gt;set&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;test&lt;/span&gt; 1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;OK&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379[1]&amp;gt; select 2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Ok&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379[2]&amp;gt; get &lt;span class=&#34;built_in&#34;&gt;test&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(nil)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;可以通过命令之前的部分区分我们所在的数据库.&lt;br&gt;
 &lt;code&gt;127.0.0.1:6379[2]&amp;gt; select 2&lt;/code&gt;  执行这个命令的时候，我们是在数据库 &lt;code&gt;1&lt;/code&gt;  中的。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;使用  &lt;code&gt;flushdb&lt;/code&gt;  只能删除 &lt;b&gt;该数据库 (一个库)&lt;/b&gt; 中的数据。&lt;/li&gt;
&lt;li&gt;使用  &lt;code&gt;flushall&lt;/code&gt;  可以删除 &lt;b&gt;所有库&lt;/b&gt; 中的数据。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;redis使用分库的意义&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#redis使用分库的意义&#34;&gt;#&lt;/a&gt; redis 使用分库的意义&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;避免不同应用相同 &lt;code&gt;key&lt;/code&gt;  的影响。&lt;/li&gt;
&lt;li&gt;更便于管理。&lt;br&gt;
一个实例上运行多个库，只运维这一个实例就可以了。&lt;/li&gt;
&lt;li&gt;也有不少文章说，redis 的作者曾说过，“多数据库的设计可能是最糟糕的决定.”. Redis 是单线程的，即使是多数据库也不会带来性能提升。但是这个并没有和前面的两个好处冲突。下面是作者的原话:&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;I understand how this can be useful, but unfortunately I consider Redis multiple database errors my worst decision in Redis design at all… without any kind of real gain, it makes the internals a lot more complex. The reality is that databases don’t scale well for a number of reason, like active expire of keys and VM. If the DB selection can be performed with a string I can see this feature being used as a scalable O(1) dictionary layer, that instead it is not.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;With DB numbers, with a default of a few DBs, we are communication better what this feature is and how can be used I think. I hope that at some point we can drop the multiple DBs support at all, but I think it is probably too late as there is a number of people relying on this feature for their work.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;redis的分库是怎么实现&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#redis的分库是怎么实现&#34;&gt;#&lt;/a&gt; Redis 的分库是怎么实现？&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;Redis&lt;/code&gt;  服务器间所有的数据库都保存在 服务器状态  &lt;code&gt;redis.h/redisServer&lt;/code&gt;  结构的 db 数组中。 &lt;code&gt;db&lt;/code&gt;  数组中的每个元素都是一个  &lt;code&gt;redis.h/redisDb&lt;/code&gt;  结构。每个 &lt;code&gt;redisDb&lt;/code&gt;  结构代表一个数据库.&lt;/p&gt;
&lt;figure class=&#34;highlight c++&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;class&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;struct&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;redisServer&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;// 保存所有数据库&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    redisDb *db;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;// 数据库的数量(redis.conf文件中 database配置的)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; dbnum;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;每个 &lt;code&gt;Redis&lt;/code&gt;  客户端都有自己的目标数据库，每个客户端执行数据库写命令或者数据库读命令的时候，目标数据库都会成为这些命令的操作对象.&lt;br&gt;
 每个客户端用  &lt;code&gt;RedisClient&lt;/code&gt;  来描述。  &lt;code&gt;RedisClient&lt;/code&gt;  结构的 &lt;code&gt;db&lt;/code&gt;  属性记录了客户端当前的目标数据库，这个属性是一个指向  &lt;code&gt;redisDb&lt;/code&gt;  的指针.&lt;/p&gt;
&lt;figure class=&#34;highlight c++&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;typedef&lt;/span&gt; &lt;span class=&#34;class&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;struct&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;redisClient&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;// 记录客户端端正在使用的数据库id&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    redisDb *db;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125; redisClient;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&#34;举个例子&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#举个例子&#34;&gt;#&lt;/a&gt; 举个例子:&lt;/h4&gt;
&lt;p&gt;假设我们客户端连接的是数据库 &lt;code&gt;1&lt;/code&gt; , 那么客户端与服务器端之间的关系是这样的:&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;./images/00-01%E5%A4%9A%E6%95%B0%E6%8D%AE%E5%BA%93%E7%A4%BA%E6%84%8F%E5%9B%BE.png&#34; alt=&#34;00-01多数据库示意图&#34;&gt;&lt;/p&gt;
&lt;p&gt;如果我们运行  &lt;code&gt;select 2&lt;/code&gt; , 其实，就是改变的 db 的指针。让它指向了  &lt;code&gt;db(2)&lt;/code&gt; , 这就是  &lt;code&gt;select&lt;/code&gt;  命令的运行原理。如下图。&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;./images/00-02%E5%A4%9A%E6%95%B0%E6%8D%AE%E5%BA%93%E7%A4%BA%E6%84%8F%E5%9B%BE.png&#34; alt=&#34;00-02多数据库示意图&#34;&gt;&lt;/p&gt;
&lt;p&gt;以上就是 关于  &lt;code&gt;Redis&lt;/code&gt;  多数据库的内容了。&lt;/p&gt;
&lt;h2 id=&#34;最后&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#最后&#34;&gt;#&lt;/a&gt; 最后&lt;/h2&gt;
&lt;p&gt;期望与你一起遇见更好的自己&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/images/qrcode.jpg&#34; alt=&#34;期望与你一起遇见更好的自己&#34;&gt;&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://fangjiaxiaobai.github.io/2021/08/01/Redis%E7%B3%BB%E5%88%97/01-Redis%E7%AE%80%E4%BB%8B%E4%BB%A5%E5%8F%8A%E4%B8%8E%E5%85%B6%E4%BB%96%E6%95%B0%E6%8D%AE%E5%BA%93%E7%9A%84%E5%AF%B9%E6%AF%94/</guid>
            <title>Redis 简介</title>
            <link>https://fangjiaxiaobai.github.io/2021/08/01/Redis%E7%B3%BB%E5%88%97/01-Redis%E7%AE%80%E4%BB%8B%E4%BB%A5%E5%8F%8A%E4%B8%8E%E5%85%B6%E4%BB%96%E6%95%B0%E6%8D%AE%E5%BA%93%E7%9A%84%E5%AF%B9%E6%AF%94/</link>
            <category>Redis</category>
            <pubDate>Sun, 01 Aug 2021 14:40:55 +0800</pubDate>
            <description><![CDATA[ &lt;p&gt;&lt;code&gt;Redis&lt;/code&gt;  是一个开放源代码（ &lt;code&gt;BSD&lt;/code&gt;  许可）的内存中数据结构存储，用作数据库，缓存和消息代理。它支持数据结构，例如字符串，哈希，列表，集合，带范围查询的排序集合，位图 ( &lt;code&gt;bitMap&lt;/code&gt; )，超日志 ( &lt;code&gt;hyperlog&lt;/code&gt; )，带有半径查询和流的地理空间索引 ( &lt;code&gt;geohash&lt;/code&gt; )。 &lt;code&gt;Redis&lt;/code&gt;  还内置了副本， &lt;code&gt;Lua&lt;/code&gt;  脚本， &lt;code&gt;LRU&lt;/code&gt;  驱逐策略，事务和不同级别的磁盘持久性，并通过 &lt;code&gt;Redis Sentinel&lt;/code&gt;  和 &lt;code&gt;Redis Cluster&lt;/code&gt;  自动分区提供了高可用性。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Redis&lt;/code&gt;  还支持一下特性:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;事务&lt;/li&gt;
&lt;li&gt;发布 / 订阅模式&lt;/li&gt;
&lt;li&gt;&lt;code&gt;lua&lt;/code&gt;  脚本&lt;/li&gt;
&lt;li&gt;键值的允许生存时长.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;LRU&lt;/code&gt;  驱逐&lt;/li&gt;
&lt;li&gt;故障自动转移&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;与其他数据库对比&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#与其他数据库对比&#34;&gt;#&lt;/a&gt; 与其他数据库对比&lt;/h2&gt;
&lt;p&gt;与其他数据库的对比:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;-&lt;/th&gt;
&lt;th&gt;Redis&lt;/th&gt;
&lt;th&gt;MongoDB&lt;/th&gt;
&lt;th&gt;Hbase&lt;/th&gt;
&lt;th&gt;Mysql&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;数据库类型&lt;/td&gt;
&lt;td&gt;NoSQL&lt;/td&gt;
&lt;td&gt;NOSQL&lt;/td&gt;
&lt;td&gt;NoSQL&lt;/td&gt;
&lt;td&gt;关系型数据库&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;数据类型&lt;/td&gt;
&lt;td&gt;key-value, 提供 String,List,zet 等多种结构&lt;/td&gt;
&lt;td&gt;Collection.Document.BSON&lt;/td&gt;
&lt;td&gt;基于列模式的映射数据库，可表示简单的 key-value 的映射关系。&lt;/td&gt;
&lt;td&gt;DB.table.row/col&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;持久化&lt;/td&gt;
&lt;td&gt;支持 (RDB/AOF)&lt;/td&gt;
&lt;td&gt;支持&lt;/td&gt;
&lt;td&gt;支持&lt;/td&gt;
&lt;td&gt;支持&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;是否支持集群&lt;/td&gt;
&lt;td&gt;支持&lt;/td&gt;
&lt;td&gt;支持&lt;/td&gt;
&lt;td&gt;支持&lt;/td&gt;
&lt;td&gt;支持&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;使用场景&lt;/td&gt;
&lt;td&gt;缓存 (内存稳定，读写性能极佳), 读多写少&lt;/td&gt;
&lt;td&gt;使用 Mysql 等关系型数据库，但是会遇到表结构不稳定的时候 (灵活)&lt;/td&gt;
&lt;td&gt;数据库大，特别大，列数据库，适合写多读少的场景&lt;/td&gt;
&lt;td&gt;常规的数据存储&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;是否支持索引&lt;/td&gt;
&lt;td&gt;支持&lt;/td&gt;
&lt;td&gt;支持&lt;/td&gt;
&lt;td&gt;支持&lt;/td&gt;
&lt;td&gt;支持&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;是否支持事务&lt;/td&gt;
&lt;td&gt;支持&lt;/td&gt;
&lt;td&gt;不支持&lt;/td&gt;
&lt;td&gt;支持&lt;/td&gt;
&lt;td&gt;支持&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id=&#34;最后&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#最后&#34;&gt;#&lt;/a&gt; 最后&lt;/h2&gt;
&lt;p&gt;期望与你一起遇见更好的自己&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/images/qrcode.jpg&#34; alt=&#34;期望与你一起遇见更好的自己&#34;&gt;&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://fangjiaxiaobai.github.io/2021/08/01/Redis%E7%B3%BB%E5%88%97/01-%E5%AE%89%E8%A3%85%E5%8D%95%E6%9C%BA%E7%89%88Redis/</guid>
            <title>Redis的单机部署</title>
            <link>https://fangjiaxiaobai.github.io/2021/08/01/Redis%E7%B3%BB%E5%88%97/01-%E5%AE%89%E8%A3%85%E5%8D%95%E6%9C%BA%E7%89%88Redis/</link>
            <category>Redis</category>
            <pubDate>Sun, 01 Aug 2021 14:38:55 +0800</pubDate>
            <description><![CDATA[ &lt;h1 id=&#34;源码安装&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#源码安装&#34;&gt;#&lt;/a&gt; 源码安装&lt;/h1&gt;
&lt;h2 id=&#34;下载地址&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#下载地址&#34;&gt;#&lt;/a&gt; 下载地址&lt;/h2&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL2Rvd25sb2FkLnJlZGlzLmlvL3JlbGVhc2VzL3JlZGlzLTUuMC43LnRhci5neg==&#34;&gt;http://download.redis.io/releases/redis-5.0.7.tar.gz&lt;/span&gt;&lt;/p&gt;
&lt;h2 id=&#34;安装步骤&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#安装步骤&#34;&gt;#&lt;/a&gt; 安装步骤&lt;/h2&gt;
&lt;figure class=&#34;highlight sh&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;wget http://download.redis.io/releases/redis-5.0.7.tar.gz&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;tar xvf redis-5.0.7.tar.gz&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[root@fangjiaxiaobai &lt;span class=&#34;built_in&#34;&gt;local&lt;/span&gt;]&lt;span class=&#34;comment&#34;&gt;# cd ./redis-5.0.7/&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[root@fangjiaxiaobai redis-5.0.7]&lt;span class=&#34;comment&#34;&gt;# make &amp;amp;&amp;amp; make install&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Hint: It&lt;span class=&#34;string&#34;&gt;&amp;#x27;s a good idea to run &amp;#x27;&lt;/span&gt;make &lt;span class=&#34;built_in&#34;&gt;test&lt;/span&gt;&lt;span class=&#34;string&#34;&gt;&amp;#x27; ;)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;# 出现上面的提示代表成功了&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;可能出现以下错误&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#可能出现以下错误&#34;&gt;#&lt;/a&gt; 可能出现以下错误:&lt;/h3&gt;
&lt;figure class=&#34;highlight sh&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;/bin/sh: cc: &lt;span class=&#34;built_in&#34;&gt;command&lt;/span&gt; not found&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;解决方案: yum install gcc&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;jemalloc/jemalloc.h: No such file or directory&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;原因是jemalloc重载了Linux下的ANSI C的malloc和free函数。解决办法：make时添加参数。&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;解决方案: make MALLOC=libc&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;启动&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#启动&#34;&gt;#&lt;/a&gt; 启动&lt;/h3&gt;
&lt;p&gt;[root@fangjiaxiaobai ~]# cd /usr/local/redis-5.0.7/src/&lt;/p&gt;
&lt;p&gt;[root@fangjiaxiaobai init.d]# ./redis_6379 start&lt;/p&gt;
&lt;h3 id=&#34;关闭&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#关闭&#34;&gt;#&lt;/a&gt; 关闭&lt;/h3&gt;
&lt;p&gt;[root@fangjiaxiaobai src]# ./redis-cli -p 6379 shutdown&lt;/p&gt;
&lt;h2 id=&#34;最后&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#最后&#34;&gt;#&lt;/a&gt; 最后&lt;/h2&gt;
&lt;p&gt;期望与你一起遇见更好的自己&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/images/qrcode.jpg&#34; alt=&#34;期望与你一起遇见更好的自己&#34;&gt;&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://fangjiaxiaobai.github.io/2021/07/24/MySQL%E7%B3%BB%E5%88%97/%E6%95%B0%E6%8D%AE%E5%BA%931-01.%E6%95%B0%E6%8D%AE%E5%BA%93%E7%9A%84%E7%89%88%E6%9C%AC/</guid>
            <title>MySQL数据库的版本</title>
            <link>https://fangjiaxiaobai.github.io/2021/07/24/MySQL%E7%B3%BB%E5%88%97/%E6%95%B0%E6%8D%AE%E5%BA%931-01.%E6%95%B0%E6%8D%AE%E5%BA%93%E7%9A%84%E7%89%88%E6%9C%AC/</link>
            <category>MySQL</category>
            <pubDate>Sat, 24 Jul 2021 14:48:55 +0800</pubDate>
            <description><![CDATA[ &lt;h2 id=&#34;mysql数据库的版本&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#mysql数据库的版本&#34;&gt;#&lt;/a&gt;  &lt;code&gt;MySQL&lt;/code&gt;  数据库的版本&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;mysql-5.0&lt;/code&gt;   :   &lt;code&gt;mysql-5.0&lt;/code&gt;  版本之前， &lt;code&gt;myisam&lt;/code&gt;  默认支持的表大小为 &lt;code&gt;4G&lt;/code&gt; 。从 &lt;code&gt;mysql-5.0&lt;/code&gt;  以后， &lt;code&gt;MyISAM&lt;/code&gt;  默认支持 &lt;code&gt;256T&lt;/code&gt;  的表单数据。 &lt;code&gt;myisam&lt;/code&gt;  只缓存索引数据。  &lt;code&gt;2005&lt;/code&gt;  年的 &lt;code&gt;5.0&lt;/code&gt;  版本又添加了存储过程、服务端游标、触发器、查询优化以及分布式事务功能。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;MySQL5.1&lt;/code&gt;   :   &lt;code&gt;2008&lt;/code&gt;  年发布的 &lt;code&gt;MySQL 5.1&lt;/code&gt;  的版本，基本上就是一个增加了崩溃恢复功能的 &lt;code&gt;MyISAM&lt;/code&gt; ，使用表级锁，但可以做到读写不冲突，即在进行任何类型的更新操作的同时都可以进行读操作，但多个写操作不能并发。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;mysql5.5&lt;/code&gt;  :   &lt;code&gt;2010&lt;/code&gt;  年 &lt;code&gt;12&lt;/code&gt;  月发布 &lt;code&gt;mysql5.5&lt;/code&gt;  版本默认存储引擎更改为 &lt;code&gt;InnoDB&lt;/code&gt;  多个回滚段（ &lt;code&gt;Multiple Rollback Segments&lt;/code&gt; ）, 之前的 &lt;code&gt;innodb&lt;/code&gt;  版本最大能处理 &lt;code&gt;1023&lt;/code&gt;  个并发处理操作，现在 &lt;code&gt;mysql5.5&lt;/code&gt;  可以处理高达 128K 的并发事务，改善事务处理中的元数据锁定。例如，事物中一个语句需要锁一个表，会在事物结束时释放这个表，而不是像以前在语句结束时释放表。 增加了 &lt;code&gt;INFORMATION_SCHEMA&lt;/code&gt;  表，新的表提供了与 InnoDB 压缩和事务处理锁定有关的具体信息。&lt;/p&gt;
&lt;h3 id=&#34;mysql56&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#mysql56&#34;&gt;#&lt;/a&gt; mysql5.6&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;2013&lt;/code&gt;  年 &lt;code&gt;2&lt;/code&gt;  月发布。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;安全性进行了加强。用户的账号和密码进行了更强的加密算法，使用 &lt;code&gt;sha256_passwordSHA-256&lt;/code&gt;  密码哈希的身份验证插件来进行加密。 &lt;code&gt;mysql.user&lt;/code&gt;  表中新增了 &lt;code&gt;password_expired&lt;/code&gt;  字段，过期后，所有连接的执行都会报出异常。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;MySQL Server&lt;/code&gt;  的参数默认值进行了更改。如下图所示:&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img data-src=&#34;/images/MySQL%E7%B3%BB%E5%88%97/10101-MySQL5.6Server%E7%AB%AF%E5%8F%82%E6%95%B0%E4%BF%AE%E6%94%B9%E7%9A%84%E9%BB%98%E8%AE%A4%E5%80%BC.png&#34; alt=&#34;10101-MySQL5.6Server端参数修改的默认值.png&#34;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;mysql5.6&lt;/code&gt;  版本中 &lt;code&gt;InnoDB&lt;/code&gt;  可以限制大量表打开的时候内存占用过多的问题 &lt;code&gt;InnoDB&lt;/code&gt;  性能加强。如大内存优化等 &lt;code&gt;InnoDB&lt;/code&gt;  死锁信息可以记录到  &lt;code&gt;error&lt;/code&gt;  日志，&lt;br&gt;
&lt;b&gt; &lt;code&gt;InnoDB&lt;/code&gt;  引擎也支持了 &lt;code&gt;FULLTEXT&lt;/code&gt;  索引&lt;/b&gt;。并使用 &lt;code&gt;MATCH() ... AGAINST&lt;/code&gt;  语法查询它们。 &lt;code&gt;ALTER TABLE &lt;/code&gt; 在不复制表，不阻止对表的插入，更新和删除或两者都不进行的情况下，可以执行多种操作。&lt;b&gt; &lt;code&gt;InnoDB&lt;/code&gt;  使用更快的新算法来检测 死锁&lt;/b&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;分区功能&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;分区的最大数量增加到 &lt;code&gt;8192&lt;/code&gt; 。此数量包括表的所有分区和所有子分区。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;复制和日志记录&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;MySQL&lt;/code&gt;  现在支持使用全局事务标识符（也称为  &lt;code&gt;GTID&lt;/code&gt; ）进行基于事务的复制 。这样，当每个事务在原始服务器上提交并被任何从属服务器应用时，就可以识别和跟踪每个事务。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;MySQL&lt;/code&gt;  基于行的复制从该版本开始支持行图像控制&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;优化器增强功能&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;limit&lt;/code&gt;  查询进行了优化，如果 &lt;code&gt;N&lt;/code&gt;  行元素小于排序缓冲区，那么就使用内存排序而不是合并文件。&lt;/li&gt;
&lt;li&gt;优化器可以更有效地处理 &lt;code&gt;FROM&lt;/code&gt;  子句中的子查询 （即派生表）。FROM 子句中子查询的实现 被推迟到查询执行期间需要其内容时为止，从而提高了性能。在查询执行期间，优化器可以将索引添加到派生表中，以加快从中获取行的速度。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;数据类型&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;MySQL&lt;/code&gt;  从 &lt;code&gt;5.6&lt;/code&gt;  开始允许 &lt;code&gt;TIME&lt;/code&gt; ， &lt;code&gt;DATETIME&lt;/code&gt;  和 &lt;code&gt;TIMESTAMP&lt;/code&gt;  值的小数秒，精度高达微秒（ &lt;code&gt;6&lt;/code&gt;  位）。
&lt;ul&gt;
&lt;li&gt;取消了每个表最多可以自动将 &lt;code&gt;TIMESTAMP&lt;/code&gt;  列初始化或更新为当前日期和时间的限制。任何 &lt;code&gt;TIMESTAMP&lt;/code&gt;  列定义都可以具有 &lt;code&gt;DEFAULT CURRENT_TIMESTAMP&lt;/code&gt;  和 &lt;code&gt;ON UPDATE CURRENT_TIMESTAMP&lt;/code&gt;  子句的任意组合。此外，这些子句现在可以与 DATETIME 列定义一起使用。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;主机缓存。&lt;br&gt;
 &lt;code&gt;MySQL&lt;/code&gt;  现在提供有关客户端连接到服务器时发生错误的原因的更多信息，以及对主机缓存的改进访问，该缓存包含客户端 &lt;code&gt;IP&lt;/code&gt;  地址和主机名信息，用于避免 &lt;code&gt;DNS&lt;/code&gt;  查找。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;mysql57&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#mysql57&#34;&gt;#&lt;/a&gt; mysql5.7&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;将  &lt;code&gt;Undo&lt;/code&gt;  从共享表空间  &lt;code&gt;ibdata&lt;/code&gt;  文件中分离出来，可以在安装  &lt;code&gt;MySQL&lt;/code&gt;  时由用户自行指定文件大小和数量。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;增加了  &lt;code&gt;temporary&lt;/code&gt;  临时表空间，里面存储着临时表或临时查询结果集的数据。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;Buffer Pool&lt;/code&gt;  大小可以动态修改，无需重启数据库实例，这是  &lt;code&gt;DBA&lt;/code&gt;  的福音。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;mysql-80-版本新特性如下&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#mysql-80-版本新特性如下&#34;&gt;#&lt;/a&gt; MySQL 8.0 版本新特性如下：&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;将  &lt;code&gt;InnoDB&lt;/code&gt;  表的数据字典和  &lt;code&gt;Undo&lt;/code&gt;  都从共享表空间  &lt;code&gt;ibdata&lt;/code&gt;  中彻底分离出来了，以前需要 &lt;code&gt;ibdata&lt;/code&gt;  文件中数据字典与独立表空间  &lt;code&gt;ibd&lt;/code&gt;  文件中数据字典一致才行， &lt;code&gt;8.0&lt;/code&gt;  版本就不需要了。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;temporary&lt;/code&gt;  临时表空间也可以配置多个物理文件，而且均为  &lt;code&gt;InnoDB&lt;/code&gt;  存储引擎并能创建索引，这样加快了处理的速度。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;用户可以像  &lt;code&gt;Oracle&lt;/code&gt;  数据库那样设置一些表空间，每个表空间对应多个物理文件，每个表空间可以给多个表使用，但一个表只能存储在一个表空间中。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;最后&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#最后&#34;&gt;#&lt;/a&gt; 最后&lt;/h2&gt;
&lt;p&gt;期望与你一起遇见更好的自己&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/images/qrcode.jpg&#34; alt=&#34;期望与你一起遇见更好的自己&#34;&gt;&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://fangjiaxiaobai.github.io/2021/07/23/MySQL%E7%B3%BB%E5%88%97/%E6%95%B0%E6%8D%AE%E5%BA%930-00.%E8%AF%B4%E6%98%8E/</guid>
            <title>MySQL 开篇 &amp; 说明</title>
            <link>https://fangjiaxiaobai.github.io/2021/07/23/MySQL%E7%B3%BB%E5%88%97/%E6%95%B0%E6%8D%AE%E5%BA%930-00.%E8%AF%B4%E6%98%8E/</link>
            <category>MySQL</category>
            <pubDate>Fri, 23 Jul 2021 14:48:55 +0800</pubDate>
            <description><![CDATA[ &lt;h2 id=&#34;版本说明&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#版本说明&#34;&gt;#&lt;/a&gt; 版本说明&lt;/h2&gt;
&lt;p&gt;本系列文章，以 MySQL 8.0.20 版本为实验背景进行编写。&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXYubXlzcWwuY29tL2RvYy9pbnRlcm5hbHMvZW4vYmluYXJ5LWxvZy1vdmVydmlldy5odG1s&#34;&gt;MySQL 手册&lt;/span&gt;&lt;/p&gt;
&lt;h2 id=&#34;最后&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#最后&#34;&gt;#&lt;/a&gt; 最后&lt;/h2&gt;
&lt;p&gt;期望与你一起遇见更好的自己&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/images/qrcode.jpg&#34; alt=&#34;期望与你一起遇见更好的自己&#34;&gt;&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://fangjiaxiaobai.github.io/2021/07/23/Redis%E7%B3%BB%E5%88%97/00-%E5%89%8D%E8%A8%80/</guid>
            <title>Redis 开篇杂谈</title>
            <link>https://fangjiaxiaobai.github.io/2021/07/23/Redis%E7%B3%BB%E5%88%97/00-%E5%89%8D%E8%A8%80/</link>
            <category>Redis</category>
            <pubDate>Fri, 23 Jul 2021 14:28:55 +0800</pubDate>
            <description><![CDATA[ &lt;h2 id=&#34;杂谈&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#杂谈&#34;&gt;#&lt;/a&gt; 杂谈&lt;/h2&gt;
&lt;p&gt;这里说些杂谈吧。&lt;/p&gt;
&lt;p&gt;以下的文章中，同一个名词并非代表的是同一种对象。比如 list。&lt;/p&gt;
&lt;p&gt;在 t_list.c 中，list 的表示的 面向于用户的 Redis 数据结构 List (列表)。而在 adlsit.c 中表示的 Redis 数据结构的底层实现 list (其实是链表这种数据结构 - 此处的数据结构，表示真实的数据结构)。&lt;/p&gt;
&lt;h2 id=&#34;最后&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#最后&#34;&gt;#&lt;/a&gt; 最后&lt;/h2&gt;
&lt;p&gt;期望与你一起遇见更好的自己&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/images/qrcode.jpg&#34; alt=&#34;期望与你一起遇见更好的自己&#34;&gt;&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://fangjiaxiaobai.github.io/2021/07/23/Redis%E7%B3%BB%E5%88%97/00-%E7%9B%AE%E5%BD%95/</guid>
            <title>Redis 开篇 &amp; 说明</title>
            <link>https://fangjiaxiaobai.github.io/2021/07/23/Redis%E7%B3%BB%E5%88%97/00-%E7%9B%AE%E5%BD%95/</link>
            <category>目录</category>
            <category>Redis</category>
            <pubDate>Fri, 23 Jul 2021 14:18:55 +0800</pubDate>
            <description><![CDATA[ &lt;p&gt;本系列学习笔记以  &lt;code&gt;redis5.0.7&lt;/code&gt;  版本为基础进行学习.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;2021-07-21 Redis 6.0.6&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;2019-12-19 Redis 6.x&lt;/code&gt;  开始发布，具体内容: &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL2FudGlyZXovcmVkaXMvNi4wLzAwLVJFTEVBU0VOT1RFUw==&#34;&gt;Redis 6.x 版本发布明细&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;开篇说明&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#开篇说明&#34;&gt;#&lt;/a&gt; 开篇 &amp;amp; 说明&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;/2021/07/23/Redis%E7%B3%BB%E5%88%97/00-%E5%89%8D%E8%A8%80/&#34;&gt;Redis 开篇 &amp;amp; 说明 &lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;新手入门&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#新手入门&#34;&gt;#&lt;/a&gt; 新手入门&lt;/h2&gt;
&lt;h3 id=&#34;基础概念&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#基础概念&#34;&gt;#&lt;/a&gt; 基础概念&lt;/h3&gt;
&lt;ul class=&#34;task-list&#34;&gt;
&lt;li class=&#34;task-list-item&#34;&gt;&lt;input type=&#34;checkbox&#34; id=&#34;cbx_0&#34; checked=&#34;true&#34; disabled=&#34;true&#34;&gt;&lt;label for=&#34;cbx_0&#34;&gt; &lt;a href=&#34;/2021/08/01/Redis%E7%B3%BB%E5%88%97/01-Redis%E7%AE%80%E4%BB%8B%E4%BB%A5%E5%8F%8A%E4%B8%8E%E5%85%B6%E4%BB%96%E6%95%B0%E6%8D%AE%E5%BA%93%E7%9A%84%E5%AF%B9%E6%AF%94/&#34;&gt;Redis 简介及其他数据库对比&lt;/a&gt;&lt;/label&gt;&lt;/li&gt;
&lt;li class=&#34;task-list-item&#34;&gt;&lt;input type=&#34;checkbox&#34; id=&#34;cbx_1&#34; checked=&#34;true&#34; disabled=&#34;true&#34;&gt;&lt;label for=&#34;cbx_1&#34;&gt; &lt;a href=&#34;/2021/08/01/Redis%E7%B3%BB%E5%88%97/02-Redis%E7%9A%84%E5%A4%9A%E4%B8%AA%E6%95%B0%E6%8D%AE%E5%BA%93/&#34;&gt;Redis 的多个数据库&lt;/a&gt;&lt;/label&gt;&lt;/li&gt;
&lt;li class=&#34;task-list-item&#34;&gt;&lt;input type=&#34;checkbox&#34; id=&#34;cbx_2&#34; checked=&#34;true&#34; disabled=&#34;true&#34;&gt;&lt;label for=&#34;cbx_2&#34;&gt; &lt;a href=&#34;/2021/08/01/Redis%E7%B3%BB%E5%88%97/01-%E5%AE%89%E8%A3%85%E5%8D%95%E6%9C%BA%E7%89%88Redis/&#34;&gt;Redis 的单机部署&lt;/a&gt;&lt;/label&gt;&lt;/li&gt;
&lt;li class=&#34;task-list-item&#34;&gt;&lt;input type=&#34;checkbox&#34; id=&#34;cbx_3&#34; disabled=&#34;true&#34;&gt;&lt;label for=&#34;cbx_3&#34;&gt; Redis 的集群部署 (源码安装 /docker 安装)&lt;/label&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;五种常用的数据类型&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#五种常用的数据类型&#34;&gt;#&lt;/a&gt; 五种常用的数据类型&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;常用的命令以及浅浅的了解内部结构。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul class=&#34;task-list&#34;&gt;
&lt;li class=&#34;task-list-item&#34;&gt;&lt;input type=&#34;checkbox&#34; id=&#34;cbx_4&#34; checked=&#34;true&#34; disabled=&#34;true&#34;&gt;&lt;label for=&#34;cbx_4&#34;&gt; &lt;a href=&#34;/2021/08/01/Redis%E7%B3%BB%E5%88%97/B-1-Redis%E7%9A%84%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B%E4%B9%8BString/&#34;&gt;Redis 数据结构之  &lt;code&gt;String&lt;/code&gt; &lt;/a&gt;&lt;/label&gt;&lt;/li&gt;
&lt;li class=&#34;task-list-item&#34;&gt;&lt;input type=&#34;checkbox&#34; id=&#34;cbx_5&#34; checked=&#34;true&#34; disabled=&#34;true&#34;&gt;&lt;label for=&#34;cbx_5&#34;&gt; &lt;a href=&#34;/2021/08/01/Redis%E7%B3%BB%E5%88%97/B-2-Redis%E7%9A%84%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B%E4%B9%8Blist/&#34;&gt;Redis 数据结构之  &lt;code&gt;List&lt;/code&gt; &lt;/a&gt;&lt;/label&gt;&lt;/li&gt;
&lt;li class=&#34;task-list-item&#34;&gt;&lt;input type=&#34;checkbox&#34; id=&#34;cbx_6&#34; checked=&#34;true&#34; disabled=&#34;true&#34;&gt;&lt;label for=&#34;cbx_6&#34;&gt; &lt;a href=&#34;/2021/08/01/Redis%E7%B3%BB%E5%88%97/B-3-Redis%E7%9A%84%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B%E4%B9%8Bhash/&#34;&gt;Redis 数据结构之  &lt;code&gt;Hash&lt;/code&gt; &lt;/a&gt;&lt;/label&gt;&lt;/li&gt;
&lt;li class=&#34;task-list-item&#34;&gt;&lt;input type=&#34;checkbox&#34; id=&#34;cbx_7&#34; checked=&#34;true&#34; disabled=&#34;true&#34;&gt;&lt;label for=&#34;cbx_7&#34;&gt; &lt;a href=&#34;/2021/08/01/Redis%E7%B3%BB%E5%88%97/B-4-Redis%E7%9A%84%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B%E4%B9%8B%E9%9B%86%E5%90%88set/&#34;&gt;Redis 数据结构之集合  &lt;code&gt;Set&lt;/code&gt; &lt;/a&gt;&lt;/label&gt;&lt;/li&gt;
&lt;li class=&#34;task-list-item&#34;&gt;&lt;input type=&#34;checkbox&#34; id=&#34;cbx_8&#34; checked=&#34;true&#34; disabled=&#34;true&#34;&gt;&lt;label for=&#34;cbx_8&#34;&gt; &lt;a href=&#34;/2021/08/01/Redis%E7%B3%BB%E5%88%97/B-5-Redis%E7%9A%84%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B%E4%B9%8B%E6%9C%89%E5%BA%8F%E9%9B%86%E5%90%88zset/&#34;&gt;Redis 数据结构之有序集合  &lt;code&gt;Zset&lt;/code&gt; &lt;/a&gt;&lt;/label&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;知道会很牛逼的数据类型&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#知道会很牛逼的数据类型&#34;&gt;#&lt;/a&gt; 知道会很牛逼的数据类型&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;常用的命令以及浅浅的了解内部结构。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul class=&#34;task-list&#34;&gt;
&lt;li class=&#34;task-list-item&#34;&gt;&lt;input type=&#34;checkbox&#34; id=&#34;cbx_9&#34; checked=&#34;true&#34; disabled=&#34;true&#34;&gt;&lt;label for=&#34;cbx_9&#34;&gt; &lt;a href=&#34;/2021/08/01/Redis%E7%B3%BB%E5%88%97/B-6-Redis%E7%9A%84%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B%E4%B9%8B%E4%BD%8D%E5%9B%BEbitmap/&#34;&gt;Redis 数据结构之位图  &lt;code&gt;BitMap&lt;/code&gt; &lt;/a&gt;&lt;/label&gt;&lt;/li&gt;
&lt;li class=&#34;task-list-item&#34;&gt;&lt;input type=&#34;checkbox&#34; id=&#34;cbx_10&#34; checked=&#34;true&#34; disabled=&#34;true&#34;&gt;&lt;label for=&#34;cbx_10&#34;&gt; &lt;a href=&#34;/2021/08/01/Redis%E7%B3%BB%E5%88%97/B-7-Redis%E7%9A%84%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B%E4%B9%8BHyperLogLogs/&#34;&gt;Redis 数据结构之  &lt;code&gt;HyperLogLogs&lt;/code&gt; &lt;/a&gt;&lt;/label&gt;&lt;/li&gt;
&lt;li class=&#34;task-list-item&#34;&gt;&lt;input type=&#34;checkbox&#34; id=&#34;cbx_11&#34; disabled=&#34;true&#34;&gt;&lt;label for=&#34;cbx_11&#34;&gt; GeoHash&lt;/label&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;其他命令&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#其他命令&#34;&gt;#&lt;/a&gt; 其他命令&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;除了基本的数据结构之外的 &lt;code&gt;Redis&lt;/code&gt;  的命令。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul class=&#34;task-list&#34;&gt;
&lt;li class=&#34;task-list-item&#34;&gt;&lt;input type=&#34;checkbox&#34; id=&#34;cbx_12&#34; disabled=&#34;true&#34;&gt;&lt;label for=&#34;cbx_12&#34;&gt; help&lt;/label&gt;&lt;/li&gt;
&lt;li class=&#34;task-list-item&#34;&gt;&lt;input type=&#34;checkbox&#34; id=&#34;cbx_13&#34; disabled=&#34;true&#34;&gt;&lt;label for=&#34;cbx_13&#34;&gt; auth&lt;/label&gt;&lt;/li&gt;
&lt;li class=&#34;task-list-item&#34;&gt;&lt;input type=&#34;checkbox&#34; id=&#34;cbx_14&#34; disabled=&#34;true&#34;&gt;&lt;label for=&#34;cbx_14&#34;&gt; scan&lt;/label&gt;&lt;/li&gt;
&lt;li class=&#34;task-list-item&#34;&gt;&lt;input type=&#34;checkbox&#34; id=&#34;cbx_15&#34; disabled=&#34;true&#34;&gt;&lt;label for=&#34;cbx_15&#34;&gt; keys&lt;/label&gt;&lt;/li&gt;
&lt;li class=&#34;task-list-item&#34;&gt;&lt;input type=&#34;checkbox&#34; id=&#34;cbx_16&#34; disabled=&#34;true&#34;&gt;&lt;label for=&#34;cbx_16&#34;&gt; select&lt;/label&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;内功心法&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#内功心法&#34;&gt;#&lt;/a&gt; 内功心法&lt;/h2&gt;
&lt;h3 id=&#34;redis中的数据结构&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#redis中的数据结构&#34;&gt;#&lt;/a&gt; Redis 中的数据结构&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;Redis&lt;/code&gt;  内部的数据结构详解&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul class=&#34;task-list&#34;&gt;
&lt;li class=&#34;task-list-item&#34;&gt;&lt;input type=&#34;checkbox&#34; id=&#34;cbx_17&#34; checked=&#34;true&#34; disabled=&#34;true&#34;&gt;&lt;label for=&#34;cbx_17&#34;&gt; &lt;a href=&#34;/2021/08/02/Redis%E7%B3%BB%E5%88%97/C-4-%E8%B7%B3%E8%A1%A8/&#34;&gt;Redis 中的数据结构之跳表及其原理&lt;/a&gt;&lt;/label&gt;&lt;/li&gt;
&lt;li class=&#34;task-list-item&#34;&gt;&lt;input type=&#34;checkbox&#34; id=&#34;cbx_18&#34; checked=&#34;true&#34; disabled=&#34;true&#34;&gt;&lt;label for=&#34;cbx_18&#34;&gt; &lt;a href=&#34;/2021/08/02/Redis%E7%B3%BB%E5%88%97/C-1-Redis%E7%9A%84%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B9%8Bziplist/&#34;&gt;Redis 数据结构之详解 &lt;code&gt;ziplist&lt;/code&gt; &lt;/a&gt;&lt;/label&gt;&lt;/li&gt;
&lt;li class=&#34;task-list-item&#34;&gt;&lt;input type=&#34;checkbox&#34; id=&#34;cbx_19&#34; disabled=&#34;true&#34;&gt;&lt;label for=&#34;cbx_19&#34;&gt; intset&lt;/label&gt;&lt;/li&gt;
&lt;li class=&#34;task-list-item&#34;&gt;&lt;input type=&#34;checkbox&#34; id=&#34;cbx_20&#34; disabled=&#34;true&#34;&gt;&lt;label for=&#34;cbx_20&#34;&gt; dict&lt;/label&gt;&lt;/li&gt;
&lt;li class=&#34;task-list-item&#34;&gt;&lt;input type=&#34;checkbox&#34; id=&#34;cbx_21&#34; disabled=&#34;true&#34;&gt;&lt;label for=&#34;cbx_21&#34;&gt; skiplist&lt;/label&gt;&lt;/li&gt;
&lt;li class=&#34;task-list-item&#34;&gt;&lt;input type=&#34;checkbox&#34; id=&#34;cbx_22&#34; disabled=&#34;true&#34;&gt;&lt;label for=&#34;cbx_22&#34;&gt; module object&lt;/label&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;高阶 &lt;code&gt;Redis&lt;/code&gt;  使用，助力成为大牛&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul class=&#34;task-list&#34;&gt;
&lt;li class=&#34;task-list-item&#34;&gt;&lt;input type=&#34;checkbox&#34; id=&#34;cbx_23&#34; disabled=&#34;true&#34;&gt;&lt;label for=&#34;cbx_23&#34;&gt; Redis 的数据淘汰机制&lt;/label&gt;&lt;/li&gt;
&lt;li class=&#34;task-list-item&#34;&gt;&lt;input type=&#34;checkbox&#34; id=&#34;cbx_24&#34; disabled=&#34;true&#34;&gt;&lt;label for=&#34;cbx_24&#34;&gt; 持久化策略&lt;/label&gt;&lt;/li&gt;
&lt;li class=&#34;task-list-item&#34;&gt;&lt;input type=&#34;checkbox&#34; id=&#34;cbx_25&#34; disabled=&#34;true&#34;&gt;&lt;label for=&#34;cbx_25&#34;&gt; 主从复制&lt;/label&gt;&lt;/li&gt;
&lt;li class=&#34;task-list-item&#34;&gt;&lt;input type=&#34;checkbox&#34; id=&#34;cbx_26&#34; disabled=&#34;true&#34;&gt;&lt;label for=&#34;cbx_26&#34;&gt; 事务机制&lt;/label&gt;&lt;/li&gt;
&lt;li class=&#34;task-list-item&#34;&gt;&lt;input type=&#34;checkbox&#34; id=&#34;cbx_27&#34; disabled=&#34;true&#34;&gt;&lt;label for=&#34;cbx_27&#34;&gt; 哨兵机制&lt;/label&gt;&lt;/li&gt;
&lt;li class=&#34;task-list-item&#34;&gt;&lt;input type=&#34;checkbox&#34; id=&#34;cbx_28&#34; disabled=&#34;true&#34;&gt;&lt;label for=&#34;cbx_28&#34;&gt; 监察器&lt;/label&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;实战与应用&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#实战与应用&#34;&gt;#&lt;/a&gt; 实战与应用&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;说的再多，不如动手练练&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul class=&#34;task-list&#34;&gt;
&lt;li class=&#34;task-list-item&#34;&gt;&lt;input type=&#34;checkbox&#34; id=&#34;cbx_29&#34; disabled=&#34;true&#34;&gt;&lt;label for=&#34;cbx_29&#34;&gt; Redis 实现分布式锁。&lt;/label&gt;&lt;/li&gt;
&lt;li class=&#34;task-list-item&#34;&gt;&lt;input type=&#34;checkbox&#34; id=&#34;cbx_30&#34; disabled=&#34;true&#34;&gt;&lt;label for=&#34;cbx_30&#34;&gt; Redis 实现发布订阅模式&lt;/label&gt;&lt;/li&gt;
&lt;li class=&#34;task-list-item&#34;&gt;&lt;input type=&#34;checkbox&#34; id=&#34;cbx_31&#34; disabled=&#34;true&#34;&gt;&lt;label for=&#34;cbx_31&#34;&gt; 布隆过滤器&lt;/label&gt;&lt;/li&gt;
&lt;li class=&#34;task-list-item&#34;&gt;&lt;input type=&#34;checkbox&#34; id=&#34;cbx_32&#34; disabled=&#34;true&#34;&gt;&lt;label for=&#34;cbx_32&#34;&gt; 限流实例&lt;/label&gt;&lt;/li&gt;
&lt;li class=&#34;task-list-item&#34;&gt;&lt;input type=&#34;checkbox&#34; id=&#34;cbx_33&#34; disabled=&#34;true&#34;&gt;&lt;label for=&#34;cbx_33&#34;&gt; 延时队列&lt;/label&gt;&lt;/li&gt;
&lt;li class=&#34;task-list-item&#34;&gt;&lt;input type=&#34;checkbox&#34; id=&#34;cbx_34&#34; disabled=&#34;true&#34;&gt;&lt;label for=&#34;cbx_34&#34;&gt; 统计 PV&lt;/label&gt;&lt;/li&gt;
&lt;li class=&#34;task-list-item&#34;&gt;&lt;input type=&#34;checkbox&#34; id=&#34;cbx_35&#34; disabled=&#34;true&#34;&gt;&lt;label for=&#34;cbx_35&#34;&gt; 限流&lt;/label&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;运维&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#运维&#34;&gt;#&lt;/a&gt; 运维&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;不让别人擦屁股&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul class=&#34;task-list&#34;&gt;
&lt;li class=&#34;task-list-item&#34;&gt;&lt;input type=&#34;checkbox&#34; id=&#34;cbx_36&#34; disabled=&#34;true&#34;&gt;&lt;label for=&#34;cbx_36&#34;&gt; 配置文件详解&lt;/label&gt;&lt;/li&gt;
&lt;li class=&#34;task-list-item&#34;&gt;&lt;input type=&#34;checkbox&#34; id=&#34;cbx_37&#34; disabled=&#34;true&#34;&gt;&lt;label for=&#34;cbx_37&#34;&gt; 数据持久化&lt;/label&gt;&lt;/li&gt;
&lt;li class=&#34;task-list-item&#34;&gt;&lt;input type=&#34;checkbox&#34; id=&#34;cbx_38&#34; disabled=&#34;true&#34;&gt;&lt;label for=&#34;cbx_38&#34;&gt; 数据迁移&lt;/label&gt;&lt;/li&gt;
&lt;li class=&#34;task-list-item&#34;&gt;&lt;input type=&#34;checkbox&#34; id=&#34;cbx_39&#34; disabled=&#34;true&#34;&gt;&lt;label for=&#34;cbx_39&#34;&gt; 再谈集群&lt;/label&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;其他&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#其他&#34;&gt;#&lt;/a&gt; 其他&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;不仅要有内涵，更要有颜值。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul class=&#34;task-list&#34;&gt;
&lt;li class=&#34;task-list-item&#34;&gt;&lt;input type=&#34;checkbox&#34; id=&#34;cbx_40&#34; disabled=&#34;true&#34;&gt;&lt;label for=&#34;cbx_40&#34;&gt;  &lt;code&gt;Redis&lt;/code&gt;  面试题&lt;/label&gt;&lt;/li&gt;
&lt;li class=&#34;task-list-item&#34;&gt;&lt;input type=&#34;checkbox&#34; id=&#34;cbx_41&#34; disabled=&#34;true&#34;&gt;&lt;label for=&#34;cbx_41&#34;&gt;  &lt;code&gt;Redis&lt;/code&gt;  为什么这么快&lt;/label&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;学习路线图&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#学习路线图&#34;&gt;#&lt;/a&gt; 学习路线图&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;这里是灯塔。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul class=&#34;task-list&#34;&gt;
&lt;li class=&#34;task-list-item&#34;&gt;&lt;input type=&#34;checkbox&#34; id=&#34;cbx_42&#34; disabled=&#34;true&#34;&gt;&lt;label for=&#34;cbx_42&#34;&gt; 路线图&lt;/label&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;最后&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#最后&#34;&gt;#&lt;/a&gt; 最后&lt;/h2&gt;
&lt;p&gt;期望与你一起遇见更好的自己&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/images/qrcode.jpg&#34; alt=&#34;期望与你一起遇见更好的自己&#34;&gt;&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://fangjiaxiaobai.github.io/2021/07/18/%E7%AE%97%E6%B3%95/SnowFlake/</guid>
            <title>雪花算法</title>
            <link>https://fangjiaxiaobai.github.io/2021/07/18/%E7%AE%97%E6%B3%95/SnowFlake/</link>
            <category>雪花算法</category>
            <category>算法</category>
            <pubDate>Sun, 18 Jul 2021 20:49:55 +0800</pubDate>
            <description><![CDATA[ &lt;h3 id=&#34;介绍&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#介绍&#34;&gt;#&lt;/a&gt; 介绍&lt;/h3&gt;
&lt;p&gt;雪花算法是  &lt;code&gt;twitter&lt;/code&gt;  开源的由  &lt;code&gt;64&lt;/code&gt;  位整数组成的分布式 &lt;code&gt;id&lt;/code&gt; 。目的是在分布式系统中产生全局唯一且趋势递增的 &lt;code&gt;ID&lt;/code&gt; 。&lt;/p&gt;
&lt;p&gt;其核心思想就是：&lt;b&gt;使用一个  &lt;code&gt;64 bit&lt;/code&gt;  的  &lt;code&gt;long&lt;/code&gt;  型的数字作为全局唯一  &lt;code&gt;id&lt;/code&gt; 。在分布式系统中的应用十分广泛，且 &lt;code&gt;ID&lt;/code&gt;  引入了时间戳，保持自增性且不重复。&lt;/b&gt;&lt;/p&gt;
&lt;h3 id=&#34;雪花算法的结构&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#雪花算法的结构&#34;&gt;#&lt;/a&gt; 雪花算法的结构&lt;/h3&gt;
&lt;p&gt;&lt;img data-src=&#34;/images/%E7%AE%97%E6%B3%95/snowFlake%E7%AE%97%E6%B3%95%E7%BB%93%E6%9E%84%E5%9B%BE.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;标识： 没有实际意义。一般都是 0，都是正数。&lt;/li&gt;
&lt;li&gt;时间戳：  &lt;code&gt;41 bit&lt;/code&gt;  可以表示的数字多达  &lt;code&gt;2^41 - 1&lt;/code&gt; ，也就是可以标识  &lt;code&gt;2 ^ 41 - 1&lt;/code&gt;  个毫秒值，换算成年就是表示  &lt;code&gt;69&lt;/code&gt;  年的时间。&lt;/li&gt;
&lt;li&gt;机器 id: 这里标识的是机器的唯一标识，一般由两部分构成： &lt;code&gt;机房id+机器id&lt;/code&gt; 。一共 &lt;code&gt;10&lt;/code&gt;  位，可以表示 &lt;code&gt;1024&lt;/code&gt;  台机器。&lt;/li&gt;
&lt;li&gt;序列号：可以用这个  &lt;code&gt;12 bit&lt;/code&gt;  代表的数字来区分同一个毫秒内的  &lt;code&gt;4096&lt;/code&gt;  个不同的  &lt;code&gt;id&lt;/code&gt; 。也就是同一毫秒内同一台机器所生成的最大 ID 数量为 &lt;code&gt;4096&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;雪花算法的工作流程&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#雪花算法的工作流程&#34;&gt;#&lt;/a&gt; 雪花算法的工作流程&lt;/h3&gt;
&lt;p&gt;以一个简单的雪花算法工作流程来说。假设有一个服务假设要生成一个全局唯一 &lt;code&gt;id&lt;/code&gt; ，那么就可以发送一个请求给部署了  &lt;code&gt;SnowFlake&lt;/code&gt;  算法的系统，由这个  &lt;code&gt;SnowFlake&lt;/code&gt;  算法系统来生成唯一  &lt;code&gt;id&lt;/code&gt; 。这个  &lt;code&gt;SnowFlake&lt;/code&gt;  算法系统首先肯定是知道自己所在的机器号，（假设机器 id 为 10bit）接着  &lt;code&gt;SnowFlake&lt;/code&gt;  算法系统接收到这个请求之后，首先就会用二进制位运算的方式生成一个  &lt;code&gt;64 bit&lt;/code&gt;  的  &lt;code&gt;long&lt;/code&gt;  型  &lt;code&gt;id&lt;/code&gt; ， &lt;code&gt;64&lt;/code&gt;  个  &lt;code&gt;bit&lt;/code&gt;  中的第一个  &lt;code&gt;bit&lt;/code&gt;  是无意义的。接着用当前时间戳（单位到毫秒）占用 &lt;code&gt;41&lt;/code&gt;  个  &lt;code&gt;bit&lt;/code&gt; ，然后接着  &lt;code&gt;10&lt;/code&gt;  个  &lt;code&gt;bit&lt;/code&gt;  设置机器  &lt;code&gt;id&lt;/code&gt; 。最后再判断一下，当前这台机房的这台机器上这一毫秒内，这是第几个请求，给这次生成  &lt;code&gt;id&lt;/code&gt;  的请求累加一个序号，作为最后的  &lt;code&gt;12&lt;/code&gt;  个  &lt;code&gt;bit&lt;/code&gt; 。&lt;/p&gt;
&lt;h3 id=&#34;雪花算法实现&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#雪花算法实现&#34;&gt;#&lt;/a&gt; 雪花算法实现&lt;/h3&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;63&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;64&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;65&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;66&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;67&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;68&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;69&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;70&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;71&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;72&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;73&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;74&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;75&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;76&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;77&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;78&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;79&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;80&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;81&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;82&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;83&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;84&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;85&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;86&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;87&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;88&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;89&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;90&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;91&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;92&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;93&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;94&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;95&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;96&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;97&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;98&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;99&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;100&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;101&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;102&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;103&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;104&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;105&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;106&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;107&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;108&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;109&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;110&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;111&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;112&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;113&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;114&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;115&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;116&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;117&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;118&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;119&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;120&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;121&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;122&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;123&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;124&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;125&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;126&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;128&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;129&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;130&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;131&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;132&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;133&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;134&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;135&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;136&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;137&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;138&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;139&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;140&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;141&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;142&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;143&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;144&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;145&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;146&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;147&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;148&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;149&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;150&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;151&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;152&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;153&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;154&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;155&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;156&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;157&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;158&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;159&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;160&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;161&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;162&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;163&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;164&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;165&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;166&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;167&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;168&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;169&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;170&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;171&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;172&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;173&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;174&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;175&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;176&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;177&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;178&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;179&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;180&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;181&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;182&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;183&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;184&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;185&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;186&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;187&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;188&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;189&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;190&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;191&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;192&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;193&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;194&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;195&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;196&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;197&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;198&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;199&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;200&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;201&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;202&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;203&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;package&lt;/span&gt; com.fxb.algorithm;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;/**&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt; * 雪花算法生成器&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt; * &amp;lt;p&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt; * 1.todo: 可以指定不同数据位数。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt; * 2.todo: 单例&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt; *&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt; * &lt;span class=&#34;doctag&#34;&gt;@author&lt;/span&gt; fangjiaxiaobai&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt; * &lt;span class=&#34;doctag&#34;&gt;@date&lt;/span&gt; 2020-10-24 23:51&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt; * &lt;span class=&#34;doctag&#34;&gt;@since&lt;/span&gt; 1.0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt; */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;class&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;SnowFlakeGenerator&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;/**&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;     * 开始时间戳 (2015-01-01)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;     */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;private&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;final&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;static&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;long&lt;/span&gt; DEFAULT_TIMESTAMP = &lt;span class=&#34;number&#34;&gt;1603556068000L&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;/**&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;     * 总位数&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;     */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;private&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;final&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;static&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;long&lt;/span&gt; BITS_COUNT = &lt;span class=&#34;number&#34;&gt;64L&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;/**&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;     * 机器id所占的位数,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;     * 默认是5位。最多支持31台机器&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;     */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;private&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;final&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;static&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;long&lt;/span&gt; DEFAULT_WORKER_ID_BITS = &lt;span class=&#34;number&#34;&gt;5L&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;/**&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;     * 数据中心id所占的位数&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;     * 可以理解为机房。默认是5位。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;     */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;private&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;final&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;static&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;long&lt;/span&gt; DEFAULT_DATA_CENTER_ID_BITS = &lt;span class=&#34;number&#34;&gt;5L&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;/**&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;     * 序列在id中占的位数&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;     */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;private&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;final&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;static&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;long&lt;/span&gt; DEFAULT_SEQUENCE_BITS = &lt;span class=&#34;number&#34;&gt;12L&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;/**&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;     * 支持的最大机器id，结果是31 (这个移位算法可以很快的计算出几位二进制数所能表示的最大十进制数)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;     */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;private&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;final&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;static&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;long&lt;/span&gt; DEFAULT_MAX_WORKER_ID = ~(-&lt;span class=&#34;number&#34;&gt;1L&lt;/span&gt; &amp;lt;&amp;lt; DEFAULT_WORKER_ID_BITS);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;/**&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;     * 支持的数据中心数量&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;     */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;private&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;final&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;static&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;long&lt;/span&gt; DEFAULT_MAX_DATA_CENTER_ID_BITS = ~(-&lt;span class=&#34;number&#34;&gt;1L&lt;/span&gt; &amp;lt;&amp;lt; DEFAULT_DATA_CENTER_ID_BITS);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;/**&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;     * 生成序列的掩码，这里为4095 (0b111111111111=0xfff=4095)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;     */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;private&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;final&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;static&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;long&lt;/span&gt; DEFAULT_SEQUENCE_MASK = ~(-&lt;span class=&#34;number&#34;&gt;1L&lt;/span&gt; &amp;lt;&amp;lt; DEFAULT_SEQUENCE_BITS);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;/**&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;     * 时间戳向左移22位(5+5+12)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;     */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;private&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;final&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;static&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;long&lt;/span&gt; DEFAULT_TIMESTAMP_LEFT_SHIFT = DEFAULT_SEQUENCE_BITS + DEFAULT_WORKER_ID_BITS + DEFAULT_DATA_CENTER_ID_BITS;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;/**&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;     * 数据标识id向左移17位(12+5)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;     */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;private&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;final&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;static&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;long&lt;/span&gt; DEFAULT_DATA_CENTER_ID_SHIFT = DEFAULT_SEQUENCE_BITS + DEFAULT_WORKER_ID_BITS;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;/**&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;     * workId的位移&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;     */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;private&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;final&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;static&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;long&lt;/span&gt; DEFAULT_WORKER_ID_SHIFT = DEFAULT_SEQUENCE_BITS;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;/**&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;     * 工作机器ID&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;     */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;private&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;long&lt;/span&gt; workerId;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;/**&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;     * 数据中心ID&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;     */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;private&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;long&lt;/span&gt; dataCenterId;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;/**&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;     * 支持的最大数据中心数&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;     */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;private&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;long&lt;/span&gt; maxDataCenterId;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;/**&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;     * 支持的最大workerid数&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;     */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;private&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;long&lt;/span&gt; maxWorkerId;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;/**&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;     * 序列号的位数&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;     */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;private&lt;/span&gt; Long sequenceBits;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;/**&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;     * 序列号的掩码&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;     * 即，2^sequenceBits&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;     */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;private&lt;/span&gt; Long sequenceMask;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;/**&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;     * 毫秒内序列&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;     */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;private&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;long&lt;/span&gt; sequence = &lt;span class=&#34;number&#34;&gt;0L&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;/**&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;     * 上次生成ID的时间戳&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;     */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;private&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;long&lt;/span&gt; lastTimestamp = -&lt;span class=&#34;number&#34;&gt;1L&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;private&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;long&lt;/span&gt; dataCenterIdShift;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;private&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;long&lt;/span&gt; workerIdShift;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;/**&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;     * 时间戳的位数&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;     */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;private&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;long&lt;/span&gt; timestampLeftShift;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;/**&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;     * 默认 每个数据中心可以容纳31台机器&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;     *&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;     * &lt;span class=&#34;doctag&#34;&gt;@param&lt;/span&gt; workerId     工作ID&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;     * &lt;span class=&#34;doctag&#34;&gt;@param&lt;/span&gt; dataCenterId 数据中心ID&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;     */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;SnowFlakeGenerator&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(&lt;span class=&#34;keyword&#34;&gt;long&lt;/span&gt; workerId, &lt;span class=&#34;keyword&#34;&gt;long&lt;/span&gt; dataCenterId)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;comment&#34;&gt;//...&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;/**&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;     * 根据自己的配置决定容纳的机器数&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;     *&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;     * &lt;span class=&#34;doctag&#34;&gt;@param&lt;/span&gt; workerId         工作机器的id&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;     * &lt;span class=&#34;doctag&#34;&gt;@param&lt;/span&gt; dataCenterId     数据中心的id&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;     * &lt;span class=&#34;doctag&#34;&gt;@param&lt;/span&gt; workerIdBits     工作机占的位数&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;     * &lt;span class=&#34;doctag&#34;&gt;@param&lt;/span&gt; dataCenterIdBits 数据中心占的位数&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;     */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;SnowFlakeGenerator&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(&lt;span class=&#34;keyword&#34;&gt;long&lt;/span&gt; workerId, &lt;span class=&#34;keyword&#34;&gt;long&lt;/span&gt; dataCenterId, &lt;span class=&#34;keyword&#34;&gt;long&lt;/span&gt; workerIdBits, &lt;span class=&#34;keyword&#34;&gt;long&lt;/span&gt; dataCenterIdBits)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;comment&#34;&gt;// ...&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;/**&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;     * 获得下一个ID (该方法是线程安全的)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;     *&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;     * &lt;span class=&#34;doctag&#34;&gt;@return&lt;/span&gt; SnowflakeId&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;     */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;synchronized&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;long&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;nextId&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;()&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;long&lt;/span&gt; currentTimestamp = getCurrentTimeStamp();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;comment&#34;&gt;//如果当前时间小于上一次ID生成的时间戳，说明系统时钟回退过这个时候应当抛出异常&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt;(currentTimestamp &amp;lt; lastTimestamp) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;keyword&#34;&gt;throw&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; RuntimeException(&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                    String.format(&lt;span class=&#34;string&#34;&gt;&amp;quot;Clock moved backwards.  Refusing to generate id for %d milliseconds&amp;quot;&lt;/span&gt;, lastTimestamp - currentTimestamp));&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;comment&#34;&gt;//如果是同一时间生成的，则进行毫秒内序列&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt;(lastTimestamp == currentTimestamp) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            sequence = (sequence + &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;) &amp;amp; sequenceMask;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;comment&#34;&gt;//毫秒内序列溢出&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt;(sequence == &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                &lt;span class=&#34;comment&#34;&gt;//阻塞到下一个毫秒,获得新的时间戳&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                currentTimestamp = tilNextMillis(lastTimestamp);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;comment&#34;&gt;//时间戳改变，毫秒内序列重置&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            sequence = &lt;span class=&#34;number&#34;&gt;0L&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;comment&#34;&gt;//上次生成ID的时间戳&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        lastTimestamp = currentTimestamp;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;comment&#34;&gt;//移位并通过或运算拼到一起组成64位的ID&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; ((currentTimestamp - DEFAULT_TIMESTAMP) &amp;lt;&amp;lt; timestampLeftShift)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                | (dataCenterId &amp;lt;&amp;lt; dataCenterIdShift)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                | (workerId &amp;lt;&amp;lt; workerIdShift)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                | sequence;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;/**&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;     * 阻塞到下一个毫秒，直到获得新的时间戳&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;     *&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;     * &lt;span class=&#34;doctag&#34;&gt;@param&lt;/span&gt; lastTimestamp 上次生成ID的时间戳&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;     * &lt;span class=&#34;doctag&#34;&gt;@return&lt;/span&gt; 当前时间戳&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;     */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;protected&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;long&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;tilNextMillis&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(&lt;span class=&#34;keyword&#34;&gt;long&lt;/span&gt; lastTimestamp)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;long&lt;/span&gt; timestamp = getCurrentTimeStamp();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;while&lt;/span&gt; (timestamp &amp;lt;= lastTimestamp) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            timestamp = getCurrentTimeStamp();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; timestamp;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;/**&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;     * 获取当前时间&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;     *&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;     * &lt;span class=&#34;doctag&#34;&gt;@return&lt;/span&gt; 当前时间戳。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;     */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;private&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;long&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;getCurrentTimeStamp&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;()&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; System.currentTimeMillis();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;完整代码: &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL2R3ei5kYXRlL2NXbVI=&#34;&gt;http://dwz.date/cWmR&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;公众号中回复 【雪花算法】，可以直接获取源码文件。&lt;/p&gt;
&lt;h3 id=&#34;最后&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#最后&#34;&gt;#&lt;/a&gt; 最后&lt;/h3&gt;
&lt;p&gt;期望与你一起遇见更好的自己&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/images/qrcode.jpg&#34; alt=&#34;期望与你一起遇见更好的自己&#34;&gt;&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://fangjiaxiaobai.github.io/2021/07/18/git%E7%B3%BB%E5%88%97/01-GIt%E5%AE%89%E8%A3%85/</guid>
            <title>安装git</title>
            <link>https://fangjiaxiaobai.github.io/2021/07/18/git%E7%B3%BB%E5%88%97/01-GIt%E5%AE%89%E8%A3%85/</link>
            <category>git</category>
            <pubDate>Sun, 18 Jul 2021 14:49:55 +0800</pubDate>
            <description><![CDATA[ &lt;h3 id=&#34;windows下安装&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#windows下安装&#34;&gt;#&lt;/a&gt; windows 下安装&lt;/h3&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cuZ29vZ2xlLmNvbS5oay8/Z3dzX3JkPXNzbA==&#34;&gt;here&lt;/span&gt;&lt;/p&gt;
&lt;h3 id=&#34;linux下安装&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#linux下安装&#34;&gt;#&lt;/a&gt; linux 下安装&lt;/h3&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cuZ29vZ2xlLmNvbS5oay8/Z3dzX3JkPXNzbA==&#34;&gt;here&lt;/span&gt;&lt;/p&gt;
&lt;h3 id=&#34;mac下安装&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#mac下安装&#34;&gt;#&lt;/a&gt; mac 下安装&lt;/h3&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cuZ29vZ2xlLmNvbS5oay8/Z3dzX3JkPXNzbA==&#34;&gt;here&lt;/span&gt;&lt;/p&gt;
&lt;h3 id=&#34;最后&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#最后&#34;&gt;#&lt;/a&gt; 最后&lt;/h3&gt;
&lt;p&gt;期望与你一起遇见更好的自己&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/images/qrcode.jpg&#34; alt=&#34;期望与你一起遇见更好的自己&#34;&gt;&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://fangjiaxiaobai.github.io/2021/07/18/git%E7%B3%BB%E5%88%97/02-Git%E4%BB%8B%E7%BB%8D/</guid>
            <title>Git介绍</title>
            <link>https://fangjiaxiaobai.github.io/2021/07/18/git%E7%B3%BB%E5%88%97/02-Git%E4%BB%8B%E7%BB%8D/</link>
            <category>git</category>
            <pubDate>Sun, 18 Jul 2021 14:49:55 +0800</pubDate>
            <description><![CDATA[ &lt;h2 id=&#34;git是目前最先进的版本控制管理系统-b&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#git是目前最先进的版本控制管理系统-b&#34;&gt;#&lt;/a&gt;  &lt;code&gt;Git&lt;/code&gt;  是目前最先进的版本控制管理系统。&lt;/b&gt;&lt;/h2&gt;
&lt;p&gt;本质上讲， &lt;code&gt;git&lt;/code&gt;  是一个内容寻址文件系统。其核心部分是一个简单的键值对数据库 ( &lt;code&gt;key-value data store&lt;/code&gt; ). 你可以想像 &lt;code&gt;git&lt;/code&gt;  仓库中插入任意类型的内容，它会返回一个唯一的键，通过该键可以在任意时刻再次取回该内容。&lt;/p&gt;
&lt;h2 id=&#34;git先进在哪里&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#git先进在哪里&#34;&gt;#&lt;/a&gt;  &lt;code&gt;git&lt;/code&gt;  先进在哪里？&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;直接记录快照，而不是比较差异。&lt;br&gt;
这也是 &lt;code&gt;git&lt;/code&gt;  和其他版本管理系统的主要差别。其他版本管理系统 ( &lt;code&gt;CVS&lt;/code&gt; , &lt;code&gt;Subversion&lt;/code&gt; , &lt;code&gt;Perforce&lt;/code&gt; , &lt;code&gt;Bazaar&lt;/code&gt;  等) 存储各个版本之间，每个文件随时间逐渐累积的差异。这类版本管理系统称为 基于差异的版本控制。如下图:&lt;br&gt;
&lt;img data-src=&#34;/images/git%E7%B3%BB%E5%88%97/images/git%E4%BB%8B%E7%BB%8D01.png&#34; alt=&#34;git介绍01.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;git&lt;/code&gt;  则不然，当你提交更新或者保存项目状态的时候，它基本上就会对当时的全部文件创建一个快照并保存这个快照的索引。为了效率，如果没有没有修改， &lt;code&gt;git&lt;/code&gt;  不再重新存储该文 &lt;code&gt;git&lt;/code&gt;  件，而是只保留一个连接指向之前存储的文件。 &lt;code&gt;Git&lt;/code&gt;  对待所管理的数据更像是一个快照流。如下图:&lt;br&gt;
&lt;img data-src=&#34;/images/git%E7%B3%BB%E5%88%97/images/git%E4%BB%8B%E7%BB%8D02.png&#34; alt=&#34;git介绍02.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;b&gt; &lt;code&gt;git&lt;/code&gt;  更像是一个小型的文件系统，而不只是一个简单的 CVS。&lt;/b&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;git&lt;/code&gt;  近乎所有操作都在本地执行&lt;br&gt;
这意味着不管有无网络，你都可以工作。没有网络的时候，你照常可以提交代码，等到有网的时候，在进行上传到远程仓库。而使用 &lt;code&gt;Subversion&lt;/code&gt; ， &lt;code&gt;CVS&lt;/code&gt;  的话，只能修改文件，但是不能提交。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;git&lt;/code&gt;  保证完整性&lt;br&gt;
 &lt;code&gt;Git&lt;/code&gt;  中所有的数据在存储前都计算校验和，然后以校验和来引用。这就是说， &lt;code&gt;Git&lt;/code&gt;  会知道你所有的更改任何文件内容或者目录内容，这个是构成 git 哲学不可或缺的部分。 &lt;code&gt;Git&lt;/code&gt;  使用计算校验和的机制叫做  &lt;code&gt;SHA-1&lt;/code&gt;  散列 ( &lt;code&gt;hash&lt;/code&gt; , 哈希)。这是一个由 &lt;code&gt;40&lt;/code&gt;  个十六进制字符 ( &lt;code&gt;0-9&lt;/code&gt;  和 &lt;code&gt;a-f&lt;/code&gt; ) 组成的字符串，基于 Git 中文件的内容和目录结构计算出来的。 &lt;code&gt;Git&lt;/code&gt;  数据库中保存的信息都是以文件内容的哈希值来索引数据，而不是文件名。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;Git&lt;/code&gt;  一般都只添加数据&lt;br&gt;
执行的所有的 &lt;code&gt;git&lt;/code&gt;  操作，几乎只往数据库中添加数据。一旦你提交了快照到 &lt;code&gt;git&lt;/code&gt;  中，就难以再丢失数据，特别是定期的推送到了远程仓库。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;git的三种状态&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#git的三种状态&#34;&gt;#&lt;/a&gt;  &lt;code&gt;git&lt;/code&gt;  的三种状态&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;git&lt;/code&gt;  对文件的管理，有三种状态。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;已修改：表示修改了文件，但还没有保存到数据库中。&lt;/li&gt;
&lt;li&gt;已暂存：表示对一个已修改文件的当前版本做了标记，使之在下次提交的快照中。&lt;/li&gt;
&lt;li&gt;已提交：表示数据已经安全的保存到了本地的 git 数据库中。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;这三种状态分别代表了 &lt;code&gt;git&lt;/code&gt;  的三个工作区。工作区，暂存区以及 &lt;code&gt;git&lt;/code&gt;  目录 (版本库)。如下图&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/images/git%E7%B3%BB%E5%88%97/images/git%E4%BB%8B%E7%BB%8D03.png&#34; alt=&#34;git介绍03&#34;&gt;&lt;/p&gt;
&lt;p&gt;工作区是对项目的某个版本独立提取出来的内容。这些从 &lt;code&gt;git&lt;/code&gt;  仓库的压缩数据库中提取出来的文件，放在磁盘上供你使用或修改。&lt;/p&gt;
&lt;p&gt;暂存区是一个文件，保存了下次将要提交的文件列表信息。 &lt;code&gt;git&lt;/code&gt;  中称为索引，不过一般都是称为暂存区。&lt;br&gt;
 &lt;code&gt;Git&lt;/code&gt;  仓库目录指的就是 .git 目录 (.git)。下节就从创建仓库开始学起。&lt;/p&gt;
&lt;h2 id=&#34;最后&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#最后&#34;&gt;#&lt;/a&gt; 最后&lt;/h2&gt;
&lt;p&gt;期望与你一起遇见更好的自己&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/images/qrcode.jpg&#34; alt=&#34;期望与你一起遇见更好的自己&#34;&gt;&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://fangjiaxiaobai.github.io/2021/07/18/git%E7%B3%BB%E5%88%97/04-git%E5%9F%BA%E6%9C%AC%E5%91%BD%E4%BB%A41/</guid>
            <title>git基本使用一</title>
            <link>https://fangjiaxiaobai.github.io/2021/07/18/git%E7%B3%BB%E5%88%97/04-git%E5%9F%BA%E6%9C%AC%E5%91%BD%E4%BB%A41/</link>
            <category>git</category>
            <pubDate>Sun, 18 Jul 2021 14:49:55 +0800</pubDate>
            <description><![CDATA[ &lt;p&gt;上一篇文章，我们学习了 使用 &lt;code&gt;git&lt;/code&gt;  如何创建一个仓库。而且还详细的介绍了 &lt;code&gt;git&lt;/code&gt;  各个工作目录的作用。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;git&lt;/code&gt; :  &lt;code&gt;global information tracker&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;git&lt;/code&gt;  其实是内容寻址文件系统。本质是一个 &lt;code&gt;key-value&lt;/code&gt;  的数据库。在上一篇文章了解了 &lt;code&gt;git&lt;/code&gt;  的四种对象：提交对象，数据对象，树对象和标签对象。还学习了 &lt;code&gt;git&lt;/code&gt;  的引用 ( &lt;code&gt;HEAD&lt;/code&gt; , &lt;code&gt;Index&lt;/code&gt; , &lt;code&gt;refs&lt;/code&gt;  目录)，以及最后学习了 &lt;code&gt;git&lt;/code&gt;  的压缩，( &lt;code&gt;git gc&lt;/code&gt; ).&lt;/p&gt;
&lt;p&gt;今天我们从 简单的 git 使用流程说起。&lt;/p&gt;
&lt;p&gt;上一篇中，我们创建了一个仓库.&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;➜  gitlearn git init .&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Initialized empty Git repository in /private/tmp/gitlearn/.git/&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;➜  gitlearn git:(master)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;新建完仓库之后，我们一般会对仓库进行配置。&lt;/p&gt;
&lt;h3 id=&#34;git-config&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#git-config&#34;&gt;#&lt;/a&gt; git config&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;git&lt;/code&gt;  自带了一个  &lt;code&gt;git config&lt;/code&gt;  工具来帮助设置控制 Git 外观和行为的配置变量。这些变量存储在三个不同的位置。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;A&lt;/code&gt; : &lt;code&gt;/etc/gitconfig&lt;/code&gt;  文件：包含系统上每一个用户以及他们仓库的通用配置。 如果执行  &lt;code&gt;git config&lt;/code&gt;  时，带上 --system 选项，就会读写该配置文件中的配置属性。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;B&lt;/code&gt; : &lt;code&gt;~/.gitconfig&lt;/code&gt;  或  &lt;code&gt;~/.config/git/config&lt;/code&gt;  文件：只针对当前用户。使用  &lt;code&gt;--global&lt;/code&gt;  选项会让 &lt;code&gt;git&lt;/code&gt;  读写此文件，这会对你系统的上的&lt;b&gt;所有&lt;/b&gt;仓库生效。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;C&lt;/code&gt; : 当前使用仓库的 &lt;code&gt;git&lt;/code&gt;  目录的 &lt;code&gt;config&lt;/code&gt;  文件 ( &lt;code&gt;.git/config&lt;/code&gt; ): 只针对当前仓库。 可以使用  &lt;code&gt;--local&lt;/code&gt;  选项让 &lt;code&gt;git&lt;/code&gt;  强制读写此文件，默认情况下也会使用它。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;读取顺序为：  &lt;code&gt;A&lt;/code&gt; -&amp;gt; &lt;code&gt;B&lt;/code&gt; -&amp;gt; &lt;code&gt;C&lt;/code&gt; ,  &lt;code&gt;C&lt;/code&gt;  会覆盖 &lt;code&gt;B&lt;/code&gt;  中相同的配置， &lt;code&gt;B&lt;/code&gt;  会覆盖 &lt;code&gt;A&lt;/code&gt;  中相同的配置。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;可以通过 git config --list --show origin 命令查查文件位置以及命令所在的文件。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;一般我们新建了仓库，或者  &lt;code&gt;clone&lt;/code&gt;  一个远程仓库到本地之后，&lt;b&gt;第一件事就是配置自己的用户名和邮件地址。&lt;/b&gt;&lt;/p&gt;
&lt;p&gt;刚才说过，三种配置方式的作用范围，这里&lt;b&gt;一般情况下&lt;/b&gt;会使用  &lt;code&gt;--global&lt;/code&gt; 。 当前登录的用户都会使用一样的配置。&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;$ git config --global user.name &amp;quot;fangjiaxiaobai&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;$ git config --global user.email &amp;quot;fangjiaxiaobai@163.com&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;这一点非常重要！&lt;/p&gt;
&lt;p&gt;我们来查看一下配置的结果。&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;$ git config --global --list&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;user.name=fangjiaxiaobai&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;user.email=fangjiaxiaobai@163.com&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&#34;修改-git-的默认文本编辑器&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#修改-git-的默认文本编辑器&#34;&gt;#&lt;/a&gt; 修改 git 的默认文本编辑器&lt;/h4&gt;
&lt;p&gt;&lt;code&gt;git&lt;/code&gt;  的文本编辑器有什么作用呢？&lt;/p&gt;
&lt;p&gt;当我们的文件 在 提交代码，拉取远程代码或者切换分支出现冲突的时候， &lt;code&gt;git&lt;/code&gt;  命令行窗口就会有一个处理冲突之后填写 &lt;code&gt;commit&lt;/code&gt;  信息的命令行窗口，这里使用的编辑器就是 我们要说的 “文本编辑器了”。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;git&lt;/code&gt;  中默认的文本编辑器是  &lt;code&gt;nano&lt;/code&gt;  编辑器，我们使用进行配置，使用  &lt;code&gt;vim&lt;/code&gt;  编辑器。&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;➜  gitlearn git:(master) ✗ git config --global core.editor &amp;quot;vim&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;➜  gitlearn git:(master) ✗ git config --global -l&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;user.name=fangjiaxiaobai&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;user.email=fangjiaxiaobai@163.com&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;core.editor=vim&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;配置完仓库，之后，我们就正式开始使用  &lt;code&gt;git&lt;/code&gt;  了。&lt;/p&gt;
&lt;h3 id=&#34;使用-git-进行工作&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#使用-git-进行工作&#34;&gt;#&lt;/a&gt; 使用  &lt;code&gt;git&lt;/code&gt;  进行工作&lt;/h3&gt;
&lt;p&gt;简单来讲，我们只需三步，两个命令就可以完成文件的版本控制。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;修改文件 (创建文件，修改文件内容，删除文件)&lt;/li&gt;
&lt;li&gt;使用  &lt;code&gt;git add .&lt;/code&gt;  将文件纳入版本管理&lt;/li&gt;
&lt;li&gt;使用  &lt;code&gt;git commit -m &amp;quot;xxx&amp;quot;&lt;/code&gt;  将文件提交到版本仓库。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;在我们的工作目录中 (比如  &lt;code&gt;gitlearn/&lt;/code&gt; ), 所有的文件只有两种状态：  &lt;code&gt;已跟踪&lt;/code&gt; 和 &lt;code&gt;未跟踪&lt;/code&gt; 。&lt;/p&gt;
&lt;p&gt;已跟踪的文件是指被纳入版本控制的文件。在上一次快照中有他们的记录，在工作一段时间后，他们的状态可能是未修改，已修改，或者已经放入了 &lt;code&gt;暂存区&lt;/code&gt;  $^❶ $。&lt;/p&gt;
&lt;p&gt;未跟踪的文件：就是 即不存在上次快照中，也没有被放入暂存区中。&lt;/p&gt;
&lt;p&gt;这里我们再次的介绍一下 &lt;code&gt;git&lt;/code&gt;  的工作区域:&lt;/p&gt;
&lt;p&gt;工作区，暂存区，版本库。&lt;/p&gt;
&lt;p&gt;工作区，就是我们修改的文件。包括：新建文件，修改文件内容，删除文件。&lt;br&gt;
暂存区，就是 &lt;code&gt;git&lt;/code&gt;  将我们修改的文件记录起来起来。&lt;br&gt;
版本库，就是 &lt;code&gt;git&lt;/code&gt;  的记录的版本变更历史。就是  &lt;code&gt;.git&lt;/code&gt;  目录下的 &lt;code&gt;objects/&lt;/code&gt;  等目录下的所有文件。即我们 进行了 &lt;code&gt;commit&lt;/code&gt;  操作之后就会进入了版本库。&lt;/p&gt;
&lt;h3 id=&#34;让-git-跟踪我们的文件&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#让-git-跟踪我们的文件&#34;&gt;#&lt;/a&gt; 让  &lt;code&gt;git&lt;/code&gt;  跟踪我们的文件&lt;/h3&gt;
&lt;p&gt;使用  &lt;code&gt;git add&lt;/code&gt;  命令，可以让 &lt;code&gt;git&lt;/code&gt;  开始跟踪一个文件。&lt;/p&gt;
&lt;p&gt;使 &lt;code&gt;git&lt;/code&gt;  跟踪文件  &lt;code&gt;README.md&lt;/code&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;➜  gitlearn git:(master) echo &amp;#x27;test git跟踪文件&amp;#x27; &amp;gt; README.md&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# 查看工作区中文件的状态&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;➜  gitlearn git:(master) ✗ git status&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;On branch master&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;No commits yet&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Untracked files:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  (use &amp;quot;git add &amp;lt;file&amp;gt;...&amp;quot; to include in what will be committed)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	README.md&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;nothing added to commit but untracked files present (use &amp;quot;git add&amp;quot; to track)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;这里我们看到了，未跟踪的该文件：  &lt;code&gt;README.md&lt;/code&gt; 。我们可以使用 &lt;code&gt;git add&lt;/code&gt;  命令，将未跟踪的文件纳入跟踪范围。&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;➜  gitlearn git:(master) ✗ git add README.md&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# 查看文件的状态&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;➜  gitlearn git:(master) ✗ git status&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;On branch master&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;No commits yet&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Changes to be committed:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  (use &amp;quot;git rm --cached &amp;lt;file&amp;gt;...&amp;quot; to unstage)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	new file:   README.md&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;code&gt;Changes to be committed&lt;/code&gt; : 将要提交的变更。说明下面的文件已经是暂存状态了。使用  &lt;code&gt;git rm --cached &amp;lt;file&amp;gt;...&lt;/code&gt;  命令可以取消暂存。此时 &lt;code&gt;README.md&lt;/code&gt;  文件已经是 &lt;code&gt;git&lt;/code&gt;  跟踪的了。我们再次修改一下  &lt;code&gt;README.md&lt;/code&gt;  文件。查看一下工作区中文件的状态.&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;➜  gitlearn git:(master) ✗ echo &amp;#x27;test 再次修改已经被跟踪的文件&amp;#x27; &amp;gt;&amp;gt; README.md&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;➜  gitlearn git:(master) ✗ git status&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;On branch master&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;No commits yet&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Changes to be committed:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  (use &amp;quot;git rm --cached &amp;lt;file&amp;gt;...&amp;quot; to unstage)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	new file:   README.md&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Changes not staged for commit:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  (use &amp;quot;git add &amp;lt;file&amp;gt;...&amp;quot; to update what will be committed)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  (use &amp;quot;git checkout -- &amp;lt;file&amp;gt;...&amp;quot; to discard changes in working directory)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	modified:   README.md&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;又看到了 &lt;code&gt;Changes not staged for commit&lt;/code&gt; ： 还没有被暂存的提交去提交。说明第二次的变更还没有被 &lt;code&gt;git&lt;/code&gt;  跟踪起来。这就需要我们在运行一次 &lt;code&gt;git add README.md&lt;/code&gt;  命令了。&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;➜  gitlearn git:(master) ✗ git add README.md&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;➜  gitlearn git:(master) ✗ git status&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;On branch master&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;No commits yet&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Changes to be committed:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  (use &amp;quot;git rm --cached &amp;lt;file&amp;gt;...&amp;quot; to unstage)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	new file:   README.md&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;我们可以看到，第二次更改也被 &lt;code&gt;git&lt;/code&gt;  跟踪了起来。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;git status&lt;/code&gt;  命令的输出十分详细，可以使用 &lt;code&gt;git status -s(--short)&lt;/code&gt;  命令，输出非常简洁的结果.&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;➜  gitlearn git:(master) ✗ git status -s&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;A  README.md&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;输出结果的格式是这样的:&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;XX file1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;XX file2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;左列 XX: 第一个 X 表示，暂存区的状态，第二个 X 表示工作区的状态。&lt;/p&gt;
&lt;p&gt;XX 的规则如下：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;新添加的未跟踪文件前面有？？标记&lt;/li&gt;
&lt;li&gt;新添加到暂存区中的文件前面有 A 标记&lt;/li&gt;
&lt;li&gt;修改过的文件前面有 M 标记。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;提交到版本库&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#提交到版本库&#34;&gt;#&lt;/a&gt; 提交到版本库&lt;/h3&gt;
&lt;p&gt;现在我们就可以提交文件了。最好在每次提交之前都用  &lt;code&gt;git status&lt;/code&gt;  看下，我们需要的文件是否都放入 暂存区了。然后再用  &lt;code&gt;git commit&lt;/code&gt;  进行提交。&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;➜  gitlearn git:(master) ✗ git status&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;On branch master&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;No commits yet&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Changes to be committed:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  (use &amp;quot;git rm --cached &amp;lt;file&amp;gt;...&amp;quot; to unstage)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	new file:   README.md&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# 提交代码&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;➜  gitlearn git:(master) ✗ git commit -m &amp;quot;first commit&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[master (root-commit) fb554b5] first commit&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; 1 file changed, 2 insertions(+)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; create mode 100644 README.md&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;可以看到，提交后它会告诉你，当前是在哪个分支（ &lt;code&gt;master&lt;/code&gt; ）提交的，本次提交的完整  &lt;code&gt;SHA-1&lt;/code&gt;  校验和是什么（ &lt;code&gt;463dc4f&lt;/code&gt; ），以及在本次提交中，有多少文件修订过，多少行添加和删改过。&lt;/p&gt;
&lt;p&gt;以上就是我们最简单的开发流程了。&lt;/p&gt;
&lt;p&gt;这时，如果我不想某个文件纳入版本管理，但是这个文件还必须要在工作区中呢？&lt;/p&gt;
&lt;h4 id=&#34;忽略文件&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#忽略文件&#34;&gt;#&lt;/a&gt; 忽略文件&lt;/h4&gt;
&lt;p&gt;在这种情况下，我们可以创建一个名为：  &lt;code&gt;.gitignore&lt;/code&gt;  的文件，列出要忽略的文件的模式。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;.gitignore&lt;/code&gt;  文件的格式规范如下：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;所有空行或者以 # 开头的行都会被 Git 忽略。&lt;/li&gt;
&lt;li&gt;可以使用标准的 glob 模式匹配，它会递归地应用在整个工作区中。&lt;/li&gt;
&lt;li&gt;匹配模式可以以（/）开头防止递归。&lt;/li&gt;
&lt;li&gt;匹配模式可以以（/）结尾指定目录。&lt;/li&gt;
&lt;li&gt;要忽略指定模式以外的文件或目录，可以在模式前加上叹号（!）取反。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;所谓的  &lt;code&gt;glob&lt;/code&gt;  模式是指  &lt;code&gt;shell&lt;/code&gt;  所使用的简化了的正则表达式。 星号 &lt;code&gt;（*）&lt;/code&gt; 匹配零个或多个任意字符； &lt;code&gt;[abc]&lt;/code&gt;  匹配任何一个列在方括号中的字符 （这个例子要么匹配一个  &lt;code&gt;a&lt;/code&gt; ，要么匹配一个  &lt;code&gt;b&lt;/code&gt; ，要么匹配一个  &lt;code&gt;c&lt;/code&gt; ）； 问号 &lt;code&gt;（?）&lt;/code&gt; 只匹配一个任意字符；如果在方括号中使用短划线分隔两个字符， 表示所有在这两个字符范围内的都可以匹配（比如  &lt;code&gt;[0-9]&lt;/code&gt;  表示匹配所有  &lt;code&gt;0&lt;/code&gt;  到  &lt;code&gt;9&lt;/code&gt;  的数字）。 使用两个星号（ &lt;code&gt;**&lt;/code&gt; ）表示匹配任意中间目录，比如  &lt;code&gt;a/**/z&lt;/code&gt;  可以匹配  &lt;code&gt;a/z&lt;/code&gt;  、  &lt;code&gt;a/b/z&lt;/code&gt;  或  &lt;code&gt;a/b/c/z&lt;/code&gt;  等。&lt;/p&gt;
&lt;p&gt;来看一个  &lt;code&gt;.gitignore&lt;/code&gt;  文件的例子:&lt;/p&gt;
&lt;figure class=&#34;highlight sh&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 忽略所有的 .a 文件&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;*.a&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 但跟踪所有的 lib.a，即便你在前面忽略了 .a 文件&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;!lib.a&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 只忽略当前目录下的 TODO 文件，而不忽略 subdir/TODO&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;/TODO&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 忽略任何目录下名为 build 的文件夹&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;build/&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 忽略 doc/notes.txt，但不忽略 doc/server/arch.txt&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;doc/*.txt&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 忽略 doc/ 目录及其所有子目录下的 .pdf 文件&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;doc/**/*.pdf&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;假设：我们还有一个名叫：  &lt;code&gt;git.log&lt;/code&gt;  的文件。在更早的一个快照中，已经把它纳入了版本库中。现在我们要把它移除掉。应该怎么办呢&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;55&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;### 准备工作&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;➜  gitlearn git:(master) echo &amp;#x27;test remove logs files&amp;#x27; &amp;gt; git.log&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;➜  gitlearn git:(master) ✗ git add .&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;➜  gitlearn git:(master) ✗ git commit -m &amp;quot;test remove logs files&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[master b83b8f1] test remove logs files&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; 1 file changed, 1 insertion(+)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; create mode 100644 git.log&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; ### 移除 git.log&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;➜  gitlearn git:(master) git rm git.log&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;rm &amp;#x27;git.log&amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;➜  gitlearn git:(master) ✗ git status&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;On branch master&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Changes to be committed:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  (use &amp;quot;git reset HEAD &amp;lt;file&amp;gt;...&amp;quot; to unstage)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	deleted:    git.log&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# 新建 .gitignore 文件&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;➜  gitlearn git:(master) ✗ echo &amp;#x27;*.log&amp;#x27; &amp;gt; .gitignore&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;➜  gitlearn git:(master) ✗ git add .&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# 查看文件的状态&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;➜  gitlearn git:(master) ✗ git status&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;On branch master&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Changes to be committed:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  (use &amp;quot;git reset HEAD &amp;lt;file&amp;gt;...&amp;quot; to unstage)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	new file:   .gitignore&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	deleted:    git.log&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;➜  gitlearn git:(master) ✗ echo &amp;#x27;*.log&amp;#x27; &amp;gt; .gitignore&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;➜  gitlearn git:(master) ✗ git add .&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;➜  gitlearn git:(master) ✗ git status&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;On branch master&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Changes to be committed:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  (use &amp;quot;git reset HEAD &amp;lt;file&amp;gt;...&amp;quot; to unstage)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	new file:   .gitignore&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	deleted:    git.log&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# 提交文件&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;➜  gitlearn git:(master) ✗ git commit -m &amp;quot;test remove logs files - remove git.log&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[master 9118876] test remove logs files - remove git.log&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; 2 files changed, 1 insertion(+), 1 deletion(-)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; create mode 100644 .gitignore&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; delete mode 100644 git.log&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;➜  gitlearn git:(master) git status&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;On branch master&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;nothing to commit, working tree clean&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# 验证一下git.log文件会不会被git跟踪&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# 修改了git.log文件之后，git不会跟踪其变更。&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;➜  gitlearn git:(master) echo &amp;#x27;test track git.log??&amp;#x27; &amp;gt; git.log&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;➜  gitlearn git:(master) git status&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;On branch master&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;nothing to commit, working tree clean&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;注意：&lt;/p&gt;
&lt;p&gt;运行  &lt;code&gt;git rm&lt;/code&gt;  命令并不能删除文件！是从 &lt;code&gt;git&lt;/code&gt;  中删除，使 &lt;code&gt;git&lt;/code&gt;  不在跟踪其变化。&lt;/p&gt;
&lt;p&gt;有时候，使用  &lt;code&gt;git rm&lt;/code&gt;  命令并不能使文件不被 &lt;code&gt;git&lt;/code&gt;  跟踪，因为在缓存中还跟踪了文件。 这使，可以使用  &lt;code&gt;git rm -rf --cached&lt;/code&gt;  命令使 &lt;code&gt;git&lt;/code&gt;  不跟踪文件。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;git rm&lt;/code&gt;  命令也可以使用  &lt;code&gt;glob&lt;/code&gt;  模式。&lt;/p&gt;
&lt;h3 id=&#34;查看文件的修改内容&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#查看文件的修改内容&#34;&gt;#&lt;/a&gt; 查看文件的修改内容&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;git&lt;/code&gt;  提供了一个命令 &lt;code&gt;git diff&lt;/code&gt;  可以查看文件修改了那些地方.&lt;/p&gt;
&lt;p&gt;假设：我们修改了一个文件，我要看一下修改的内容 (此时还没有提交。)&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;➜  gitlearn git:(master) echo &amp;#x27;test diff&amp;#x27; &amp;gt; README.md&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;## 查看不同&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;### 比较的是： 工作目录中当前文件和暂存区域快照之间的差异。&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;➜  gitlearn git:(master) ✗ git diff&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;diff --git a/README.md b/README.md&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;index 2afbeed..b69a2df 100644&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;--- a/README.md&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;+++ b/README.md&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;@@ -1,2 +1 @@&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;-test git跟踪文件&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;-test 再次修改已经被跟踪的文件&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;+test diff&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;使用  &lt;code&gt;--staged&lt;/code&gt;  选项可以比较 已暂存文件与最后一次提交的文件差异。&lt;br&gt;
&lt;b&gt;请注意， &lt;code&gt;git diff&lt;/code&gt;  本身只显示尚未暂存的改动，而不是自上次提交以来所做的所有改动。 所以有时候你一下子暂存了所有更新过的文件，运行  &lt;code&gt;git diff&lt;/code&gt;  后却什么也没有，就是这个原因。&lt;/b&gt;&lt;/p&gt;
&lt;h3 id=&#34;移动文件&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#移动文件&#34;&gt;#&lt;/a&gt; 移动文件&lt;/h3&gt;
&lt;p&gt;可以使用  &lt;code&gt;git mv&lt;/code&gt;  命令来移动文件。&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;➜  gitlearn git:(master) ✗ git mv README.md README.md.md&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;➜  gitlearn git:(master) ✗ git status&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;On branch master&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Changes to be committed:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  (use &amp;quot;git reset HEAD &amp;lt;file&amp;gt;...&amp;quot; to unstage)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	renamed:    README.md -&amp;gt; README.md.md&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Changes not staged for commit:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  (use &amp;quot;git add &amp;lt;file&amp;gt;...&amp;quot; to update what will be committed)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  (use &amp;quot;git checkout -- &amp;lt;file&amp;gt;...&amp;quot; to discard changes in working directory)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	modified:   README.md.md&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;这个命令就相当于：&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;$ mv README.md README.md.md&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;$ git rm README.md&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;$ git add README.md.md&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;本篇文章就到这里啦，下一篇～&lt;b&gt;git 的时光机&lt;/b&gt;&lt;/p&gt;
&lt;h3 id=&#34;最后&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#最后&#34;&gt;#&lt;/a&gt; 最后&lt;/h3&gt;
&lt;p&gt;期望与你一起遇见更好的自己&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/images/qrcode.jpg&#34; alt=&#34;期望与你一起遇见更好的自己&#34;&gt;&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://fangjiaxiaobai.github.io/2021/07/18/git%E7%B3%BB%E5%88%97/06-git%E5%9F%BA%E6%9C%AC%E5%91%BD%E4%BB%A43-%E8%BF%9C%E7%A8%8B%E4%BB%93%E5%BA%93/</guid>
            <title>git命令3 - 远程仓库</title>
            <link>https://fangjiaxiaobai.github.io/2021/07/18/git%E7%B3%BB%E5%88%97/06-git%E5%9F%BA%E6%9C%AC%E5%91%BD%E4%BB%A43-%E8%BF%9C%E7%A8%8B%E4%BB%93%E5%BA%93/</link>
            <category>git</category>
            <pubDate>Sun, 18 Jul 2021 14:49:55 +0800</pubDate>
            <description><![CDATA[ &lt;h1 id=&#34;&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#&#34;&gt;#&lt;/a&gt; &lt;/h1&gt;
&lt;p&gt;远程仓库指的是 托管到因特网或者其他网络中的项目的版本库。&lt;/p&gt;
&lt;p&gt;可以使用  &lt;code&gt;git remote&lt;/code&gt;  命令来配置远程仓库。&lt;/p&gt;
&lt;p&gt;我们先看一下  &lt;code&gt;git remote&lt;/code&gt;  命令都有什么子选项.&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;git remote [-v | --verbose]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;git remote add [-t &amp;lt;branch&amp;gt;] [-m &amp;lt;master&amp;gt;] [-f] [--[no-]tags] [--mirror=&amp;lt;fetch|push&amp;gt;] &amp;lt;name&amp;gt; &amp;lt;url&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;git remote rename &amp;lt;old&amp;gt; &amp;lt;new&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;git remote remove &amp;lt;name&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;git remote set-head &amp;lt;name&amp;gt; (-a | --auto | -d | --delete | &amp;lt;branch&amp;gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;git remote set-branches [--add] &amp;lt;name&amp;gt; &amp;lt;branch&amp;gt;...&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;git remote get-url [--push] [--all] &amp;lt;name&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;git remote set-url [--push] &amp;lt;name&amp;gt; &amp;lt;newurl&amp;gt; [&amp;lt;oldurl&amp;gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;git remote set-url --add [--push] &amp;lt;name&amp;gt; &amp;lt;newurl&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;git remote set-url --delete [--push] &amp;lt;name&amp;gt; &amp;lt;url&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;git remote [-v | --verbose] show [-n] &amp;lt;name&amp;gt;...&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;git remote prune [-n | --dry-run] &amp;lt;name&amp;gt;...&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;git remote [-v | --verbose] update [-p | --prune] [(&amp;lt;group&amp;gt; | &amp;lt;remote&amp;gt;)...]&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;下面我们只介绍几个常用的远程仓库的命令&lt;/p&gt;
&lt;h3 id=&#34;配置远程仓库-git-remote-add&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#配置远程仓库-git-remote-add&#34;&gt;#&lt;/a&gt; 配置远程仓库 -  &lt;code&gt;git remote add&lt;/code&gt;&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;git remote add [-t &amp;lt;branch&amp;gt;] [-m &amp;lt;master&amp;gt;] [-f] [--[no-]tags] [--mirror=&amp;lt;fetch|push&amp;gt;] &amp;lt;name&amp;gt; &amp;lt;url&amp;gt;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;首先在页面上新建一个空的仓库备用。&lt;br&gt;
&lt;img data-src=&#34;/images/git%E7%B3%BB%E5%88%97/images/web%E9%A1%B5%E9%9D%A2%E4%B8%8A%E6%96%B0%E5%BB%BAgit%E8%BF%9C%E7%A8%8B%E4%BB%93%E5%BA%93.png&#34; alt=&#34;web页面上新建git远程仓库.png&#34;&gt;&lt;br&gt;
 演示一下使用:&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;➜  gitlearn git init .&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Initialized empty Git repository in /private/tmp/gitlearn/.git/&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;➜  gitlearn git:(master) echo &amp;#x27;演示配置远程仓库&amp;#x27; &amp;gt; testRemoteGit&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;➜  gitlearn git:(master) ✗ git add .&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;➜  gitlearn git:(master) ✗ git commit -m &amp;quot;新增一个文件，初始化项目&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[master (root-commit) 5ed81fa] 新增一个文件，初始化项目&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; 1 file changed, 1 insertion(+)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; create mode 100644 testRemoteGit&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; # 配置远程仓库&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;➜  gitlearn git:(master) git remote add origin https://gitee.com/fangjiaxiaobai/gitlearn.git&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# 查看远程仓库&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;➜  gitlearn git:(master) git remote -v&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;origin	https://gitee.com/fangjiaxiaobai/gitlearn.git (fetch)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;origin	https://gitee.com/fangjiaxiaobai/gitlearn.git (push)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;## 在增加一个远程仓库&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;➜  gitlearn git:(master) git remote add origin2 http://git.baijiahulian.com/wangxiyue/gitlearn.git&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;➜  gitlearn git:(master) git remote -v&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;origin	https://gitee.com/fangjiaxiaobai/gitlearn.git (fetch)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;origin	https://gitee.com/fangjiaxiaobai/gitlearn.git (push)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;origin2	http://git.baijiahulian.com/wangxiyue/gitlearn.git (fetch)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;origin2	http://git.baijiahulian.com/wangxiyue/gitlearn.git (push)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;将本地的文件推送到远程仓库中&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#将本地的文件推送到远程仓库中&#34;&gt;#&lt;/a&gt; 将本地的文件推送到远程仓库中&lt;/h3&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;➜  gitlearn git:(master) git push origin master&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Counting objects: 3, done.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Writing objects: 100% (3/3), 281 bytes | 281.00 KiB/s, done.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Total 3 (delta 0), reused 0 (delta 0)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;remote: Powered by GITEE.COM [GNK-5.0]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;To https://gitee.com/fangjiaxiaobai/gitlearn.git&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; * [new branch]      master -&amp;gt; master&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;➜  gitlearn git:(master)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;从git仓库中拉取数据&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#从git仓库中拉取数据&#34;&gt;#&lt;/a&gt; 从 git 仓库中拉取数据&lt;/h3&gt;
&lt;p&gt;可以使用  &lt;code&gt;git fetch&lt;/code&gt;  命令。 我们现在页面上的一个仓库中手动修改一个文件来演示一下 fetch 的功能。&lt;/p&gt;
&lt;p&gt;在页面就行点击编辑，然后加上  &lt;code&gt;这里是在远程仓库中加入的内容。&lt;/code&gt; 这样一句话。&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;➜  gitlearn git:(master) git fetch origin&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;remote: Enumerating objects: 5, done.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;remote: Counting objects: 100% (5/5), done.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;remote: Compressing objects: 100% (2/2), done.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;remote: Total 3 (delta 0), reused 0 (delta 0), pack-reused 0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Unpacking objects: 100% (3/3), done.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;From https://gitee.com/fangjiaxiaobai/gitlearn&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   5ed81fa..62be3ab  master     -&amp;gt; origin/master&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;使用  &lt;code&gt;git pull&lt;/code&gt;  也可以得到相同的结果。&lt;/p&gt;
&lt;h3 id=&#34;查看某个远程仓库&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#查看某个远程仓库&#34;&gt;#&lt;/a&gt; 查看某个远程仓库&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;git remote show&lt;/code&gt;  来查看远程仓库中的内容。&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;➜  gitlearn git:(master) git remote show origin&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;* remote origin&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  Fetch URL: https://gitee.com/fangjiaxiaobai/gitlearn.git&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  Push  URL: https://gitee.com/fangjiaxiaobai/gitlearn.git&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  HEAD branch: master&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  Remote branch:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    master tracked&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  Local ref configured for &amp;#x27;git push&amp;#x27;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    master pushes to master (local out of date)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;它会列出远程仓库的  &lt;code&gt;URL&lt;/code&gt;  与跟踪分支的信息。因为我们这是一个新建的仓库，这里我粘贴一个很多次提交的项目来看一下。&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/images/git%E7%B3%BB%E5%88%97/images/gitRemote%E5%88%86%E6%94%AF%E7%8A%B6%E6%80%81.png&#34; alt=&#34;gitRemote分支状态&#34;&gt;&lt;/p&gt;
&lt;p&gt;这个命令列出了当你在特定的分支上执行  &lt;code&gt;git push&lt;/code&gt;  会自动地推送到哪一个远程分支。 它也同样地列出了哪些远程分支不在你的本地，哪些远程分支已经从服务器上移除了， 还有当你执行  &lt;code&gt;git pull&lt;/code&gt;  时哪些本地分支可以与它跟踪的远程分支自动合并。&lt;/p&gt;
&lt;h4 id=&#34;重命名远程仓库&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#重命名远程仓库&#34;&gt;#&lt;/a&gt; 重命名远程仓库&lt;/h4&gt;
&lt;p&gt;使用  &lt;code&gt;git remote renam&lt;/code&gt; e 命令可以来重命名仓库。&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;➜  gitlearn git:(master) git remote rename origin giteeOrigin&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;➜  gitlearn git:(master) git remote -v&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;giteeOrigin	https://gitee.com/fangjiaxiaobai/gitlearn.git (fetch)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;giteeOrigin	https://gitee.com/fangjiaxiaobai/gitlearn.git (push)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;origin2	http://git.baijiahulian.com/wangxiyue/gitlearn.git (fetch)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;origin2	http://git.baijiahulian.com/wangxiyue/gitlearn.git (push)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&#34;删除远程分支&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#删除远程分支&#34;&gt;#&lt;/a&gt; 删除远程分支&lt;/h4&gt;
&lt;p&gt;使用命令  &lt;code&gt;git remote remove&lt;/code&gt;  命令可以删除远程仓库。&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;➜  gitlearn git:(master) git remote remove giteeOrigin&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;➜  gitlearn git:(master) git remote -v&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;origin2	http://git.baijiahulian.com/wangxiyue/gitlearn.git (fetch)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;origin2	http://git.baijiahulian.com/wangxiyue/gitlearn.git (push)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;一旦你使用这种方式删除了一个远程仓库，那么所有和这个远程仓库相关的远程跟踪分支以及配置信息也会一起被删除。&lt;/p&gt;
&lt;h3 id=&#34;最后&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#最后&#34;&gt;#&lt;/a&gt; 最后&lt;/h3&gt;
&lt;p&gt;期望与你一起遇见更好的自己&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/images/qrcode.jpg&#34; alt=&#34;期望与你一起遇见更好的自己&#34;&gt;&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://fangjiaxiaobai.github.io/2021/07/18/git%E7%B3%BB%E5%88%97/07-git%E5%9F%BA%E6%9C%AC%E5%91%BD%E4%BB%A44-%E6%A0%87%E7%AD%BE%E5%92%8C%E5%88%AB%E5%90%8D/</guid>
            <title>git 基础 - 标签 和 别名</title>
            <link>https://fangjiaxiaobai.github.io/2021/07/18/git%E7%B3%BB%E5%88%97/07-git%E5%9F%BA%E6%9C%AC%E5%91%BD%E4%BB%A44-%E6%A0%87%E7%AD%BE%E5%92%8C%E5%88%AB%E5%90%8D/</link>
            <category>git</category>
            <pubDate>Sun, 18 Jul 2021 14:49:55 +0800</pubDate>
            <description><![CDATA[ &lt;h3 id=&#34;标签&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#标签&#34;&gt;#&lt;/a&gt; 标签&lt;/h3&gt;
&lt;p&gt;标签最主要的作用是，人们会使用这个功能来发布节点，作为一个里程碑等特殊意义的标识。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;git&lt;/code&gt;  中标签使用  &lt;code&gt;tag&lt;/code&gt;  来表示。对应着  &lt;code&gt;git tag&lt;/code&gt;  这个命令。&lt;/p&gt;
&lt;p&gt;先看一下  &lt;code&gt;git tag&lt;/code&gt;  命令吧。&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;git tag [-a | -s | -u &amp;lt;keyid&amp;gt;] [-f] [-m &amp;lt;msg&amp;gt; | -F &amp;lt;file&amp;gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;lt;tagname&amp;gt; [&amp;lt;commit&amp;gt; | &amp;lt;object&amp;gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;git tag -d &amp;lt;tagname&amp;gt;...&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;git tag [-n[&amp;lt;num&amp;gt;]] -l [--contains &amp;lt;commit&amp;gt;] [--no-contains &amp;lt;commit&amp;gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        [--points-at &amp;lt;object&amp;gt;] [--column[=&amp;lt;options&amp;gt;] | --no-column]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        [--create-reflog] [--sort=&amp;lt;key&amp;gt;] [--format=&amp;lt;format&amp;gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        [--[no-]merged [&amp;lt;commit&amp;gt;]] [&amp;lt;pattern&amp;gt;...]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;git tag -v [--format=&amp;lt;format&amp;gt;] &amp;lt;tagname&amp;gt;...&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;老规矩，这里我们介绍几个常用的命令。&lt;/p&gt;
&lt;h4 id=&#34;标签命令&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#标签命令&#34;&gt;#&lt;/a&gt; 标签命令&lt;/h4&gt;
&lt;p&gt;&lt;code&gt;git&lt;/code&gt;  支持两种标签， 轻量标签 和 附注标签。&lt;/p&gt;
&lt;p&gt;轻量标签 是一个 &lt;code&gt;不会改变的分支&lt;/code&gt; ，它只是一个特定的提交引用。&lt;br&gt;
而附注标签是存储在 Git 数据库中的一个完整对象， 它们是可以被校验的，其中包含打标签者的名字、电子邮件地址、日期时间， 此外还有一个标签信息，并且可以使用 GNU Privacy Guard （GPG）签名并验证。 通常会建议创建附注标签，这样你可以拥有以上所有信息。但是如果你只是想用一个临时的标签， 或者因为某些原因不想要保存这些信息，那么也可以用轻量标签。&lt;/p&gt;
&lt;p&gt;这里我以功能为点，同时介绍两种标签的使用的方式。&lt;/p&gt;
&lt;h5 id=&#34;创建标签&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#创建标签&#34;&gt;#&lt;/a&gt; 创建标签&lt;/h5&gt;
&lt;h6 id=&#34;创建附注标签&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#创建附注标签&#34;&gt;#&lt;/a&gt; 创建附注标签&lt;/h6&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;➜  git_learn git:(master) git log --pretty=oneline&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;cbfebb28dde6707bf9dcc95175506a5c4cd4bfb4 (HEAD -&amp;gt; master) commit 3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;76400568f6397322f7d57d13834fa5ff6fbed2d9 commit 2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5758ef102fd4924ffbcf4c0cfeddac503deb32a9 commit 1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;## 添加标签&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;➜  git_learn git:(master) git tag -a v1.0 cbfebb28dde6707bf9dcc95175506a5c4cd4bfb4 -m &amp;quot;第一个tag&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;## 查看标签的内容&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;➜  git_learn git:(master) git show v1.0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# 输出显示了打标签者的信息、打标签的日期时间、附注信息，然后显示具体的提交信息。  2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;tag v1.0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Tagger: fangjiaxiaobai &amp;lt;fangjiaxiaobai@163.com&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Date:   Fri Jul 31 08:51:24 2020 +0800&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;第一个tag&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;commit cbfebb28dde6707bf9dcc95175506a5c4cd4bfb4 (HEAD -&amp;gt; master, tag: v1.0)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Author: fangjiaxiaobai &amp;lt;fangjiaxiaobai@163.com&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Date:   Fri Jul 31 08:45:24 2020 +0800&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    commit 3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;diff --git a/test3.txt b/test3.txt&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;new file mode 100644&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;index 0000000..e69de29&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;code&gt;-m&lt;/code&gt;  选项指定了一条将会存储在标签中的信息。 如果没有为附注标签指定一条信息，Git 会启动编辑器要求你输入信息&lt;/p&gt;
&lt;h3 id=&#34;最后&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#最后&#34;&gt;#&lt;/a&gt; 最后&lt;/h3&gt;
&lt;p&gt;期望与你一起遇见更好的自己&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/images/qrcode.jpg&#34; alt=&#34;期望与你一起遇见更好的自己&#34;&gt;&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://fangjiaxiaobai.github.io/2021/07/18/git%E7%B3%BB%E5%88%97/05-git%E5%9F%BA%E6%9C%AC%E5%91%BD%E4%BB%A42%20git%E6%97%B6%E5%85%89%E6%9C%BA1/</guid>
            <title>git基本命令二</title>
            <link>https://fangjiaxiaobai.github.io/2021/07/18/git%E7%B3%BB%E5%88%97/05-git%E5%9F%BA%E6%9C%AC%E5%91%BD%E4%BB%A42%20git%E6%97%B6%E5%85%89%E6%9C%BA1/</link>
            <category>git</category>
            <pubDate>Sun, 18 Jul 2021 14:49:55 +0800</pubDate>
            <description><![CDATA[ &lt;p&gt;&lt;code&gt;git&lt;/code&gt;  的时光机 (简化版)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;git log&lt;/code&gt; ：查看历史记录&lt;/li&gt;
&lt;li&gt;&lt;code&gt;git commit -amend&lt;/code&gt; ：重写上一次的提交历史&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;git-log&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#git-log&#34;&gt;#&lt;/a&gt;  &lt;code&gt;git log&lt;/code&gt;&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;git&lt;/code&gt;  有一个特别实用的功能，可以让我们看到所有的历史更改记录。这个命令就是  &lt;code&gt;git log&lt;/code&gt; .&lt;/p&gt;
&lt;p&gt;首先我们新建一个仓库。随便进行 &lt;code&gt;5&lt;/code&gt;  次更改， &lt;code&gt;5&lt;/code&gt;  提交。&lt;/p&gt;
&lt;p&gt;执行如下的操作:&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;➜  gitlearn git init .&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Initialized empty Git repository in /private/tmp/gitlearn/.git/&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;➜  gitlearn git:(master) ✗ echo &amp;#x27;第一行&amp;#x27; &amp;gt; testGitLog&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;➜  gitlearn git:(master) ✗ git add .&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;➜  gitlearn git:(master) ✗ git commit -m &amp;quot;test git-log 1 &amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[master (root-commit) 0718ac9] test git-log 1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; 2 files changed, 2 insertions(+)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; create mode 100644 .gitignore&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; create mode 100644 testGitLog&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;➜  gitlearn git:(master) echo &amp;#x27;第二行&amp;#x27; &amp;gt;&amp;gt; testGitLog&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;➜  gitlearn git:(master) ✗ git commit -a -m &amp;quot;test git-log 2 &amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[master f8248a5] test git-log 2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; 1 file changed, 1 insertion(+)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;➜  gitlearn git:(master) echo &amp;#x27;第三行&amp;#x27; &amp;gt;&amp;gt; testGitLog&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;➜  gitlearn git:(master) ✗ git commit -a -m &amp;quot;test git-log 3 &amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[master b282b88] test git-log 3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; 1 file changed, 1 insertion(+)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;➜  gitlearn git:(master) echo &amp;#x27;第四行&amp;#x27; &amp;gt;&amp;gt; testGitLog&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;➜  gitlearn git:(master) ✗ git commit -a -m &amp;quot;test git-log 4 &amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[master b9df1bb] test git-log 4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; 1 file changed, 1 insertion(+)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;➜  gitlearn git:(master) echo &amp;#x27;第五行&amp;#x27; &amp;gt;&amp;gt; testGitLog&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;➜  gitlearn git:(master) ✗ git commit -a -m &amp;quot;test git-log 5 &amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[master 769db1c] test git-log 5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; 1 file changed, 1 insertion(+)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;运行一下  &lt;code&gt;git log&lt;/code&gt;  我们查看一下输出的内容。&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;commit 769db1cd5ba091162707a3e648d67ec8e6913d2b (HEAD -&amp;gt; master)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Author: fangjiaxiaobai &amp;lt;fangjiaxiaobai@163.com&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Date:   Tue Jul 21 15:36:11 2020 +0800&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    test git-log 5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;commit b9df1bb5c10f6602f7fa889ca91759a2e45e69cb&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Author: fangjiaxiaobai &amp;lt;fangjiaxiaobai@163.com&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Date:   Tue Jul 21 15:36:01 2020 +0800&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    test git-log 4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;commit b282b882317b118095eb921e707e449f45fdeef6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Author: fangjiaxiaobai &amp;lt;fangjiaxiaobai@163.com&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Date:   Tue Jul 21 15:35:48 2020 +0800&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    test git-log 3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;commit f8248a5fbc18a90710c95cee475b34797299bc61&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Author: fangjiaxiaobai &amp;lt;fangjiaxiaobai@163.com&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Date:   Tue Jul 21 15:35:30 2020 +0800&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    test git-log 2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;commit 0718ac9a20021971d6f1a09a3ef72e36b6fd73c9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Author: fangjiaxiaobai &amp;lt;fangjiaxiaobai@163.com&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Date:   Tue Jul 21 15:34:39 2020 +0800&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    test git-log 1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;可以看到，我们没有传入任何参数的情况下， &lt;code&gt;git log&lt;/code&gt;  会按照先后顺序列出所有的提交，时间最近的更新排在最上面。&lt;/p&gt;
&lt;p&gt;该命令会列出每次提交的 SHA-1 校验和，作者的名字和电子邮箱，提交时间，以及提交说明。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;git log&lt;/code&gt;  还有很多我们选项，我在后面有一篇文章写了 git 的命令大全，并且会保持更新哦。&lt;/p&gt;
&lt;h4 id=&#34;git-log命令选项&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#git-log命令选项&#34;&gt;#&lt;/a&gt;  &lt;code&gt;git log&lt;/code&gt;  命令选项&lt;/h4&gt;
&lt;p&gt;这里我们就先介绍一写常用的命令选项。&lt;/p&gt;
&lt;h5 id=&#34;显示每次提交所引入的差异-patch&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#显示每次提交所引入的差异-patch&#34;&gt;#&lt;/a&gt; 显示每次提交所引入的差异  &lt;code&gt;--patch&lt;/code&gt;&lt;/h5&gt;
&lt;p&gt;&lt;code&gt;git log --patch&lt;/code&gt;  或者  &lt;code&gt;git log -p&lt;/code&gt;  会显示每次提交所引入的差异，会按照补丁的方式展示。后面也可以加上数字来限制下面显示几次提交。比如： &lt;code&gt;git log -p -1&lt;/code&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;commit 769db1cd5ba091162707a3e648d67ec8e6913d2b (HEAD -&amp;gt; master)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Author: fangjiaxiaobai &amp;lt;fangjiaxiaobai@163.com&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Date:   Tue Jul 21 15:36:11 2020 +0800&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    test git-log 5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;diff --git a/testGitLog b/testGitLog&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;index 11c20cd..844b7e8 100644&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;--- a/testGitLog&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;+++ b/testGitLog&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;@@ -2,3 +2,4 @@&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; 第二行&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; 第三行&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; 第四行&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;+第五行&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;commit b9df1bb5c10f6602f7fa889ca91759a2e45e69cb&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Author: fangjiaxiaobai &amp;lt;fangjiaxiaobai@163.com&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Date:   Tue Jul 21 15:36:01 2020 +0800&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    test git-log 4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;diff --git a/testGitLog b/testGitLog&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;index f1c8e85..11c20cd 100644&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;--- a/testGitLog&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;+++ b/testGitLog&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;@@ -1,3 +1,4 @@&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; 第一行&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; 第二行&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; 第三行&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;+第四行&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;...&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;限制提交数演示：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;git log -p -1&lt;/code&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;commit 769db1cd5ba091162707a3e648d67ec8e6913d2b (HEAD -&amp;gt; master)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Author: fangjiaxiaobai &amp;lt;fangjiaxiaobai@163.com&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Date:   Tue Jul 21 15:36:11 2020 +0800&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    test git-log 5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;diff --git a/testGitLog b/testGitLog&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;index 11c20cd..844b7e8 100644&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;--- a/testGitLog&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;+++ b/testGitLog&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;@@ -2,3 +2,4 @@&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; 第二行&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; 第三行&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; 第四行&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;+第五行&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;这个选项可以在每次提交的下面列出所有修改过的文件，有多少文件被修改了以及被修改过的文件的哪些行被移除或是添加了。 在每次提交的最后还有一个总结。&lt;/p&gt;
&lt;h5 id=&#34;查看每次提交的简略统计信息-git-log-stat&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#查看每次提交的简略统计信息-git-log-stat&#34;&gt;#&lt;/a&gt; 查看每次提交的简略统计信息， &lt;code&gt;git log --stat&lt;/code&gt;&lt;/h5&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;commit 769db1cd5ba091162707a3e648d67ec8e6913d2b (HEAD -&amp;gt; master)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Author: fangjiaxiaobai &amp;lt;fangjiaxiaobai@163.com&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Date:   Tue Jul 21 15:36:11 2020 +0800&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    test git-log 5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;## 什么文件被修改了，增加还是删除&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; testGitLog | 1 +&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;## 一共修改了多少文件&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; 1 file changed, 1 insertion(+)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;...&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&#34;格式化输出日志-pretty&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#格式化输出日志-pretty&#34;&gt;#&lt;/a&gt; 格式化输出日志  &lt;code&gt;--pretty&lt;/code&gt;&lt;/h4&gt;
&lt;p&gt;这个选项可以使不同于默认格式化的方式展示提交历史。它提供了几种内建的格式化方式，除此之外使用者还可以自定义格式化方式。&lt;/p&gt;
&lt;h6 id=&#34;内建一oneline&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#内建一oneline&#34;&gt;#&lt;/a&gt; 内建一：oneline&lt;/h6&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;$ git log --pretty=oneline&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;769db1cd5ba091162707a3e648d67ec8e6913d2b (HEAD -&amp;gt; master) test git-log 5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;b9df1bb5c10f6602f7fa889ca91759a2e45e69cb test git-log 4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;b282b882317b118095eb921e707e449f45fdeef6 test git-log 3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;f8248a5fbc18a90710c95cee475b34797299bc61 test git-log 2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;0718ac9a20021971d6f1a09a3ef72e36b6fd73c9 test git-log 1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h6 id=&#34;内建二-short&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#内建二-short&#34;&gt;#&lt;/a&gt; 内建二： short&lt;/h6&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;$ git log --pretty=short&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;commit 769db1cd5ba091162707a3e648d67ec8e6913d2b (HEAD -&amp;gt; master)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Author: fangjiaxiaobai &amp;lt;fangjiaxiaobai@163.com&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    test git-log 5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;commit b9df1bb5c10f6602f7fa889ca91759a2e45e69cb&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Author: fangjiaxiaobai &amp;lt;fangjiaxiaobai@163.com&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    test git-log 4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;commit b282b882317b118095eb921e707e449f45fdeef6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Author: fangjiaxiaobai &amp;lt;fangjiaxiaobai@163.com&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    test git-log 3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;commit f8248a5fbc18a90710c95cee475b34797299bc61&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Author: fangjiaxiaobai &amp;lt;fangjiaxiaobai@163.com&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    test git-log 2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;commit 0718ac9a20021971d6f1a09a3ef72e36b6fd73c9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Author: fangjiaxiaobai &amp;lt;fangjiaxiaobai@163.com&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    test git-log 1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h6 id=&#34;内建三full&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#内建三full&#34;&gt;#&lt;/a&gt; 内建三：full&lt;/h6&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;$ git log --pretty=full&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;commit 769db1cd5ba091162707a3e648d67ec8e6913d2b (HEAD -&amp;gt; master)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Author: fangjiaxiaobai &amp;lt;fangjiaxiaobai@163.com&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Commit: fangjiaxiaobai &amp;lt;fangjiaxiaobai@163.com&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    test git-log 5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;commit b9df1bb5c10f6602f7fa889ca91759a2e45e69cb&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Author: fangjiaxiaobai &amp;lt;fangjiaxiaobai@163.com&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Commit: fangjiaxiaobai &amp;lt;fangjiaxiaobai@163.com&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    test git-log 4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;commit b282b882317b118095eb921e707e449f45fdeef6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Author: fangjiaxiaobai &amp;lt;fangjiaxiaobai@163.com&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Commit: fangjiaxiaobai &amp;lt;fangjiaxiaobai@163.com&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    test git-log 3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;commit f8248a5fbc18a90710c95cee475b34797299bc61&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Author: fangjiaxiaobai &amp;lt;fangjiaxiaobai@163.com&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Commit: fangjiaxiaobai &amp;lt;fangjiaxiaobai@163.com&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    test git-log 2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;commit 0718ac9a20021971d6f1a09a3ef72e36b6fd73c9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Author: fangjiaxiaobai &amp;lt;fangjiaxiaobai@163.com&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Commit: fangjiaxiaobai &amp;lt;fangjiaxiaobai@163.com&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    test git-log 1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h6 id=&#34;内建四fuller&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#内建四fuller&#34;&gt;#&lt;/a&gt; 内建四：fuller&lt;/h6&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;$ git log --pretty=fullter&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;commit 769db1cd5ba091162707a3e648d67ec8e6913d2b (HEAD -&amp;gt; master)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Author:     fangjiaxiaobai &amp;lt;fangjiaxiaobai@163.com&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;AuthorDate: Tue Jul 21 15:36:11 2020 +0800&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Commit:     fangjiaxiaobai &amp;lt;fangjiaxiaobai@163.com&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;CommitDate: Tue Jul 21 15:36:11 2020 +0800&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    test git-log 5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;commit b9df1bb5c10f6602f7fa889ca91759a2e45e69cb&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Author:     fangjiaxiaobai &amp;lt;fangjiaxiaobai@163.com&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;AuthorDate: Tue Jul 21 15:36:01 2020 +0800&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Commit:     fangjiaxiaobai &amp;lt;fangjiaxiaobai@163.com&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;CommitDate: Tue Jul 21 15:36:01 2020 +0800&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    test git-log 4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;commit b282b882317b118095eb921e707e449f45fdeef6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Author:     fangjiaxiaobai &amp;lt;fangjiaxiaobai@163.com&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;AuthorDate: Tue Jul 21 15:35:48 2020 +0800&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Commit:     fangjiaxiaobai &amp;lt;fangjiaxiaobai@163.com&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;CommitDate: Tue Jul 21 15:35:48 2020 +0800&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;...&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h6 id=&#34;最nb的format&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#最nb的format&#34;&gt;#&lt;/a&gt; 最 NB 的：format&lt;/h6&gt;
&lt;p&gt;这个选项目可以让我们定制记录的显示格式，这种并不会随着 git 的更新而发生改变。&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;$ git log --pretty=format:&amp;quot;%h-%an,%ar:%s&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;769db1c - fangjiaxiaobai, 27 minutes ago:test git-log 5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;b9df1bb - fangjiaxiaobai, 27 minutes ago:test git-log 4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;b282b88 - fangjiaxiaobai, 27 minutes ago:test git-log 3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;f8248a5 - fangjiaxiaobai, 27 minutes ago:test git-log 2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;0718ac9 - fangjiaxiaobai, 28 minutes ago:test git-log 1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;format 后面的分别代表什么含义呢？&lt;br&gt;
这里列出了 Format 的常用参数。&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:center&#34;&gt;参数&lt;/th&gt;
&lt;th style=&#34;text-align:left&#34;&gt;含义&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;%H&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;提交的完整哈希值&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;%h&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;提交的简写哈希值&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;%T&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;树的完整哈希值&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;%t&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;树的简写哈希值&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;%P&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;父提交的完整哈希值&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;%p&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;父提交的简写哈希值&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;%an&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;作者名字&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;%ae&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;作者的电子邮件地址&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;%ad&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;作者修订日期（可以用 --date = 选项 来定制格式）&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;%ar&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;作者修订日期，按多久以前的方式显示&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;%cn&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;提交者的名字&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;%ce&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;提交者的电子邮件地址&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;%cd&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;提交日期&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;%cr&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;提交日期（距今多长时间）&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;%s&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;提交说明&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;咦～？作者和提交这有什么区别呢？&lt;span class=&#34;katex&#34;&gt;&lt;span class=&#34;katex-mathml&#34;&gt;&lt;math xmlns=&#34;http://www.w3.org/1998/Math/MathML&#34;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;msup&gt;&lt;mrow&gt;&lt;/mrow&gt;&lt;mtext&gt;❷&lt;/mtext&gt;&lt;/msup&gt;&lt;/mrow&gt;&lt;annotation encoding=&#34;application/x-tex&#34;&gt;^❷&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&#34;katex-html&#34; aria-hidden=&#34;true&#34;&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:0.363em;vertical-align:0em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&#34;msupsub&#34;&gt;&lt;span class=&#34;vlist-t&#34;&gt;&lt;span class=&#34;vlist-r&#34;&gt;&lt;span class=&#34;vlist&#34; style=&#34;height:0.363em;&#34;&gt;&lt;span style=&#34;top:-3.063em;margin-right:0.05em;&#34;&gt;&lt;span class=&#34;pstrut&#34; style=&#34;height:2.7em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;sizing reset-size6 size3 mtight&#34;&gt;&lt;span class=&#34;mord mtight&#34;&gt;❷&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;
这里，小白就要卖一个关子了。不过答案就在这个系列里～。因为在目前这总单分支的本地开发环境里，提交者就是作者。&lt;br&gt;
另外在多分支的开发过车中，使用  &lt;code&gt;format&lt;/code&gt;  配合  &lt;code&gt;--graph&lt;/code&gt;  选项就尤为有用。后面介绍～&lt;/p&gt;
&lt;h5 id=&#34;限制输出性的选项&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#限制输出性的选项&#34;&gt;#&lt;/a&gt; 限制输出性的选项&lt;/h5&gt;
&lt;p&gt;上面用过了  &lt;code&gt;-&amp;lt;number&amp;gt;&lt;/code&gt;  的方式来显示 git log 输出日志的条数，git 还提供了 类似于：  &lt;code&gt;--since&lt;/code&gt;  和  &lt;code&gt;--until&lt;/code&gt; ,  &lt;code&gt;--before&lt;/code&gt;  等时间限制的选项目。&lt;/p&gt;
&lt;p&gt;比如：  &lt;code&gt;git log --since=2.weeks&lt;/code&gt;  输出 2 周之内的提交记录。&lt;/p&gt;
&lt;p&gt;该命令可用的格式十分丰富 —— 可以是类似 “2008-01-15” 的具体的某一天，也可以是类似 “2 years 1 day 3 minutes ago” 的相对日期。&lt;br&gt;
还可以过滤出匹配指定条件的提交。 用  &lt;code&gt;--author&lt;/code&gt;  选项显示指定作者的提交，用  &lt;code&gt;--grep&lt;/code&gt;  选项搜索提交说明中的关键字。&lt;/p&gt;
&lt;p&gt;另一个非常有用的过滤器是 -S（俗称 &lt;code&gt;“pickaxe”&lt;/code&gt;  选项，取 “用鹤嘴锄在土里捡石头” 之意）， 它接受一个字符串参数，并且只会显示那些添加或删除了该字符串的提交。 假设你想找出添加或删除了对某一个特定函数的引用的提交，可以调用：&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;$ git log -S function_name&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;最后一个很实用的  &lt;code&gt;git log&lt;/code&gt;  选项是路径（ &lt;code&gt;path&lt;/code&gt; ）， 如果只关心某些文件或者目录的历史提交，可以在  &lt;code&gt;git log&lt;/code&gt;  选项的最后指定它们的路径。 因为是放在最后位置上的选项，所以用两个短划线（ &lt;code&gt;--&lt;/code&gt; ）隔开之前的选项和后面限定的路径名。&lt;/p&gt;
&lt;h2 id=&#34;git-commit-amend&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#git-commit-amend&#34;&gt;#&lt;/a&gt;  &lt;code&gt;git commit --amend&lt;/code&gt;&lt;/h2&gt;
&lt;p&gt;这个命令可以让我们重写上一次的提交记录。&lt;br&gt;
比如有下面这样的场景：&lt;/p&gt;
&lt;p&gt;小白修改了一个文件，提交了之后发现写了一个错别字，小白又想保持 &lt;code&gt;git&lt;/code&gt;  提交历史的整洁。这时  &lt;code&gt;git commit -amend&lt;/code&gt;  就派上了用场了。&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;➜  gitlearn git:(master) git log --pretty=oneline&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;➜  gitlearn git:(master) echo &amp;#x27;第留行&amp;#x27; &amp;gt;&amp;gt; testGitLog&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;➜  gitlearn git:(master) ✗ git commit -a -m &amp;quot;test git-log 6 &amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[detached HEAD f65b589] test git-log 6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; 1 file changed, 1 insertion(+)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;➜  gitlearn git:(master) vim testGitLog&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;➜  gitlearn git:(master) ✗ git commit -a --amend -m &amp;quot;test git-log 6 &amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[detached HEAD 1afd020] test git-log 6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; Date: Tue Jul 21 16:36:43 2020 +0800&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; 1 file changed, 1 insertion(+)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; # 查看提交日志&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;➜  gitlearn git:(master) git log --pretty=oneline&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1afd020466eb9b519cec80415cb1e9c587612511 (HEAD) test git-log 6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;769db1cd5ba091162707a3e648d67ec8e6913d2b test git-log 5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;b9df1bb5c10f6602f7fa889ca91759a2e45e69cb test git-log 4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;b282b882317b118095eb921e707e449f45fdeef6 test git-log 3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;f8248a5fbc18a90710c95cee475b34797299bc61 test git-log 2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;0718ac9a20021971d6f1a09a3ef72e36b6fd73c9 test git-log 1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(END)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;注意！ 这里第二次提交的结果会替换掉之前的一次提交。&lt;/p&gt;
&lt;p&gt;以上就是本次 简约版本时光机的所有内容了。下一篇 远程仓库&lt;/p&gt;
&lt;h3 id=&#34;最后&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#最后&#34;&gt;#&lt;/a&gt; 最后&lt;/h3&gt;
&lt;p&gt;期望与你一起遇见更好的自己&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/images/qrcode.jpg&#34; alt=&#34;期望与你一起遇见更好的自己&#34;&gt;&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://fangjiaxiaobai.github.io/2021/07/18/git%E7%B3%BB%E5%88%97/13-git%E5%91%BD%E4%BB%A4/</guid>
            <title>git命令</title>
            <link>https://fangjiaxiaobai.github.io/2021/07/18/git%E7%B3%BB%E5%88%97/13-git%E5%91%BD%E4%BB%A4/</link>
            <category>git</category>
            <pubDate>Sun, 18 Jul 2021 14:49:55 +0800</pubDate>
            <description><![CDATA[ &lt;p&gt;本章开始学习一些在开发中常用的 git 命令&lt;/p&gt;
&lt;p&gt;先看一下 git 有多少个命令。&lt;/p&gt;
&lt;p&gt;直接在 命令行中输入 git 即可。&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;➜  / git&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;usage: git [--version] [--help] [-C &amp;lt;path&amp;gt;] [-c name=value]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;           [--exec-path[=&amp;lt;path&amp;gt;]] [--html-path] [--man-path] [--info-path]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;           [-p | --paginate | --no-pager] [--no-replace-objects] [--bare]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;           [--git-dir=&amp;lt;path&amp;gt;] [--work-tree=&amp;lt;path&amp;gt;] [--namespace=&amp;lt;name&amp;gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;           &amp;lt;command&amp;gt; [&amp;lt;args&amp;gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;These are common Git commands used in various situations:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;start a working area (see also: git help tutorial)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   clone      Clone a repository into a new directory&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   init       Create an empty Git repository or reinitialize an existing one&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;work on the current change (see also: git help everyday)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   add        Add file contents to the index&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   mv         Move or rename a file, a directory, or a symlink&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   reset      Reset current HEAD to the specified state&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   rm         Remove files from the working tree and from the index&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;examine the history and state (see also: git help revisions)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   bisect     Use binary search to find the commit that introduced a bug&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   grep       Print lines matching a pattern&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   log        Show commit logs&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   show       Show various types of objects&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   status     Show the working tree status&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;grow, mark and tweak your common history&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   branch     List, create, or delete branches&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   checkout   Switch branches or restore working tree files&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   commit     Record changes to the repository&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   diff       Show changes between commits, commit and working tree, etc&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   merge      Join two or more development histories together&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   rebase     Reapply commits on top of another base tip&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   tag        Create, list, delete or verify a tag object signed with GPG&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;collaborate (see also: git help workflows)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   fetch      Download objects and refs from another repository&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   pull       Fetch from and integrate with another repository or a local branch&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   push       Update remote refs along with associated objects&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#x27;git help -a&amp;#x27; and &amp;#x27;git help -g&amp;#x27; list available subcommands and some&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;concept guides. See &amp;#x27;git help &amp;lt;command&amp;gt;&amp;#x27; or &amp;#x27;git help &amp;lt;concept&amp;gt;&amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;to read about a specific subcommand or concept.&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;小朋友，你以为 git 就这几个命令吗？&lt;/p&gt;
&lt;p&gt;太单纯！！！&lt;br&gt;
还有很多命令！！ 下篇分享（也分享不完）&lt;/p&gt;
&lt;h3 id=&#34;git-clone&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#git-clone&#34;&gt;#&lt;/a&gt; git clone&lt;/h3&gt;
&lt;h3 id=&#34;git-init&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#git-init&#34;&gt;#&lt;/a&gt; git init&lt;/h3&gt;
&lt;h3 id=&#34;git-add&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#git-add&#34;&gt;#&lt;/a&gt; git add&lt;/h3&gt;
&lt;h3 id=&#34;git-commit&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#git-commit&#34;&gt;#&lt;/a&gt; git commit&lt;/h3&gt;
&lt;h3 id=&#34;git-checkout&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#git-checkout&#34;&gt;#&lt;/a&gt; git checkout&lt;/h3&gt;
&lt;h3 id=&#34;git-log&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#git-log&#34;&gt;#&lt;/a&gt; git log&lt;/h3&gt;
&lt;h3 id=&#34;git-tag&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#git-tag&#34;&gt;#&lt;/a&gt; git tag&lt;/h3&gt;
&lt;h3 id=&#34;git-diff&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#git-diff&#34;&gt;#&lt;/a&gt; git diff&lt;/h3&gt;
&lt;h3 id=&#34;最后&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#最后&#34;&gt;#&lt;/a&gt; 最后&lt;/h3&gt;
&lt;p&gt;期望与你一起遇见更好的自己&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/images/qrcode.jpg&#34; alt=&#34;期望与你一起遇见更好的自己&#34;&gt;&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://fangjiaxiaobai.github.io/2021/07/18/git%E7%B3%BB%E5%88%97/20-git%E5%BC%80%E5%8F%91%E6%A8%A1%E5%9E%8B/</guid>
            <title>git开发模型 - github-flow</title>
            <link>https://fangjiaxiaobai.github.io/2021/07/18/git%E7%B3%BB%E5%88%97/20-git%E5%BC%80%E5%8F%91%E6%A8%A1%E5%9E%8B/</link>
            <category>git</category>
            <pubDate>Sun, 18 Jul 2021 14:49:55 +0800</pubDate>
            <description><![CDATA[ &lt;h3 id=&#34;github-flow&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#github-flow&#34;&gt;#&lt;/a&gt;  &lt;code&gt;github flow&lt;/code&gt;&lt;/h3&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9ndWlkZXMuZ2l0aHViLmNvbS9pbnRyb2R1Y3Rpb24vZmxvdy8=&#34;&gt;参考地址&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;GitHub flow&lt;/code&gt;  是一个轻量级的，基于分支的工作流，它支持定期进行部署的团队和项目。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;gitHub flow&lt;/code&gt;  主要分为以下步骤：&lt;/p&gt;
&lt;h4 id=&#34;1创建分支&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#1创建分支&#34;&gt;#&lt;/a&gt; 1. 创建分支&lt;/h4&gt;
&lt;p&gt;&lt;img data-src=&#34;./images/github-flow6.png&#34; alt=&#34;github-flow6.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;在你准备进行开发的时候，或者突然有一个想法，想要马上去实现的时候，先创建一个分支。&lt;/p&gt;
&lt;p&gt;分支是 &lt;code&gt;Git&lt;/code&gt;  中的核心概念，整个 &lt;code&gt;GitHub&lt;/code&gt;  流程都以此为基础。只有一个规则： &lt;code&gt;master&lt;/code&gt;  分支中的任何内容始终都是可部署的。因此，在处理功能或修订时，要在主分支之外创建新分支非常重要。您的分支名称应具有描述性（例如，重构身份验证，用户内容缓存密钥， &lt;code&gt;make-retina&lt;/code&gt;  头像），以便其他人可以看到正在处理的内容。&lt;/p&gt;
&lt;h4 id=&#34;2-添加提交&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#2-添加提交&#34;&gt;#&lt;/a&gt; 2. 添加提交&lt;/h4&gt;
&lt;p&gt;&lt;img data-src=&#34;./images/github-flow6.png&#34; alt=&#34;github-flow6.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;创建分支后，就该开始进行更改了。每当添加，编辑或删除文件时，您都在进行提交，并将其添加到分支中。添加提交的过程会使 git 跟踪您在功能分支上工作的进度。提交还会为您的工作创建透明的历史记录，其他人可以参考该历史记录来了解您的工作以及原因。每个提交都有一个关联的提交消息，该消息是说明为什么进行特定更改的说明。此外，每次提交都被视为一个单独的变更单元。如果发现错误或决定朝另一个方向前进，则可以回滚更改。&lt;/p&gt;
&lt;h4 id=&#34;3打开拉取请求&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#3打开拉取请求&#34;&gt;#&lt;/a&gt; 3. 打开拉取请求&lt;/h4&gt;
&lt;p&gt;&lt;img data-src=&#34;./images/github-flow6.png&#34; alt=&#34;github-flow6.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;将我们本地开发的代码 &lt;code&gt;commit&lt;/code&gt;  了之后，在 &lt;code&gt;push&lt;/code&gt;  远程仓库之前，我们要 发起一次  &lt;code&gt;pull request&lt;/code&gt; . 这最直接的效果就是如果存在冲突，我们就可以现在本地完成冲突的处理。其次，通过 &lt;code&gt;pull request&lt;/code&gt;  我们还可以看到团队中其他成员的工作内容，获取该项目中最新的代码。&lt;/p&gt;
&lt;h4 id=&#34;4讨论并检查您的代码&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#4讨论并检查您的代码&#34;&gt;#&lt;/a&gt; 4. 讨论并检查您的代码&lt;/h4&gt;
&lt;p&gt;&lt;img data-src=&#34;./images/github-flow6.png&#34; alt=&#34;github-flow6.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;打开 “拉取请求” 后，审阅您所做更改的人员或团队可能会有疑问或意见。也许编码风格与项目准则不匹配，更改缺少单元测试，或者一切看起来都很不错，并且道具井井有条。提取请求旨在鼓励和捕获这种类型的对话。您还可以根据有关提交的讨论和反馈继续推送到分支机构。如果有人评论您忘记做某事，或者代码中有错误，则可以在分支机构中对其进行修复，然后进行更改。 &lt;code&gt;GitHub&lt;/code&gt;  将在统一的 “拉取请求” 视图中显示您的新提交以及您可能收到的任何其他反馈。&lt;/p&gt;
&lt;h4 id=&#34;部署&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#部署&#34;&gt;#&lt;/a&gt; 部署&lt;/h4&gt;
&lt;p&gt;&lt;img data-src=&#34;./images/github-flow5.png&#34; alt=&#34;github-flow5.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;借助 &lt;code&gt;GitHub&lt;/code&gt; ，您可以从分支机构进行部署，以在正式合并之前进行生产中的最终测试。审核拉取请求并且分支机构通过测试后，您可以部署更改以在生产中进行验证。如果您的分支机构引起问题，则可以通过将现有的主服务器部署到生产中来回滚它。&lt;/p&gt;
&lt;h4 id=&#34;合并到master分支&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#合并到master分支&#34;&gt;#&lt;/a&gt; 合并到 master 分支&lt;/h4&gt;
&lt;p&gt;&lt;img data-src=&#34;/images/git%E7%B3%BB%E5%88%97/images/github-flow6.png&#34; alt=&#34;github-flow6.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;现在您的更改已在生产环境中得到验证，是时候将代码合并到 &lt;code&gt;master&lt;/code&gt;  分支中了。合并后，拉取请求会保留代码历史更改的记录。因为它们是可搜索的，所以它们使任何人都能及时返回，以了解做出决定的原因和方式。&lt;/p&gt;
&lt;h3 id=&#34;最后&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#最后&#34;&gt;#&lt;/a&gt; 最后&lt;/h3&gt;
&lt;p&gt;期望与你一起遇见更好的自己&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/images/qrcode.jpg&#34; alt=&#34;期望与你一起遇见更好的自己&#34;&gt;&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://fangjiaxiaobai.github.io/2021/07/18/git%E7%B3%BB%E5%88%97/14-git%E5%85%B6%E4%BB%96%E5%91%BD%E4%BB%A4/</guid>
            <title>其他命令</title>
            <link>https://fangjiaxiaobai.github.io/2021/07/18/git%E7%B3%BB%E5%88%97/14-git%E5%85%B6%E4%BB%96%E5%91%BD%E4%BB%A4/</link>
            <category>git</category>
            <pubDate>Sun, 18 Jul 2021 14:49:55 +0800</pubDate>
            <description><![CDATA[ &lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;56&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;usage: git [--version] [--help] [-C &amp;lt;path&amp;gt;] [-c name=value]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;           [--exec-path[=&amp;lt;path&amp;gt;]] [--html-path] [--man-path] [--info-path]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;           [-p | --paginate | --no-pager] [--no-replace-objects] [--bare]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;           [--git-dir=&amp;lt;path&amp;gt;] [--work-tree=&amp;lt;path&amp;gt;] [--namespace=&amp;lt;name&amp;gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;           &amp;lt;command&amp;gt; [&amp;lt;args&amp;gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;available git commands in &amp;#x27;/usr/local/git/libexec/git-core&amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  add                       diff-index                merge-octopus             reset&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  add--interactive          diff-tree                 merge-one-file            rev-list&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  am                        difftool                  merge-ours                rev-parse&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  annotate                  difftool--helper          merge-recursive           revert&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  apply                     fast-export               merge-resolve             rm&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  archimport                fast-import               merge-subtree             send-email&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  archive                   fetch                     merge-tree                send-pack&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  bisect                    fetch-pack                mergetool                 sh-i18n--envsubst&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  bisect--helper            filter-branch             mktag                     shell&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  blame                     fmt-merge-msg             mktree                    shortlog&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  branch                    for-each-ref              mv                        show&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  bundle                    format-patch              name-rev                  show-branch&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  cat-file                  fsck                      notes                     show-index&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  check-attr                fsck-objects              p4                        show-ref&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  check-ignore              gc                        pack-objects              stage&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  check-mailmap             get-tar-commit-id         pack-redundant            stash&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  check-ref-format          grep                      pack-refs                 status&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  checkout                  gui                       patch-id                  stripspace&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  checkout-index            gui--askpass              prune                     submodule&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  cherry                    hash-object               prune-packed              submodule--helper&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  cherry-pick               help                      pull                      subtree&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  citool                    http-backend              push                      svn&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  clean                     http-fetch                quiltimport               symbolic-ref&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  clone                     http-push                 read-tree                 tag&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  column                    imap-send                 rebase                    unpack-file&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  commit                    index-pack                rebase--helper            unpack-objects&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  commit-tree               init                      receive-pack              update-index&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  config                    init-db                   reflog                    update-ref&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  count-objects             instaweb                  remote                    update-server-info&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  credential                interpret-trailers        remote-ext                upload-archive&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  credential-cache          log                       remote-fd                 upload-pack&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  credential-cache--daemon  ls-files                  remote-ftp                var&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  credential-store          ls-remote                 remote-ftps               verify-commit&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  cvsexportcommit           ls-tree                   remote-http               verify-pack&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  cvsimport                 mailinfo                  remote-https              verify-tag&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  cvsserver                 mailsplit                 remote-testsvn            web--browse&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  daemon                    merge                     repack                    whatchanged&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  describe                  merge-base                replace                   worktree&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  diff                      merge-file                request-pull              write-tree&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  diff-files                merge-index               rerere&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;git commands available from elsewhere on your $PATH&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  credential-osxkeychain&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#x27;git help -a&amp;#x27; and &amp;#x27;git help -g&amp;#x27; list available subcommands and some&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;concept guides. See &amp;#x27;git help &amp;lt;command&amp;gt;&amp;#x27; or &amp;#x27;git help &amp;lt;concept&amp;gt;&amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;to read about a specific subcommand or concept.&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;除去上篇文章中介绍的命令，这些命令就相对高端了～，我们还是挑一些可以用得到来分享。&lt;/p&gt;
&lt;h3 id=&#34;命令解释&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#命令解释&#34;&gt;#&lt;/a&gt; 命令解释&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;git hash-object&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;最后&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#最后&#34;&gt;#&lt;/a&gt; 最后&lt;/h3&gt;
&lt;p&gt;期望与你一起遇见更好的自己&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/images/qrcode.jpg&#34; alt=&#34;期望与你一起遇见更好的自己&#34;&gt;&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://fangjiaxiaobai.github.io/2021/07/18/git%E7%B3%BB%E5%88%97/git%E5%91%BD%E4%BB%A4%E8%AF%A6%E8%A7%A3/git_ls-files/</guid>
            <title>git命令详解之 git ls-files</title>
            <link>https://fangjiaxiaobai.github.io/2021/07/18/git%E7%B3%BB%E5%88%97/git%E5%91%BD%E4%BB%A4%E8%AF%A6%E8%A7%A3/git_ls-files/</link>
            <category>git</category>
            <pubDate>Sun, 18 Jul 2021 14:49:55 +0800</pubDate>
            <description><![CDATA[ &lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;usage: git ls-files [&amp;lt;options&amp;gt;] [&amp;lt;file&amp;gt;...]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    -z                    paths are separated with NUL character&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    -t                    identify the file status with tags&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    -v                    use lowercase letters for &amp;#x27;assume unchanged&amp;#x27; files&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    -c, --cached          show cached files in the output (default)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    -d, --deleted         show deleted files in the output&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    -m, --modified        show modified files in the output&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    -o, --others          show other files in the output&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    -i, --ignored         show ignored files in the output&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    -s, --stage           show staged contents&amp;#x27; object name in the output&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    -k, --killed          show files on the filesystem that need to be removed&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    --directory           show &amp;#x27;other&amp;#x27; directories&amp;#x27; names only&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    --eol                 show line endings of files&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    --empty-directory     don&amp;#x27;t show empty directories&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    -u, --unmerged        show unmerged files in the output&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    --resolve-undo        show resolve-undo information&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    -x, --exclude &amp;lt;pattern&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                          skip files matching pattern&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    -X, --exclude-from &amp;lt;file&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                          exclude patterns are read from &amp;lt;file&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    --exclude-per-directory &amp;lt;file&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                          read additional per-directory exclude patterns in &amp;lt;file&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    --exclude-standard    add the standard git exclusions&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    --full-name           make the output relative to the project top directory&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    --recurse-submodules  recurse through submodules&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    --error-unmatch       if any &amp;lt;file&amp;gt; is not in the index, treat this as an error&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    --with-tree &amp;lt;tree-ish&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                          pretend that paths removed since &amp;lt;tree-ish&amp;gt; are still present&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    --abbrev[=&amp;lt;n&amp;gt;]        use &amp;lt;n&amp;gt; digits to display SHA-1s&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    --debug               show debugging data&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;最后&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#最后&#34;&gt;#&lt;/a&gt; 最后&lt;/h3&gt;
&lt;p&gt;期望与你一起遇见更好的自己&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/images/qrcode.jpg&#34; alt=&#34;期望与你一起遇见更好的自己&#34;&gt;&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://fangjiaxiaobai.github.io/2021/07/18/git%E7%B3%BB%E5%88%97/git%E5%91%BD%E4%BB%A4%E8%AF%A6%E8%A7%A3/git_update-index/</guid>
            <title>git命令详解之 git update-index</title>
            <link>https://fangjiaxiaobai.github.io/2021/07/18/git%E7%B3%BB%E5%88%97/git%E5%91%BD%E4%BB%A4%E8%AF%A6%E8%A7%A3/git_update-index/</link>
            <category>git</category>
            <pubDate>Sun, 18 Jul 2021 14:49:55 +0800</pubDate>
            <description><![CDATA[ &lt;h3 id=&#34;官方&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#官方&#34;&gt;#&lt;/a&gt; 官方&lt;/h3&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;usage: git update-index [&amp;lt;options&amp;gt;] [--] [&amp;lt;file&amp;gt;...]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    -q                    continue refresh even when index needs update&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    --ignore-submodules   refresh: ignore submodules&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    --add                 do not ignore new files&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    --replace             let files replace directories and vice-versa&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    --remove              notice files missing from worktree&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    --unmerged            refresh even if index contains unmerged entries&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    --refresh             refresh stat information&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    --really-refresh      like --refresh, but ignore assume-unchanged setting&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    --cacheinfo &amp;lt;mode&amp;gt;,&amp;lt;object&amp;gt;,&amp;lt;path&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                          add the specified entry to the index&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    --chmod (+/-)x        override the executable bit of the listed files&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    --assume-unchanged    mark files as &amp;quot;not changing&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    --no-assume-unchanged&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                          clear assumed-unchanged bit&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    --skip-worktree       mark files as &amp;quot;index-only&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    --no-skip-worktree    clear skip-worktree bit&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    --info-only           add to index only; do not add content to object database&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    --force-remove        remove named paths even if present in worktree&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    -z                    with --stdin: input lines are terminated by null bytes&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    --stdin               read list of paths to be updated from standard input&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    --index-info          add entries from standard input to the index&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    --unresolve           repopulate stages #2 and #3 for the listed paths&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    -g, --again           only update entries that differ from HEAD&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    --ignore-missing      ignore files missing from worktree&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    --verbose             report actions to standard output&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    --clear-resolve-undo  (for porcelains) forget saved unresolved conflicts&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    --index-version &amp;lt;n&amp;gt;   write index in this format&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    --split-index         enable or disable split index&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    --untracked-cache     enable/disable untracked cache&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    --test-untracked-cache&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                          test if the filesystem supports untracked cache&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    --force-untracked-cache&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                          enable untracked cache without testing the filesystem&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;最后&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#最后&#34;&gt;#&lt;/a&gt; 最后&lt;/h3&gt;
&lt;p&gt;期望与你一起遇见更好的自己&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/images/qrcode.jpg&#34; alt=&#34;期望与你一起遇见更好的自己&#34;&gt;&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://fangjiaxiaobai.github.io/2021/07/18/git%E7%B3%BB%E5%88%97/git%E5%91%BD%E4%BB%A4%E8%AF%A6%E8%A7%A3/README/</guid>
            <title>git命令详解</title>
            <link>https://fangjiaxiaobai.github.io/2021/07/18/git%E7%B3%BB%E5%88%97/git%E5%91%BD%E4%BB%A4%E8%AF%A6%E8%A7%A3/README/</link>
            <category>git</category>
            <pubDate>Sun, 18 Jul 2021 14:49:55 +0800</pubDate>
            <description><![CDATA[ &lt;h2 id=&#34;&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#&#34;&gt;#&lt;/a&gt; &lt;/h2&gt;
&lt;h3 id=&#34;目录&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#目录&#34;&gt;#&lt;/a&gt; 目录&lt;/h3&gt;
&lt;ul class=&#34;task-list&#34;&gt;
&lt;li class=&#34;task-list-item&#34;&gt;&lt;input type=&#34;checkbox&#34; id=&#34;cbx_0&#34; disabled=&#34;true&#34;&gt;&lt;label for=&#34;cbx_0&#34;&gt; &lt;a href=&#34;./git_update-index.md&#34;&gt;git update-index&lt;/a&gt;&lt;/label&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;小技巧&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#小技巧&#34;&gt;#&lt;/a&gt; 小技巧&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;某个文件需要被管理，但是要忽略其修改的内容。 &lt;a href=&#34;./git_update-index.md&#34;&gt;git update-index&lt;/a&gt;&lt;br&gt;
git update-index --no-skip-worktree 同样可以。&lt;br&gt;
&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9zZWdtZW50ZmF1bHQuY29tL3EvMTAxMDAwMDAwMDQzMDQyNg==&#34;&gt;参考文档&lt;/span&gt;   &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9zZWdtZW50ZmF1bHQuY29tL3EvMTAxMDAwMDAwMDM1ODU4OA==&#34;&gt;参考文档 2&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;最后&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#最后&#34;&gt;#&lt;/a&gt; 最后&lt;/h3&gt;
&lt;p&gt;期望与你一起遇见更好的自己&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/images/qrcode.jpg&#34; alt=&#34;期望与你一起遇见更好的自己&#34;&gt;&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://fangjiaxiaobai.github.io/2021/07/18/git%E7%B3%BB%E5%88%97/03-git%E5%91%BD%E4%BB%A4%E4%B9%8B%E4%BB%8E%E5%88%9B%E5%BB%BA%E4%BB%93%E5%BA%93%E5%BC%80%E5%A7%8B/</guid>
            <title>从创建仓库开始</title>
            <link>https://fangjiaxiaobai.github.io/2021/07/18/git%E7%B3%BB%E5%88%97/03-git%E5%91%BD%E4%BB%A4%E4%B9%8B%E4%BB%8E%E5%88%9B%E5%BB%BA%E4%BB%93%E5%BA%93%E5%BC%80%E5%A7%8B/</link>
            <category>git</category>
            <pubDate>Sun, 18 Jul 2021 14:49:55 +0800</pubDate>
            <description><![CDATA[ &lt;h2 id=&#34;从创建仓库开始&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#从创建仓库开始&#34;&gt;#&lt;/a&gt; 从创建仓库开始&lt;/h2&gt;
&lt;p&gt;这篇文章分享一下我们在使用 git 进行版本管理时候的常用的操作！我们从创建仓库开始～&lt;/p&gt;
&lt;p&gt;获取代码仓库的方式有两种，一种是从零开始初始化一个 git 仓库，另一种是 clone 他人的仓库。&lt;/p&gt;
&lt;p&gt;首先我们创建一个空目录，然后初始化一个仓库。&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;/ cd&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# 创建空目录&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;~ mkdir gitlearn&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;~ cd gitlearn&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# 初始化仓库&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;~ git init .&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;就这样我们创建一个了&lt;b&gt;本地仓库&lt;/b&gt;, 团队合作的时候这样肯定不行的，不行，后面我们后介绍到。&lt;br&gt;
或者 我们还可以克隆一个&lt;b&gt;远程仓库&lt;/b&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;git clone https://gitee.com/fangjiaxiaobai/gitlearn.git&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;我们来看一下新建的仓库目录下都有什么文件。&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;➜  gitlearn git:(master) l&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;total 0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;drwxr-xr-x   3 bjhl  wheel    96B  7 13 18:23 .&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;drwxr-xr-x   3 bjhl  wheel    96B  7 13 18:23 ..&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;drwxr-xr-x  10 bjhl  wheel   320B  7 13 18:25 .git&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;➜  gitlearn git:(master) cd .git&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;➜  .git git:(master) l&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;total 24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;drwxr-xr-x  10 bjhl  wheel   320B  7 13 18:30 .&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;drwxr-xr-x   3 bjhl  wheel    96B  7 13 18:23 ..&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;-rw-r--r--   1 bjhl  wheel    16B  7 13 20:38 COMMIT_EDITMSG # 存储最新一次的commit信息&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;-rw-r--r--   1 bjhl  wheel    23B  7 13 18:23 HEAD ## 当前被检出的分支&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;drwxr-xr-x   2 bjhl  wheel    64B  7 13 18:23 branches # 所有分支&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;-rw-r--r--   1 bjhl  wheel   315B  7 13 18:23 config # 包含项目特有的配置选项&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;-rw-r--r--   1 bjhl  wheel    73B  7 13 18:23 description #Git web页面程序使用&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;drwxr-xr-x  12 bjhl  wheel   384B  7 13 18:23 hooks # 包含客户端或者服务器端的钩子脚本&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;drwxr-xr-x   3 bjhl  wheel    96B  7 13 18:23 info # 包含一个全局性排除文件，用以防止那些不希望被纳入版本管理的文件，.gitignore文件中记录的&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;-rw-r--r--   1 bjhl  wheel   126B  7 13 20:39 index ## 保存暂存区信息(进行stash操作之后出现的)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;drwxr-xr-x   4 bjhl  wheel   128B  7 13 18:23 objects ## 存储所有数据的内容&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;drwxr-xr-x   4 bjhl  wheel   128B  7 13 18:23 refs ## 存储指向数据（分支，远程仓库和标签等）的提交对象的指针。&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;其中有四个条目非常重要，我用  &lt;code&gt;##&lt;/code&gt;  进行了标注。 分别是： &lt;code&gt;HEAD&lt;/code&gt;  文件， &lt;code&gt;index&lt;/code&gt;  文件， &lt;code&gt;objects&lt;/code&gt;  目录， &lt;code&gt;refs&lt;/code&gt;  目录。&lt;/p&gt;
&lt;p&gt;&lt;b&gt;如果你想只是想了解 git 的话，那么下面的内容就可以忽略了。&lt;/b&gt;&lt;/p&gt;
&lt;p&gt;我们来搞一点有趣的东西。&lt;/p&gt;
&lt;h3 id=&#34;objects目录下存放的是什么东西-git对象&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#objects目录下存放的是什么东西-git对象&#34;&gt;#&lt;/a&gt;  &lt;code&gt;objects/&lt;/code&gt;  目录下存放的是什么东西？–  Git 对象&lt;/h3&gt;
&lt;p&gt;前面说过， &lt;code&gt;git&lt;/code&gt;  是一个内容寻址文件系统。==&amp;gt;  &lt;code&gt;git&lt;/code&gt;  是一个简单的键值对数据库。&lt;/p&gt;
&lt;p&gt;即，你可以向 &lt;code&gt;git&lt;/code&gt;  仓库中插入任务类型的内容，它会返回一个唯一的键。通过该键可以在任意时刻再次取回该内容。&lt;/p&gt;
&lt;p&gt;上面说过， &lt;code&gt;objects&lt;/code&gt;  目录下存放的是所有数据的内容。在 &lt;code&gt;git&lt;/code&gt;  中，数据是什么呢？是我们工作目录的所有文件的快照！&lt;/p&gt;
&lt;p&gt;这里我们使用两个还没有学习的命令。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;git add .&lt;/code&gt; ： 将目录中的文件纳入版本库进行管理起来。此时的状态是： &lt;code&gt;已暂存(新建)&lt;/code&gt; 。暂存区的目录树会被更新，同时工作区修改 (新增的) 文件内容被写入到对象库中的一个新文件中，而该对象的 id 会被记录在暂存区的文件索引中。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;git commit -m &#39;xxx&#39;&lt;/code&gt; ：将目录中的文件提交到本地版本库。此时的状态是： &lt;code&gt;已提交&lt;/code&gt; 。这时，暂存区的目录树写到版本库中，对应的分支会进行相应的更新。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;那下面演示一下： &lt;code&gt;objects&lt;/code&gt;  目录下存储的文件。&lt;/p&gt;
&lt;p&gt;首先，我们查看下 &lt;code&gt;object&lt;/code&gt;  目录下的所有文件&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;63&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;64&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;65&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;#&lt;/span&gt;&lt;span class=&#34;bash&#34;&gt; 查看objects下的文件&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;~ l .git/objects &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;total 0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;drwxr-xr-x   4 bjhl  wheel   128B  7 14 11:30 .&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;drwxr-xr-x  10 bjhl  wheel   320B  7 14 11:30 ..&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;drwxr-xr-x   2 bjhl  wheel    64B  7 14 11:30 info&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;drwxr-xr-x   2 bjhl  wheel    64B  7 14 11:30 pack&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;#&lt;/span&gt;&lt;span class=&#34;bash&#34;&gt; 创建一个文件： test-objects-files-01.txt&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;➜  gitlearn git:(master) sudo touch test-objects-files-01.txt&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;➜  gitlearn git:(master) ✗ l .git/objects&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;total 0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;drwxr-xr-x   4 root  wheel   128B  7 14 15:10 .&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;drwxr-xr-x  10 root  wheel   320B  7 14 15:10 ..&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;drwxr-xr-x   2 root  wheel    64B  7 14 15:10 info&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;drwxr-xr-x   2 root  wheel    64B  7 14 15:10 pack&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;#&lt;/span&gt;&lt;span class=&#34;bash&#34;&gt; 修改文件&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;➜  gitlearn git:(master) ✗ sudo vim test-objects-files-01.txt&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;➜  gitlearn git:(master) ✗ l .git/objects&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;total 0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;drwxr-xr-x   4 root  wheel   128B  7 14 15:10 .&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;drwxr-xr-x  10 root  wheel   320B  7 14 15:10 ..&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;drwxr-xr-x   2 root  wheel    64B  7 14 15:10 info&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;drwxr-xr-x   2 root  wheel    64B  7 14 15:10 pack&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;➜  gitlearn git:(master) ✗ git add .&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;➜  gitlearn git:(master) ✗ l .git/objects&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;total 0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;drwxrwxrwx   5 root  wheel   160B  7 14 15:34 .&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;drwxrwxrwx  11 root  wheel   352B  7 14 15:34 ..&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;drwxr-xr-x   3 bjhl  wheel    96B  7 14 15:34 37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;drwxrwxrwx   2 root  wheel    64B  7 14 15:10 info&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;drwxrwxrwx   2 root  wheel    64B  7 14 15:10 pack&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;➜  gitlearn git:(master) ✗ sh /opt/util/dirfile.sh ./.git/objects&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;./.git/objects/37/17929ecb3efabae427dbe3725654b3de1a114b # blob类型(文件)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;#&lt;/span&gt;&lt;span class=&#34;bash&#34;&gt; 使用git cat-file来看下一下文件的内容&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;➜  gitlearn git:(master) ✗ git cat-file -p 3717929ecb3efabae427dbe3725654b3de1a114b&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;test - objects - files - 第一行&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;#&lt;/span&gt;&lt;span class=&#34;bash&#34;&gt; 我们进行commit&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;➜  gitlearn git:(master) ✗ git commit -m &amp;quot;test-object-files add&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[master (root-commit) 1883fd5] test-object-files add&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; Committer: bjhl &amp;lt;bjhl@bjhldeMacBook-Pro.local&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;#&lt;/span&gt;&lt;span class=&#34;bash&#34;&gt; ..省略部分提示&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; 1 file changed, 1 insertion(+)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; create mode 100755 test-objects-files-01.txt&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;#&lt;/span&gt;&lt;span class=&#34;bash&#34;&gt; 来看一下objects目录下的文件。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;➜  gitlearn git:(master) sh /opt/util/dirfile.sh ./.git/objects&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;./.git/objects/18/83fd5aefeb430cb25150e531e92e38f0176f0d&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;./.git/objects/37/17929ecb3efabae427dbe3725654b3de1a114b&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;./.git/objects/54/500d5d74f828d1a3193fb685084b87aaf419c7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;➜  gitlearn git:(master) git cat-file -p 54500d5d74f828d1a3193fb685084b87aaf419c7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;#&lt;/span&gt;&lt;span class=&#34;bash&#34;&gt; 表示存储的事blob格式的文件，test-objects-files-01.txt&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;100755 blob 3717929ecb3efabae427dbe3725654b3de1a114b	test-objects-files-01.txt&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;➜  gitlearn git:(master) git cat-file -p 1883fd5aefeb430cb25150e531e92e38f0176f0d&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;#&lt;/span&gt;&lt;span class=&#34;bash&#34;&gt; 存储的是 树对象(后面有介绍)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;tree 54500d5d74f828d1a3193fb685084b87aaf419c7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;author bjhl &amp;lt;bjhl@bjhldeMacBook-Pro.local&amp;gt; 1594712728 +0800&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;committer bjhl &amp;lt;bjhl@bjhldeMacBook-Pro.local&amp;gt; 1594712728 +0800&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;test-object-files add&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;git cat-file&lt;br&gt;
 这个命令可以实现从 &lt;code&gt;git&lt;/code&gt;  仓库中取回数据。-p 参数可以自动判断内容的类型。还有一个写入的命令。 &lt;code&gt;git hash-object&lt;/code&gt;  . 下面简单演示一下。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;➜  gitlearn git:(master) echo &amp;#x27;test hash-object function&amp;#x27; | git hash-object -w --stdin&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11a5f11388c345846bbaa060a98d8e93a1114e99&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;➜  gitlearn git:(master) git cat-file -p 11a5f11388c345846bbaa060a98d8e93a1114e99&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;test hash-object function&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;➜  gitlearn git:(master) sh /opt/util/dirfile.sh ./.git/objects&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;./.git/objects/11/a5f11388c345846bbaa060a98d8e93a1114e99&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;./.git/objects/18/83fd5aefeb430cb25150e531e92e38f0176f0d # commit-id &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;./.git/objects/37/17929ecb3efabae427dbe3725654b3de1a114b # 文件&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;./.git/objects/54/500d5d74f828d1a3193fb685084b87aaf419c7 # 树对象&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;从上面的例子我们可以看到， &lt;code&gt;git&lt;/code&gt;  中含有， &lt;code&gt;blob&lt;/code&gt;   &lt;code&gt;commit-id&lt;/code&gt; ， &lt;code&gt;tree&lt;/code&gt; ，这三种对象。&lt;br&gt;
这其实就是  &lt;code&gt;Git&lt;/code&gt;  的对象：数据对象，提交对象，树对象。&lt;/p&gt;
&lt;p&gt;接下来我们来看一个 &lt;code&gt;git&lt;/code&gt;  的对象 - 树对象&lt;/p&gt;
&lt;h3 id=&#34;树对象&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#树对象&#34;&gt;#&lt;/a&gt; 树对象&lt;/h3&gt;
&lt;p&gt;树对象能够解决文件名保存的问题，也允许多个文件组织到一起。所有内容均以树对象和数据独享的形式存储，其中树对象对应了 UNIX 中的目录项，数据对象则大致上对应了 &lt;code&gt;inodes&lt;/code&gt;  或者文件内容。&lt;/p&gt;
&lt;p&gt;一个树对象包含了一条或多条树对象记录，每条记录含有一个指向数据对象或者子树对象的 &lt;code&gt;SHA-1&lt;/code&gt;  指针，以及相应的模式，类型，文件名信息。&lt;/p&gt;
&lt;p&gt;我们再来看一下，刚才的三个 &lt;code&gt;objects&lt;/code&gt;  下的校验和。&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;➜  gitlearn git:(master) git cat-file -p 1883fd5aefeb430cb25150e531e92e38f0176f0d&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;tree 54500d5d74f828d1a3193fb685084b87aaf419c7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;test-object-files add&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;➜  gitlearn git:(master) git cat-file -p 54500d5d74f828d1a3193fb685084b87aaf419c7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;100755 blob 3717929ecb3efabae427dbe3725654b3de1a114b	test-objects-files-01.txt&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;➜  gitlearn git:(master) git cat-file -p 3717929ecb3efabae427dbe3725654b3de1a114b&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;test - objects - files - 第一行&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;我根据 数对象  &lt;code&gt;1883fd&lt;/code&gt;  找到了  &lt;code&gt;54500d&lt;/code&gt;  (表示对应的 txt 文件)，然后可以根据 txt 文件，看到这次提交的内容 &lt;code&gt;371792&lt;/code&gt; . 如下图。&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/images/git%E7%B3%BB%E5%88%97/images/git%E5%B7%A5%E4%BD%9C%E7%9B%AE%E5%BD%9501.png&#34; alt=&#34;git工作目录01.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;这时，我们在尝试从修改一下这个文件，进行提交。&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;➜  gitlearn git:(master) sudo vim test-objects-files-01.txt&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Password:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;➜  gitlearn git:(master) ✗ git add .&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;➜  gitlearn git:(master) ✗ sh /opt/util/dirfile.sh ./.git/objects&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;./.git/objects/18/83fd5aefeb430cb25150e531e92e38f0176f0d&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;./.git/objects/37/17929ecb3efabae427dbe3725654b3de1a114b # 文件&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;./.git/objects/54/500d5d74f828d1a3193fb685084b87aaf419c7 # 树对象&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;./.git/objects/11/a5f11388c345846bbaa060a98d8e93a1114e99 # test hash-object function (本次实验可以忽略)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;## 下面两行是新增的，本次操作生成的。&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;./.git/objects/5b/22ea83f2e8555371b818a7e441d4156795af04 #内容: test - objects - files - 第一行 \n test - objects - files - 第二行&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;## 提交到版本库中。&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;➜  gitlearn git:(master) ✗ git commit -m &amp;quot;test-object-files updated&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[master 200e059] test-object-files updated&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; 1 file changed, 1 insertion(+)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;➜  gitlearn git:(master) sh /opt/util/dirfile.sh ./.git/objects&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;./.git/objects/18/83fd5aefeb430cb25150e531e92e38f0176f0d # commit - id&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;./.git/objects/37/17929ecb3efabae427dbe3725654b3de1a114b # 文件&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;./.git/objects/54/500d5d74f828d1a3193fb685084b87aaf419c7 # 树对象&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;./.git/objects/11/a5f11388c345846bbaa060a98d8e93a1114e99 # test hash-object function(本次实现忽略) &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;./.git/objects/5b/22ea83f2e8555371b818a7e441d4156795af04 # 文件&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# 下面两行是新增的，本次操作生成的&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;./.git/objects/20/0e059f0c0b178378aecd6736f384a74d28df94 # commit-id&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;./.git/objects/20/db6c4af7677b7509d2b323b503733405e4987e # 树对象&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;我们的操作如下：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;在 git 仓库中创建了一个文件，并且将它纳入版本管理，提交到了版本库中&lt;/li&gt;
&lt;li&gt;修改了这个问题，并且再次提交到了版本库中。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;经过这个两个步骤之后，出现了如下图的  &lt;code&gt;git&lt;/code&gt;  树对象。&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/images/git%E7%B3%BB%E5%88%97/images/git%E5%B7%A5%E4%BD%9C%E7%9B%AE%E5%BD%95%E4%BB%8B%E7%BB%8D02.png&#34; alt=&#34;git工作目录介绍02.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;这时，我们使用  &lt;code&gt;git log&lt;/code&gt;  命令来查看日志。可以发现。&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;commit 200e059f0c0b178378aecd6736f384a74d28df94 (HEAD -&amp;gt; master)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Author: bjhl &amp;lt;bjhl@bjhldeMacBook-Pro.local&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Date:   Tue Jul 14 16:24:02 2020 +0800&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    test-object-files updated&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;commit 1883fd5aefeb430cb25150e531e92e38f0176f0d&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Author: bjhl &amp;lt;bjhl@bjhldeMacBook-Pro.local&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Date:   Tue Jul 14 15:45:28 2020 +0800&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    test-object-files add&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;为了便于大家理解，咱们继续修改这个文件，加上第三行数据:  &lt;code&gt;test - objects - files - 第三行&lt;/code&gt; ：&lt;/p&gt;
&lt;p&gt;然后执行&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;git add .&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;git commit -m &amp;quot;test-object-files updated 02&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;然后查看 &lt;code&gt;objects&lt;/code&gt;  目录下的文件内容:&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;➜  gitlearn git:(master) sh /opt/util/dirfile.sh ./.git/objects&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;./.git/objects/11/a5f11388c345846bbaa060a98d8e93a1114e99&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;./.git/objects/18/83fd5aefeb430cb25150e531e92e38f0176f0d&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;./.git/objects/20/0e059f0c0b178378aecd6736f384a74d28df94&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;./.git/objects/20/db6c4af7677b7509d2b323b503733405e4987e&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;./.git/objects/37/17929ecb3efabae427dbe3725654b3de1a114b&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;./.git/objects/54/500d5d74f828d1a3193fb685084b87aaf419c7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;./.git/objects/5b/22ea83f2e8555371b818a7e441d4156795af04&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;#&lt;/span&gt;&lt;span class=&#34;bash&#34;&gt; 以下三行是本次commit产生的。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;./.git/objects/a6/2a79d99b37bc5c44ca083cd40f9e4c00aae0bd # commit-id，提交对象&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;./.git/objects/ba/f6b0843a522f8e77f326d2615cb37ed290d06e # 文件，数据对象&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;./.git/objects/c4/3622f1e8e728f88eb11adfee1ea08d41c792a0 # 树对象&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;➜  gitlearn git:(master) git cat-file -p a62a79d99b37bc5c44ca083cd40f9e4c00aae0bd&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;tree c43622f1e8e728f88eb11adfee1ea08d41c792a0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;parent 200e059f0c0b178378aecd6736f384a74d28df94&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;test-object-files updated 02&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;➜  gitlearn git:(master) git cat-file -p c43622f1e8e728f88eb11adfee1ea08d41c792a0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;100755 blob baf6b0843a522f8e77f326d2615cb37ed290d06e	test-objects-files-01.txt&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;➜  gitlearn git:(master) git cat-file -p baf6b0843a522f8e77f326d2615cb37ed290d06e&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;test - objects - files - 第一行&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;test - objects - files - 第二行&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;test - objects - files - 第三行&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;做完上面的操作之后，我们来看一下 &lt;code&gt;objects&lt;/code&gt;  目录下的树结构图。&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/images/git%E7%B3%BB%E5%88%97/images/git%E5%B7%A5%E4%BD%9C%E7%9B%AE%E5%BD%95%E4%BB%8B%E7%BB%8D03.png&#34; alt=&#34;git工作目录介绍03.png&#34;&gt;&lt;/p&gt;
&lt;h4 id=&#34;objects目录总结&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#objects目录总结&#34;&gt;#&lt;/a&gt; objects 目录总结&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;作用： 存放所有数据的内容。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;git&lt;/code&gt;  是一个内容存执文件管理系统。也就是一个 &lt;code&gt;KV&lt;/code&gt;  数据库，对应的 &lt;code&gt;key-value&lt;/code&gt;  放到了 &lt;code&gt;objects&lt;/code&gt;  目录下，存储形式是一个 &lt;code&gt;40&lt;/code&gt;  位十六机制的校验和。 &lt;code&gt;key&lt;/code&gt;  是文件名， &lt;code&gt;value&lt;/code&gt;  是文件内容。&lt;/li&gt;
&lt;li&gt;学习了两个底层命令：  &lt;code&gt;git cat-file&lt;/code&gt;  和  &lt;code&gt;git hash-object&lt;/code&gt; . 更多底层命令可以看下这篇文章。// TODO&lt;/li&gt;
&lt;li&gt;&lt;b&gt;演示一个文件的三次更新时变化过程，以及各个版本之间的迭代过程，那么如果是多个文件呢？这里大家可以去试一下，就会更清晰的理解树对象了。（这里演示一个文件并不能完全的解释清树对象这个概念）&lt;/b&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;git引用-git工作目录下的refs目录&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#git引用-git工作目录下的refs目录&#34;&gt;#&lt;/a&gt; Git 引用， git 工作目录下的 refs 目录！&lt;/h2&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;➜  gitlearn git:(master) l ./.git/refs/&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;drwxrwxrwx   3 root  wheel    96B  7 14 17:02 heads&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;drwxrwxrwx   2 root  wheel    64B  7 14 15:10 tags&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;heads 目录，存储各个分支的 HEAD 指针指向的版本。&lt;/li&gt;
&lt;li&gt;tags 目录，git tag 命令产生的结果。&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;heads目录&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#heads目录&#34;&gt;#&lt;/a&gt; heads 目录&lt;/h4&gt;
&lt;p&gt;我们还是根据 objects 部门的操作来演示这部分的内容。&lt;br&gt;
如下图。&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/images/git%E7%B3%BB%E5%88%97/images/git%E5%B7%A5%E4%BD%9C%E7%9B%AE%E5%BD%95%E4%BB%8B%E7%BB%8D04-object%E7%9B%AE%E5%BD%95%E6%80%BB%E7%BB%93.png&#34; alt=&#34;git工作目录介绍04-object目录总结.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;通过查看我们目前是在  &lt;code&gt;a62a79d99b37bc5c44ca083cd40f9e4c00aae0bd&lt;/code&gt;  这个版本上。&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;➜  gitlearn git:(master) cat ./.git/refs/heads/master&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;a62a79d99b37bc5c44ca083cd40f9e4c00aae0bd&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;我们可以通过  &lt;code&gt;git update-ref&lt;/code&gt;  命令来实现切换版本 (回退到制定的版本上)&lt;/p&gt;
&lt;figure class=&#34;highlight sh&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;54&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 我们先使用 git log 命令来查看一下提交记录&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;commit a62a79d99b37bc5c44ca083cd40f9e4c00aae0bd (HEAD -&amp;gt; master)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Author: bjhl &amp;lt;bjhl@bjhldeMacBook-Pro.local&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Date:   Tue Jul 14 17:02:46 2020 +0800&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    test-object-files updated 02&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;commit 200e059f0c0b178378aecd6736f384a74d28df94&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Author: bjhl &amp;lt;bjhl@bjhldeMacBook-Pro.local&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Date:   Tue Jul 14 16:24:02 2020 +0800&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    test-object-files updated&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;commit 1883fd5aefeb430cb25150e531e92e38f0176f0d&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Author: bjhl &amp;lt;bjhl@bjhldeMacBook-Pro.local&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Date:   Tue Jul 14 15:45:28 2020 +0800&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    test-object-files add&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 我们要回退到第二个版本上。使用 git update-ref,更新引用。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;➜ .git git:(master) git update-ref refs/heads/master 200e059f0c0b178378aecd6736f384a74d28df94&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 再去查看git的Head目录下的版本号&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;➜  gitlearn git:(master) ✗ cat ./.git/refs/heads/master&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;200e059f0c0b178378aecd6736f384a74d28df94&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 这个时候再使用 git log 去看日志：&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;commit 200e059f0c0b178378aecd6736f384a74d28df94 (HEAD -&amp;gt; master)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Author: bjhl &amp;lt;bjhl@bjhldeMacBook-Pro.local&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Date:   Tue Jul 14 16:24:02 2020 +0800&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    test-object-files updated&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;commit 1883fd5aefeb430cb25150e531e92e38f0176f0d&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Author: bjhl &amp;lt;bjhl@bjhldeMacBook-Pro.local&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Date:   Tue Jul 14 15:45:28 2020 +0800&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    test-object-files add&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 再去看我们的文件: 是不会更新工作区内容的。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;➜  gitlearn git:(master) ✗ cat test-objects-files-01.txt&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;test&lt;/span&gt; - objects - files - 第一行&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;test&lt;/span&gt; - objects - files - 第二行&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;test&lt;/span&gt; - objects - files - 第三行&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 我们还可以使用 git update-ref 来创建新的分支。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;➜  gitlearn git:(master) ✗ &lt;span class=&#34;built_in&#34;&gt;cd&lt;/span&gt; .git&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;➜  .git git:(master) git update-ref refs/heads/&lt;span class=&#34;built_in&#34;&gt;test&lt;/span&gt; 200e059f0c0b178378aecd6736f384a74d28df94&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 查看test分支的日志&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;➜  .git git:(master) git &lt;span class=&#34;built_in&#34;&gt;log&lt;/span&gt; --pretty=oneline &lt;span class=&#34;built_in&#34;&gt;test&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;200e059f0c0b178378aecd6736f384a74d28df94 (HEAD -&amp;gt; master, &lt;span class=&#34;built_in&#34;&gt;test&lt;/span&gt;) test-object-files updated&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1883fd5aefeb430cb25150e531e92e38f0176f0d test-object-files add&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 这时我们去查看我们所处的分支, 发现我们仍然处在master上，并没有进行切换。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;➜  .git git:(master) git branch&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;* master&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;built_in&#34;&gt;test&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;上面的演示中，我们发现了，虽然只是修改的记录的文件，但是并没有对我们工作区的文件进行更新。怎么解决呢？&lt;/p&gt;
&lt;h3 id=&#34;head文件&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#head文件&#34;&gt;#&lt;/a&gt; HEAD 文件&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;HEAD&lt;/code&gt;  文件通常是一个符号引用，指向目前所在的分支。所谓符号引用，表示它是一个指向其他引用的指针。&lt;/p&gt;
&lt;p&gt;我们查看一下  &lt;code&gt;HEAD&lt;/code&gt;  文件中的内容&lt;/p&gt;
&lt;figure class=&#34;highlight sh&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;➜  gitlearn git:(master) ✗ cat .git/HEAD&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;ref: refs/heads/master&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;这里呢，有一个命令可以帮助我们实现修改  &lt;code&gt;HEAD&lt;/code&gt;  文件的内容&lt;/p&gt;
&lt;p&gt;&lt;b&gt;git symbolic-ref&lt;/b&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;#&lt;/span&gt;&lt;span class=&#34;bash&#34;&gt; 查看当前所在的分支&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;➜  gitlearn git:(master) ✗ git symbolic-ref HEAD&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;refs/heads/master&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;#&lt;/span&gt;&lt;span class=&#34;bash&#34;&gt; 设置当前所在的分支&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;➜  .git git:(master) git symbolic-ref HEAD refs/heads/test&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;#&lt;/span&gt;&lt;span class=&#34;bash&#34;&gt; 已经可以看到我们已经把分支切换到了&lt;span class=&#34;built_in&#34;&gt;test&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;➜  .git git:(test)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;#&lt;/span&gt;&lt;span class=&#34;bash&#34;&gt; 我们去看 工作区里的文件，发现并没有变化！&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;➜  .git git:(test) cat ../test-objects-files-01.txt&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;test - objects - files - 第一行&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;test - objects - files - 第二行&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;test - objects - files - 第三行&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;文件的内容的，修改就必须使用  &lt;code&gt;git checkout&lt;/code&gt;  /  &lt;code&gt;git reset&lt;/code&gt;  了。&lt;/p&gt;
&lt;p&gt;我们回来接着看 refs 目录的另一个目录：tags.&lt;/p&gt;
&lt;p&gt;tags 是 git tag 命令的产物。&lt;/p&gt;
&lt;p&gt;然后，在 git 中，tags 其实是标签对象，包含了一个标签创建者信息，一个日期，一段注释信息，以及一个指针。标签对象通常指向一个提交对象，而不是一个树对象。永远都会指向同一个提交对象。&lt;/p&gt;
&lt;p&gt;标签分为 附注标签 和 轻量标签。&lt;/p&gt;
&lt;p&gt;使用命令&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;# 常见一个轻量标签 -&amp;gt; 一个固定的引用&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;➜  .git git:(test) git update-ref refs/tags/v1.0 1883fd5aefeb430cb25150e531e92e38f0176f0d&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;创建一个附注标签的时候，git 会创建一个标签对象，并记录一个引用来指向该标签对象，而不是直接指向要提交的对象。&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;➜  .git git:(test) git tag -a v1.1 1883fd5aefeb430cb25150e531e92e38f0176f0d -m &amp;#x27;附注标签&amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;#&lt;/span&gt;&lt;span class=&#34;bash&#34;&gt; 查看标签对象。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;➜  .git git:(test) cat refs/tags/v1.1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3f224b87d02aa196b0b8331aa28389a172e3f723&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;#&lt;/span&gt;&lt;span class=&#34;bash&#34;&gt; 查看附注标签详细的内容&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;➜  .git git:(test) git cat-file -p 3f224b87d02aa196b0b8331aa28389a172e3f723&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;object 1883fd5aefeb430cb25150e531e92e38f0176f0d&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;type commit&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;tag v1.1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;tagger bjhl &amp;lt;bjhl@bjhldeMacBook-Pro.local&amp;gt; 1594727545 +0800&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;附注标签&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&#34;远程引用&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#远程引用&#34;&gt;#&lt;/a&gt; 远程引用&lt;/h4&gt;
&lt;p&gt;在 git 的引用中，还有一个远程引用。&lt;/p&gt;
&lt;p&gt;这个目录会在我们配置远程仓库的时候出现，我们一起配置一下远程仓库&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;#&lt;/span&gt;&lt;span class=&#34;bash&#34;&gt; 配置远程仓库&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;➜  gitlearn git:(master) git remote add origin https://gitee.com/fangjiaxiaobai/gitlearn.git&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;#&lt;/span&gt;&lt;span class=&#34;bash&#34;&gt; push 到远程分支。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;➜  gitlearn git:(master) git push origin master&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Counting objects: 6, done.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Delta compression using up to 8 threads.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Compressing objects: 100% (5/5), done.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Writing objects: 100% (6/6), 548 bytes | 548.00 KiB/s, done.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Total 6 (delta 0), reused 0 (delta 0)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;remote: Powered by GITEE.COM [GNK-5.0]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;To https://gitee.com/fangjiaxiaobai/gitlearn.git&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; * [new branch]      master -&amp;gt; master&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;#&lt;/span&gt;&lt;span class=&#34;bash&#34;&gt; 查看 .git目录下，出现了remotes&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; ➜  gitlearn git:(master) l ./.git/refs/&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;total 8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;drwxrwxrwx   6 root  wheel   192B  7 14 19:58 .&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;drwxrwxrwx  16 root  wheel   512B  7 14 19:58 ..&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;drwxrwxrwx   4 root  wheel   128B  7 14 19:56 heads&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;drwxr-xr-x   3 bjhl  wheel    96B  7 14 19:58 remotes&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;-rw-r--r--   1 bjhl  wheel    41B  7 14 19:56 stash # 进行git stash命令后出现&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;drwxrwxrwx   4 root  wheel   128B  7 14 19:52 tags&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;#&lt;/span&gt;&lt;span class=&#34;bash&#34;&gt; 查看对应remote配置文件&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;➜  gitlearn git:(master) cat .git/refs/remotes/origin/master&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;200e059f0c0b178378aecd6736f384a74d28df94&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;这个校验码表示 ，远程版本库中和本地的版本库中最新一次交互的 commit id 。&lt;/p&gt;
&lt;p&gt;远程引用和分支之间最主要的区别，就是远程引用是只读的。Git 永远不会讲 HEAD 引用指向该远程引用，因此，不可能通过 commit 来更新远程引用。&lt;/p&gt;
&lt;h3 id=&#34;index文件&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#index文件&#34;&gt;#&lt;/a&gt; Index 文件&lt;/h3&gt;
&lt;p&gt;这个文件是  &lt;code&gt;git stage&lt;/code&gt;  的文件信息存放地，根据该文件中的内容，可以查看当前哪些文件，或者哪些文件发生了变化，而在 &lt;code&gt;commit&lt;/code&gt;  之后，则会把相应的信息存入  &lt;code&gt;.git/objects&lt;/code&gt;  文件夹下。通过  &lt;code&gt;git ls-files -s&lt;/code&gt;  可以查 看  &lt;code&gt;index&lt;/code&gt;  文件中的  &lt;code&gt;stage&lt;/code&gt;  文件的信息。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Index&lt;/code&gt;  文件是用二进制存储的，包含有  &lt;code&gt;ctime&lt;/code&gt;  和  &lt;code&gt;mtime&lt;/code&gt;  时间信息，文件存储的设备信息，磁盘的 &lt;code&gt;inode&lt;/code&gt;  信息，文件的  &lt;code&gt;mode&lt;/code&gt;  信息， &lt;code&gt;UID&lt;/code&gt; ， &lt;code&gt;GID&lt;/code&gt; ，文件大小，文件的 &lt;code&gt;SHA-1&lt;/code&gt;  码， &lt;code&gt;flag&lt;/code&gt; ，文件的 &lt;code&gt;file path&lt;/code&gt;  等信息。&lt;/p&gt;
&lt;p&gt;各个文件的信息按照一定的排列顺序进行排布。提交的时候，按照这种约定进行解析。&lt;/p&gt;
&lt;h2 id=&#34;包文件&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#包文件&#34;&gt;#&lt;/a&gt; 包文件&lt;/h2&gt;
&lt;p&gt;在文章一开始，我们就说过，git 是基于快照的方式来进行版本控制的。这就意味着，我们每进行一次 commit 操作，git 就是存储一份我们所有的文件。那么，一个大项目，那岂不是会占用很大的存储空间？？&lt;/p&gt;
&lt;p&gt;我们先做个实验。看看 git 会不会占用很大的存储空间？&lt;/p&gt;
&lt;p&gt;&lt;b&gt;首先，我们新建一个仓库&lt;/b&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;# 创建仓库&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;➜  gitlearn git init .&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Initialized empty Git repository in /private/tmp/gitlearn/.git/&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# 添加文件&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;➜  gitlearn git:(master) touch test-package-file&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;➜  gitlearn git:(master) ✗ vim test-package-file&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;➜  gitlearn git:(master) ✗ git add .&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;➜  gitlearn git:(master) ✗ git commit -m &amp;quot;test package file 1&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[master (root-commit) 12cbb50] test package file 1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; Committer: bjhl &amp;lt;bjhl@bjhldeMacBook-Pro.local&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; 1 file changed, 1 insertion(+)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; create mode 100644 test-package-file&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# 查看数据对象的id&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;➜  gitlearn git:(master)  git cat-file -p master^&amp;#123;tree&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;100644 blob c2e8644a8379ab0cf4f2bc5a14160d94608502f7	test-package-file&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# 修改 test ,添加 test package file * 700&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;➜  gitlearn git:(master) vim test-package-file&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;➜  gitlearn git:(master) ✗ vim test-package-file&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;➜  gitlearn git:(master) ✗ git add .&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;➜  gitlearn git:(master) ✗ git commit -m &amp;quot;test package file 2&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[master 421177c] test package file 2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; Committer: bjhl &amp;lt;bjhl@bjhldeMacBook-Pro.local&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; 1 file changed, 740 insertions(+)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# 查看第二次提交的数据对象的id&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;➜  gitlearn git:(master) git cat-file -p master^&amp;#123;tree&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;100644 blob 363980e2f742592594e01648888a661d2d0479b9	test-package-file&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;### 查看两次数据对象的大小&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;➜  gitlearn git:(master) git cat-file -s c2e8644a8379ab0cf4f2bc5a14160d94608502f7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;➜  gitlearn git:(master) git cat-file -s 363980e2f742592594e01648888a661d2d0479b9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13338&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;## 查看一下这两次文件存储的文件。&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;➜  gitlearn git:(master) sh /opt/util/dirfile.sh ./.git/objects&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;./.git/objects/12/cbb50359469eb29efe29945a3b18e262f6e862&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;./.git/objects/36/3980e2f742592594e01648888a661d2d0479b9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;./.git/objects/42/1177c9026e757e7e123b6ee589bcffa067eb96&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;./.git/objects/8e/0703665933215a57787a3117b079d4c8cb1921&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;./.git/objects/c2/e8644a8379ab0cf4f2bc5a14160d94608502f7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;./.git/objects/c3/1d0ebb18efdfc791a254ab58a01ff2ed0136e4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;现在 &lt;code&gt;git&lt;/code&gt;  中存储了两个文件，分别是我们第一次提交和第二次提交的内容。&lt;/p&gt;
&lt;p&gt;如果 &lt;code&gt;git&lt;/code&gt;  像 &lt;code&gt;SVN&lt;/code&gt;  一样记录变更的内容的话，是不是更好呢？&lt;/p&gt;
&lt;p&gt;&lt;code&gt;git&lt;/code&gt;  上本来可以那么做。  &lt;code&gt;git&lt;/code&gt;  最初向磁盘中存储对象时所使用的格式称为 松散对象格式。 但是， &lt;code&gt;git&lt;/code&gt;  会时不时的将多个对象打包成一个 称为 “包文件” 的二进制文件。来节省空间和效率。&lt;/p&gt;
&lt;p&gt;当仓库中有太多的 松散对象，或者手动执行  &lt;code&gt;git gc&lt;/code&gt;  命令，或者向远程服务器执行推送时， &lt;code&gt;git&lt;/code&gt;  都会这么做。&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;# 执行一下 git gc&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;➜  gitlearn git:(master) git gc&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Counting objects: 6, done.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Delta compression using up to 8 threads.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Compressing objects: 100% (3/3), done.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Writing objects: 100% (6/6), done.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Total 6 (delta 0), reused 0 (delta 0)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;➜  gitlearn git:(master) sh /opt/util/dirfile.sh ./.git/objects&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;./.git/objects/info/packs&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;./.git/objects/pack/pack-275c7b3d69b1acacc114c081d6ffa61d6683e8a1.idx&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;./.git/objects/pack/pack-275c7b3d69b1acacc114c081d6ffa61d6683e8a1.pack&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;这里生成了一个包文件 ( &lt;code&gt;.pack&lt;/code&gt; ) 和一个索引文件 ( &lt;code&gt;.idx&lt;/code&gt; )。包文件抱愧了刚才从一个文件系统中移除的所有对象的内容，索引文件包含了文件的偏移信息。我们可以通过偏移文件快速的定位任意一个指定对象。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;git&lt;/code&gt;  打包对象时，会查找命名以及大小相近的文件，并只保存文件不同版本之间的差异内容。可以使用  &lt;code&gt;git verify-pack&lt;/code&gt;  这个底层命令查看已经打包内容:&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;➜  gitlearn git:(master) git verify-pack -v .git/objects/pack/pack-275c7b3d69b1acacc114c081d6ffa61d6683e8a1.idx&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;421177c9026e757e7e123b6ee589bcffa067eb96 commit 238 160 12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12cbb50359469eb29efe29945a3b18e262f6e862 commit 190 131 172&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;363980e2f742592594e01648888a661d2d0479b9 blob   13338 80 303&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;c31d0ebb18efdfc791a254ab58a01ff2ed0136e4 tree   45 55 383&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8e0703665933215a57787a3117b079d4c8cb1921 tree   45 56 438&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;c2e8644a8379ab0cf4f2bc5a14160d94608502f7 blob   18 28 494&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;non delta: 6 objects&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;.git/objects/pack/pack-275c7b3d69b1acacc114c081d6ffa61d6683e8a1.pack: ok&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;其中第三列是在包文件中各个对象的大小，可以看到，树对象是 &lt;code&gt;45&lt;/code&gt;  字节，数据对象和提交对象，都是原来的大小。&lt;/p&gt;
&lt;p&gt;显然这次并没有进行压缩。 我们再次修改文件：&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;# 修改文件： 最后一行添加 test package file&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;➜  gitlearn git:(master) vim test-package-file&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;➜  gitlearn git:(master) ✗ git add .&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;➜  gitlearn git:(master) ✗ git commit -m &amp;quot;test package file 3&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[master 2ab3a27] test package file 3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; Committer: bjhl &amp;lt;bjhl@bjhldeMacBook-Pro.local&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; 1 file changed, 1 insertion(+)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; # 查看目录下的文件&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;➜  gitlearn git:(master) sh /opt/util/dirfile.sh ./.git/objects&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;./.git/objects/2a/b3a275bf16a86f77e632127ccf62bcecf98579&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;./.git/objects/84/003569b2725d79bc209821c9c3dbb5c2ef8a8d&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;./.git/objects/df/e088f704e98a835ed3ca2ce31919947d63f884&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;./.git/objects/info/packs&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;./.git/objects/pack/pack-275c7b3d69b1acacc114c081d6ffa61d6683e8a1.idx&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;./.git/objects/pack/pack-275c7b3d69b1acacc114c081d6ffa61d6683e8a1.pack&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# 进行打包&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;➜  gitlearn git:(master) git gc&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Counting objects: 9, done.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Delta compression using up to 8 threads.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Compressing objects: 100% (5/5), done.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Writing objects: 100% (9/9), done.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Total 9 (delta 1), reused 5 (delta 0)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;➜  gitlearn git:(master) sh /opt/util/dirfile.sh ./.git/objects&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;./.git/objects/info/packs&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;./.git/objects/pack/pack-a30aa1dcd93c0fadc605cf3fb5828e8cf186ef29.idx&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;./.git/objects/pack/pack-a30aa1dcd93c0fadc605cf3fb5828e8cf186ef29.pack&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# 查看打包的内容&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;➜  gitlearn git:(master) git verify-pack -v .git/objects/pack/pack-a30aa1dcd93c0fadc605cf3fb5828e8cf186ef29.idx&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2ab3a275bf16a86f77e632127ccf62bcecf98579 commit 238 160 12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;421177c9026e757e7e123b6ee589bcffa067eb96 commit 238 160 172&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12cbb50359469eb29efe29945a3b18e262f6e862 commit 190 131 332&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;84003569b2725d79bc209821c9c3dbb5c2ef8a8d tree   45 56 555&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;c31d0ebb18efdfc791a254ab58a01ff2ed0136e4 tree   45 55 611&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8e0703665933215a57787a3117b079d4c8cb1921 tree   45 56 684&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;dfe088f704e98a835ed3ca2ce31919947d63f884 blob   13356 92 463 # 第三次提交&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;363980e2f742592594e01648888a661d2d0479b9 blob   7 18 666 1 dfe088f704e98a835ed3ca2ce31919947d63f884 # 第二次提交&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;c2e8644a8379ab0cf4f2bc5a14160d94608502f7 blob   18 28 740 # 第一次提交&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;non delta: 8 objects&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;chain length = 1: 1 object&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;.git/objects/pack/pack-a30aa1dcd93c0fadc605cf3fb5828e8cf186ef29.pack: ok&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;我们可以到看到 第三次提交的内容是  &lt;code&gt;13356&lt;/code&gt;  字节，而第二次提交的内容只有  &lt;code&gt;7&lt;/code&gt;  个字节。显然， &lt;code&gt;git&lt;/code&gt;  这次进行压缩。另外，第三个版本是保存了最新的文件内容，原始版本是以差异方式存在的 -- 这是因为大部分情况下，需要快速的访问文件的最新版本。&lt;/p&gt;
&lt;h2 id=&#34;总结&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#总结&#34;&gt;#&lt;/a&gt; 总结&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;git&lt;/code&gt;  创建仓库两种方式：本地创建， &lt;code&gt;clone&lt;/code&gt;  仓库&lt;/li&gt;
&lt;li&gt;&lt;code&gt;git&lt;/code&gt;  仓库的目录结构
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;objects&lt;/code&gt;  目录&lt;br&gt;
我们通过一个最简单的三次提交来看了一下 &lt;code&gt;git&lt;/code&gt;  仓库是如何存储数据的。&lt;br&gt;
这里，我贴上这张我们操作过程的图，加深一下印象.&lt;br&gt;
&lt;img data-src=&#34;/images/git%E7%B3%BB%E5%88%97/images/git%E5%B7%A5%E4%BD%9C%E7%9B%AE%E5%BD%95%E4%BB%8B%E7%BB%8D04-object%E7%9B%AE%E5%BD%95%E6%80%BB%E7%BB%93.png&#34; alt=&#34;git工作目录介绍04-object目录总结.png&#34;&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;refs&lt;/code&gt; : 引用
&lt;ul&gt;
&lt;li&gt;四种对象：提交对象，数据对象，树对象，标签对象。&lt;/li&gt;
&lt;li&gt;树对象:  &lt;code&gt;commit-&amp;gt;tree-&amp;gt;blob&lt;/code&gt;  (文件)  &lt;span class=&#34;spoiler&#34; title=&#34;...&#34;&gt;课后作业：多文件的提交记录&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;heads/master&lt;/code&gt; ,  &lt;code&gt;heads/test/&lt;/code&gt; , &lt;code&gt;tags/&lt;/code&gt; . 这几个文件的作用&lt;/li&gt;
&lt;li&gt;&lt;code&gt;git symbolic&lt;/code&gt;  命令，&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Index&lt;/code&gt;  文件。记录当前哪些文件被修改，新增。&lt;/li&gt;
&lt;li&gt;包文件： 解决 git 工作目录过大的问题。压缩。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;最后&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#最后&#34;&gt;#&lt;/a&gt; 最后&lt;/h3&gt;
&lt;p&gt;期望与你一起遇见更好的自己&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/images/qrcode.jpg&#34; alt=&#34;期望与你一起遇见更好的自己&#34;&gt;&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://fangjiaxiaobai.github.io/2021/07/15/JDK%E6%BA%90%E7%A0%81/README/</guid>
            <title>【目录】JDK源码解读目录</title>
            <link>https://fangjiaxiaobai.github.io/2021/07/15/JDK%E6%BA%90%E7%A0%81/README/</link>
            <category>源码</category>
            <category>目录</category>
            <pubDate>Thu, 15 Jul 2021 14:48:55 +0800</pubDate>
            <description><![CDATA[ &lt;h2 id=&#34;目录&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#目录&#34;&gt;#&lt;/a&gt; 目录&lt;/h2&gt;
&lt;h4 id=&#34;javautil&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#javautil&#34;&gt;#&lt;/a&gt; java.util&lt;/h4&gt;
&lt;ul class=&#34;task-list&#34;&gt;
&lt;li class=&#34;task-list-item&#34;&gt;&lt;input type=&#34;checkbox&#34; id=&#34;cbx_0&#34; checked=&#34;true&#34; disabled=&#34;true&#34;&gt;&lt;label for=&#34;cbx_0&#34;&gt; &lt;a href=&#34;/2021/07/15/source%20code/HashMap/HashMap/&#34;&gt;HashMap&lt;/a&gt;&lt;/label&gt;
&lt;ul class=&#34;task-list&#34;&gt;
&lt;li class=&#34;task-list-item&#34;&gt;&lt;input type=&#34;checkbox&#34; id=&#34;cbx_1&#34; checked=&#34;true&#34; disabled=&#34;true&#34;&gt;&lt;label for=&#34;cbx_1&#34;&gt; &lt;a href=&#34;/2021/07/15/source%20code/HashMap/HashMap%E7%9A%84Hash%E5%87%BD%E6%95%B0%E5%88%B0%E5%BA%95%E6%9C%89%E4%BB%80%E4%B9%88%E6%84%8F%E4%B9%89/&#34;&gt;HashMap 的 Hash 函数到底有什么意义.md&lt;/a&gt;&lt;/label&gt;&lt;/li&gt;
&lt;li class=&#34;task-list-item&#34;&gt;&lt;input type=&#34;checkbox&#34; id=&#34;cbx_2&#34; disabled=&#34;true&#34;&gt;&lt;label for=&#34;cbx_2&#34;&gt; &lt;a href=&#34;./HashMap/HashMap%E5%88%B0%E5%BA%95%E4%B8%BA%E4%BB%80%E4%B9%88%E6%98%AF%E4%B8%8D%E5%AE%89%E5%85%A8%E7%9A%84.md&#34;&gt;HashMap 到底为什么是不安全的.md&lt;/a&gt;&lt;/label&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;javautilconcurrency&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#javautilconcurrency&#34;&gt;#&lt;/a&gt; java.util.concurrency&lt;/h4&gt;
&lt;ul class=&#34;task-list&#34;&gt;
&lt;li class=&#34;task-list-item&#34;&gt;&lt;input type=&#34;checkbox&#34; id=&#34;cbx_3&#34; disabled=&#34;true&#34;&gt;&lt;label for=&#34;cbx_3&#34;&gt; ConcurrentHashMap&lt;/label&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;javalang&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#javalang&#34;&gt;#&lt;/a&gt; java.lang&lt;/h4&gt;
&lt;ul class=&#34;task-list&#34;&gt;
&lt;li class=&#34;task-list-item&#34;&gt;&lt;input type=&#34;checkbox&#34; id=&#34;cbx_4&#34; checked=&#34;true&#34; disabled=&#34;true&#34;&gt;&lt;label for=&#34;cbx_4&#34;&gt; &lt;a href=&#34;2021/07/15/source%20code/String/String/&#34;&gt;String.md&lt;/a&gt;&lt;/label&gt;&lt;/li&gt;
&lt;li class=&#34;task-list-item&#34;&gt;&lt;input type=&#34;checkbox&#34; id=&#34;cbx_5&#34; checked=&#34;true&#34; disabled=&#34;true&#34;&gt;&lt;label for=&#34;cbx_5&#34;&gt; &lt;a href=&#34;./threadLocal/ThreadLocal%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90.md&#34;&gt;ThreadLocal 源码分析.md&lt;/a&gt;&lt;/label&gt;
&lt;ul class=&#34;task-list&#34;&gt;
&lt;li class=&#34;task-list-item&#34;&gt;&lt;input type=&#34;checkbox&#34; id=&#34;cbx_6&#34; checked=&#34;true&#34; disabled=&#34;true&#34;&gt;&lt;label for=&#34;cbx_6&#34;&gt; &lt;a href=&#34;./threadLocal/ThreadLocal%E7%9A%84%E5%93%88%E5%B8%8C%E7%AE%97%E6%B3%95.md&#34;&gt;ThreadLocal 的哈希算法.md&lt;/a&gt;&lt;/label&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://fangjiaxiaobai.github.io/2021/07/15/JDK%E6%BA%90%E7%A0%81/String/String/</guid>
            <title>String类源码解析</title>
            <link>https://fangjiaxiaobai.github.io/2021/07/15/JDK%E6%BA%90%E7%A0%81/String/String/</link>
            <category>源码</category>
            <category>String</category>
            <pubDate>Thu, 15 Jul 2021 14:48:55 +0800</pubDate>
            <description><![CDATA[ &lt;p&gt;一、签名：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;public final class String implements java.io.Serializable, Comparable&amp;lt;String&amp;gt;, CharSequence&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;String 不能被继承，&lt;/li&gt;
&lt;li&gt;实现了 Serializable：可被序列化。&lt;/li&gt;
&lt;li&gt;实现了 Comparable：可以比较，排序，&lt;/li&gt;
&lt;li&gt;实现了 CharSequence：值是可读序列。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;二、成员变量：&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;private&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;final&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;char&lt;/span&gt; value[];  &lt;span class=&#34;comment&#34;&gt;// 存储字符。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;private&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; hash;     &lt;span class=&#34;comment&#34;&gt;// 缓存字符串的hash值。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Private &lt;span class=&#34;keyword&#34;&gt;static&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;final&lt;/span&gt; ObjectStreamField[] serialPersistentFields = &lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; ObjectStreamFiled[&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;];  &lt;span class=&#34;comment&#34;&gt;// 字符串类被指定转化序列化流协议中。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;/** use serialVersionUID from JDK 1.0.2 for interoperability */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;private&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;static&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;final&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;long&lt;/span&gt; serialVersionUID = -&lt;span class=&#34;number&#34;&gt;6849794470754667710L&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;Value 是 final 的，所以 String 一旦定义之后，就不可变的。&lt;/p&gt;
&lt;p&gt;三、构造函数：&lt;/p&gt;
&lt;p&gt;四、常用方法：&lt;/p&gt;
&lt;p&gt;由于 String 中重载的方法太多了，所以就只写方法名了。&lt;/p&gt;
&lt;p&gt;1.   &lt;code&gt;getBytes&lt;/code&gt; :&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;byte&lt;/span&gt;[] getBytes() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; StringCoding.encode(value, &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, value.length);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;以上面的这个方法为例：它交给了 &lt;code&gt;StringCoding.encode&lt;/code&gt;  去获取 &lt;code&gt;bytes&lt;/code&gt; 。然而 &lt;code&gt;StringEncoder&lt;/code&gt;  去调用了 &lt;code&gt;StringEncoder&lt;/code&gt;  的相应方法获取 &lt;code&gt;bytes&lt;/code&gt; 、&lt;/p&gt;
&lt;p&gt;2.  equals&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;boolean&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;equals&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(Object anObject)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt; == anObject) &amp;#123;   &lt;span class=&#34;comment&#34;&gt;// 如果地址都相同的话，那肯定就是同一个了&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;true&lt;/span&gt;; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (anObject &lt;span class=&#34;keyword&#34;&gt;instanceof&lt;/span&gt; String) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            String anotherString = (String)anObject;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; n = value.length;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (n == anotherString.value.length) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                &lt;span class=&#34;keyword&#34;&gt;char&lt;/span&gt; v1[] = value;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                &lt;span class=&#34;keyword&#34;&gt;char&lt;/span&gt; v2[] = anotherString.value;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                &lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; i = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                &lt;span class=&#34;keyword&#34;&gt;while&lt;/span&gt; (n-- != &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;) &amp;#123;  &lt;span class=&#34;comment&#34;&gt;//不错的编码风格。比for要好一点？&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (v1[i] != v2[i])&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                        &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                    i++;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;true&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;3.  equalsIgnoreCase:&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;63&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;64&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;65&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;66&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;67&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;68&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;69&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;70&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;71&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;72&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;73&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;74&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;75&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;76&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;77&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;78&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;79&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;80&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;81&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;82&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;83&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;84&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;85&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;86&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;87&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;88&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;89&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;90&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;91&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;boolean&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;equalsIgnoreCase&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(String anotherString)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; (&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt; == anotherString) ? &lt;span class=&#34;keyword&#34;&gt;true&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;          : (anotherString != &lt;span class=&#34;keyword&#34;&gt;null&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;          &amp;amp;&amp;amp; (anotherString.value.length == value.length)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;          &amp;amp;&amp;amp; regionMatches(&lt;span class=&#34;keyword&#34;&gt;true&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, anotherString, &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, value.length);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;boolean&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;regionMatches&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(&lt;span class=&#34;keyword&#34;&gt;boolean&lt;/span&gt; ignoreCase, &lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; toffset,&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;params&#34;&gt;&lt;span class=&#34;function&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;params&#34;&gt;&lt;span class=&#34;function&#34;&gt;            String other, &lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; ooffset, &lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; len)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;char&lt;/span&gt; ta[] = value;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; to = toffset;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;char&lt;/span&gt; pa[] = other.value;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; po = ooffset;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;comment&#34;&gt;// Note: toffset, ooffset, or len might be near -1&amp;gt;&amp;gt;&amp;gt;1.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ((ooffset &amp;lt; &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;) || (toffset &amp;lt; &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                || (toffset &amp;gt; (&lt;span class=&#34;keyword&#34;&gt;long&lt;/span&gt;)value.length - len)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                || (ooffset &amp;gt; (&lt;span class=&#34;keyword&#34;&gt;long&lt;/span&gt;)other.value.length - len)) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;while&lt;/span&gt; (len-- &amp;gt; &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;keyword&#34;&gt;char&lt;/span&gt; c1 = ta[to++];&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;keyword&#34;&gt;char&lt;/span&gt; c2 = pa[po++];&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (c1 == c2) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                &lt;span class=&#34;keyword&#34;&gt;continue&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (ignoreCase) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                &lt;span class=&#34;comment&#34;&gt;// If characters don&amp;#x27;t match but case may be ignored,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                &lt;span class=&#34;comment&#34;&gt;// try converting both characters to uppercase.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                &lt;span class=&#34;comment&#34;&gt;// If the results match, then the comparison scan should&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                &lt;span class=&#34;comment&#34;&gt;// continue.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                &lt;span class=&#34;keyword&#34;&gt;char&lt;/span&gt; u1 = Character.toUpperCase(c1);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                &lt;span class=&#34;keyword&#34;&gt;char&lt;/span&gt; u2 = Character.toUpperCase(c2);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (u1 == u2) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                    &lt;span class=&#34;keyword&#34;&gt;continue&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                &lt;span class=&#34;comment&#34;&gt;// Unfortunately, conversion to uppercase does not work properly&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                &lt;span class=&#34;comment&#34;&gt;// for the Georgian alphabet, which has strange rules about case&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                &lt;span class=&#34;comment&#34;&gt;// conversion.  So we need to make one last check before&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                &lt;span class=&#34;comment&#34;&gt;// exiting.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (Character.toLowerCase(u1) == Character.toLowerCase(u2)) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                    &lt;span class=&#34;keyword&#34;&gt;continue&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;true&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;在 regionMatches 中首先对传入的参数，进行合法性判断。然后取出每一个字符，比较一下，相同就下个字符，不同，都转换成大写，比较一次，如果相同就比较下一个字符，如果不相同就都转化成小写在比较一下。解释是说：有时候，转大写不一定每次都会正确。&lt;/p&gt;
&lt;p&gt;4.  startsWith:&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;boolean&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;startsWith&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(String prefix, &lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; toffset)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;char&lt;/span&gt; ta[] = value;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; to = toffset;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;char&lt;/span&gt; pa[] = prefix.value;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; po = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; pc = prefix.value.length;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;comment&#34;&gt;// Note: toffset might be near -1&amp;gt;&amp;gt;&amp;gt;1.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ((toffset &amp;lt; &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;) || (toffset &amp;gt; value.length - pc)) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;while&lt;/span&gt; (--pc &amp;gt;= &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (ta[to++] != pa[po++]) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;true&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;5.  endsWith&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;boolean&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;endsWith&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(String suffix)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; startsWith(suffix, value.length - suffix.value.length);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;6.  重点来了：hashCode&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;hashCode&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;()&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; h = hash;  &lt;span class=&#34;comment&#34;&gt;///先获取缓存中的hash值。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt;(h == &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt; &amp;amp;&amp;amp; value.length &amp;gt; &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;keyword&#34;&gt;char&lt;/span&gt; val[] = value;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; i = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;; i &amp;lt; value.length; i++) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;               h = &lt;span class=&#34;number&#34;&gt;31&lt;/span&gt; * h + val[i];   &lt;span class=&#34;comment&#34;&gt;// hash值算法。31&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            hash = h;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; h;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;7.  replace&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; String &lt;span class=&#34;title&#34;&gt;replace&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(&lt;span class=&#34;keyword&#34;&gt;char&lt;/span&gt; oldChar, &lt;span class=&#34;keyword&#34;&gt;char&lt;/span&gt; newChar)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (oldChar != newChar) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; len = value.length;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; i = -&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;keyword&#34;&gt;char&lt;/span&gt;[] val = value; &lt;span class=&#34;comment&#34;&gt;/* avoid getfield opcode */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;keyword&#34;&gt;while&lt;/span&gt; (++i &amp;lt; len) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (val[i] == oldChar) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                    &lt;span class=&#34;keyword&#34;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (i &amp;lt; len) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                &lt;span class=&#34;keyword&#34;&gt;char&lt;/span&gt; buf[] = &lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;char&lt;/span&gt;[len];&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; j = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;; j &amp;lt; i; j++) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                    buf[j] = val[j];&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                &lt;span class=&#34;keyword&#34;&gt;while&lt;/span&gt; (i &amp;lt; len) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                    &lt;span class=&#34;keyword&#34;&gt;char&lt;/span&gt; c = val[i];&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                    buf[i] = (c == oldChar) ? newChar : c;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                    i++;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; String(buf, &lt;span class=&#34;keyword&#34;&gt;true&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;最后&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#最后&#34;&gt;#&lt;/a&gt; 最后&lt;/h3&gt;
&lt;p&gt;期望与你一起遇见更好的自己&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/images/qrcode.jpg&#34; alt=&#34;期望与你一起遇见更好的自己&#34;&gt;&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://fangjiaxiaobai.github.io/2021/07/15/JDK%E6%BA%90%E7%A0%81/HashMap/HashMap%E7%9A%84Hash%E5%87%BD%E6%95%B0%E5%88%B0%E5%BA%95%E6%9C%89%E4%BB%80%E4%B9%88%E6%84%8F%E4%B9%89/</guid>
            <title>HashMap的Hash函数到底有什么意义</title>
            <link>https://fangjiaxiaobai.github.io/2021/07/15/JDK%E6%BA%90%E7%A0%81/HashMap/HashMap%E7%9A%84Hash%E5%87%BD%E6%95%B0%E5%88%B0%E5%BA%95%E6%9C%89%E4%BB%80%E4%B9%88%E6%84%8F%E4%B9%89/</link>
            <category>源码</category>
            <category>HashMap</category>
            <pubDate>Thu, 15 Jul 2021 14:48:55 +0800</pubDate>
            <description><![CDATA[ &lt;h2 id=&#34;jdk18-hashmap中hash值计算源码&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#jdk18-hashmap中hash值计算源码&#34;&gt;#&lt;/a&gt; jdk1.8 HashMap 中 hash 值计算源码&lt;/h2&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;/**&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt; * 扰动函数&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt; */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;static&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;final&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;hash&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(Object key)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; h;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; (key == &lt;span class=&#34;keyword&#34;&gt;null&lt;/span&gt;) ? &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt; : (h = key.hashCode()) ^ (h &amp;gt;&amp;gt;&amp;gt; &lt;span class=&#34;number&#34;&gt;16&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;// 其中的key.hashCode调用的是底层的native方法。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;native&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;hashCode&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;()&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;Q: 为什么不直接使用 key 的 hashCode 值呢？&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;如果直接使用 key 的 hashCode () 函数的时候，将 hash 值作下标访问 Map 的数组的话，由于 2 进制的取值范围是 [-2&lt;sup&gt;31,2&lt;/sup&gt;31), 加起来大于有 40 亿的映射空间。只要 hash 函数散列的比较松散，那么久很难出现碰撞。当然，40 亿的数据，内存也是放不下的。所以不能直接拿 key 的 hashCode。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Q: 为什么要进行  &lt;code&gt;h = key.hashCode()) ^ (h &amp;gt;&amp;gt;&amp;gt; 16)&lt;/code&gt;  这个运算呢？&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;这个问题就要从计算出的 hash 值的作用上来切入了，hashMap 计算这个 hash 值就是为了什么？增删改查的时候确定元素在数组中的位置。那么 hashMap 是怎么确定位置的呢？我们知道 HashMap 中的数组是 tab 字段。根据 tab 找到，在 &lt;code&gt;final HashMap.Node&amp;lt;K,V&amp;gt; getNode(int hash, Object key)&lt;/code&gt;  方法中，有这么 &lt;code&gt;tab[(n - 1) &amp;amp; hash]&lt;/code&gt;  使用。 n 是数组的长度.&lt;br&gt;
 这里 n-1 相当于一个 &lt;code&gt;低位掩码&lt;/code&gt; ，和 hash 进行与操作的结果就是散列值的高位全部归零，保留低位，用来做下标访问。这么看，就算我们的 hash 散列分布再松散，冲突也会很严重。以默认长度 16 为例。&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;  11111111  11111111 11110000 11101010  # native方法 HashCode()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;amp; 00000000  00000000 00000000 00001111  # 默认初始长度 15 = 16 -1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  -------------------------------------&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  00000000  00000000 00000000 00001010  # 进行&amp;amp;操作，计算出的下标为10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;我们看下使用扰动函数计算后的结果:&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;# 扰动函数计算过程:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   h=hashCode():  11111111  11111111  11110000  11101010  # native方法 HashCode()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   -------------------------------------------------------------------------------&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;              h:  11111111  11111111  11110000  11101010  # native方法 HashCode()计算出的值。&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   ^     h&amp;gt;&amp;gt;&amp;gt;16:  00000000  00000000  11111111  11111111  # hashCode左移16位=&amp;gt;高16位变低位&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   -----------------------------------------------------------------------------------&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;hash=h^(h&amp;gt;&amp;gt;&amp;gt;16):  11111111  11111111  00001111  00010101  # 扰动函数计算出的值&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# 与掩码做&amp;amp;运算=&amp;gt;计算数组下标&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;hash=h^(h&amp;gt;&amp;gt;&amp;gt;16):  11111111  11111111  00001111  00010101  # 扰动函数计算出的值&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &amp;amp;  :  00000000  00000000  00000000  00001111  # 低位掩码=&amp;gt; hashMap中数组的长度&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    -----------------------------------------------------------------------------------&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                             ....                  00101  # =&amp;gt;计算出的下标为5.&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;peter-lawley的一篇专栏文章an-introduction-to-optimising-a-hashing-strategy里的的一个实验&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#peter-lawley的一篇专栏文章an-introduction-to-optimising-a-hashing-strategy里的的一个实验&#34;&gt;#&lt;/a&gt; Peter Lawley 的一篇专栏文章《An introduction to optimising a hashing strategy》里的的一个实验&lt;/h3&gt;
&lt;p&gt;&lt;img data-src=&#34;/images/JavaSourceCode/HashMap/hashMap%E6%89%B0%E5%8A%A8%E5%87%BD%E6%95%B0%E7%9A%84%E4%BD%9C%E7%94%A8.png&#34; alt=&#34;hashMap扰动函数的作用.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;结果显示，当 HashMap 数组长度为 512 的时候，也就是用掩码取低 9 位的时候，在没有扰动函数的情况下，发生了 103 次碰撞，接近 30%。而在使用了扰动函数之后只有 92 次碰撞。碰撞减少了将近 10%。看来扰动函数确实还是有功效的。&lt;/p&gt;
&lt;h2 id=&#34;jdk7中的hashmap计算hash的方式&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#jdk7中的hashmap计算hash的方式&#34;&gt;#&lt;/a&gt; JDK7 中的 HashMap 计算 hash 的方式&lt;/h2&gt;
&lt;h2 id=&#34;参考文章&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#参考文章&#34;&gt;#&lt;/a&gt; 参考文章&lt;/h2&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cuY25ibG9ncy5jb20vemhlbmd3YW5nL3AvODEzNjE2NC5odG1s&#34;&gt;HashMap 中的 hash 函数&lt;/span&gt;&lt;/p&gt;
&lt;h3 id=&#34;最后&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#最后&#34;&gt;#&lt;/a&gt; 最后&lt;/h3&gt;
&lt;p&gt;期望与你一起遇见更好的自己&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/images/qrcode.jpg&#34; alt=&#34;期望与你一起遇见更好的自己&#34;&gt;&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://fangjiaxiaobai.github.io/2021/07/15/JDK%E6%BA%90%E7%A0%81/HashMap/HashMap/</guid>
            <title>全网最全的 HashMap 源码解读</title>
            <link>https://fangjiaxiaobai.github.io/2021/07/15/JDK%E6%BA%90%E7%A0%81/HashMap/HashMap/</link>
            <category>源码</category>
            <category>HashMap</category>
            <pubDate>Thu, 15 Jul 2021 14:48:55 +0800</pubDate>
            <description><![CDATA[ &lt;h2 id=&#34;要思考的问题&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#要思考的问题&#34;&gt;#&lt;/a&gt; 要思考的问题&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;HashMap 的底层数据结构 (节点结构，这种结构有什么优点)&lt;/li&gt;
&lt;li&gt;如何处理 hash 冲突&lt;/li&gt;
&lt;li&gt;怎么扩容？扩展机制是什么？&lt;/li&gt;
&lt;li&gt;增删改查过程&lt;/li&gt;
&lt;li&gt;链表到红黑树的转换过程，反之？&lt;/li&gt;
&lt;li&gt;红黑树相关 (见另一篇数据结构之红黑树)&lt;/li&gt;
&lt;li&gt;hash 计算&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;达到的目标&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#达到的目标&#34;&gt;#&lt;/a&gt; 达到的目标&lt;/h2&gt;
&lt;ul class=&#34;task-list&#34;&gt;
&lt;li class=&#34;task-list-item&#34;&gt;&lt;input type=&#34;checkbox&#34; id=&#34;cbx_0&#34; checked=&#34;true&#34; disabled=&#34;true&#34;&gt;&lt;label for=&#34;cbx_0&#34;&gt; 掌握底层数据结构&lt;/label&gt;&lt;/li&gt;
&lt;li class=&#34;task-list-item&#34;&gt;&lt;input type=&#34;checkbox&#34; id=&#34;cbx_1&#34; checked=&#34;true&#34; disabled=&#34;true&#34;&gt;&lt;label for=&#34;cbx_1&#34;&gt; 掌握扩容原理&lt;/label&gt;&lt;/li&gt;
&lt;li class=&#34;task-list-item&#34;&gt;&lt;input type=&#34;checkbox&#34; id=&#34;cbx_2&#34; checked=&#34;true&#34; disabled=&#34;true&#34;&gt;&lt;label for=&#34;cbx_2&#34;&gt; 掌握 hash 冲突的处理过程&lt;/label&gt;&lt;/li&gt;
&lt;li class=&#34;task-list-item&#34;&gt;&lt;input type=&#34;checkbox&#34; id=&#34;cbx_3&#34; checked=&#34;true&#34; disabled=&#34;true&#34;&gt;&lt;label for=&#34;cbx_3&#34;&gt; 掌握增删改查过程&lt;/label&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;看之前要掌握的知识点&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#看之前要掌握的知识点&#34;&gt;#&lt;/a&gt; 看之前要掌握的知识点&lt;/h2&gt;
&lt;h3 id=&#34;红黑树&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#红黑树&#34;&gt;#&lt;/a&gt; 红黑树&lt;/h3&gt;
&lt;h2 id=&#34;看之前大体了解的知识点&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#看之前大体了解的知识点&#34;&gt;#&lt;/a&gt; 看之前大体了解的知识点&lt;/h2&gt;
&lt;h3 id=&#34;hash算法&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#hash算法&#34;&gt;#&lt;/a&gt; hash 算法&lt;/h3&gt;
&lt;h3 id=&#34;poisson分布&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#poisson分布&#34;&gt;#&lt;/a&gt; Poisson 分布&lt;/h3&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL2VuLndpa2lwZWRpYS5vcmcvd2lraS9Qb2lzc29uX2Rpc3RyaWJ1dGlvbg==&#34;&gt;poisson 分布&lt;/span&gt;&lt;/p&gt;
&lt;h2 id=&#34;开始&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#开始&#34;&gt;#&lt;/a&gt; 开始&lt;/h2&gt;
&lt;h3 id=&#34;hashmap的继承体系&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#hashmap的继承体系&#34;&gt;#&lt;/a&gt; HashMap 的继承体系&lt;/h3&gt;
&lt;p&gt;&lt;img data-src=&#34;/images/JavaSourceCode/HashMap/HashMap01-%E7%BB%A7%E6%89%BF%E4%BD%93%E7%B3%BB.png&#34; alt=&#34;HashMap01-继承体系.png&#34;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;AbstractMap: map 的抽象类，以最大限度的减少实现 Map 接口的类的工作量。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;hashmap结构&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#hashmap结构&#34;&gt;#&lt;/a&gt; hashMap 结构&lt;/h3&gt;
&lt;h3 id=&#34;字段解释&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#字段解释&#34;&gt;#&lt;/a&gt; 字段解释&lt;/h3&gt;
&lt;h4 id=&#34;常量字段默认值字段&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#常量字段默认值字段&#34;&gt;#&lt;/a&gt; 常量字段 (默认值字段)&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;DEFAULT_INITIAL_CAPACITY=1&amp;lt;&amp;lt;4: 默认的初始容量，默认是为 16, 必须是 2 的 n 次方。为什么呢？见扩容的方法。&lt;/li&gt;
&lt;li&gt;DEFAULT_LOAD_FACTOR=0.75f: 默认的负载因子。它和哈希表的容量的乘积是决定是否重新 hash 的阈值。&lt;/li&gt;
&lt;li&gt;TREEIFY_THRESHOLD=8: 使用树而不是链表的计数阈值。当桶的元素添加到具有至少这么多节点时，桶被转换为树。&lt;/li&gt;
&lt;li&gt;UNTREEIFY_THRESHOLD=6: 用于在调整大小操作期间解除（拆分）桶的桶计数阈值。(untreeifying 不是一个英语单词，这里的以是非树化，即转换成普通列表的过程). 也就是说从树转换成普通的桶 (链表) 的阈值。&lt;/li&gt;
&lt;li&gt;MAXIMUM_CAPACITY=1&amp;lt;&amp;lt;30: 最大的容量:  &lt;code&gt;1&amp;lt;&amp;lt;30&lt;/code&gt; ，如果具有参数的任一构造函数隐式指定更高的值，则使用此参数。必须是 2 的 n 次方，小于等于 &lt;code&gt;1&amp;lt;&amp;lt;30&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;MIN_TREEIFY_CAPACITY=64: 容器可以树化的最小容量 (否则，如果 bin 中的节点太多，则会调整表的大小.) 应该至少为 4 * TREEIFY_THRESHOLD，以避免调整大小和树化阈值之间的冲突.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;类属性&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#类属性&#34;&gt;#&lt;/a&gt; 类属性&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;table:  &lt;code&gt;transient HashMap.Node&amp;lt;K,V&amp;gt;[] table&lt;/code&gt; ; table 在首次使用时初始化，并根据需要调整大小。分配时，长度始终是 2 的幂。(我们还在一些操作中容忍长度为零，以允许当前不需要的自举机制)&lt;/li&gt;
&lt;li&gt;entrySet:  &lt;code&gt;transient Set&amp;lt;Map.Entry&amp;lt;K,V&amp;gt;&amp;gt; entrySet&lt;/code&gt; ; 保存缓存的 entrySet.&lt;/li&gt;
&lt;li&gt;size:  &lt;code&gt;transient int size&lt;/code&gt; ; map 中元素的数量。结构修改是那些改变 HashMap 中映射数量或以其他方式修改其内部结构（例如，rehash）的修改。此字段用于在 HashMap 的 Collection-views 上快速生成迭代器 (见 ConcurrentModificationException)&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;p&gt;注意：这些字段都是  &lt;code&gt;transient&lt;/code&gt;  的？为什么呢？&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;loadFactor:  &lt;code&gt;final float loadFactor;&lt;/code&gt;  hash 表的负载因子，在实例化 hashTable 的时候指定，该对象内不能变更 (final);&lt;/li&gt;
&lt;li&gt;threshold:  &lt;code&gt;int threshold;&lt;/code&gt; , 下一次调整容器大小的阈值. threshold=capacity * load factor&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;hashmap的两种节点&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#hashmap的两种节点&#34;&gt;#&lt;/a&gt; HashMap 的两种节点&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;基本的哈希桶的节点 (链表的结点) Node&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;static class Node&amp;lt;K,V&amp;gt; implements Map.Entry&amp;lt;K,V&amp;gt;&lt;/code&gt;  它继承了 Map 的 Entry, 是对子类的行为规范。要求提供了 getKey (),getValue () 等常用方法。&lt;/p&gt;
&lt;p&gt;链表节点的结构如下:&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;static&lt;/span&gt; &lt;span class=&#34;class&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;Node&lt;/span&gt;&amp;lt;&lt;span class=&#34;title&#34;&gt;K&lt;/span&gt;,&lt;span class=&#34;title&#34;&gt;V&lt;/span&gt;&amp;gt; &lt;span class=&#34;keyword&#34;&gt;implements&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;Map&lt;/span&gt;.&lt;span class=&#34;title&#34;&gt;Entry&lt;/span&gt;&amp;lt;&lt;span class=&#34;title&#34;&gt;K&lt;/span&gt;,&lt;span class=&#34;title&#34;&gt;V&lt;/span&gt;&amp;gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;final&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; hash; &lt;span class=&#34;comment&#34;&gt;// 避免重复计算key的hash值&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;final&lt;/span&gt; K key;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    V value;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;// 指向下一个节点的指针&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    HashMap.Node&amp;lt;K,V&amp;gt; next;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    Node(&lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; hash, K key, V value, HashMap.Node&amp;lt;K,V&amp;gt; next) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt;.hash = hash;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt;.key = key;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt;.value = value;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt;.next = next;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;meta&#34;&gt;@Override&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;final&lt;/span&gt; K &lt;span class=&#34;title&#34;&gt;getKey&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;()&lt;/span&gt;        &lt;/span&gt;&amp;#123; &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; key; &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;meta&#34;&gt;@Override&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;final&lt;/span&gt; V &lt;span class=&#34;title&#34;&gt;getValue&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;()&lt;/span&gt;      &lt;/span&gt;&amp;#123; &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; value; &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;meta&#34;&gt;@Override&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;final&lt;/span&gt; String &lt;span class=&#34;title&#34;&gt;toString&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;()&lt;/span&gt; &lt;/span&gt;&amp;#123; &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; key + &lt;span class=&#34;string&#34;&gt;&amp;quot;=&amp;quot;&lt;/span&gt; + value; &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;// todo 没有找到在哪里使用了这个方法&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;meta&#34;&gt;@Override&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;final&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;hashCode&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;()&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; Objects.hashCode(key) ^ Objects.hashCode(value);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;meta&#34;&gt;@Override&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;final&lt;/span&gt; V &lt;span class=&#34;title&#34;&gt;setValue&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(V newValue)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        V oldValue = value;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        value = newValue;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; oldValue;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;final&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;boolean&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;equals&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(Object o)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (o == &lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;true&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (o &lt;span class=&#34;keyword&#34;&gt;instanceof&lt;/span&gt; Map.Entry) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            Map.Entry&amp;lt;?,?&amp;gt; e = (Map.Entry&amp;lt;?,?&amp;gt;)o;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (Objects.equals(key, e.getKey()) &amp;amp;&amp;amp;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                    Objects.equals(value, e.getValue()))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;true&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;Tree 的节点 TreeNode&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;static final class TreeNode&amp;lt;K,V&amp;gt; extends LinkedHashMap.Entry&amp;lt;K,V&amp;gt;&lt;/code&gt;  继承了其子类的 Entry, 子类的 Entry 继承了父类的 Node. 注意了，这里乍一看还挺乱。来张图吧。&lt;br&gt;
&lt;img data-src=&#34;/images/JavaSourceCode/HashMap/hashMap%E7%9A%84%E8%8A%82%E7%82%B9%E7%9A%84%E7%BB%A7%E6%89%BF%E5%9B%BE.png&#34; alt=&#34;hashMap的节点的继承图.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;这里呢，TreeNode 其实是 Node 的孙子，也就是说 HashMap 的树节点是链表节点的孙子辈儿的。&lt;br&gt;
为什么要使两种节点有继承关系呢？为什么 TreeNode 不直接继承 Node 节点呢？&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;static&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;final&lt;/span&gt; &lt;span class=&#34;class&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;TreeNode&lt;/span&gt;&amp;lt;&lt;span class=&#34;title&#34;&gt;K&lt;/span&gt;,&lt;span class=&#34;title&#34;&gt;V&lt;/span&gt;&amp;gt; &lt;span class=&#34;keyword&#34;&gt;extends&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;LinkedHashMap&lt;/span&gt;.&lt;span class=&#34;title&#34;&gt;Entry&lt;/span&gt;&amp;lt;&lt;span class=&#34;title&#34;&gt;K&lt;/span&gt;,&lt;span class=&#34;title&#34;&gt;V&lt;/span&gt;&amp;gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    HashMap.TreeNode&amp;lt;K,V&amp;gt; parent;  &lt;span class=&#34;comment&#34;&gt;// red-black tree links&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    HashMap.TreeNode&amp;lt;K,V&amp;gt; left;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    HashMap.TreeNode&amp;lt;K,V&amp;gt; right;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    HashMap.TreeNode&amp;lt;K,V&amp;gt; prev;    &lt;span class=&#34;comment&#34;&gt;// needed to unlink next upon deletion&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;boolean&lt;/span&gt; red;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    TreeNode(&lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; hash, K key, V val, HashMap.Node&amp;lt;K,V&amp;gt; next) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;super&lt;/span&gt;(hash, key, val, next);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;// 省略其他代码&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;hashmap增加方法-hashmapput&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#hashmap增加方法-hashmapput&#34;&gt;#&lt;/a&gt; HashMap 增加方法 HashMap#put ()&lt;/h3&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;/**&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;*  将指定的value和key关联在map中。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;*  如果map中已经存在了key,那么将会替换掉老的value。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;* &lt;span class=&#34;doctag&#34;&gt;@param&lt;/span&gt; key key 指定的key&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;* &lt;span class=&#34;doctag&#34;&gt;@param&lt;/span&gt; value value 和指定key关联的value&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;* &lt;span class=&#34;doctag&#34;&gt;@return&lt;/span&gt; 如果返回了value，就说明map中原来和key关联是有值的。如果返回null就说明没有value。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;*/&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; V &lt;span class=&#34;title&#34;&gt;put&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(K key, V value)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; putVal(hash(key), key, value, &lt;span class=&#34;keyword&#34;&gt;false&lt;/span&gt;, &lt;span class=&#34;keyword&#34;&gt;true&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;这里就比较有看点了，1. 这里是 hashMap 的增加方法，增加方法里必然会遇到 hash 冲突的问题，我们等会看下 hash 冲突是如何处理的，还会涉及到扩容的问题，我们也要来看看他是怎么扩容的，扩容的过程中还会遇到普通的桶转换成树的过程。我们先来看下 hash 值是怎么计算出来的。&lt;/p&gt;
&lt;ul&gt;
&lt;li TODO=&#34;&#34; 和jdk1.7中的比较=&#34;&#34;&gt;&lt;code&gt;hash&lt;/code&gt;  值的计算&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;/**&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt; * 计算key的hashCode并且和hashCode值高16位进行异或运算。(异或: 相同为0，不同为1)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt; * 混和低位和高位，就是为了加大低位的随机性,而且混合后的低位掺杂了高位的部分特征,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt; * 这样高位的信息也被变相的保留了下来。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt; */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;static&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;final&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;hash&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(Object key)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; h;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; (key == &lt;span class=&#34;keyword&#34;&gt;null&lt;/span&gt;) ? &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt; : (h = key.hashCode()) ^ (h &amp;gt;&amp;gt;&amp;gt; &lt;span class=&#34;number&#34;&gt;16&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;为什么这么做呢？见&lt;a href=&#34;/2021/07/15/source%20code/HashMap/HashMap%E7%9A%84Hash%E5%87%BD%E6%95%B0%E5%88%B0%E5%BA%95%E6%9C%89%E4%BB%80%E4%B9%88%E6%84%8F%E4%B9%89/&#34;&gt; HashMap 的 Hash 函数到底有什么意义&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;那我们接下接着看 &lt;code&gt;putVal()&lt;/code&gt;  方法。&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;figcaption&gt;&lt;span&gt;&amp;#123;.line-numbers&amp;#125;&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;63&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;64&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;65&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;66&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;67&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;68&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;69&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;70&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;71&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;72&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;/**&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt; * 实现Map.put相关的方法。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt; * &lt;span class=&#34;doctag&#34;&gt;@param&lt;/span&gt; hash hash for key&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt; * &lt;span class=&#34;doctag&#34;&gt;@param&lt;/span&gt; key the key&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt; * &lt;span class=&#34;doctag&#34;&gt;@param&lt;/span&gt; value the value to put&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt; * &lt;span class=&#34;doctag&#34;&gt;@param&lt;/span&gt; onlyIfAbsent if true, don&amp;#x27;t change existing value&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt; *                     如果是true的,不会修改存在的值。返回老的值。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt; * &lt;span class=&#34;doctag&#34;&gt;@param&lt;/span&gt; evict if false, the table is in creation mode.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt; *              如果为false的时候,表属于创建模式,第一次新增元素的时候。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt; * &lt;span class=&#34;doctag&#34;&gt;@return&lt;/span&gt; previous value, or null if none&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt; */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;final&lt;/span&gt; V &lt;span class=&#34;title&#34;&gt;putVal&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(&lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; hash, K key, V value, &lt;span class=&#34;keyword&#34;&gt;boolean&lt;/span&gt; onlyIfAbsent,&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;params&#34;&gt;&lt;span class=&#34;function&#34;&gt;                &lt;span class=&#34;keyword&#34;&gt;boolean&lt;/span&gt; evict)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    HashMap.Node&amp;lt;K,V&amp;gt;[] tab;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    HashMap.Node&amp;lt;K,V&amp;gt; p;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; n, i;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ((tab = table) == &lt;span class=&#34;keyword&#34;&gt;null&lt;/span&gt; || (n = tab.length) == &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;comment&#34;&gt;// 如果数组为null,或者数组长度为0的时候，数组需要调整大小。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        n = (tab = resize()).length;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ((p = tab[i = (n - &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;) &amp;amp; hash]) == &lt;span class=&#34;keyword&#34;&gt;null&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;comment&#34;&gt;// 定位到数组的桶为null的时候,创建桶内的第一个元素。next=null;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        tab[i] = newNode(hash, key, value, &lt;span class=&#34;keyword&#34;&gt;null&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;comment&#34;&gt;// 如果桶不为null，则创建链表&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        HashMap.Node&amp;lt;K,V&amp;gt; e; K k;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;comment&#34;&gt;// p表示当前桶的第一个元素。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;comment&#34;&gt;// 如果新增的元素和第一个元素相等的话(出现hash冲突),暂存已经存在的元素到变量e中。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (p.hash == hash &amp;amp;&amp;amp;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                ((k = p.key) == key || (key != &lt;span class=&#34;keyword&#34;&gt;null&lt;/span&gt; &amp;amp;&amp;amp; key.equals(k))))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            e = p;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (p &lt;span class=&#34;keyword&#34;&gt;instanceof&lt;/span&gt; HashMap.TreeNode)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;comment&#34;&gt;// 如果是树节点。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            e = ((HashMap.TreeNode&amp;lt;K,V&amp;gt;)p).putTreeVal(&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt;, tab, hash, key, value);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;comment&#34;&gt;// 链表元素新增的过程了。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; binCount = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;; ; ++binCount) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ((e = p.next) == &lt;span class=&#34;keyword&#34;&gt;null&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                    p.next = newNode(hash, key, value, &lt;span class=&#34;keyword&#34;&gt;null&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (binCount &amp;gt;= TREEIFY_THRESHOLD - &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                        &lt;span class=&#34;comment&#34;&gt;// 如果桶内的元素数量达到树化的阈值,将链表转换成树。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                        treeifyBin(tab, hash);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                    &lt;span class=&#34;keyword&#34;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (e.hash == hash &amp;amp;&amp;amp;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                        ((k = e.key) == key || (key != &lt;span class=&#34;keyword&#34;&gt;null&lt;/span&gt; &amp;amp;&amp;amp; key.equals(k))))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                    &lt;span class=&#34;comment&#34;&gt;// 如果第一个元素和要新增的元素hash,key都相等的话,直接进行新增操作。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                    &lt;span class=&#34;keyword&#34;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                p = e;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (e != &lt;span class=&#34;keyword&#34;&gt;null&lt;/span&gt;) &amp;#123; &lt;span class=&#34;comment&#34;&gt;// existing mapping for key&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;comment&#34;&gt;// 如果原来的元素不为空,保留原来的值。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            V oldValue = e.value;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (!onlyIfAbsent || oldValue == &lt;span class=&#34;keyword&#34;&gt;null&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                &lt;span class=&#34;comment&#34;&gt;// 覆盖掉原来的value;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                e.value = value;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;comment&#34;&gt;// 留一个无方法体的方法，供子类扩展&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            afterNodeAccess(e);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; oldValue;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;// failFast计数&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    ++modCount;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (++size &amp;gt; threshold)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;comment&#34;&gt;// 如果table中的桶的数量超过了阈值。扩容。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        resize();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;// 供子类扩展的方法。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    afterNodeInsertion(evict);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;null&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;这段代码里中有三处重要的地方， &lt;code&gt;resize()&lt;/code&gt; , &lt;code&gt;treeifyBin()&lt;/code&gt; , &lt;code&gt;putTreeNode()&lt;/code&gt; , 接下来我们依次看下这三个方法。&lt;/p&gt;
&lt;h4 id=&#34;resize&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#resize&#34;&gt;#&lt;/a&gt; resize&lt;/h4&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;figcaption&gt;&lt;span&gt;&amp;#123;.line-numbers&amp;#125;&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;63&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;64&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;65&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;66&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;67&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;68&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;69&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;70&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;71&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;72&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;73&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;74&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;75&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;76&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;77&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;78&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;79&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;80&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;81&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;82&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;83&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;84&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;85&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;86&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;87&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;88&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;89&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;90&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;91&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;92&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;93&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;94&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;95&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;96&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;97&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;98&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;99&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;100&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;101&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;102&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;103&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;104&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;105&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;106&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;107&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;108&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;109&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;110&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;111&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;112&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;113&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;114&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;115&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;/**&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt; * 初始化，或者加倍表格的大小&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt; * 如果为null时候，根据字段threshold的初始容量进行分配&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt; * 否则，因为我们正在使用二次幂扩展，所以每个bin中的元素必须保持相同的索引，或者在新表中以两个偏移的幂移动&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt; *&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt; * &lt;span class=&#34;doctag&#34;&gt;@return&lt;/span&gt; the table 新的表&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt; */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;final&lt;/span&gt; HashMap.Node&amp;lt;K, V&amp;gt;[] resize() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    HashMap.Node&amp;lt;K, V&amp;gt;[] oldTab = table;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; oldCap = (oldTab == &lt;span class=&#34;keyword&#34;&gt;null&lt;/span&gt;) ? &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt; : oldTab.length;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; oldThr = threshold;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; newCap, newThr = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (oldCap &amp;gt; &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;comment&#34;&gt;// 如果旧表的大小大于0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (oldCap &amp;gt;= MAXIMUM_CAPACITY) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;comment&#34;&gt;// hash表达到最大容量&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            threshold = Integer.MAX_VALUE;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; oldTab;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125; &lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ((newCap = oldCap &amp;lt;&amp;lt; &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;) &amp;lt; MAXIMUM_CAPACITY &amp;amp;&amp;amp;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                oldCap &amp;gt;= DEFAULT_INITIAL_CAPACITY) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;comment&#34;&gt;// 如果翻倍后旧表大小&amp;lt;最大表长度，并且旧表长度&amp;gt;默认初始化长度。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;comment&#34;&gt;// 扩容的阈值也翻倍。 还是等级 table.length*loadFactor&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            newThr = oldThr &amp;lt;&amp;lt; &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;; &lt;span class=&#34;comment&#34;&gt;// double threshold&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125; &lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (oldThr &amp;gt; &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;) &amp;#123; &lt;span class=&#34;comment&#34;&gt;// initial capacity was placed in threshold&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;comment&#34;&gt;// 旧表长度&amp;lt;=0,旧的threshold&amp;gt;0,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;comment&#34;&gt;// 就把threshold设置为表长度。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        newCap = oldThr;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125; &lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt; &amp;#123;               &lt;span class=&#34;comment&#34;&gt;// zero initial threshold signifies using defaults&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;comment&#34;&gt;// 设置为默认值。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        newCap = DEFAULT_INITIAL_CAPACITY;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        newThr = (&lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt;) (DEFAULT_LOAD_FACTOR * DEFAULT_INITIAL_CAPACITY);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (newThr == &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;comment&#34;&gt;// 如果新的扩缩容阈值等于0,设置新的扩缩容阈值为新的容量*负载因子.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;float&lt;/span&gt; ft = (&lt;span class=&#34;keyword&#34;&gt;float&lt;/span&gt;) newCap * loadFactor;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        newThr = (newCap &amp;lt; MAXIMUM_CAPACITY &amp;amp;&amp;amp; ft &amp;lt; (&lt;span class=&#34;keyword&#34;&gt;float&lt;/span&gt;) MAXIMUM_CAPACITY ?&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                (&lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt;) ft : Integer.MAX_VALUE);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    threshold = newThr;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;// 重新创建新的hash表&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;meta&#34;&gt;@SuppressWarnings(&amp;#123;&amp;quot;rawtypes&amp;quot;, &amp;quot;unchecked&amp;quot;&amp;#125;)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    HashMap.Node&amp;lt;K, V&amp;gt;[] newTab = (HashMap.Node&amp;lt;K, V&amp;gt;[]) &lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; HashMap.Node[newCap];&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    table = newTab;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;// 如果旧表不为空,进行扩容.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;// 否则(旧表为空)就进行初始化过程.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (oldTab != &lt;span class=&#34;keyword&#34;&gt;null&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; j = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;; j &amp;lt; oldCap; ++j) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            HashMap.Node&amp;lt;K, V&amp;gt; e;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ((e = oldTab[j]) != &lt;span class=&#34;keyword&#34;&gt;null&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                oldTab[j] = &lt;span class=&#34;keyword&#34;&gt;null&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (e.next == &lt;span class=&#34;keyword&#34;&gt;null&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                    &lt;span class=&#34;comment&#34;&gt;// 如果当前桶只有一个节点。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                    newTab[e.hash &amp;amp; (newCap - &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;)] = e;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                &amp;#125; &lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (e &lt;span class=&#34;keyword&#34;&gt;instanceof&lt;/span&gt; HashMap.TreeNode) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                    &lt;span class=&#34;comment&#34;&gt;// 如果当前桶是棵红黑树&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                    ((HashMap.TreeNode&amp;lt;K, V&amp;gt;) e).split(&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt;, newTab, j, oldCap);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                &amp;#125; &lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt; &amp;#123; &lt;span class=&#34;comment&#34;&gt;// preserve order&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                    &lt;span class=&#34;comment&#34;&gt;// 桶是链表,将该桶内的元素重新分配到表中。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                    HashMap.Node&amp;lt;K, V&amp;gt; loHead = &lt;span class=&#34;keyword&#34;&gt;null&lt;/span&gt;, loTail = &lt;span class=&#34;keyword&#34;&gt;null&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                    HashMap.Node&amp;lt;K, V&amp;gt; hiHead = &lt;span class=&#34;keyword&#34;&gt;null&lt;/span&gt;, hiTail = &lt;span class=&#34;keyword&#34;&gt;null&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                    HashMap.Node&amp;lt;K, V&amp;gt; next;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                    &lt;span class=&#34;comment&#34;&gt;// 遍历桶内的元素，将元素重新分配到hash表内的各个桶中。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                    &lt;span class=&#34;comment&#34;&gt;// 具体的实现过程是: 将当前的元素的hash值和容量取&amp;amp;,如果&amp;gt;0,那就说明该元素应该分配到新的桶内。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                    &lt;span class=&#34;comment&#34;&gt;// 桶的位置就是: oldCap+j.即桶原来容器+该元素所在的桶的下标。(hiHead所标识的位置)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                    &lt;span class=&#34;comment&#34;&gt;// 反之如果hash值是==0的,那么该元素就应该还在当前桶内。(loHead所标识的位置)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                    &lt;span class=&#34;comment&#34;&gt;// 这里所说的位置都是指桶的下标,整个表都是新的了,位置肯定都变了。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                    &lt;span class=&#34;comment&#34;&gt;// 为什么可以这么实现呢？&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                    &lt;span class=&#34;comment&#34;&gt;// 因为扩容的时候，使用的是原来容量的2倍进行扩容的。所以就可以使用(oldCap+j)的方式来确定元素的新位置了。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                    &lt;span class=&#34;keyword&#34;&gt;do&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                        next = e.next;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                        &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ((e.hash &amp;amp; oldCap) == &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                            &lt;span class=&#34;comment&#34;&gt;// 还在原桶中&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                            &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (loTail == &lt;span class=&#34;keyword&#34;&gt;null&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                                loHead = e;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                            &lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                                &lt;span class=&#34;comment&#34;&gt;// 位置最后一个节点为空,使用e=next的时候，next为null的情况。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                                &lt;span class=&#34;comment&#34;&gt;// 在桶内元素遍历完成后,会把桶的最后一个元素的next置为null。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                                loTail.next = e;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                            loTail = e;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                        &amp;#125; &lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                            &lt;span class=&#34;comment&#34;&gt;// 放置到新的桶内。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                            &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (hiTail == &lt;span class=&#34;keyword&#34;&gt;null&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                                hiHead = e;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                            &lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                                &lt;span class=&#34;comment&#34;&gt;// 位置最后一个节点为空,使用e=next的时候，next为null的情况。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                                &lt;span class=&#34;comment&#34;&gt;// 在桶内元素遍历完成后,会把桶的最后一个元素的next置为null。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                                hiTail.next = e;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                            hiTail = e;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                    &amp;#125; &lt;span class=&#34;keyword&#34;&gt;while&lt;/span&gt; ((e = next) != &lt;span class=&#34;keyword&#34;&gt;null&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (loTail != &lt;span class=&#34;keyword&#34;&gt;null&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                        loTail.next = &lt;span class=&#34;keyword&#34;&gt;null&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                        &lt;span class=&#34;comment&#34;&gt;// 原来桶的位置。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                        newTab[j] = loHead;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (hiTail != &lt;span class=&#34;keyword&#34;&gt;null&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                        hiTail.next = &lt;span class=&#34;keyword&#34;&gt;null&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                        &lt;span class=&#34;comment&#34;&gt;// 确定新桶的位置&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                        newTab[j + oldCap] = hiHead;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; newTab;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;看一个散列还算非常均匀的例子来看扩容过程。&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/images/JavaSourceCode/HashMap/hashMap04-Put%E6%96%B9%E6%B3%95%E8%BF%87%E7%A8%8B01.png&#34; alt=&#34;hashMap04-Put方法过程01.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;那么进行扩容的过程是怎么样的呢？&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/images/JavaSourceCode/HashMap/hashMap05-resize%E6%96%B9%E6%B3%9501.png&#34; alt=&#34;hashMap05-resize方法01.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;以元素 1 和 12 为例，看扩容过程:&lt;br&gt;
 元素 1 的 hash 值为 49.(以 hashMap 计算 hash 值的方式得出。)， 与 15 取 &amp;amp; 计算桶的下标为 1, 扩容后，与 31 取 &amp;amp;, 计算桶的下标为 17. 所以扩容前位置是 0，扩容后元素 1 的存放位置是 17。&lt;br&gt;
代码中是怎么完成这个过程的呢？&lt;br&gt;
和扩容前 hash 表的容量取 &amp;amp;, 得  &lt;code&gt;49 &amp;amp; 16 = 16 &amp;gt; 0&lt;/code&gt;  (代码第 86-96 行), 新的桶的头节点 (对应代码里的 hiHead) 就是当前节点 1，尾节点 (hiTail) 赋为当前节点。然后进行下一次 &lt;code&gt;do...while&lt;/code&gt;  循环，处理节点 12, 计算出节点 12 的 hash 值为 &lt;code&gt;1569&lt;/code&gt; , 进行计算 &lt;code&gt;1569 &amp;amp; 16 = 0 == 0&lt;/code&gt;  原来桶的头结点是节点 12, 尾节点也是节点 12 (对应着代码第 76-86 行), 这样 hitail 和 loTail 均不为 null, 所以然后直接使用 &lt;code&gt;newTab[j] = loHead;&lt;/code&gt;  和  &lt;code&gt;newTab[j + oldCap] = hiHead;&lt;/code&gt;  的方式确定桶的位置。这个案例里，处理完节点 12 才会确定桶的位置。因为原来的表中下标为 1 的桶中有两个元素 1 和 12. 那桶里只有一个元素的怎么处理的呢？ &lt;code&gt;newTab[e.hash &amp;amp; (newCap - 1)] = e;&lt;/code&gt;  e 是当前节点，newCap 是新表的容量。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;如果你想问为什么能使用   &lt;code&gt;hash &amp;amp; olcCap==0?&lt;/code&gt;  来决定是 &lt;code&gt;newTab[j]&lt;/code&gt;  还是  &lt;code&gt;newTab[j+oldCap]&lt;/code&gt;  这种方式来确定新的桶的下标的话。 那么原因就是扩容使用的是 2 次幂的方式，容量是原来容量的 2 倍。所以就可以使用  &lt;code&gt;hash &amp;amp; olcCap==0?&lt;/code&gt;  来判断了。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;这个例子呢，演示了扩容过程中的链表的新增和扩容过程。再回头看 resize 方法，还有一种情况我们没有分析过。那就是&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;...&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (e &lt;span class=&#34;keyword&#34;&gt;instanceof&lt;/span&gt; HashMap.TreeNode) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;// 如果当前桶是棵红黑树&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    ((HashMap.TreeNode&amp;lt;K, V&amp;gt;) e).split(&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt;, newTab, j, oldCap);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;...&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;figcaption&gt;&lt;span&gt;&amp;#123;.line-numbers&amp;#125;&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;58&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;/**&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;    * 将原来树桶中的节点拆分为更低或更高的树桶,如果太小的话就转化成链表&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;    * 只被resize方法调用&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;    *&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;    * &lt;span class=&#34;doctag&#34;&gt;@param&lt;/span&gt; map   hash表&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;    * &lt;span class=&#34;doctag&#34;&gt;@param&lt;/span&gt; tab   表中的指定的桶的头结点(桶是一个棵树)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;    * &lt;span class=&#34;doctag&#34;&gt;@param&lt;/span&gt; index 要拆分的hash表的节点&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;    * &lt;span class=&#34;doctag&#34;&gt;@param&lt;/span&gt; bit   the bit of hash to split on 要分裂的hash位&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;    */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;final&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;split&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(HashMap&amp;lt;K, V&amp;gt; map, HashMap.Node&amp;lt;K, V&amp;gt;[] tab, &lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; index, &lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; bit)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    HashMap.TreeNode&amp;lt;K, V&amp;gt; b = &lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;// Relink into lo and hi lists, preserving order&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    HashMap.TreeNode&amp;lt;K, V&amp;gt; loHead = &lt;span class=&#34;keyword&#34;&gt;null&lt;/span&gt;, loTail = &lt;span class=&#34;keyword&#34;&gt;null&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    HashMap.TreeNode&amp;lt;K, V&amp;gt; hiHead = &lt;span class=&#34;keyword&#34;&gt;null&lt;/span&gt;, hiTail = &lt;span class=&#34;keyword&#34;&gt;null&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;// lc代表的是原来的桶的元素的数量&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;// hc代表新的桶中的元素的数量, 用来和UNTREEIFY_THRESHOLD比较决定是否要转换结构.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; lc = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, hc = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;// 这里还是当做链表去处理，把桶内的元素重新散列。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; (HashMap.TreeNode&amp;lt;K, V&amp;gt; e = b, next; e != &lt;span class=&#34;keyword&#34;&gt;null&lt;/span&gt;; e = next) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        next = (HashMap.TreeNode&amp;lt;K, V&amp;gt;) e.next;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        e.next = &lt;span class=&#34;keyword&#34;&gt;null&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ((e.hash &amp;amp; bit) == &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ((e.prev = loTail) == &lt;span class=&#34;keyword&#34;&gt;null&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                loHead = e;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                loTail.next = e;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            loTail = e;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            ++lc;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125; &lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ((e.prev = hiTail) == &lt;span class=&#34;keyword&#34;&gt;null&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                hiHead = e;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                hiTail.next = e;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            hiTail = e;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            ++hc;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;//  散列完后，判断原来的桶(lo)和新的桶中的元素个数&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;//  然后决定转换为树还是链表&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (loHead != &lt;span class=&#34;keyword&#34;&gt;null&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (lc &amp;lt;= UNTREEIFY_THRESHOLD)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            tab[index] = loHead.untreeify(map);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            tab[index] = loHead;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (hiHead != &lt;span class=&#34;keyword&#34;&gt;null&lt;/span&gt;) &lt;span class=&#34;comment&#34;&gt;// (else is already treeified)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                loHead.treeify(tab);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (hiHead != &lt;span class=&#34;keyword&#34;&gt;null&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (hc &amp;lt;= UNTREEIFY_THRESHOLD)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            tab[index + bit] = hiHead.untreeify(map);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            tab[index + bit] = hiHead;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (loHead != &lt;span class=&#34;keyword&#34;&gt;null&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                hiHead.treeify(tab);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;将树重新穿换成链表的过程就比较简单了：&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;figcaption&gt;&lt;span&gt;&amp;#123;.line-numbers&amp;#125;&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;/**&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;    * Returns a list of non-TreeNodes replacing those linked from&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;    * this node.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;    */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;final&lt;/span&gt; HashMap.&lt;span class=&#34;function&#34;&gt;Node&amp;lt;K, V&amp;gt; &lt;span class=&#34;title&#34;&gt;untreeify&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(HashMap&amp;lt;K, V&amp;gt; map)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    HashMap.Node&amp;lt;K, V&amp;gt; hd = &lt;span class=&#34;keyword&#34;&gt;null&lt;/span&gt;, tl = &lt;span class=&#34;keyword&#34;&gt;null&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; (HashMap.Node&amp;lt;K, V&amp;gt; q = &lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt;; q != &lt;span class=&#34;keyword&#34;&gt;null&lt;/span&gt;; q = q.next) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;comment&#34;&gt;// replacementNode:将TreeNode转成Node&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        HashMap.Node&amp;lt;K, V&amp;gt; p = map.replacementNode(q, &lt;span class=&#34;keyword&#34;&gt;null&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (tl == &lt;span class=&#34;keyword&#34;&gt;null&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            hd = p;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            tl.next = p;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        tl = p;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; hd;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;这里就是和红黑树相关的内容了，这里关键的是 split 调用了一个 treeify 的方法。这个方法同时也被 treeifyBin 调用了。所以 treeify 方法就和 treeifyBin 方法一块分享。&lt;br&gt;
顺便提一嘴，他们有如下的关系:&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/images/JavaSourceCode/HashMap/hashMap06-%E7%BA%A2%E9%BB%91%E6%A0%91%E7%9B%B8%E5%85%B3%E6%96%B9%E6%B3%95%E8%B0%83%E7%94%A8%E5%85%B3%E7%B3%BB.png&#34; alt=&#34;hashMap06-红黑树相关方法调用关系.png&#34;&gt;&lt;br&gt;
 其中蓝色的是红黑树的方法，黄色的是 HashMap 调用的方法。&lt;/p&gt;
&lt;h4 id=&#34;treeifybin&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#treeifybin&#34;&gt;#&lt;/a&gt; treeifyBin&lt;/h4&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;figcaption&gt;&lt;span&gt;&amp;#123;.line-numbers&amp;#125;&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;/**&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;* 将链表转换成树。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;* 替换给定hash值的索引处的桶的所有节点，如果表太小(table.length小于64),就调整大小.这里其实是对hash表的一种优化,防止因为表长度太小而转换成树,造成性能浪费&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;* &lt;span class=&#34;doctag&#34;&gt;@param&lt;/span&gt; hash 用于确定桶的位置。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;*/&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;final&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;treeifyBin&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(HashMap.Node&amp;lt;K, V&amp;gt;[] tab, &lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; hash)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; n, index;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;// 链表的节点&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    HashMap.Node&amp;lt;K, V&amp;gt; e;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;// 如果hash表为空或者hash表的长度小于最小化的树化容量(64)，这时会重调整大小。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;// 将容量扩大为原来的两倍。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (tab == &lt;span class=&#34;keyword&#34;&gt;null&lt;/span&gt; || (n = tab.length) &amp;lt; MIN_TREEIFY_CAPACITY) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        resize();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125; &lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ((e = tab[index = (n - &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;) &amp;amp; hash]) != &lt;span class=&#34;keyword&#34;&gt;null&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        `HashMap.TreeNode&amp;lt;K, V&amp;gt; hd = &lt;span class=&#34;keyword&#34;&gt;null&lt;/span&gt;, tl = &lt;span class=&#34;keyword&#34;&gt;null&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;do&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;comment&#34;&gt;// 构建一个树的节点。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            HashMap.TreeNode&amp;lt;K, V&amp;gt; p = replacementTreeNode(e, &lt;span class=&#34;keyword&#34;&gt;null&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;comment&#34;&gt;// 如果尾为null,说明这个节点是该桶中的第一个元素，&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;comment&#34;&gt;// 所以要将其赋于头节点。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (tl == &lt;span class=&#34;keyword&#34;&gt;null&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                hd = p;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &amp;#125; &lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                &lt;span class=&#34;comment&#34;&gt;// 将该节点放在尾节点后。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                p.prev = tl;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                tl.next = p;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;comment&#34;&gt;// 当前节点作为尾节点。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            tl = p;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125; &lt;span class=&#34;keyword&#34;&gt;while&lt;/span&gt; ((e = e.next) != &lt;span class=&#34;keyword&#34;&gt;null&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;comment&#34;&gt;// 如果该桶中有元素，则进行树化。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ((tab[index] = hd) != &lt;span class=&#34;keyword&#34;&gt;null&lt;/span&gt;)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            hd.treeify(tab);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;`&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;其实呢，这个 &lt;code&gt;treeifyBin&lt;/code&gt;  方法还是做了一些将桶树化的前置操作，然后将装有 &lt;code&gt;TreeNode&lt;/code&gt;  节点的桶交给了 &lt;code&gt;treeify&lt;/code&gt;  方法去真正的转换为一棵红黑树。那我们接下来看下 &lt;code&gt;treeify&lt;/code&gt;  方法。注意这个方法定义在 &lt;code&gt;HashMap.TreeNode#treeify()&lt;/code&gt;&lt;/p&gt;
&lt;h5 id=&#34;treeify方法&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#treeify方法&#34;&gt;#&lt;/a&gt; treeify () 方法&lt;/h5&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;figcaption&gt;&lt;span&gt;&amp;#123;.line-numbers&amp;#125;&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;63&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;64&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;65&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;66&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;67&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;68&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;/**&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt; * Forms tree of the nodes linked from this node.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt; * 把该节点连接的所有节点组成一棵树。(树化的过程)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt; */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;final&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;treeify&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(HashMap.Node&amp;lt;K, V&amp;gt;[] tab)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;// 该棵树的根节点。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    HashMap.TreeNode&amp;lt;K, V&amp;gt; root = &lt;span class=&#34;keyword&#34;&gt;null&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;// x是遍历的每个节点。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; (HashMap.TreeNode&amp;lt;K, V&amp;gt; x = &lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt;, next; x != &lt;span class=&#34;keyword&#34;&gt;null&lt;/span&gt;; x = next) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;comment&#34;&gt;// 存下下一个节点。(指向下一个节点的指针)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        next = (HashMap.TreeNode&amp;lt;K, V&amp;gt;) x.next;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        x.left = x.right = &lt;span class=&#34;keyword&#34;&gt;null&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;comment&#34;&gt;// 对根节点就行赋值(无父节点,黑色)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (root == &lt;span class=&#34;keyword&#34;&gt;null&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            x.parent = &lt;span class=&#34;keyword&#34;&gt;null&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            x.red = &lt;span class=&#34;keyword&#34;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            root = x;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125; &lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            K k = x.key;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; h = x.hash;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            Class&amp;lt;?&amp;gt; kc = &lt;span class=&#34;keyword&#34;&gt;null&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; (HashMap.TreeNode&amp;lt;K, V&amp;gt; p = root; ; ) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                &lt;span class=&#34;comment&#34;&gt;// dir,负值和0为左子树，正值为右子树。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                &lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; dir, ph;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                K pk = p.key;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                &lt;span class=&#34;comment&#34;&gt;/*************判断节点在左子树还是右子树 -start***************/&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                &lt;span class=&#34;comment&#34;&gt;// h为当前节点的hash值。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                &lt;span class=&#34;comment&#34;&gt;// p是父节点, ph是父节点的hash值。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ((ph = p.hash) &amp;gt; h) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                    &lt;span class=&#34;comment&#34;&gt;// 放在左子树&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                    dir = -&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                &amp;#125; &lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (ph &amp;lt; h) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                    &lt;span class=&#34;comment&#34;&gt;// 放在又子树&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                    dir = &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                &lt;span class=&#34;comment&#34;&gt;//如果当前节点和父节点的hash值相等:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                &lt;span class=&#34;comment&#34;&gt;//如果节点的key实现了Comparable, 或者 父节点和当前节点的key为一个。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                &lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ((kc == &lt;span class=&#34;keyword&#34;&gt;null&lt;/span&gt; &amp;amp;&amp;amp; (kc = comparableClassFor(k)) == &lt;span class=&#34;keyword&#34;&gt;null&lt;/span&gt;) ||&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                        (dir = compareComparables(kc, k, pk)) == &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                    &lt;span class=&#34;comment&#34;&gt;// k是当前节点的key，pk是父节点的key&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                    &lt;span class=&#34;comment&#34;&gt;// 根据hashMap定义的规则,判断当前节点应该位于左子树还是右子树。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                    dir = tieBreakOrder(k, pk);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                &lt;span class=&#34;comment&#34;&gt;/*************判断节点在左子树还是右子树 -end***************/&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                HashMap.TreeNode&amp;lt;K, V&amp;gt; xp = p;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                &lt;span class=&#34;comment&#34;&gt;// p==null,代表着遍历到了叶子节点。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ((p = (dir &amp;lt;= &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;) ? p.left : p.right) == &lt;span class=&#34;keyword&#34;&gt;null&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                    &lt;span class=&#34;comment&#34;&gt;// xp是当前节点的父节点。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                    x.parent = xp;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (dir &amp;lt;= &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                        xp.left = x;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                    &amp;#125; &lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                        xp.right = x;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                    &lt;span class=&#34;comment&#34;&gt;// 平衡插入的红黑树(完成插入后，红黑树的性质可能被破坏,这里进行重新平衡)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                    root = balanceInsertion(root, x);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                    &lt;span class=&#34;keyword&#34;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;//确保红黑树的根节点是桶的第一个节点。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    moveRootToFront(tab, root);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;在这里呢，有 3 个方法没有仔细去说明，分别是 tieBreakOrder (),balanceInsertion () 和 moveRootToFront (tab, root), 注意，这三个方法在下面的 PutTreeVal 中也有调用。当然包括调整平衡的左旋 (rotateLeft), 右旋 (rotateRight) 方法。我们接着往下看吧。&lt;/p&gt;
&lt;h5 id=&#34;balanceinsertion方法&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#balanceinsertion方法&#34;&gt;#&lt;/a&gt; balanceInsertion 方法&lt;/h5&gt;
&lt;p&gt;在说这个方法之前，先总结下红黑树变换的 5 条规则。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;规则 1: 红黑树为空树 ==&amp;gt; {&lt;mark&gt;直接插入当前节点，节点涂为黑色。&lt;/mark&gt;}&lt;/li&gt;
&lt;li&gt;规则 2: 插入节点的父节点是黑色 ==&amp;gt; {&lt;mark&gt;直接插入当前节点.&lt;/mark&gt;}&lt;/li&gt;
&lt;li&gt;规则 3: 当前节点的父节点是红色，并且叔叔节点是红色。==&amp;gt; {&lt;mark&gt;父节点涂黑，叔叔节点涂黑，祖父节点涂红.&lt;/mark&gt;}&lt;/li&gt;
&lt;li&gt;规则 4: 当前节点的父节点是红色，叔叔是黑色，当前节点是父节点的右子树. ==&amp;gt; {&lt;mark&gt;当前节点的父节点作为新的当前节点，以新的当前节点左旋。&lt;/mark&gt;}&lt;/li&gt;
&lt;li&gt;规则 5: 当前节点的父节点是红色，叔叔节点是黑色，当前节点是父节点的左子树. ==&amp;gt; {&lt;mark&gt;父节点变为黑色，祖父节点变为红色，以祖父节点为支点右旋.&lt;/mark&gt;}&lt;br&gt;
 下面结合代码看 HashMap 是怎么实现上面这个 5 个规则的:&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;figcaption&gt;&lt;span&gt;&amp;#123;.line-numbers&amp;#125;&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;63&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;64&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;65&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;66&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;67&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;68&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;69&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;70&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;71&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;72&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;73&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;74&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;75&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;76&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;77&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;78&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;79&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;80&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;81&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;82&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;83&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;84&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;85&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;86&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;87&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;88&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;89&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;90&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;91&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;92&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;93&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;94&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;95&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;96&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;/**&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt; * 调整红黑树&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt; * &lt;span class=&#34;doctag&#34;&gt;@param&lt;/span&gt; root 根节点&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt; * &lt;span class=&#34;doctag&#34;&gt;@param&lt;/span&gt; x 当前节点&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt; */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;static&lt;/span&gt; &amp;lt;K, V&amp;gt; HashMap.&lt;span class=&#34;function&#34;&gt;TreeNode&amp;lt;K, V&amp;gt; &lt;span class=&#34;title&#34;&gt;balanceInsertion&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(HashMap.TreeNode&amp;lt;K, V&amp;gt; root,&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;params&#34;&gt;&lt;span class=&#34;function&#34;&gt;                                                        HashMap.TreeNode&amp;lt;K, V&amp;gt; x)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    x.red = &lt;span class=&#34;keyword&#34;&gt;true&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;// xp: 当前节点的父节点(父节点)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;// xpp: 当前节点的父节点的父节点(祖父节点)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;// xppl: 当前节点的父节点的父节点的左子树(叔叔节点)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;// xppr: 当前节点的父节点的父节点的右子树(叔叔节点)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; (HashMap.TreeNode&amp;lt;K, V&amp;gt; xp, xpp, xppl, xppr; ; ) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;comment&#34;&gt;// 规则1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ((xp = x.parent) == &lt;span class=&#34;keyword&#34;&gt;null&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            x.red = &lt;span class=&#34;keyword&#34;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; x;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;comment&#34;&gt;// 父节点为黑色 或者祖父节点为空==&amp;gt;规则2&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (!xp.red || (xpp = xp.parent) == &lt;span class=&#34;keyword&#34;&gt;null&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; root;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;comment&#34;&gt;// 父节点是左子树&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (xp == (xppl = xpp.left)) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;comment&#34;&gt;// 父节点是左子树,且祖父节点存在右子树(叔叔节点为右子树)，并且叔叔为红色。 ==&amp;gt; 父节点是右子树时的性质1.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ((xppr = xpp.right) != &lt;span class=&#34;keyword&#34;&gt;null&lt;/span&gt; &amp;amp;&amp;amp; xppr.red) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                &lt;span class=&#34;comment&#34;&gt;// 叔叔节点涂黑&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                xppr.red = &lt;span class=&#34;keyword&#34;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                &lt;span class=&#34;comment&#34;&gt;// 父节点涂黑&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                xp.red = &lt;span class=&#34;keyword&#34;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                &lt;span class=&#34;comment&#34;&gt;// 祖父节点涂红&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                xpp.red = &lt;span class=&#34;keyword&#34;&gt;true&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                &lt;span class=&#34;comment&#34;&gt;// 以祖父节点为新的当前节点&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                x = xpp;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;comment&#34;&gt;// 祖父节点没有右子树或者有右子树,颜色为黑色。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                &lt;span class=&#34;comment&#34;&gt;// 当前节点是父节点的右子树==&amp;gt; 规则4&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (x == xp.right) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                    &lt;span class=&#34;comment&#34;&gt;// 左旋&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                    root = rotateLeft(root, x = xp);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                    &lt;span class=&#34;comment&#34;&gt;// 设置祖父节点要么为空要么是父节点。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                    xpp = (xp = x.parent) == &lt;span class=&#34;keyword&#34;&gt;null&lt;/span&gt; ? &lt;span class=&#34;keyword&#34;&gt;null&lt;/span&gt; : xp.parent;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                &lt;span class=&#34;comment&#34;&gt;// 规则5&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (xp != &lt;span class=&#34;keyword&#34;&gt;null&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                    &lt;span class=&#34;comment&#34;&gt;// 父节点涂成黑色&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                    &lt;span class=&#34;comment&#34;&gt;// 此时xp可能为root.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                    xp.red = &lt;span class=&#34;keyword&#34;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                    &lt;span class=&#34;comment&#34;&gt;// 如果xp不是root的时候。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (xpp != &lt;span class=&#34;keyword&#34;&gt;null&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                        &lt;span class=&#34;comment&#34;&gt;// 祖父节点涂成红色,右旋。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                        xpp.red = &lt;span class=&#34;keyword&#34;&gt;true&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                        root = rotateRight(root, xpp);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;comment&#34;&gt;// 父节点不是左子树==&amp;gt; 父节点是右子树。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;comment&#34;&gt;// 叔叔节点(祖父节点的左子树),叔叔为红色 ==&amp;gt; 规则3&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (xppl != &lt;span class=&#34;keyword&#34;&gt;null&lt;/span&gt; &amp;amp;&amp;amp; xppl.red) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                    &lt;span class=&#34;comment&#34;&gt;// 叔叔涂黑&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                xppl.red = &lt;span class=&#34;keyword&#34;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                &lt;span class=&#34;comment&#34;&gt;// 父节点涂黑&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                xp.red = &lt;span class=&#34;keyword&#34;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                &lt;span class=&#34;comment&#34;&gt;// 祖父节点涂红&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                xpp.red = &lt;span class=&#34;keyword&#34;&gt;true&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                &lt;span class=&#34;comment&#34;&gt;// 以祖父节点为新的当前节点&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                x = xpp;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;comment&#34;&gt;// 祖父节点没有右子树或者有右子树,颜色为黑色。 ==&amp;gt; 规则4&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                &lt;span class=&#34;comment&#34;&gt;// 当前节点是左子树&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (x == xp.left) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                    &lt;span class=&#34;comment&#34;&gt;// 右旋&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                    root = rotateRight(root, x = xp);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                    &lt;span class=&#34;comment&#34;&gt;// 设置祖父节点要么为空要么是父节点。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                    xpp = (xp = x.parent) == &lt;span class=&#34;keyword&#34;&gt;null&lt;/span&gt; ? &lt;span class=&#34;keyword&#34;&gt;null&lt;/span&gt; : xp.parent;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                &lt;span class=&#34;comment&#34;&gt;// ==&amp;gt; 规则5&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (xp != &lt;span class=&#34;keyword&#34;&gt;null&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                    xp.red = &lt;span class=&#34;keyword&#34;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                    &lt;span class=&#34;comment&#34;&gt;// 如果有祖父&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (xpp != &lt;span class=&#34;keyword&#34;&gt;null&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                        &lt;span class=&#34;comment&#34;&gt;// 祖父节点涂成红色,右旋。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                        xpp.red = &lt;span class=&#34;keyword&#34;&gt;true&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                        root = rotateLeft(root, xpp);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h5 id=&#34;rotateleft-左旋&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#rotateleft-左旋&#34;&gt;#&lt;/a&gt; rotateLeft 左旋&lt;/h5&gt;
&lt;p&gt;这里的代码不能用语言描述，真的是只能意会不能言传啊。&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;figcaption&gt;&lt;span&gt;&amp;#123;.line-numbers&amp;#125;&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;static&lt;/span&gt; &amp;lt;K, V&amp;gt; HashMap.&lt;span class=&#34;function&#34;&gt;TreeNode&amp;lt;K, V&amp;gt; &lt;span class=&#34;title&#34;&gt;rotateLeft2&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(HashMap.TreeNode&amp;lt;K, V&amp;gt; root, HashMap.TreeNode&amp;lt;K, V&amp;gt; p)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            HashMap.TreeNode&amp;lt;K, V&amp;gt; r, pp, rl;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;comment&#34;&gt;// p是父节点&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (p != &lt;span class=&#34;keyword&#34;&gt;null&lt;/span&gt; &amp;amp;&amp;amp; p.right != &lt;span class=&#34;keyword&#34;&gt;null&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;comment&#34;&gt;// 右孩子&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        r = p.right;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;comment&#34;&gt;// 右孩子有左孩子的话.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (r.left != &lt;span class=&#34;keyword&#34;&gt;null&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;comment&#34;&gt;// 右孩子变成右孩子的左孩子。即rl变成了p的右孩子。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            p.right = r.left;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            rl = r.left;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            rl.parent = p;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;comment&#34;&gt;// 注意此时r没有关联。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        pp = p.parent;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;comment&#34;&gt;// 如果p没有有父节点的话。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (p.parent == &lt;span class=&#34;keyword&#34;&gt;null&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;comment&#34;&gt;// 将r的父节点置为null&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            r.parent = p.parent;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;comment&#34;&gt;// 颜色涂成黑色，并且r就是根节点。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            (root = r).red = &lt;span class=&#34;keyword&#34;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;comment&#34;&gt;//  如果p节点有父节点，并且p是左子树的话&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (pp.left == p) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;comment&#34;&gt;// 将祖父节点的左子树置为r,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            pp.left = r;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125; &lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;comment&#34;&gt;// 将祖父节点的右子树置为r,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            pp.right = r;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;comment&#34;&gt;// 将r和p连接起来。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        r.left = p;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        p.parent = r;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; root;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;注意下，这里的代码是我修改之后，JDK 的源码看起来很精简，理解起来，啧啧啧。&lt;/p&gt;
&lt;p&gt;MD, 来张图:&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/images/JavaSourceCode/HashMap/HashMap07-%E5%B7%A6%E6%97%8B%E7%9A%84%E8%BF%87%E7%A8%8B.png&#34; alt=&#34;HashMap07-左旋的过程.md&#34;&gt;&lt;/p&gt;
&lt;p&gt;这里假设右孩子是有左孩子的。如果没有的话，那就直接去掉绿色的 rl 就好了。&lt;/p&gt;
&lt;h5 id=&#34;rotateright&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#rotateright&#34;&gt;#&lt;/a&gt; rotateRight&lt;/h5&gt;
&lt;p&gt;右旋的过程同理:&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;figcaption&gt;&lt;span&gt;&amp;#123;,.line-numbers&amp;#125;&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;static&lt;/span&gt; &amp;lt;K, V&amp;gt; HashMap.&lt;span class=&#34;function&#34;&gt;TreeNode&amp;lt;K, V&amp;gt; &lt;span class=&#34;title&#34;&gt;rotateRight&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(HashMap.TreeNode&amp;lt;K, V&amp;gt; root,&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;params&#34;&gt;&lt;span class=&#34;function&#34;&gt;                                                         HashMap.TreeNode&amp;lt;K, V&amp;gt; p)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    HashMap.TreeNode&amp;lt;K, V&amp;gt; l, pp, lr;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (p != &lt;span class=&#34;keyword&#34;&gt;null&lt;/span&gt; &amp;amp;&amp;amp; (l = p.left) != &lt;span class=&#34;keyword&#34;&gt;null&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ((lr = p.left = l.right) != &lt;span class=&#34;keyword&#34;&gt;null&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            lr.parent = p;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ((pp = l.parent = p.parent) == &lt;span class=&#34;keyword&#34;&gt;null&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            (root = l).red = &lt;span class=&#34;keyword&#34;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (pp.right == p)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            pp.right = l;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            pp.left = l;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        l.right = p;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        p.parent = l;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; root;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;这图啊，有空再做吧。今天太累了。&lt;/p&gt;
&lt;p&gt;还有一个方法:&lt;/p&gt;
&lt;h5 id=&#34;moveroottofront&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#moveroottofront&#34;&gt;#&lt;/a&gt; moveRootToFront&lt;/h5&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;figcaption&gt;&lt;span&gt;&amp;#123;.line-numbers&amp;#125;&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt; &lt;span class=&#34;comment&#34;&gt;/**&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;  * Ensures that the given root is the first node of its bin.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;  * // 确保红黑树的根节点是桶的第一个节点。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;  * 为什么不直接将tab[index]==root? 是为了树重新转换成链表的时候使用的。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;  */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;static&lt;/span&gt; &amp;lt;K, V&amp;gt; &lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;moveRootToFront&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(HashMap.Node&amp;lt;K, V&amp;gt;[] tab, HashMap.TreeNode&amp;lt;K, V&amp;gt; root)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; n;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (root != &lt;span class=&#34;keyword&#34;&gt;null&lt;/span&gt; &amp;amp;&amp;amp; tab != &lt;span class=&#34;keyword&#34;&gt;null&lt;/span&gt; &amp;amp;&amp;amp; (n = tab.length) &amp;gt; &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; index = (n - &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;) &amp;amp; root.hash;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        HashMap.TreeNode&amp;lt;K, V&amp;gt; first = (HashMap.TreeNode&amp;lt;K, V&amp;gt;) tab[index];&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;comment&#34;&gt;// 判断第一个节点和root是不是相等的,判断的是地址。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (root != first) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            HashMap.Node&amp;lt;K, V&amp;gt; rn;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            tab[index] = root;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            HashMap.TreeNode&amp;lt;K, V&amp;gt; rp = root.prev;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ((rn = root.next) != &lt;span class=&#34;keyword&#34;&gt;null&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                &lt;span class=&#34;comment&#34;&gt;// root的后一个节点的指向前的指针指向root的前一个节点。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                ((HashMap.TreeNode&amp;lt;K, V&amp;gt;) rn).prev = rp;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (rp != &lt;span class=&#34;keyword&#34;&gt;null&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                &lt;span class=&#34;comment&#34;&gt;// root的前一个节点的指向后的指针指向root的后一个节点。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                rp.next = rn;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (first != &lt;span class=&#34;keyword&#34;&gt;null&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                &lt;span class=&#34;comment&#34;&gt;// 第一个元素的前指针指向root&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                first.prev = root;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;comment&#34;&gt;// root的后向指针指向first&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            root.next = first;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;comment&#34;&gt;// root的前向指针置为null&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            root.prev = &lt;span class=&#34;keyword&#34;&gt;null&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;comment&#34;&gt;// 递归不变检查&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;assert&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;checkInvariants&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(root)&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&#34;puttreenode&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#puttreenode&#34;&gt;#&lt;/a&gt; putTreeNode&lt;/h4&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;figcaption&gt;&lt;span&gt;&amp;#123;./line-bumbers&amp;#125;&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;50&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;final&lt;/span&gt; HashMap.&lt;span class=&#34;function&#34;&gt;TreeNode&amp;lt;K, V&amp;gt; &lt;span class=&#34;title&#34;&gt;putTreeVal&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(HashMap&amp;lt;K, V&amp;gt; map, HashMap.Node&amp;lt;K, V&amp;gt;[] tab,&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;params&#34;&gt;&lt;span class=&#34;function&#34;&gt;                                                &lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; h, K k, V v)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    Class&amp;lt;?&amp;gt; kc = &lt;span class=&#34;keyword&#34;&gt;null&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;boolean&lt;/span&gt; searched = &lt;span class=&#34;keyword&#34;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    HashMap.TreeNode&amp;lt;K, V&amp;gt; root = (parent != &lt;span class=&#34;keyword&#34;&gt;null&lt;/span&gt;) ? root() : &lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; (HashMap.TreeNode&amp;lt;K, V&amp;gt; p = root; ; ) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; dir, ph;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        K pk;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;comment&#34;&gt;/***************判断 左右子树 ******************/&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ((ph = p.hash) &amp;gt; h) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            dir = -&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125; &lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (ph &amp;lt; h) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            dir = &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125; &lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ((pk = p.key) == k || (k != &lt;span class=&#34;keyword&#34;&gt;null&lt;/span&gt; &amp;amp;&amp;amp; k.equals(pk))) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; p;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125; &lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ((kc == &lt;span class=&#34;keyword&#34;&gt;null&lt;/span&gt; &amp;amp;&amp;amp;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                (kc = comparableClassFor(k)) == &lt;span class=&#34;keyword&#34;&gt;null&lt;/span&gt;) ||&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                (dir = compareComparables(kc, k, pk)) == &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (!searched) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                HashMap.TreeNode&amp;lt;K, V&amp;gt; q, ch;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                searched = &lt;span class=&#34;keyword&#34;&gt;true&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (((ch = p.left) != &lt;span class=&#34;keyword&#34;&gt;null&lt;/span&gt; &amp;amp;&amp;amp;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                        (q = ch.find(h, k, kc)) != &lt;span class=&#34;keyword&#34;&gt;null&lt;/span&gt;) ||&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                        ((ch = p.right) != &lt;span class=&#34;keyword&#34;&gt;null&lt;/span&gt; &amp;amp;&amp;amp;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                                (q = ch.find(h, k, kc)) != &lt;span class=&#34;keyword&#34;&gt;null&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                    &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; q;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            dir = tieBreakOrder(k, pk);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;comment&#34;&gt;/***************判断 左右子树 end******************/&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        HashMap.TreeNode&amp;lt;K, V&amp;gt; xp = p;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ((p = (dir &amp;lt;= &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;) ? p.left : p.right) == &lt;span class=&#34;keyword&#34;&gt;null&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            HashMap.Node&amp;lt;K, V&amp;gt; xpn = xp.next;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            HashMap.TreeNode&amp;lt;K, V&amp;gt; x = map.newTreeNode(h, k, v, xpn);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (dir &amp;lt;= &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                xp.left = x;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                xp.right = x;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            xp.next = x;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            x.parent = x.prev = xp;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (xpn != &lt;span class=&#34;keyword&#34;&gt;null&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                ((HashMap.TreeNode&amp;lt;K, V&amp;gt;) xpn).prev = x;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;comment&#34;&gt;// 这里比较重要了，不过我们在treeify中已经说过了。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            moveRootToFront(tab, balanceInsertion(root, x));&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;null&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;这样，HashMap 的新增过程我们就处理完了。&lt;/p&gt;
&lt;h3 id=&#34;hashmap删除方法-hashmapremove&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#hashmap删除方法-hashmapremove&#34;&gt;#&lt;/a&gt; HashMap 删除方法 HashMap#remove ()&lt;/h3&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;figcaption&gt;&lt;span&gt;&amp;#123;.line-numbers&amp;#125;&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;/**&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt; * 从map中删除指定的key,如果key存在的话&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt; * &lt;span class=&#34;doctag&#34;&gt;@param&lt;/span&gt; key key whose mapping is to be removed from the map&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt; * &lt;span class=&#34;doctag&#34;&gt;@return&lt;/span&gt; value 如果key存在,返回key对应的Value,如果不存在返回null&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt; */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; V &lt;span class=&#34;title&#34;&gt;remove&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(Object key)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    HashMap.Node&amp;lt;K, V&amp;gt; e;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; (e = removeNode(hash(key), key, &lt;span class=&#34;keyword&#34;&gt;null&lt;/span&gt;, &lt;span class=&#34;keyword&#34;&gt;false&lt;/span&gt;, &lt;span class=&#34;keyword&#34;&gt;true&lt;/span&gt;)) == &lt;span class=&#34;keyword&#34;&gt;null&lt;/span&gt; ?&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;keyword&#34;&gt;null&lt;/span&gt; : e.value;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;其中计算 hash 值的方法还是和之前的一样。&lt;/p&gt;
&lt;h4 id=&#34;removenode&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#removenode&#34;&gt;#&lt;/a&gt; removeNode&lt;/h4&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;figcaption&gt;&lt;span&gt;&amp;#123;.line-numbers&amp;#125;&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;62&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;/**&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt; * Implements Map.remove and related methods.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt; * 实现Map.remove相关的方法&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt; * &lt;span class=&#34;doctag&#34;&gt;@param&lt;/span&gt; hash       hashCode&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt; * &lt;span class=&#34;doctag&#34;&gt;@param&lt;/span&gt; key       key&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt; * &lt;span class=&#34;doctag&#34;&gt;@param&lt;/span&gt; value     value&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt; * &lt;span class=&#34;doctag&#34;&gt;@param&lt;/span&gt; matchValue 如果是true，仅在value相等的时候删除。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt; * &lt;span class=&#34;doctag&#34;&gt;@param&lt;/span&gt; movable   如果为false，则在删除节点的时候不移动其他节点。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt; * &lt;span class=&#34;doctag&#34;&gt;@return&lt;/span&gt; 返回删除的节点&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt; */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;final&lt;/span&gt; HashMap.&lt;span class=&#34;function&#34;&gt;Node&amp;lt;K, V&amp;gt; &lt;span class=&#34;title&#34;&gt;removeNode&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(&lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; hash, Object key, Object value,&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;params&#34;&gt;&lt;span class=&#34;function&#34;&gt;                                    &lt;span class=&#34;keyword&#34;&gt;boolean&lt;/span&gt; matchValue, &lt;span class=&#34;keyword&#34;&gt;boolean&lt;/span&gt; movable)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    HashMap.Node&amp;lt;K, V&amp;gt;[] tab;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    HashMap.Node&amp;lt;K, V&amp;gt; p;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; n, index;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ((tab = table) != &lt;span class=&#34;keyword&#34;&gt;null&lt;/span&gt; &amp;amp;&amp;amp; (n = tab.length) &amp;gt; &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt; &amp;amp;&amp;amp;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            (p = tab[index = (n - &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;) &amp;amp; hash]) != &lt;span class=&#34;keyword&#34;&gt;null&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        HashMap.Node&amp;lt;K, V&amp;gt; node = &lt;span class=&#34;keyword&#34;&gt;null&lt;/span&gt;, e;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        K k;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        V v;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (p.hash == hash &amp;amp;&amp;amp;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                ((k = p.key) == key || (key != &lt;span class=&#34;keyword&#34;&gt;null&lt;/span&gt; &amp;amp;&amp;amp; key.equals(k))))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            node = p;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ((e = p.next) != &lt;span class=&#34;keyword&#34;&gt;null&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (p &lt;span class=&#34;keyword&#34;&gt;instanceof&lt;/span&gt; HashMap.TreeNode) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                &lt;span class=&#34;comment&#34;&gt;// 找到红黑树中的节点&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                node = ((HashMap.TreeNode&amp;lt;K, V&amp;gt;) p).getTreeNode(hash, key);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &amp;#125; &lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                &lt;span class=&#34;comment&#34;&gt;// 删除链表中的节点1: 查找到节点的位置。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                &lt;span class=&#34;keyword&#34;&gt;do&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (e.hash == hash &amp;amp;&amp;amp;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                            ((k = e.key) == key ||&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                                    (key != &lt;span class=&#34;keyword&#34;&gt;null&lt;/span&gt; &amp;amp;&amp;amp; key.equals(k)))) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                        node = e;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                        &lt;span class=&#34;keyword&#34;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                    p = e;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                &amp;#125; &lt;span class=&#34;keyword&#34;&gt;while&lt;/span&gt; ((e = e.next) != &lt;span class=&#34;keyword&#34;&gt;null&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;comment&#34;&gt;// 真正的去删除的过程。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (node != &lt;span class=&#34;keyword&#34;&gt;null&lt;/span&gt; &amp;amp;&amp;amp; (!matchValue || (v = node.value) == value ||&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                (value != &lt;span class=&#34;keyword&#34;&gt;null&lt;/span&gt; &amp;amp;&amp;amp; value.equals(v)))) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (node &lt;span class=&#34;keyword&#34;&gt;instanceof&lt;/span&gt; HashMap.TreeNode) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                &lt;span class=&#34;comment&#34;&gt;// 删除红黑树的节点&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                ((HashMap.TreeNode&amp;lt;K, V&amp;gt;) node).removeTreeNode(&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt;, tab, movable);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &amp;#125;&lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (node == p) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                &lt;span class=&#34;comment&#34;&gt;// 桶中只有当前的节点。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                tab[index] = node.next;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &amp;#125;&lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                &lt;span class=&#34;comment&#34;&gt;// 链表中节点的删除&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                p.next = node.next;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;comment&#34;&gt;// 修改次数+1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            ++modCount;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            --size;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            afterNodeRemoval(node);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; node;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;null&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;还有一个最难理解的方法落在了红黑树的移除上了。&lt;/p&gt;
&lt;h4 id=&#34;hashmaptreenoderemovetreenode&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#hashmaptreenoderemovetreenode&#34;&gt;#&lt;/a&gt; HashMap#TreeNode#removeTreeNode&lt;/h4&gt;
&lt;p&gt;还是先看下红黑树的删除是怎么回事。&lt;/p&gt;
&lt;p&gt;在删除方法调用之前必须要有存在的给定节点。&lt;br&gt;
这比典型的红黑删除代码更混乱，因为我们不能将内部节点的内容与叶子后继交换，后者由遍历期间可独立访问的 “下一个” 指针固定。 所以我们交换树链接。 如果当前树似乎有太少的节点，则红黑树 (bin) 将转换回普通的链表 (普通 bin). （测试会在 2 到 6 个节点之间触发，具体取决于树结构）。&lt;br&gt;
上面是 removeTreeNode 方法的解释。说实话，没理解…&lt;/p&gt;
&lt;p&gt;HashMap 的删除不同于普通的红黑树的删除，因为它其中还维护了，一个链表的指向. HashMap 采用的是将树中的两个节点进行换位，颜色也要进行互换，来保证红黑树的平衡，并不改变二者在链表中的位置，互换后，删除节点此时的左子树是空的，将问题转换成了对左子树为空的节点的删除。&lt;/p&gt;
&lt;p&gt;有一个简单的问题，千万不要弄混了，就是 TreeNode 中要删除的节点是谁？？&lt;/p&gt;
&lt;p&gt;删除的签名是这样的: &lt;code&gt; final void removeTreeNode(HashMap&amp;lt;K, V&amp;gt; map, HashMap.Node&amp;lt;K, V&amp;gt;[] tab,boolean movable)&lt;/code&gt; , 并没有传 TreeNode 啊？是不是？？&lt;/p&gt;
&lt;p&gt;干吗呢！大兄嘚。要删除的节点是：this 啊。我们现在走到了 TreeNode 内部了！！它本身就是要被删除的节点啊。&lt;/p&gt;
&lt;p&gt;好了，那我现在要告诉你：删除自己！&lt;/p&gt;
&lt;p&gt;HashMap 删除红黑树的节点，实际上就是 TreeNode 自己删除自己。那么它是怎么删的呢？&lt;/p&gt;
&lt;p&gt;它分成了三步:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;1. 将删除节点从双链向链表中删除.&lt;/li&gt;
&lt;li&gt;2. 将删除节点与其右子树最小节点互换，之后平衡树&lt;/li&gt;
&lt;li&gt;3. 将树根节点，移动到 &lt;code&gt;tab[index]&lt;/code&gt;  指针处&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;63&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;64&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;65&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;66&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;67&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;68&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;69&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;70&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;71&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;72&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;73&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;74&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;75&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;76&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;77&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;78&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;79&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;80&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;81&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;82&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;83&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;84&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;85&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;86&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;87&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;88&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;89&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;90&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;91&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;92&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;93&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;94&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;95&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;96&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;97&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;98&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;99&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;100&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;101&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;102&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;103&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;104&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;105&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;106&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;107&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;108&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;109&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;110&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;111&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;112&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;113&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;114&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;115&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;116&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;117&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;118&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;119&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;120&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;121&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;122&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;123&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;124&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;125&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;126&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;128&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;129&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;130&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;131&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;132&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;133&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;134&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;135&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;136&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;137&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;138&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;139&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;140&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;141&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;142&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;143&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;144&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;145&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;146&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;147&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;148&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;149&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;150&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;151&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;152&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;final&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;removeTreeNode&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(HashMap&amp;lt;K, V&amp;gt; map, HashMap.Node&amp;lt;K, V&amp;gt;[] tab,&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;params&#34;&gt;&lt;span class=&#34;function&#34;&gt;                                  &lt;span class=&#34;keyword&#34;&gt;boolean&lt;/span&gt; movable)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;comment&#34;&gt;// 注意了： 这个时候被删除的节点是谁??&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;comment&#34;&gt;// 是this.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; n;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (tab == &lt;span class=&#34;keyword&#34;&gt;null&lt;/span&gt; || (n = tab.length) == &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;comment&#34;&gt;// 找到对应的索引(确定对应桶的位置), n 是当前表的长度&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; index = (n - &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;) &amp;amp; hash;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;comment&#34;&gt;// first: 第一个树节点(当前为父节点),root，父节点。rl:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        HashMap.TreeNode&amp;lt;K, V&amp;gt; first = (HashMap.TreeNode&amp;lt;K, V&amp;gt;) tab[index], root = first, rl;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;comment&#34;&gt;// succ:下一个节点(链表的指向)。pred, 前一个节点。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        HashMap.TreeNode&amp;lt;K, V&amp;gt; succ = (HashMap.TreeNode&amp;lt;K, V&amp;gt;) next, pred = prev;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (pred == &lt;span class=&#34;keyword&#34;&gt;null&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;comment&#34;&gt;// 前一个为空时，即当前接是父节点:(被删除的节点是根节点)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            tab[index] = first = succ;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125; &lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;comment&#34;&gt;// 否测,前一个节点的下一个执行当前节点的下一个。(意会)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            pred.next = succ;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (succ != &lt;span class=&#34;keyword&#34;&gt;null&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;comment&#34;&gt;// 当前节点的后节点不为null,后一个节点的前节点指向当前节点的前节点(意会)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            succ.prev = pred;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (first == &lt;span class=&#34;keyword&#34;&gt;null&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;comment&#34;&gt;// 如果删除当前节点，该桶变成了null的。就直接返回&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (root.parent != &lt;span class=&#34;keyword&#34;&gt;null&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;comment&#34;&gt;// 重置table[index]处为树的根节点。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            root = root.root();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;comment&#34;&gt;// PS: 说点没用， JDK除了部分ifelse不加括号之外，&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;comment&#34;&gt;// 其实换行，还是用的挺多的，看起来也挺舒服的。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;comment&#34;&gt;// 值得借鉴&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (root == &lt;span class=&#34;keyword&#34;&gt;null&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                || (movable &amp;amp;&amp;amp; (root.right == &lt;span class=&#34;keyword&#34;&gt;null&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                || (rl = root.left) == &lt;span class=&#34;keyword&#34;&gt;null&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                || rl.left == &lt;span class=&#34;keyword&#34;&gt;null&lt;/span&gt;))) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;comment&#34;&gt;// 树太小了，将树转换成链表&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            tab[index] = first.untreeify(map);  &lt;span class=&#34;comment&#34;&gt;// too small&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;comment&#34;&gt;/*****注意！！！ 此时已经从双向链表中删除了, 第一步走完。******/&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;comment&#34;&gt;// p是待删除的节点，pl当前节点的左孩子节点,pr当前节点的右孩子节点,replacement,用来交换的节点。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        HashMap.TreeNode&amp;lt;K, V&amp;gt; p = &lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt;, pl = left, pr = right, replacement;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (pl != &lt;span class=&#34;keyword&#34;&gt;null&lt;/span&gt; &amp;amp;&amp;amp; pr != &lt;span class=&#34;keyword&#34;&gt;null&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;comment&#34;&gt;// s为右子树的最小的节点,sl为左子树(一下五行和源码略有不同)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            HashMap.TreeNode&amp;lt;K, V&amp;gt; s = pr, sl = s.left;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;keyword&#34;&gt;while&lt;/span&gt; (sl != &lt;span class=&#34;keyword&#34;&gt;null&lt;/span&gt;) &amp;#123; &lt;span class=&#34;comment&#34;&gt;// find successor&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                s = sl;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                sl = s.left;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;comment&#34;&gt;// 交换颜色&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;keyword&#34;&gt;boolean&lt;/span&gt; c = s.red;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            s.red = p.red;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            p.red = c; &lt;span class=&#34;comment&#34;&gt;// swap colors&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;comment&#34;&gt;// 交换节点连接&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            HashMap.TreeNode&amp;lt;K, V&amp;gt; sr = s.right;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            HashMap.TreeNode&amp;lt;K, V&amp;gt; pp = p.parent;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;comment&#34;&gt;// pr是当前节点的右孩子节点&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;comment&#34;&gt;// s是当前节点的右子树的最小的节点&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;comment&#34;&gt;// p的右子树,只有s这一个节点&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (s == pr) &amp;#123; &lt;span class=&#34;comment&#34;&gt;// p was s&amp;#x27;s direct parent&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                p.parent = s;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                s.right = p;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &amp;#125; &lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt; &amp;#123; &lt;span class=&#34;comment&#34;&gt;//&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                &lt;span class=&#34;comment&#34;&gt;// sp： 最小节点的父节点&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                HashMap.TreeNode&amp;lt;K, V&amp;gt; sp = s.parent;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ((p.parent = sp) != &lt;span class=&#34;keyword&#34;&gt;null&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (s == sp.left)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                        sp.left = p;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                    &lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                        sp.right = p;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ((s.right = pr) != &lt;span class=&#34;keyword&#34;&gt;null&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                    pr.parent = s;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;comment&#34;&gt;// 置null孩子。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            p.left = &lt;span class=&#34;keyword&#34;&gt;null&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ((p.right = sr) != &lt;span class=&#34;keyword&#34;&gt;null&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                sr.parent = p;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ((s.left = pl) != &lt;span class=&#34;keyword&#34;&gt;null&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                pl.parent = s;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ((s.parent = pp) == &lt;span class=&#34;keyword&#34;&gt;null&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                root = s;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &amp;#125; &lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (p == pp.left) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                pp.left = s;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &amp;#125; &lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                pp.right = s;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;comment&#34;&gt;// 确定要交换的节点完毕，交换节点&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (sr != &lt;span class=&#34;keyword&#34;&gt;null&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                replacement = sr;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &amp;#125; &lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                replacement = p;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125; &lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (pl != &lt;span class=&#34;keyword&#34;&gt;null&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;comment&#34;&gt;// 当前树只含有左子树&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            replacement = pl;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125; &lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (pr != &lt;span class=&#34;keyword&#34;&gt;null&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;comment&#34;&gt;// 当前树，只有又子树&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            replacement = pr;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125; &lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;comment&#34;&gt;// 无孩子&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            replacement = p;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (replacement != p) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            HashMap.TreeNode&amp;lt;K, V&amp;gt; pp = replacement.parent = p.parent;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (pp == &lt;span class=&#34;keyword&#34;&gt;null&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                root = replacement;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (p == pp.left)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                pp.left = replacement;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                pp.right = replacement;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            p.left = p.right = p.parent = &lt;span class=&#34;keyword&#34;&gt;null&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;comment&#34;&gt;// 是否要进行重平衡树?&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        HashMap.TreeNode&amp;lt;K, V&amp;gt; r = p.red ? root : balanceDeletion(root, replacement);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;comment&#34;&gt;// 在平衡后删除该节点&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (replacement == p) &amp;#123;  &lt;span class=&#34;comment&#34;&gt;// detach&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            HashMap.TreeNode&amp;lt;K, V&amp;gt; pp = p.parent;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            p.parent = &lt;span class=&#34;keyword&#34;&gt;null&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (pp != &lt;span class=&#34;keyword&#34;&gt;null&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (p == pp.left)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                    pp.left = &lt;span class=&#34;keyword&#34;&gt;null&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                &lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (p == pp.right)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                    pp.right = &lt;span class=&#34;keyword&#34;&gt;null&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;comment&#34;&gt;// 参数moveable控制是否删除节点后确保树的根节点为链表的头节点&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (movable) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;comment&#34;&gt;// 将树根节点，移动到tab[index]指针处&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            moveRootToFront(tab, r);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;这样呢，整个删除过程就完成了。&lt;br&gt;
用官方中的话，比较混乱。尤其是涉及到红黑树的删除，这部分内容。还是需要好好消化，消化的。&lt;/p&gt;
&lt;p&gt;下面我们还剩下两个内容：修改和查找&lt;/p&gt;
&lt;h3 id=&#34;hashmap的查找方法&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#hashmap的查找方法&#34;&gt;#&lt;/a&gt; HashMap 的查找方法&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;HashMap&lt;/code&gt;  的查找的方法，有 &lt;code&gt;get&lt;/code&gt; , &lt;code&gt;getOrDefault&lt;/code&gt; . 很明显，这两个方法前者不存在的时候返回的是 &lt;code&gt;null&lt;/code&gt; ，后者返回的就是 &lt;code&gt;defaultValue&lt;/code&gt; .&lt;/p&gt;
&lt;p&gt;先来看下这两个方法:&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;/**&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt; * 根据指定的key返回映射的Value，当没有包含key的映射时，会返回 null&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt; * 更正式的情况下： 如果存在一个key(K)的映射 value (V),使得 key==null?K==null:key.equals(K),&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt; * 如果等式的值为 true, 那么返回V&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt; * 否则返回 null&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt; * 不能通过 返回值为null 来判断是否含有&amp;lt;K,V&amp;gt; 映射，因为HashMap允许value为null。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt; */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; V &lt;span class=&#34;title&#34;&gt;get&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(Object key)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    Node&amp;lt;K,V&amp;gt; e;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; (e = getNode(hash(key), key)) == &lt;span class=&#34;keyword&#34;&gt;null&lt;/span&gt; ? &lt;span class=&#34;keyword&#34;&gt;null&lt;/span&gt; : e.value;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; V &lt;span class=&#34;title&#34;&gt;getOrDefault&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(Object key, V defaultValue)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    Node&amp;lt;K,V&amp;gt; e;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; (e = getNode(hash(key), key)) == &lt;span class=&#34;keyword&#34;&gt;null&lt;/span&gt; ? defaultValue : e.value;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;我们可以看到，它调用的都是同一个方法，顺藤摸瓜，我们看这个  &lt;code&gt;getNode&lt;/code&gt;  方法.&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;final&lt;/span&gt; HashMap.&lt;span class=&#34;function&#34;&gt;Node&amp;lt;K, V&amp;gt; &lt;span class=&#34;title&#34;&gt;getNode&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(&lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; hash, Object key)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    HashMap.Node&amp;lt;K, V&amp;gt;[] tab;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    HashMap.Node&amp;lt;K, V&amp;gt; first, e;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; n;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    K k;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;// 数组不为空，并且对应的桶(bin)不为null&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ((tab = table) != &lt;span class=&#34;keyword&#34;&gt;null&lt;/span&gt; &amp;amp;&amp;amp; (n = tab.length) &amp;gt; &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt; &amp;amp;&amp;amp;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            (first = tab[(n - &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;) &amp;amp; hash]) != &lt;span class=&#34;keyword&#34;&gt;null&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;comment&#34;&gt;// 检查是否为桶内的第一个节点是否满足&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;comment&#34;&gt;// 为什么要检测第一个节点，直接进入循环或者树节点的检测不行吗?&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;comment&#34;&gt;// 假设第一个节点是目的节点,可以直接返回，少执行一次if判断，来判断其是树节点还是链表节点。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;comment&#34;&gt;// 如果不是第一个节点，循环也会少执行一次,树节点的遍历，也会少遍历一次。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (first.hash == hash &amp;amp;&amp;amp; &lt;span class=&#34;comment&#34;&gt;// always check first node&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                ((k = first.key) == key || (key != &lt;span class=&#34;keyword&#34;&gt;null&lt;/span&gt; &amp;amp;&amp;amp; key.equals(k))))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; first;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;comment&#34;&gt;//如果第一个节点不是要查找的节点&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ((e = first.next) != &lt;span class=&#34;keyword&#34;&gt;null&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;comment&#34;&gt;// 如果是树节点&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (first &lt;span class=&#34;keyword&#34;&gt;instanceof&lt;/span&gt; HashMap.TreeNode) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; ((HashMap.TreeNode&amp;lt;K, V&amp;gt;) first).getTreeNode(hash, key);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;comment&#34;&gt;// 如果是链表,遍历查找。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;keyword&#34;&gt;do&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (e.hash == hash &amp;amp;&amp;amp;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                        ((k = e.key) == key || (key != &lt;span class=&#34;keyword&#34;&gt;null&lt;/span&gt; &amp;amp;&amp;amp; key.equals(k))))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                    &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; e;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &amp;#125; &lt;span class=&#34;keyword&#34;&gt;while&lt;/span&gt; ((e = e.next) != &lt;span class=&#34;keyword&#34;&gt;null&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;null&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;由于 jdk8 之后，有两种类型的节点，我们还说过，这两种节点是  &lt;code&gt;爷孙&lt;/code&gt;  的关系.&lt;br&gt;
 链表的节点遍历就不用看了，比较简单。我们看下 红黑树的节点的查找:&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;final&lt;/span&gt; HashMap.&lt;span class=&#34;function&#34;&gt;TreeNode&amp;lt;K, V&amp;gt; &lt;span class=&#34;title&#34;&gt;getTreeNode&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(&lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; h, Object k)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;// 如果当前节点不是根节点,找到根节点，调用find进行查找,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;// 如果是根节点，调用find进行查找。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; ((parent != &lt;span class=&#34;keyword&#34;&gt;null&lt;/span&gt;) ? root() : &lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt;).find(h, k, &lt;span class=&#34;keyword&#34;&gt;null&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;/*&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;* 红黑树的查找，&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;* 从根节点开始, 直接判断hash值即可。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;* 如果hash值，小于当前节点hash值，对其左子树进行遍历。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;* 反之，对右子树进行遍历。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;* key值相等直接返回.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;* 注意: 这里有左右子树为null的情况。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;* 对接k和k的类进行比较,判断其要遍历的树为左子树或者右子树。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;*/&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;final&lt;/span&gt; HashMap.&lt;span class=&#34;function&#34;&gt;TreeNode&amp;lt;K, V&amp;gt; &lt;span class=&#34;title&#34;&gt;find&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(&lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; h, Object k, Class&amp;lt;?&amp;gt; kc)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    HashMap.TreeNode&amp;lt;K, V&amp;gt; p = &lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;do&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; ph, dir;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        K pk;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        HashMap.TreeNode&amp;lt;K, V&amp;gt; pl = p.left, pr = p.right, q;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ((ph = p.hash) &amp;gt; h)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            p = pl;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (ph &amp;lt; h)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            p = pr;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ((pk = p.key) == k || (k != &lt;span class=&#34;keyword&#34;&gt;null&lt;/span&gt; &amp;amp;&amp;amp; k.equals(pk)))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; p;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (pl == &lt;span class=&#34;keyword&#34;&gt;null&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            p = pr;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (pr == &lt;span class=&#34;keyword&#34;&gt;null&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            p = pl;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ((kc != &lt;span class=&#34;keyword&#34;&gt;null&lt;/span&gt; ||&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                (kc = comparableClassFor(k)) != &lt;span class=&#34;keyword&#34;&gt;null&lt;/span&gt;) &amp;amp;&amp;amp;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                (dir = compareComparables(kc, k, pk)) != &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            p = (dir &amp;lt; &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;) ? pl : pr;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125; &lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ((q = pr.find(h, k, kc)) != &lt;span class=&#34;keyword&#34;&gt;null&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; q;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            p = pl;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125; &lt;span class=&#34;keyword&#34;&gt;while&lt;/span&gt; (p != &lt;span class=&#34;keyword&#34;&gt;null&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;null&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;这个查找关键因素在于判断对左子树还是右子树进行递归遍历匹配。&lt;/p&gt;
&lt;p&gt;以上就是红黑树的查找过程了。&lt;/p&gt;
&lt;h3 id=&#34;hashmap的其他常用方法&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#hashmap的其他常用方法&#34;&gt;#&lt;/a&gt; HashMap 的其他常用方法&lt;/h3&gt;
&lt;p&gt;这些方法中的实现，我们大部分都分享过了。接下来，我们简单的看下其是如何调用的就好了.&lt;/p&gt;
&lt;h4 id=&#34;hashmapcontainskey-和-hashmapcontainsvalue&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#hashmapcontainskey-和-hashmapcontainsvalue&#34;&gt;#&lt;/a&gt;  &lt;code&gt;HashMap.containsKey()&lt;/code&gt;  和  &lt;code&gt;HashMap.containsValue()&lt;/code&gt;&lt;/h4&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;/**&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt; * 如果Map中包含一个映射关系,则返回true,注意是包含映射关系就会返回ture.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt; * hashMap.put(&amp;quot;1&amp;quot;,null),也会返回true&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt; */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;boolean&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;containsKey&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(Object key)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; getNode(hash(key), key) != &lt;span class=&#34;keyword&#34;&gt;null&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;/**&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt; * 如果存在指定的Value,就会返回true&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt; */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;boolean&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;containsValue&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(Object value)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    HashMap.Node&amp;lt;K, V&amp;gt;[] tab;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    V v;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;// 如果table的长度不为空&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ((tab = table) != &lt;span class=&#34;keyword&#34;&gt;null&lt;/span&gt; &amp;amp;&amp;amp; size &amp;gt; &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;comment&#34;&gt;// 遍历每个bin&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; i = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;; i &amp;lt; tab.length; ++i) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;comment&#34;&gt;// 遍历bin下的每个Node&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; (HashMap.Node&amp;lt;K, V&amp;gt; e = tab[i]; e != &lt;span class=&#34;keyword&#34;&gt;null&lt;/span&gt;; e = e.next) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ((v = e.value) == value ||&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                        (value != &lt;span class=&#34;keyword&#34;&gt;null&lt;/span&gt; &amp;amp;&amp;amp; value.equals(v)))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                    &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;true&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;这里为什么可以通过  &lt;code&gt;.next&lt;/code&gt;  的方式去遍历呢？&lt;br&gt;
 这个主要是考虑在转换成树节点和树节点的新增的时候。 &lt;code&gt;hashMap&lt;/code&gt;  在这两个时刻都对 &lt;code&gt;HashMap&lt;/code&gt;  的 &lt;code&gt;next&lt;/code&gt;  &amp;quot;指针&amp;quot; 进行了维护。所以，在这里就可以明白了，为什么树化节点时候还要维护 &lt;code&gt;.next&lt;/code&gt;  了.&lt;/p&gt;
&lt;h4 id=&#34;hashmapsize&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#hashmapsize&#34;&gt;#&lt;/a&gt;  &lt;code&gt;HashMap.size()&lt;/code&gt;&lt;/h4&gt;
&lt;p&gt;&lt;code&gt;HashMap&lt;/code&gt;   的  &lt;code&gt;size&lt;/code&gt;  函数最简单了，因为  &lt;code&gt;HashMap&lt;/code&gt;  内部本来就维护了一个  &lt;code&gt;size&lt;/code&gt;  字段，来记录  &lt;code&gt;HashMap&lt;/code&gt;  的元素数量.&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;/**&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt; * 返回HashMap的映射数量&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt; */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;@Override&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;size&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;()&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; size;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&#34;hashmapisempty&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#hashmapisempty&#34;&gt;#&lt;/a&gt;  &lt;code&gt;HashMap.isEmpty()&lt;/code&gt;&lt;/h4&gt;
&lt;p&gt;HashMap 的 isEmpty 同样简单，废话少说，看下它的实现&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;/**&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt; * 如果为映射数量为0的时候，返回true&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt; */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;@Override&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;boolean&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;isEmpty&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;()&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; size == &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&#34;hashmapentryset&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#hashmapentryset&#34;&gt;#&lt;/a&gt;  &lt;code&gt;HashMap.entrySet()&lt;/code&gt;&lt;/h4&gt;
&lt;p&gt;这个方法是我们在遍历的时候，常用的一个方法，它的实现有点小复杂。 我们来看下。&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;/**&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt; * 返回这个Map里映射关系的一个 Set 视图.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt; * 修改HashMap会影响这个 Set 视图, 同样的，在这个视图里修改, 也会影响HashMap&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt; * 如果通过对视图的迭代过程来修改HashMap(除了迭代器自身的remove方法,或者对迭代器返回的Entry的setValue操作),&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt; * 修改的结果是不确定的。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt; * 这个 set 视图, 支持元素的删除, 也会从 HashMap 中删除对应的元素.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt; *  支持 Iterator.remove, Set.remove,  Set.removeAll, Set.retainAll, Set.clear 等操作&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt; * 但是它不支持 add, addAll 操作&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt; */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; Set&amp;lt;Map.Entry&amp;lt;K, V&amp;gt;&amp;gt; entrySet() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    Set&amp;lt;Map.Entry&amp;lt;K, V&amp;gt;&amp;gt; es;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; (es = entrySet) == &lt;span class=&#34;keyword&#34;&gt;null&lt;/span&gt; ? (entrySet = &lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; HashMap.EntrySet()) : es;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;从上面的代码可以看出，如果 &lt;code&gt;entrySet&lt;/code&gt;  这个属性的为 &lt;code&gt;null&lt;/code&gt;  的时候，就会返回一个空的 &lt;code&gt;HashMap&lt;/code&gt;  的 &lt;code&gt;entry&lt;/code&gt; , 否则就返回 &lt;code&gt;entrySet(es)&lt;/code&gt; .&lt;br&gt;
 那么  &lt;code&gt;entrySet&lt;/code&gt;  这个字段是怎么来的呢？&lt;/p&gt;
&lt;p&gt;最先 HashMap 定义了一个这样的字段。&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;/**&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt; * 保存缓存的 entrySet().&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt; * 注意: 这个AbstractMap 的字段会被 keySet() 和 values()使用。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt; */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;transient&lt;/span&gt; Set&amp;lt;Map.Entry&amp;lt;K, V&amp;gt;&amp;gt; entrySet;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;好了，我们接着来看  &lt;code&gt;HashMap.EntrySet()&lt;/code&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;63&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;64&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;65&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;66&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;67&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;68&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;69&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;70&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;71&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;72&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;73&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;74&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;75&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;/**&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;    * EntrySet 继承的是 AbstractSet,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;    * 泛型传入&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;    */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;final&lt;/span&gt; &lt;span class=&#34;class&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;EntrySet&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;extends&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;AbstractSet&lt;/span&gt;&amp;lt;&lt;span class=&#34;title&#34;&gt;Map&lt;/span&gt;.&lt;span class=&#34;title&#34;&gt;Entry&lt;/span&gt;&amp;lt;&lt;span class=&#34;title&#34;&gt;K&lt;/span&gt;, &lt;span class=&#34;title&#34;&gt;V&lt;/span&gt;&amp;gt;&amp;gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;final&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;size&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;()&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; size;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;final&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;clear&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;()&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        HashMap.&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt;.clear();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;/**&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;        * 直接调用 HashMap 迭代器&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;        *&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;        * &lt;span class=&#34;doctag&#34;&gt;@return&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;        */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;final&lt;/span&gt; Iterator&amp;lt;Map.Entry&amp;lt;K, V&amp;gt;&amp;gt; iterator() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; HashMap.EntryIterator();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;/**&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;        * 判断是否存在,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;        * 直接调用的是hashMap的getNode方法&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;        */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;final&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;boolean&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;contains&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(Object o)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (!(o &lt;span class=&#34;keyword&#34;&gt;instanceof&lt;/span&gt; Map.Entry))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        Map.Entry&amp;lt;?, ?&amp;gt; e = (Map.Entry&amp;lt;?, ?&amp;gt;) o;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        Object key = e.getKey();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        HashMap.Node&amp;lt;K, V&amp;gt; candidate = getNode(hash(key), key);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; candidate != &lt;span class=&#34;keyword&#34;&gt;null&lt;/span&gt; &amp;amp;&amp;amp; candidate.equals(e);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;/**&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;        * 直接调用的 HashMap的删除方法.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;        * 从这个方法中也可以看出来, 我们在 set试图中删除元素是会直接影响Hashmap的。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;        */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;final&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;boolean&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;remove&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(Object o)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (o &lt;span class=&#34;keyword&#34;&gt;instanceof&lt;/span&gt; Map.Entry) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            Map.Entry&amp;lt;?, ?&amp;gt; e = (Map.Entry&amp;lt;?, ?&amp;gt;) o;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            Object key = e.getKey();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            Object value = e.getValue();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; removeNode(hash(key), key, value, &lt;span class=&#34;keyword&#34;&gt;true&lt;/span&gt;, &lt;span class=&#34;keyword&#34;&gt;true&lt;/span&gt;) != &lt;span class=&#34;keyword&#34;&gt;null&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;/**&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;        * entrySet 的分隔器&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;        */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;final&lt;/span&gt; Spliterator&amp;lt;Map.Entry&amp;lt;K, V&amp;gt;&amp;gt; spliterator() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; HashMap.EntrySpliterator&amp;lt;&amp;gt;(HashMap.&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, -&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;/**&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;        * entrySet 的迭代器&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;        */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;final&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;forEach&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(Consumer&amp;lt;? &lt;span class=&#34;keyword&#34;&gt;super&lt;/span&gt; Map.Entry&amp;lt;K, V&amp;gt;&amp;gt; action)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        HashMap.Node&amp;lt;K, V&amp;gt;[] tab;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (action == &lt;span class=&#34;keyword&#34;&gt;null&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;keyword&#34;&gt;throw&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; NullPointerException();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (size &amp;gt; &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt; &amp;amp;&amp;amp; (tab = table) != &lt;span class=&#34;keyword&#34;&gt;null&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; mc = modCount;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; i = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;; i &amp;lt; tab.length; ++i) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; (HashMap.Node&amp;lt;K, V&amp;gt; e = tab[i]; e != &lt;span class=&#34;keyword&#34;&gt;null&lt;/span&gt;; e = e.next)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                    action.accept(e);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (modCount != mc)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                &lt;span class=&#34;keyword&#34;&gt;throw&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; ConcurrentModificationException();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&#34;hashmapreplace&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#hashmapreplace&#34;&gt;#&lt;/a&gt;  &lt;code&gt;HashMap.replace()&lt;/code&gt;&lt;/h4&gt;
&lt;p&gt;这个是  &lt;code&gt;HashMap&lt;/code&gt;  覆盖掉 &lt;code&gt;JDK8&lt;/code&gt;  版本中 的替换方法，将制定的 &lt;code&gt;K-V&lt;/code&gt;  映射替换掉。这个方法也会匹配 &lt;code&gt;Value&lt;/code&gt;  的值是否相等。&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;@Override&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;boolean&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;replace&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(K key, V oldValue, V newValue)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    HashMap.Node&amp;lt;K, V&amp;gt; e;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    V v;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ((e = getNode(hash(key), key)) != &lt;span class=&#34;keyword&#34;&gt;null&lt;/span&gt; &amp;amp;&amp;amp;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            ((v = e.value) == oldValue || (v != &lt;span class=&#34;keyword&#34;&gt;null&lt;/span&gt; &amp;amp;&amp;amp; v.equals(oldValue)))) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        e.value = newValue;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        afterNodeAccess(e);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;true&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;这个也是覆盖  &lt;code&gt;JDK8&lt;/code&gt;  版本中  &lt;code&gt;Map&lt;/code&gt;  的方法，返回原来的值。&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;@Override&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; V &lt;span class=&#34;title&#34;&gt;replace&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(K key, V value)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    HashMap.Node&amp;lt;K, V&amp;gt; e;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ((e = getNode(hash(key), key)) != &lt;span class=&#34;keyword&#34;&gt;null&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        V oldValue = e.value;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        e.value = value;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        afterNodeAccess(e);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; oldValue;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;null&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&#34;hashmapforeach&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#hashmapforeach&#34;&gt;#&lt;/a&gt;  &lt;code&gt;HashMap.forEach()&lt;/code&gt;&lt;/h4&gt;
&lt;p&gt;这个也是一个常用的方法，实现也比较简单。&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt; &lt;span class=&#34;meta&#34;&gt;@Override&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;forEach&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(BiConsumer&amp;lt;? &lt;span class=&#34;keyword&#34;&gt;super&lt;/span&gt; K, ? &lt;span class=&#34;keyword&#34;&gt;super&lt;/span&gt; V&amp;gt; action)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    HashMap.Node&amp;lt;K, V&amp;gt;[] tab;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (action == &lt;span class=&#34;keyword&#34;&gt;null&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;throw&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; NullPointerException();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (size &amp;gt; &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt; &amp;amp;&amp;amp; (tab = table) != &lt;span class=&#34;keyword&#34;&gt;null&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; mc = modCount;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; i = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;; i &amp;lt; tab.length; ++i) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; (HashMap.Node&amp;lt;K, V&amp;gt; e = tab[i]; e != &lt;span class=&#34;keyword&#34;&gt;null&lt;/span&gt;; e = e.next)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                action.accept(e.key, e.value);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (modCount != mc)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;keyword&#34;&gt;throw&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; ConcurrentModificationException();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&#34;hashmapclear&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#hashmapclear&#34;&gt;#&lt;/a&gt;  &lt;code&gt;HashMap.clear()&lt;/code&gt;&lt;/h4&gt;
&lt;p&gt;清空方法也是很简单的，逐一置空 &lt;code&gt;null&lt;/code&gt;   &lt;code&gt;HashMap&lt;/code&gt;  的每个 &lt;code&gt;bin&lt;/code&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;clear&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;()&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    HashMap.Node&amp;lt;K, V&amp;gt;[] tab;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    modCount++;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ((tab = table) != &lt;span class=&#34;keyword&#34;&gt;null&lt;/span&gt; &amp;amp;&amp;amp; size &amp;gt; &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        size = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; i = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;; i &amp;lt; tab.length; ++i)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            tab[i] = &lt;span class=&#34;keyword&#34;&gt;null&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&#34;问题解答&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#问题解答&#34;&gt;#&lt;/a&gt; 问题解答&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;如果我的 HashMap 的初始大小设置为 &lt;code&gt;[3|9|12]&lt;/code&gt; , 第一次扩容的时候，容量变为了多少？是如何进行扩容的？&lt;/li&gt;
&lt;li&gt;(有毒的问题) 假设 Hash 表的长度是 32, 已知某一个 bin 中的链表长度为 7, 如果新增一个元素还是在该 bin 中的时，会进行什么操作？  &lt;code&gt;resize&lt;/code&gt;  还是 &lt;code&gt;treeifyBin&lt;/code&gt; ? 假设完成这个操作后该 bin 中元素数量没变，又新增一个元素还是到该 bin 中，这时进行什么操作？&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;总结&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#总结&#34;&gt;#&lt;/a&gt; 总结&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;表中允许 null 的键和 null 值。&lt;/li&gt;
&lt;li&gt;线程不同步，&lt;/li&gt;
&lt;li&gt;不保证元素的顺序。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;网上常见面试问题汇总以及参考解答&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#网上常见面试问题汇总以及参考解答&#34;&gt;#&lt;/a&gt; 网上常见面试问题汇总以及参考解答&lt;/h2&gt;
&lt;h2 id=&#34;冷门知识点&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#冷门知识点&#34;&gt;#&lt;/a&gt; 冷门知识点&lt;/h2&gt;
&lt;ul class=&#34;task-list&#34;&gt;
&lt;li class=&#34;task-list-item&#34;&gt;&lt;input type=&#34;checkbox&#34; id=&#34;cbx_4&#34; disabled=&#34;true&#34;&gt;&lt;label for=&#34;cbx_4&#34;&gt; failFast 机制。&lt;/label&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;jdk变更历史说明&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#jdk变更历史说明&#34;&gt;#&lt;/a&gt; JDK 变更历史说明&lt;/h2&gt;
&lt;h2 id=&#34;课后娱乐&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#课后娱乐&#34;&gt;#&lt;/a&gt; 课后娱乐&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;java 实现红黑树&lt;/li&gt;
&lt;li&gt;自定义实现 hashMap。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;参考文档答谢&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#参考文档答谢&#34;&gt;#&lt;/a&gt; 参考文档 &amp;amp; 答谢&lt;/h2&gt;
&lt;h2 id=&#34;感受&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#感受&#34;&gt;#&lt;/a&gt; 感受&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;注释：新字段要加注释标注此字段的作用，该字段是什么含义。&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;p&gt;阅读之前记录&lt;/p&gt;
&lt;p&gt;1. 图解。遇到问题，画图说明。&lt;br&gt;
2. 一定要有自己的理解。&lt;br&gt;
3. 对比其他版本 JDK。&lt;/p&gt;
&lt;h3 id=&#34;最后&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#最后&#34;&gt;#&lt;/a&gt; 最后&lt;/h3&gt;
&lt;p&gt;期望与你一起遇见更好的自己&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/images/qrcode.jpg&#34; alt=&#34;期望与你一起遇见更好的自己&#34;&gt;&lt;/p&gt;
 ]]></description>
        </item>
    </channel>
</rss>
