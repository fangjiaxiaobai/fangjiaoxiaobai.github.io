<?xml version="1.0"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://fangjiaxiaobai.github.io</id>
    <title>方家小白 • Posts by &#34;redis数据库&#34; category</title>
    <link href="https://fangjiaxiaobai.github.io" />
    <updated>2021-08-02T10:18:55.000Z</updated>
    <category term="全站地图" />
    <category term="目录" />
    <category term="源码" />
    <category term="Redis" />
    <category term="MySQL" />
    <category term="数据结构" />
    <category term="Elastic Search" />
    <category term="搜索" />
    <category term="雪花算法" />
    <category term="算法" />
    <category term="go" />
    <category term="go-error" />
    <category term="git" />
    <category term="日常" />
    <category term="Springboot" />
    <category term="Netty" />
    <category term="k8s" />
    <category term="kubernetes" />
    <category term="log" />
    <category term="go-log" />
    <category term="猫影视" />
    <category term="MachineLearn" />
    <category term="图片" />
    <category term="RocketMQ" />
    <category term="消息队列" />
    <category term="线程池" />
    <category term="面经" />
    <category term="leetCode" />
    <category term="面经之算法题" />
    <category term="链表" />
    <category term="不做也罢的算法题" />
    <category term="动态规划" />
    <category term="数组" />
    <category term="HD" />
    <category term="BQ" />
    <category term="AC" />
    <category term="有点难的算法题" />
    <category term="HashMap" />
    <category term="JDK" />
    <category term="JDK8" />
    <category term="数据结构与算法" />
    <category term="go-设计模式" />
    <category term="String" />
    <category term="递归" />
    <category term="排序" />
    <category term="冒泡排序" />
    <category term="分治思想排序" />
    <category term="交换排序" />
    <category term="快速排序" />
    <category term="分支思想排序" />
    <category term="选择排序" />
    <category term="哈希算法" />
    <category term="桶排序" />
    <category term="线性思想排序" />
    <category term="Java" />
    <category term="dubbo" />
    <category term="模型评估" />
    <category term="架构" />
    <category term="笔记" />
    <category term="go-runtimes" />
    <category term="KNN" />
    <category term="JDK版本" />
    <category term="JDK11" />
    <category term="OOM" />
    <category term="JVM" />
    <category term="Stream" />
    <entry>
        <id>https://fangjiaxiaobai.github.io/2021/08/02/Redis%E7%B3%BB%E5%88%97/C-1-Redis%E7%9A%84%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B9%8Bziplist/</id>
        <title>Redis数据结构之详解 ziplist</title>
        <link rel="alternate" href="https://fangjiaxiaobai.github.io/2021/08/02/Redis%E7%B3%BB%E5%88%97/C-1-Redis%E7%9A%84%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B9%8Bziplist/"/>
        <content type="html">&lt;h2 id=&#34;解密-ziplist&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#解密-ziplist&#34;&gt;#&lt;/a&gt; 解密 ziplist.&lt;/h2&gt;
&lt;p&gt;为什么叫解密  &lt;code&gt;ziplist&lt;/code&gt;  呢？因为从 ziplist 中取到我们预期的值，真的和解密一样！烧脑，但是极其有趣！！&lt;/p&gt;
&lt;h3 id=&#34;引题&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#引题&#34;&gt;#&lt;/a&gt; 引题&lt;/h3&gt;
&lt;p&gt;在介绍  &lt;code&gt;Redis&lt;/code&gt;  的数据类型  &lt;code&gt;list&lt;/code&gt;  的时候，是我们第一次接触  &lt;code&gt;ziplist&lt;/code&gt;  这一数据结构。&lt;/p&gt;
&lt;p&gt;不知道是否还记得  &lt;code&gt;ziplist&lt;/code&gt;  这种数据结构的特性。如果不记得也没有关系，今天我们来详细的看下这个数据结构。&lt;/p&gt;
&lt;h3 id=&#34;重读-ziplist-数据结构&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#重读-ziplist-数据结构&#34;&gt;#&lt;/a&gt; 重读 ziplist 数据结构&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;ziplist&lt;/code&gt;  是经过特殊编码的双向链接列表，旨在提高内存效率。 它同时存储字符串和整数值，其中整数被编码为实际整数，而不是一系列字符。它允许在  &lt;code&gt;O(1)&lt;/code&gt;  时间在列表的任一侧进行推和弹出操作。&lt;/p&gt;
&lt;p&gt;但是，由于每个操作都需要重新分配 &lt;code&gt;ziplist&lt;/code&gt;  使用的内存，因此实际的复杂性与 &lt;code&gt;ziplist&lt;/code&gt;  使用的内存量有关。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;ziplist&lt;/code&gt;  的数据结构总览。如下图&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/images/Redis%E7%B3%BB%E5%88%97/images/ziplist-01-Ziplist%E7%9A%84%E7%BB%93%E6%9E%84.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;我来依次解释下这  &lt;code&gt;5&lt;/code&gt;  个部分.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;&amp;lt;uint32_t zlbytes&amp;gt;&lt;/code&gt;  : 存储的  &lt;code&gt;ziplist&lt;/code&gt;  占用的字节数 (包含  &lt;code&gt;zlbytes&lt;/code&gt;  字段本身的  &lt;code&gt;4&lt;/code&gt;  个字节)。因此：无需遍历就能直接知道这个数据结构的大小。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;&amp;lt;uint32_t zltail&amp;gt;&lt;/code&gt;  是列表中最后一个条目的偏移量。 这允许在列表的另一端进行弹出操作，而无需完全遍历。在任意一端进行  &lt;code&gt;pop&lt;/code&gt;  和  &lt;code&gt;push&lt;/code&gt;  操作的时间复杂度都是  &lt;code&gt;O(1)&lt;/code&gt;  .&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;&amp;lt;uint16_t zllen&amp;gt;&lt;/code&gt;  是条目数。当条目数超过 &lt;code&gt;2 ^ 16-2&lt;/code&gt;  时，此值将设置为 &lt;code&gt;2 ^ 16-1&lt;/code&gt; ，这时，我们需要遍历整个列表以了解其包含多少项了。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;&amp;lt;uint8_t zlend&amp;gt;&lt;/code&gt;  是代表 &lt;code&gt;ziplist&lt;/code&gt;  末尾的特殊条目。编码为等于 &lt;code&gt;255&lt;/code&gt;  的单个字节。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;&amp;lt;entry&amp;gt;&lt;/code&gt;  : 往下看.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;entry&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#entry&#34;&gt;#&lt;/a&gt;  &lt;code&gt;Entry&lt;/code&gt;&lt;/h4&gt;
&lt;p&gt;&lt;code&gt;ziplist&lt;/code&gt;  中的每个条目都以包含两个信息的元数据作为前缀。首先，存储前一个  &lt;code&gt;entry&lt;/code&gt;  的长度，以便能够从后到前遍历列表。第二，提供  &lt;code&gt;entry&lt;/code&gt;  编码。 它表示条目类型，整数或字符串，对于字符串，还表示字符串有效负载的长度。因此，能够像下面这样存储一个完整的  &lt;code&gt;entry&lt;/code&gt; .&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/images/Redis%E7%B3%BB%E5%88%97/images/ziplist-01-entry%E7%9A%84%E7%BB%93%E6%9E%84.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;有时， &lt;code&gt;encoding&lt;/code&gt;  也可以代表 &lt;code&gt;entry&lt;/code&gt;  本身，就像后面将要看到的小整数一样。在这种情况下， &lt;code&gt;&amp;lt;entry-data&amp;gt;&lt;/code&gt;  部分丢失了，我们的 &lt;code&gt;Entry&lt;/code&gt;  结构是这样的：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/images/Redis%E7%B3%BB%E5%88%97/images/ziplist-01-entry%E7%9A%84%E7%BB%93%E6%9E%842.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;我们来具体看下  &lt;code&gt;Entry&lt;/code&gt;  的编码方式.&lt;/p&gt;
&lt;h5 id=&#34;prevlen&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#prevlen&#34;&gt;#&lt;/a&gt;  &lt;code&gt;prevlen&lt;/code&gt;&lt;/h5&gt;
&lt;p&gt;&lt;code&gt;&amp;lt;prevlen&amp;gt;&lt;/code&gt;  表示 前一个  &lt;code&gt;entry&lt;/code&gt;  的长度。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;如果 前一个  &lt;code&gt;entry&lt;/code&gt;  的长度小于 254 个字节，那么这个  &lt;code&gt;Entry&lt;/code&gt;  只会消耗一个字节来表示该长度。一个无符号的  &lt;code&gt;8&lt;/code&gt;  位整数。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;如果前一个  &lt;code&gt;entry&lt;/code&gt;  长度大于或等于 &lt;code&gt;254&lt;/code&gt;  字节的时候，它将占用 5 个字节。第一个字节设置为  &lt;code&gt;254&lt;/code&gt; ( &lt;code&gt;FE&lt;/code&gt; ), 以指示随后的值更大。 其他的四个字节将作为前一个 entry 的长度的值。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;所以，我们就能知道了 下面这种编码方式.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;&amp;lt;prevlen form 9 to 253&amp;gt; &amp;lt;encoding&amp;gt; &amp;lt;entry-data&amp;gt;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;或者&lt;/p&gt;
&lt;p&gt;&lt;code&gt;&amp;lt;prevlen 4 bytes unsigned little endian prevlen&amp;gt; &amp;lt;encoding&amp;gt; &amp;lt;entry-data&amp;gt;&lt;/code&gt;&lt;/p&gt;
&lt;h5 id=&#34;encoding&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#encoding&#34;&gt;#&lt;/a&gt;  &lt;code&gt;encoding&lt;/code&gt;&lt;/h5&gt;
&lt;p&gt;&lt;code&gt;entry&lt;/code&gt;  中的  &lt;code&gt;encoding&lt;/code&gt;  字段取决于  &lt;code&gt;entry-data&lt;/code&gt;  的内容。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;如果  &lt;code&gt;entry-data&lt;/code&gt;  是字符串的时候， &lt;code&gt;encoding&lt;/code&gt;  第一个字节的前两位用于存储字符串长度的编码类型。然后是字符串的实际长度。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;如果  &lt;code&gt;entry&lt;/code&gt;  是整数时，前 &lt;code&gt;2&lt;/code&gt;  位都是 &lt;code&gt;1&lt;/code&gt; ,。 接下来的两位用于指定在此标头之后将存储哪种类型.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;由上面的两点，就足以确定  &lt;code&gt;entry-data&lt;/code&gt;  的类型.&lt;/p&gt;
&lt;p&gt;不同的类型和编码的概述如下:&lt;/p&gt;
&lt;h6 id=&#34;字符串类型&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#字符串类型&#34;&gt;#&lt;/a&gt; 字符串类型&lt;/h6&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;a&lt;/code&gt; .  &lt;code&gt;| 00pppppp |&lt;/code&gt;  : 含义是占用 &lt;code&gt;1&lt;/code&gt;  个字节来表示长度小于或等于 &lt;code&gt;63&lt;/code&gt;  个字节（ &lt;code&gt;6&lt;/code&gt;  位）的字符串值。   &lt;code&gt;pppppp&lt;/code&gt;  表示无符号的 6 位长度。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;b&lt;/code&gt; . &lt;code&gt;|01pppppp|qqqqqqqq|&lt;/code&gt;  含义是用 &lt;code&gt;2&lt;/code&gt;  个字节来表示小于等于  &lt;code&gt;16383(2^14)&lt;/code&gt;  个字节的字符串的长度. (&lt;b&gt;这里使用大端法计数&lt;/b&gt;)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;c&lt;/code&gt; . &lt;code&gt;|10000000|qqqqqqqq|rrrrrrrr|ssssssss|tttttttt|&lt;/code&gt;  含义是 使用 5 个字节来表示大于等于 16384 个字节长度的字符串，只有 4 个字节表示其最大长度为  &lt;code&gt;2^32-1&lt;/code&gt; . 低位的 6 位被设置成  &lt;code&gt;0&lt;/code&gt; .(&lt;b&gt;这里使用大端法计数&lt;/b&gt;)&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h6 id=&#34;整数类型&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#整数类型&#34;&gt;#&lt;/a&gt; 整数类型&lt;/h6&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;d&lt;/code&gt; . &lt;code&gt;|11000000|&lt;/code&gt; : 含义是用 &lt;code&gt;3&lt;/code&gt;  个字节表示一个 &lt;code&gt;16&lt;/code&gt;  位的有符号的短整形数 ( &lt;code&gt;short&lt;/code&gt; )。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;e&lt;/code&gt; . &lt;code&gt;|11010000|&lt;/code&gt;  : 含义是用 &lt;code&gt;5&lt;/code&gt;  个字节 表示一个 &lt;code&gt;32&lt;/code&gt;  位的有符合整数型 ( &lt;code&gt;int&lt;/code&gt; ).&lt;/li&gt;
&lt;li&gt;&lt;code&gt;f&lt;/code&gt; . &lt;code&gt;|11100000|&lt;/code&gt;  : 含义是用 &lt;code&gt;9&lt;/code&gt;  个字节，表示一个 &lt;code&gt;64&lt;/code&gt;  位的有符合长整数 ( &lt;code&gt;long&lt;/code&gt; )&lt;/li&gt;
&lt;li&gt;&lt;code&gt;g&lt;/code&gt; . &lt;code&gt;|11110000|&lt;/code&gt;  : 含义是用 &lt;code&gt;4&lt;/code&gt;  个字节表示 &lt;code&gt;24&lt;/code&gt;  位有符号整数 (只占用 3 个字节)。PS: 有什么作用呢？前面说的小整形数。节约空间。即如图&lt;/li&gt;
&lt;li&gt;&lt;code&gt;h&lt;/code&gt; . &lt;code&gt;|11111110|&lt;/code&gt;  :  含义是用 &lt;code&gt;2&lt;/code&gt;  个字节表示一个 &lt;code&gt;8&lt;/code&gt;  位的有符号小整形数。 &lt;code&gt;1&lt;/code&gt;  个字节。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;i&lt;/code&gt; . &lt;code&gt;|1111xxxx|&lt;/code&gt;  :&lt;br&gt;
 除去上面列举的几类编码标识，还有 &lt;code&gt;|1111xxxx|&lt;/code&gt;  的类别。&lt;br&gt;
( &lt;code&gt;xxxx&lt;/code&gt;  在 &lt;code&gt;0000&lt;/code&gt;  和 &lt;code&gt;1101&lt;/code&gt;  之间) 立即 &lt;code&gt;4&lt;/code&gt;  位整数。  &lt;code&gt;0&lt;/code&gt;  到 &lt;code&gt;12&lt;/code&gt;  之间的无符号整数。编码值实际上是 &lt;code&gt;1&lt;/code&gt;  到 &lt;code&gt;13&lt;/code&gt; ，因为不能使用 &lt;code&gt;0000&lt;/code&gt;  和 &lt;code&gt;1111&lt;/code&gt; ，因此应从编码的 &lt;code&gt;4&lt;/code&gt;  位值中减去 &lt;code&gt;1&lt;/code&gt;  以获得正确的值。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;j&lt;/code&gt; . &lt;code&gt;|11111111| &lt;/code&gt; - 表示  &lt;code&gt;ziplist&lt;/code&gt;  的特殊  &lt;code&gt;entry&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;这样，整个 &lt;code&gt;Entry&lt;/code&gt;  的编码方式我们就搞明白了。&lt;br&gt;
这些都是  &lt;code&gt;Redis&lt;/code&gt;  中定义的规定， 所以我们记住就行了。如果让我们自己去设计一套编码方案的时候，我们就可以参考这种思路去设计。&lt;/p&gt;
&lt;h3 id=&#34;那我们来举两个例子来试试身手吧&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#那我们来举两个例子来试试身手吧&#34;&gt;#&lt;/a&gt; 那我们来举两个例子来试试身手吧。&lt;/h3&gt;
&lt;h4 id=&#34;例子1-25&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#例子1-25&#34;&gt;#&lt;/a&gt; 例子 1:  &lt;code&gt;25&lt;/code&gt;&lt;/h4&gt;
&lt;h5 id=&#34;编码方式&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#编码方式&#34;&gt;#&lt;/a&gt; 编码方式&lt;/h5&gt;
&lt;p&gt;&lt;code&gt;[0f 00 00 00] [0c 00 00 00] [02 00] [00 f3] [02 f6] [ff]&lt;/code&gt;&lt;/p&gt;
&lt;h5 id=&#34;解析过程&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#解析过程&#34;&gt;#&lt;/a&gt; 解析过程&lt;/h5&gt;
&lt;p&gt;&lt;img data-src=&#34;/images/Redis%E7%B3%BB%E5%88%97/images/ziplist-01-Ziplist%E4%BE%8B%E5%AD%90%E7%9A%84%E7%BB%93%E6%9E%841.png&#34; alt=&#34;ziplist-01-Ziplist例子的结构1.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/images/Redis%E7%B3%BB%E5%88%97/images/ziplist-%E8%A7%A3%E6%9E%90%E6%95%B0%E6%8D%AE.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h4 id=&#34;例子2-hello-world&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#例子2-hello-world&#34;&gt;#&lt;/a&gt; 例子 2:  &lt;code&gt;Hello World&lt;/code&gt;&lt;/h4&gt;
&lt;p&gt;这里我们还是接着上面例子来讲，我们再设置一个 字符串  &lt;code&gt;Hello World&lt;/code&gt;  。&lt;/p&gt;
&lt;h5 id=&#34;编码格式&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#编码格式&#34;&gt;#&lt;/a&gt; 编码格式&lt;/h5&gt;
&lt;p&gt;&lt;code&gt;[02] [0b] [48 65 6c 6c 6f 20 57 6f 72 6c 64]&lt;/code&gt;&lt;/p&gt;
&lt;h5 id=&#34;解析过程-2&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#解析过程-2&#34;&gt;#&lt;/a&gt; 解析过程&lt;/h5&gt;
&lt;p&gt;&lt;img data-src=&#34;/images/Redis%E7%B3%BB%E5%88%97/images/ziplist-01-Ziplist%E4%BE%8B%E5%AD%90%E7%9A%84%E7%BB%93%E6%9E%842.png&#34; alt=&#34;ziplist-01-Ziplist例子的结构2.png&#34;&gt;&lt;/p&gt;
&lt;h5 id=&#34;附录-ascii码表可展示字符&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#附录-ascii码表可展示字符&#34;&gt;#&lt;/a&gt; 附录，ASCII 码表 (可展示字符)&lt;/h5&gt;
&lt;p&gt;&lt;img data-src=&#34;/images/Redis%E7%B3%BB%E5%88%97/images/ziplist-ASCII%E7%A0%81%E5%AD%97%E7%AC%A6%E8%A1%A8.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;以上内容，就是 &lt;code&gt;Redis&lt;/code&gt;  的 &lt;code&gt;ziplist&lt;/code&gt;  结构的内容了。&lt;/p&gt;
&lt;h3 id=&#34;总结&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#总结&#34;&gt;#&lt;/a&gt; 总结&lt;/h3&gt;
&lt;p&gt;本篇文章的内容主要是更加详细的分享了 &lt;code&gt;ziplist&lt;/code&gt;  的这种数据结构的内部结构以及编码方式.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;ziplist&lt;/code&gt;  由 &lt;code&gt;5&lt;/code&gt;  部分组成。存储了相关信息:  &lt;code&gt;&amp;lt;整个ziplist的长度&amp;gt;&amp;lt;最后一个entry的偏移量&amp;gt;&amp;lt;entry的总数&amp;gt;&amp;lt;entries&amp;gt;&amp;lt;表示结束的特殊entry&amp;gt;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;一个 &lt;code&gt;entry&lt;/code&gt;  由 &lt;code&gt;3&lt;/code&gt;  部分组成， &lt;code&gt;&amp;lt;前一个entry的长度&amp;gt;&amp;lt;编码方式&amp;gt;&amp;lt;entry的内容&amp;gt;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;其中 编码方式 是由 entry 的内容 决定的。有 10 条标准 (规定 / 协议)&lt;/li&gt;
&lt;li&gt;引用了两个示例 ( &lt;code&gt;25&lt;/code&gt;  和 &lt;code&gt;Hello World&lt;/code&gt; )，根据 &lt;code&gt;Redis&lt;/code&gt;  的方式来解码.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;最后&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#最后&#34;&gt;#&lt;/a&gt; 最后&lt;/h3&gt;
&lt;p&gt;期待您的关注，希望和你一起遇见更好的自己&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/images/Redis%E7%B3%BB%E5%88%97/images/qrcode.jpg&#34; alt=&#34;二维码&#34;&gt;&lt;/p&gt;
</content>
        <category term="Redis" />
        <updated>2021-08-02T10:18:55.000Z</updated>
    </entry>
    <entry>
        <id>https://fangjiaxiaobai.github.io/2021/08/02/Redis%E7%B3%BB%E5%88%97/C-4-%E8%B7%B3%E8%A1%A8/</id>
        <title>Redis中的数据结构之跳表及其原理</title>
        <link rel="alternate" href="https://fangjiaxiaobai.github.io/2021/08/02/Redis%E7%B3%BB%E5%88%97/C-4-%E8%B7%B3%E8%A1%A8/"/>
        <content type="html">&lt;h2 id=&#34;前言&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#前言&#34;&gt;#&lt;/a&gt; 前言&lt;/h2&gt;
&lt;p&gt;文中附代码实现. &lt;a href=&#34;#%E4%BB%A3%E7%A0%81%E5%AE%9E%E7%8E%B0&#34;&gt;电梯直达&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;在公众号回复 【跳表】 也可以获取哦。&lt;/p&gt;
&lt;h3 id=&#34;什么是跳表&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#什么是跳表&#34;&gt;#&lt;/a&gt; 什么是跳表&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;跳表是一种数据结构。它允许快速查询一个有序连续元素的数据链表。跳跃列表的平均查找和插入时间复杂度都是 O (log n)，优于普通队列的 O (n)。&lt;/p&gt;
&lt;/blockquote&gt;
 &lt;p align=right&gt; from. 维基百科&lt;/p&gt;
&lt;h3 id=&#34;引题&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#引题&#34;&gt;#&lt;/a&gt; 引题&lt;/h3&gt;
&lt;p&gt;线性表这种数据有两种具体实现，数组和链表。具体的内容之前的文章里也有说过，可以翻翻看哇～。在这里两种数据结构中，数组的优点是查找速度快，而链表的优点是增删的效率高，这也是我们常说的。其实，非也。&lt;/p&gt;
&lt;p&gt;数组是一种内存连续的数据结构，其优点是可以通过 &lt;code&gt;首地址+N*(sizeOf(Node))&lt;/code&gt;  来快速获取指定位置上的元素。假如我们不知道指定元素的位置呢？&lt;/p&gt;
&lt;p&gt;链表是一种非内存连续的数据，其优点是通过改变指针地址来快速增减元素。很明显的问题，你首先要知道你要增加 / 删除的目标元素是哪个！所以会浪费  &lt;code&gt;O(n)&lt;/code&gt;  的查询时间。&lt;/p&gt;
&lt;p&gt;要论效率，那就要说平衡树 ( &lt;code&gt;AVL&lt;/code&gt; ) 了。增删查的效率都是  &lt;code&gt;O(logN)&lt;/code&gt; 。 但是这种数据结构，原理比较复杂，实现起来那不是比较复杂了，那是相当复杂。增删操作，都需要其依靠平衡操作引发子树的调整。&lt;/p&gt;
&lt;p&gt;那么，掌声有请我们今天的主角: &lt;b&gt;跳表&lt;/b&gt;。&lt;/p&gt;
&lt;h2 id=&#34;跳表&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#跳表&#34;&gt;#&lt;/a&gt; 跳表&lt;/h2&gt;
&lt;h3 id=&#34;概念&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#概念&#34;&gt;#&lt;/a&gt; 概念&lt;/h3&gt;
&lt;p&gt;跳表 ( &lt;code&gt;skip list&lt;/code&gt; ) 全称 跳跃链表。 是一种类链表的数据结构。&lt;/p&gt;
&lt;p&gt;跳表的性能和平衡树的性能是一样的，在插入，删除，搜索的时间复杂度都是  &lt;code&gt;O(n)&lt;/code&gt; , 是一种利用空间换时间的数据结构。&lt;/p&gt;
&lt;p&gt;跳表是一种随机化的数据结构，目前开源软件 Redis 和 LevelDB 都有用到它。&lt;/p&gt;
&lt;p&gt;这里，先给大家看一个&lt;b&gt;可能&lt;/b&gt;的跳表结构。&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/images/Redis%E7%B3%BB%E5%88%97/images/%E8%B7%B3%E8%A1%A8-02-%E5%8F%AF%E8%83%BD%E7%9A%84%E8%B7%B3%E8%A1%A8%E7%BB%93%E6%9E%841.png&#34; alt=&#34;跳表-02-可能的跳表结构1.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;现在我要告诉你，上面的跳表是由下面的跳表经过层层优化得来的。&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/images/Redis%E7%B3%BB%E5%88%97/images/%E8%B7%B3%E8%A1%A8-01-%E6%9C%89%E5%BA%8F%E7%9A%84%E9%93%BE%E8%A1%A8.png&#34; alt=&#34;跳表-01-有序的链表&#34;&gt;&lt;/p&gt;
&lt;p&gt;下面我们针对上面的跳表结构来分析一下。&lt;/p&gt;
&lt;p&gt;刚才说过了，链表增删性能罪魁祸首就是查找操作！对于查找操作，效率最高的莫过于二分查找了。但是对于第一个有序链表中是无法使用二分查找的。但是呢，我们可以随机抽选中其中的几个元素，组成一个新的链表。就像下面这样。&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/images/Redis%E7%B3%BB%E5%88%97/images/%E8%B7%B3%E8%A1%A8-03-%E6%8A%BD%E8%B1%A1%E5%87%BA%E6%96%B0%E7%9A%84%E4%B8%80%E5%B1%82.png&#34; alt=&#34;跳表-03-抽象出新的一层.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;假设我们要找 &lt;code&gt;5&lt;/code&gt;  这个元素，在单独的有序链表中，我们必须从头结点依次遍历到  &lt;code&gt;5&lt;/code&gt;  这个节点。路径为 &lt;code&gt;1-&amp;gt;2-&amp;gt;3-&amp;gt;4-&amp;gt;5&lt;/code&gt; , 下图中黄色线路径。, 现在，我们只需要从  &lt;code&gt;1-&amp;gt;2-&amp;gt;4-&amp;gt;5&lt;/code&gt; . 下图中紫色线路径。既然我们可以原来的链表抽象出一个新的链表，那我们还可以从新的链表中再抽象出一个新的链表。这样的话，就直接可以  &lt;code&gt;1-&amp;gt;4-&amp;gt;5&lt;/code&gt; , 就可以查到一个我们的目标节点了。&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/images/Redis%E7%B3%BB%E5%88%97/images/%E8%B7%B3%E8%A1%A8-04-%E5%86%8D%E6%8A%BD%E8%B1%A1%E5%87%BA%E6%96%B0%E7%9A%84%E4%B8%80%E5%B1%82.png&#34; alt=&#34;跳表-04-再抽象出新的一层.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;如果你看到这里，我要告诉你一个重要的概念了。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;层：就是我们假设的抽象出来的新链表。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;可能你很好奇，层我们应该怎么存储呢？很简单啊！&lt;/p&gt;
&lt;p&gt;以后我们每个链表的元素是怎么定义的？？&lt;/p&gt;
&lt;figure class=&#34;highlight c++&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;typedef&lt;/span&gt; &lt;span class=&#34;class&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;struct&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;NODE&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    T data;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    Node *next;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125; node;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;我们只需要将 指向下一个元素的指针改成一个指针数组就可以了！&lt;/p&gt;
&lt;figure class=&#34;highlight c++&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;typedef&lt;/span&gt; &lt;span class=&#34;class&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;struct&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;NODE&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    T data;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;/// 指向后继元素的指针数组&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;class&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;struct&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;Node&lt;/span&gt; *&lt;span class=&#34;title&#34;&gt;next&lt;/span&gt;[&lt;span class=&#34;title&#34;&gt;i&lt;/span&gt;];&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125; node;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;了解了怎么存储之后，那怎样确定某个节点有几层呢？这里我告诉你吧，随机的！怎么随机的呢？就是通过随机数来确定的，也就是我们常说的 抛硬币的形式。 比如下面的这段代码.&lt;/p&gt;
&lt;figure class=&#34;highlight c++&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;/**&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt; * 生成一个随机数&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt; * @return 一个随机数&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt; */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;random_level&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;()&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; level = &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;while&lt;/span&gt; (&lt;span class=&#34;built_in&#34;&gt;rand&lt;/span&gt;() % &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        level++;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    level = (level &amp;lt; MAX_LEVEL) ? level : MAX_LEVEL;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; level;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;那我们就尝试着实现一个跳表。&lt;/p&gt;
&lt;h3 id=&#34;跳表的实现&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#跳表的实现&#34;&gt;#&lt;/a&gt; 跳表的实现&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;定义跳表的结构&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;经过上面的分析，每个节点指向下一个节点的指针是一个数组，所以我们得出下面的结构。(当然也有其他方式的实现，欢迎交流～)&lt;/p&gt;
&lt;figure class=&#34;highlight c++&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;/// 节点&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;NODE &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    T data,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;/// 指向下一个节点的数组，从1开始。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;/// 数组中的每个元素对应该层的下一个节点&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;/// next[1],是第一层的下一个节点的地址。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;/// next[2] 是第二层的下一个节点的地址。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    NODE []next;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;/// 跳表&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;SKIP_LIST&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    NODE head;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;/// 该跳表的层数&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; level;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;查找指定的元素&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;上面说过了 查找过程，我这里就直接给出伪代码了。&lt;/p&gt;
&lt;p&gt;主要逻辑是：从高层开始查找直到找到等于指定元素的节点 E 或者第一个大于指定元素的节点 G。如果是节点 E，那么直接返回就好了。如果是 G 节点，那么就以 G 节点的前一个节点 L, 在下一层进行查找，重复上面的逻辑，直到找到节点 E，或者到达跳表的结尾。&lt;/p&gt;
&lt;p&gt;比如下图中查找  &lt;code&gt;5&lt;/code&gt;  的过程为:&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/images/Redis%E7%B3%BB%E5%88%97/images/%E8%B7%B3%E8%A1%A8-08-%E6%9F%A5%E6%89%BE.png&#34; alt=&#34;跳表-08-查找&#34;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;head-&amp;gt;8&lt;/code&gt; ,  &lt;code&gt;8&amp;gt;5&lt;/code&gt; , 从 &lt;code&gt;head&lt;/code&gt;  开始，去下一层查找。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;head-&amp;gt;4-&amp;gt;8&lt;/code&gt; ,  &lt;code&gt;8&amp;gt;5&lt;/code&gt; , 从  &lt;code&gt;4&lt;/code&gt;  元素开始查找。去下一层查找&lt;/li&gt;
&lt;li&gt;&lt;code&gt;head-&amp;gt;4-&amp;gt;8&lt;/code&gt; ,  &lt;code&gt;8&amp;gt;5&lt;/code&gt; , 从  &lt;code&gt;4&lt;/code&gt;  元素开始查找。去下一层查找.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;head-&amp;gt;4-&amp;gt;6&lt;/code&gt; ,  &lt;code&gt;6&amp;gt;5&lt;/code&gt; , 从  &lt;code&gt;4&lt;/code&gt;  元素开始查找。去下一层查找.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;head-&amp;gt;4-&amp;gt;5&lt;/code&gt; ,  &lt;code&gt;5==5&lt;/code&gt; , 返回节点 &lt;code&gt;5&lt;/code&gt; .&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;如下面的伪代码。&lt;/p&gt;
&lt;figure class=&#34;highlight c++&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;search&lt;/span&gt;() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;/// i 表示层数，从最高层开始查找 。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; (; i &amp;gt;= &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;; i--) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;while&lt;/span&gt; ((q = p-&amp;gt;next[i]) &amp;amp;&amp;amp; q-&amp;gt;k &amp;lt; k) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            p = q;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (q &amp;amp;&amp;amp; k == q-&amp;gt;data) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &amp;amp;(q-&amp;gt;data);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;构建一个跳表。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;上面分析可以得出来，跳表是一个多层的有序链表。所以我们对于每一层都像操作普通链表一样就可以了。就像下面的这样:&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/images/Redis%E7%B3%BB%E5%88%97/images/%E8%B7%B3%E8%A1%A8-06-%E6%8F%92%E5%85%A5.png&#34; alt=&#34;跳表-06-插入&#34;&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight c++&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;insert&lt;/span&gt; () &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;// 找到要插入的节点位置。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;// level是本跳表的层数&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; (i = level&lt;span class=&#34;number&#34;&gt;-1&lt;/span&gt;; i &amp;gt;= &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;; i--) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;comment&#34;&gt;///遍历该层小于指定值的前一个元素&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;while&lt;/span&gt; ((q = p-&amp;gt;next[i]) &amp;amp;&amp;amp; q-&amp;gt;k &amp;lt; k) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            p = q;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;comment&#34;&gt;/// 新节点的前一个节点的层指针。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        update[i] = p;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;// 随机生成该节点的层数,如果生成的层数大于当前层，需要更新跳表中记录的level值。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    new_level = &lt;span class=&#34;built_in&#34;&gt;rand_level&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt;(new_level &amp;gt; level) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        level = new_level;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;// 生成新的节点，并针对每一层执行普通链表的插入操作。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    new_node = &lt;span class=&#34;built_in&#34;&gt;create_new_node&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; (i = level - &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;; i &amp;gt;= &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;; i--) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;comment&#34;&gt;/// 下面两行代码就是普通连接的增加方法。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;comment&#34;&gt;/// 新节点的前一个节点的第i层的节点。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        new_node-&amp;gt;next[i] = update[i]-&amp;gt;next[i];&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        update[i]-&amp;gt;next[i] = q;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;删除跳表的元素&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;主要逻辑是该节点的每一层都要删除.&lt;/p&gt;
&lt;p&gt;即对每一层，都要 要删除节点的上一个节点指向要删除节点的下一个节点。&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/images/Redis%E7%B3%BB%E5%88%97/images/%E8%B7%B3%E8%A1%A8-07-%E5%88%A0%E9%99%A4.png&#34; alt=&#34;跳表-07-删除.png&#34;&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight c++&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;del&lt;/span&gt;() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;/// 找到要删除的节点&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; (; i &amp;gt;= &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;; --i) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;while&lt;/span&gt; ((q = p-&amp;gt;next[i]) &amp;amp;&amp;amp; q-&amp;gt;k &amp;lt; k) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            p = q;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        update[i] = p;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;代码实现&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#代码实现&#34;&gt;#&lt;/a&gt; 代码实现&lt;/h3&gt;
&lt;p&gt;👉 &lt;a href=&#34;https://github.com/fangjiaxiaobai/data_structures_and_algorithms/tree/master/01_data_structures/skiplist/c/01_fangjiaxiaobai&#34;&gt;跳表 &lt;code&gt;C&lt;/code&gt;  语言版本&lt;/a&gt;&lt;br&gt;
👉 &lt;a href=&#34;https://github.com/fangjiaxiaobai/data_structures_and_algorithms/tree/master/01_data_structures/skiplist/java/fangjiaxiaobai&#34;&gt;跳表 &lt;code&gt;JAVA&lt;/code&gt;  版本&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;其他语言，比如  &lt;code&gt;python&lt;/code&gt; ,  &lt;code&gt;golang&lt;/code&gt; ,  &lt;code&gt;c++&lt;/code&gt; ,  &lt;code&gt;js&lt;/code&gt; ,  &lt;code&gt;php&lt;/code&gt; ,  &lt;code&gt;kotlin&lt;/code&gt;  版本的代码，你有没有兴趣搞一波呢？👉 &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL2ZhbmdqaWF4aWFvYmFpL2RhdGFfc3RydWN0dXJlc19hbmRfYWxnb3JpdGhtcw==&#34;&gt;赐教地址&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;各位看官可以选择自己熟悉的语言查看。实现代码仅供参考。如有高见，欢迎交流哇～，还请不吝赐教！&lt;/p&gt;
&lt;p&gt;也欢迎大侠提交自己擅长语言的代码到仓库～，集思广益，一起交流！期待～～&lt;/p&gt;
&lt;p&gt;(仓库中的数据结构与算法持续更新哦，欢迎 &lt;code&gt;star&lt;/code&gt; )&lt;/p&gt;
&lt;h3 id=&#34;时间复杂度的分析&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#时间复杂度的分析&#34;&gt;#&lt;/a&gt; 时间复杂度的分析&lt;/h3&gt;
&lt;p&gt;因为跳表的时间复杂度和跳表的层数以及该层上的节点数和节点分布的位置有关，而这些因素都是随机的。 此中涉及了很多复杂的概率统计学知识。所以我就摘自维基百科中的说明，如下:&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/images/Redis%E7%B3%BB%E5%88%97/images/%E8%B7%B3%E8%A1%A8-05-%E7%9A%84%E6%97%B6%E9%97%B4%E5%A4%8D%E6%9D%82%E5%BA%A6.png&#34; alt=&#34;跳表-05-的时间复杂度png&#34;&gt;&lt;/p&gt;
&lt;p&gt;如果看的不是很清晰，也可以这么想：&lt;/p&gt;
&lt;p&gt;如果每两个节点抽出一个节点作为上一级索引的节点，那第一级索引的节点个数大约就是  &lt;code&gt;n/2&lt;/code&gt;  , 第二级索引是  &lt;code&gt;n/4&lt;/code&gt; , 第三级就是  &lt;code&gt;n/8&lt;/code&gt; 。 也就是说 第  &lt;code&gt;k&lt;/code&gt;  级索引节点个数是  &lt;code&gt;n/(2^k)&lt;/code&gt; ;&lt;/p&gt;
&lt;p&gt;假设，我们有  &lt;code&gt;h&lt;/code&gt;  层，最高层索引有 &lt;code&gt;2&lt;/code&gt;  个节点，那么， 就是  &lt;code&gt;n/(2^k)=2&lt;/code&gt; , 那么 &lt;span class=&#34;katex&#34;&gt;&lt;span class=&#34;katex-mathml&#34;&gt;&lt;math xmlns=&#34;http://www.w3.org/1998/Math/MathML&#34;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;mi&gt;k&lt;/mi&gt;&lt;mo&gt;=&lt;/mo&gt;&lt;mi&gt;l&lt;/mi&gt;&lt;mi&gt;o&lt;/mi&gt;&lt;msub&gt;&lt;mi&gt;g&lt;/mi&gt;&lt;mn&gt;2&lt;/mn&gt;&lt;/msub&gt;&lt;mi&gt;N&lt;/mi&gt;&lt;mo&gt;−&lt;/mo&gt;&lt;mn&gt;1&lt;/mn&gt;&lt;/mrow&gt;&lt;annotation encoding=&#34;application/x-tex&#34;&gt;k=log_2N-1&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&#34;katex-html&#34; aria-hidden=&#34;true&#34;&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:0.69444em;vertical-align:0em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.03148em;&#34;&gt;k&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2777777777777778em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mrel&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2777777777777778em;&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:0.8888799999999999em;vertical-align:-0.19444em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.01968em;&#34;&gt;l&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;o&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.03588em;&#34;&gt;g&lt;/span&gt;&lt;span class=&#34;msupsub&#34;&gt;&lt;span class=&#34;vlist-t vlist-t2&#34;&gt;&lt;span class=&#34;vlist-r&#34;&gt;&lt;span class=&#34;vlist&#34; style=&#34;height:0.30110799999999993em;&#34;&gt;&lt;span style=&#34;top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;&#34;&gt;&lt;span class=&#34;pstrut&#34; style=&#34;height:2.7em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;sizing reset-size6 size3 mtight&#34;&gt;&lt;span class=&#34;mord mtight&#34;&gt;2&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;vlist-s&#34;&gt;​&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;vlist-r&#34;&gt;&lt;span class=&#34;vlist&#34; style=&#34;height:0.15em;&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.10903em;&#34;&gt;N&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2222222222222222em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mbin&#34;&gt;−&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2222222222222222em;&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:0.64444em;vertical-align:0em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;，这个链表的高度就是 &lt;span class=&#34;katex&#34;&gt;&lt;span class=&#34;katex-mathml&#34;&gt;&lt;math xmlns=&#34;http://www.w3.org/1998/Math/MathML&#34;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;mi&gt;l&lt;/mi&gt;&lt;mi&gt;o&lt;/mi&gt;&lt;msub&gt;&lt;mi&gt;g&lt;/mi&gt;&lt;mn&gt;2&lt;/mn&gt;&lt;/msub&gt;&lt;mi&gt;N&lt;/mi&gt;&lt;/mrow&gt;&lt;annotation encoding=&#34;application/x-tex&#34;&gt;log_2N&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&#34;katex-html&#34; aria-hidden=&#34;true&#34;&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:0.8888799999999999em;vertical-align:-0.19444em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.01968em;&#34;&gt;l&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;o&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.03588em;&#34;&gt;g&lt;/span&gt;&lt;span class=&#34;msupsub&#34;&gt;&lt;span class=&#34;vlist-t vlist-t2&#34;&gt;&lt;span class=&#34;vlist-r&#34;&gt;&lt;span class=&#34;vlist&#34; style=&#34;height:0.30110799999999993em;&#34;&gt;&lt;span style=&#34;top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;&#34;&gt;&lt;span class=&#34;pstrut&#34; style=&#34;height:2.7em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;sizing reset-size6 size3 mtight&#34;&gt;&lt;span class=&#34;mord mtight&#34;&gt;2&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;vlist-s&#34;&gt;​&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;vlist-r&#34;&gt;&lt;span class=&#34;vlist&#34; style=&#34;height:0.15em;&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.10903em;&#34;&gt;N&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;. 如果每一层要遍历  &lt;code&gt;m&lt;/code&gt;  个节点，那么在跳表中查询一个数据的时间复杂度就是 &lt;code&gt;O(m*logN)&lt;/code&gt; .&lt;/p&gt;
&lt;p&gt;由于随机分布的存在，我们可以把 m 当做一个常数，所以，时间复杂度大致可以认为是  &lt;code&gt;O(logN)&lt;/code&gt;&lt;/p&gt;
&lt;h3 id=&#34;空间复杂度的分析&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#空间复杂度的分析&#34;&gt;#&lt;/a&gt; 空间复杂度的分析&lt;/h3&gt;
&lt;p&gt;根据整体代码实现来看，我们使用了链表的形式来实现。其中， &lt;code&gt;next&lt;/code&gt;  改成了数组用来存储下一节点的指针，并没有真正的存储对象，. 也就是说，其实我们并没有使用很多的内存，当然，比一般的链表还是要多一些的。对于我们存储的对象来讲，用于存储指针的内存直接就可以忽略了。时间复杂度为  &lt;code&gt;O(N+m)&lt;/code&gt; , 其中  &lt;code&gt;N&amp;gt;&amp;gt;m&lt;/code&gt; ( &lt;code&gt;N&lt;/code&gt;  远远大于 &lt;code&gt;m&lt;/code&gt; ).&lt;/p&gt;
&lt;h3 id=&#34;比较&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#比较&#34;&gt;#&lt;/a&gt; 比较&lt;/h3&gt;
&lt;h4 id=&#34;跳表-与平衡树-哈希表的比较&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#跳表-与平衡树-哈希表的比较&#34;&gt;#&lt;/a&gt; 跳表 与平衡树、哈希表的比较&lt;/h4&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:center&#34;&gt;&lt;/th&gt;
&lt;th style=&#34;text-align:center&#34;&gt;跳表&lt;/th&gt;
&lt;th style=&#34;text-align:center&#34;&gt;平衡树&lt;/th&gt;
&lt;th style=&#34;text-align:center&#34;&gt;哈希表&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;有序性&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;有序&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;有序&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;无序&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;查找性能&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;O(logN)&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;O(logN)&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;O(N)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;实现逻辑&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;简单&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;复杂&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;简单&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;是否支持范围查找&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;支持&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;支持&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;不支持 (无序)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;时间复杂度&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;较少，取决 p 参数&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;较大 (和跳表比，占用左右子树的两个指针)&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;一般&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h4 id=&#34;解释如下&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#解释如下&#34;&gt;#&lt;/a&gt; 解释如下:&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;在做范围查找的时候，平衡树比跳表操作要复杂。在平衡树上，我们找到指定范围的小值之后，还需要以中序遍历的顺序继续寻找其它不超过大值的节点。如果不对平衡树进行一定的改造，这里的中序遍历并不容易实现。而在跳表上进行范围查找就非常简单，只需要在找到小值之后，对第 &lt;code&gt;1&lt;/code&gt;  层链表进行若干步的遍历就可以实现。&lt;/li&gt;
&lt;li&gt;平衡树的增删操作可能引发子树的平衡调整，而跳表的插入和删除只需要修改相邻节点的指针，操作简单又快速。&lt;/li&gt;
&lt;li&gt;从内存占用上来说，跳表比平衡树更灵活一些。一般来说，平衡树每个节点包含 &lt;code&gt;2&lt;/code&gt;  个指针（分别指向左右子树），而跳表每个节点包含的指针数目平均为 &lt;code&gt;1/(1-p)&lt;/code&gt; ，具体取决于参数 &lt;code&gt;p&lt;/code&gt;  的大小。如果像 &lt;code&gt;Redis&lt;/code&gt;  里的实现一样，取 &lt;code&gt;p=1/4&lt;/code&gt; ，那么平均每个节点包含 &lt;code&gt;1.33&lt;/code&gt;  个指针，比平衡树更有优势。&lt;/li&gt;
&lt;li&gt;查找单个 &lt;code&gt;key&lt;/code&gt; ，跳表和平衡树的时间复杂度都为 &lt;code&gt;O(log n)&lt;/code&gt; ，大体相当；而哈希表在保持较低的哈希值冲突概率的前提下，查找时间复杂度接近 &lt;code&gt;O(1)&lt;/code&gt; ，性能更高一些。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;我还从网上看到了 &lt;code&gt;Redis&lt;/code&gt;  的作者选择 跳表做为 &lt;code&gt;zset&lt;/code&gt;  底层数据结构的原因，贴在下面。&lt;/p&gt;
&lt;h4 id=&#34;redis中作者选择skiplist的原因&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#redis中作者选择skiplist的原因&#34;&gt;#&lt;/a&gt;  &lt;code&gt;Redis&lt;/code&gt;  中作者选择 SkipList 的原因:&lt;/h4&gt;
&lt;blockquote&gt;
&lt;p&gt;There are a few reasons:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;They are not very memory intensive. It’s up to you basically. Changing parameters about the probability of a node to have a given number of levels will make then less memory intensive than btrees.&lt;/li&gt;
&lt;li&gt;A sorted set is often target of many ZRANGE or ZREVRANGE operations, that is, traversing the skip list as a linked list. With this operation the cache locality of skip lists is at least as good as with other kind of balanced trees.&lt;/li&gt;
&lt;li&gt;They are simpler to implement, debug, and so forth. For instance thanks to the skip list simplicity I received a patch (already in Redis master) with augmented skip lists implementing ZRANK in O(log(N)). It required little changes to the code.&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;总结&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#总结&#34;&gt;#&lt;/a&gt; 总结&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;简单的从性能角度分析了数组和链表在性能方面的障碍，引出了我们今天的主角： 跳表。&lt;/li&gt;
&lt;li&gt;画了一个可能出现的跳表结构。这是与跳表的初次见面。并介绍了二分查找的变相应用。当前，这都是基于有序链表为前提的。&lt;/li&gt;
&lt;li&gt;介绍了链表的层的概念，这是跳表相对于链表最重要且唯一的概念，有了它才有了时间复杂度为 &lt;code&gt;O(logN)&lt;/code&gt;  的查询效率，从而实现了增删操作的时间复杂度也是 &lt;code&gt;O(logN)&lt;/code&gt; 。&lt;/li&gt;
&lt;li&gt;接下来，我们一起完成了跳表的实现逻辑。并且提供了多种语言的跳表实现版本。希望你也提交代码到仓库中，大家一起交流，期待。&lt;/li&gt;
&lt;li&gt;跳表在发展的过程中也出现几个变种，我们的这个只是一个最简答的实现。甚至我们都没有考虑过元素个数与层数的最优解等等问题。后面会有一篇文章分享的是 &lt;code&gt;Redis&lt;/code&gt;  中 &lt;code&gt;skiplist&lt;/code&gt;  的实现。敬请期待吧～&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;推荐&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#推荐&#34;&gt;#&lt;/a&gt; 推荐&lt;/h2&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cueW91dHViZS5jb20vd2F0Y2g/dj0yZzlPU1JLSnV6TQ==&#34;&gt;某高校跳表公开课 (需科学上网)&lt;/span&gt;&lt;/p&gt;
&lt;h2 id=&#34;最后&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#最后&#34;&gt;#&lt;/a&gt; 最后&lt;/h2&gt;
&lt;p&gt;期望与你一起遇见更好的自己&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/images/qrcode.jpg&#34; alt=&#34;期望与你一起遇见更好的自己&#34;&gt;&lt;/p&gt;
</content>
        <category term="Redis" />
        <category term="数据结构" />
        <updated>2021-08-01T16:00:00.000Z</updated>
    </entry>
    <entry>
        <id>https://fangjiaxiaobai.github.io/2021/08/01/Redis%E7%B3%BB%E5%88%97/B-7-Redis%E7%9A%84%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B%E4%B9%8BHyperLogLogs/</id>
        <title>Redis数据结构之 `HyperLogLogs`</title>
        <link rel="alternate" href="https://fangjiaxiaobai.github.io/2021/08/01/Redis%E7%B3%BB%E5%88%97/B-7-Redis%E7%9A%84%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B%E4%B9%8BHyperLogLogs/"/>
        <content type="html">&lt;h2 id=&#34;书接上回&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#书接上回&#34;&gt;#&lt;/a&gt; 书接上回&lt;/h2&gt;
&lt;p&gt;上一篇我们学习的  &lt;code&gt;bitmap&lt;/code&gt;  这一 &lt;code&gt;“数据类型”&lt;/code&gt; 。其内部是由 &lt;code&gt;sds&lt;/code&gt;  这种种数据结构编码的。&lt;br&gt;
如果不记得了，那就来坐穿梭机回去看看吧。 &lt;a href=&#34;./010-Redis%E7%9A%84%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B9%8B%E4%BD%8D%E5%9B%BEbitmap.md&#34;&gt;开始穿梭&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;接下来，我们继续学习一个新的 &lt;code&gt;&amp;quot;数据类型&amp;quot;&lt;/code&gt; , 位图， &lt;code&gt;HyperLogLogs&lt;/code&gt; .（注意啦，数据类型，我又加了引号！！）&lt;/p&gt;
&lt;h2 id=&#34;hyperloglogs简介&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#hyperloglogs简介&#34;&gt;#&lt;/a&gt;  &lt;code&gt;HyperLogLogs&lt;/code&gt;  简介&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;HyperLogLog&lt;/code&gt;  是一种&lt;b&gt;概率数据结构&lt;/b&gt;，用于对唯一事物进行计数（从技术上讲，这是指估计集合的基数）。&lt;/p&gt;
&lt;p&gt;注意哦，  &lt;code&gt;HyperlogLog&lt;/code&gt;  其实是一种基数计数算法，并非 &lt;code&gt;Redis&lt;/code&gt;  独有的。&lt;/p&gt;
&lt;p&gt;通常，对唯一项目进行计数需要使用与要计数的项目数量成比例的内存量，因为您需要记住过去已经看到的元素，以避免多次对其进行计数。但是，有一组算法会以内存换取精度：以 &lt;code&gt;Redis&lt;/code&gt;  实施为例，您得出的带有标准误差的估计度量最终会小于 &lt;code&gt;1％&lt;/code&gt; 。&lt;/p&gt;
&lt;p&gt;该算法的神奇之处在于，您不再需要使用与所计数项目数量成比例的内存量，而可以使用恒定数量的内存！在最坏的情况下为 &lt;code&gt;12k&lt;/code&gt;  字节，如果您的 &lt;code&gt;HyperLogLogs&lt;/code&gt;  看到的元素很少，而且少得多。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Redis&lt;/code&gt;  中的 &lt;code&gt;HyperLogLog&lt;/code&gt;  尽管在技术上是不同的数据结构，但被编码为 &lt;code&gt;Redis字符串&lt;/code&gt;  ( &lt;code&gt;sds&lt;/code&gt; )，因此您可以调用 &lt;code&gt;GET&lt;/code&gt;  来序列化 &lt;code&gt;HyperLogLogs&lt;/code&gt; ，然后调用 &lt;code&gt;SET&lt;/code&gt;  来将其反序列化回服务器。这里我们在文末会大体翻一下源码。&lt;/p&gt;
&lt;p&gt;接下来我们先看一下 HyperLogLog 有什么应用场景。&lt;/p&gt;
&lt;h3 id=&#34;hyperloglog-的应用场景&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#hyperloglog-的应用场景&#34;&gt;#&lt;/a&gt;  &lt;code&gt;HyperLogLog&lt;/code&gt;  的应用场景&lt;/h3&gt;
&lt;p&gt;根据 &lt;code&gt;HyperLogLog&lt;/code&gt;  的特性来看，使用了一种概率性计数的功能，这样的功能有一个特点就是当数据特别大的时候，其统计的值是不准确的。什么意思呢？&lt;/p&gt;
&lt;p&gt;就是比如统计一个网站的 &lt;code&gt;PV&lt;/code&gt; ， &lt;code&gt;PV&lt;/code&gt;  数值是  &lt;code&gt;123456789&lt;/code&gt;  或者  &lt;code&gt;123456000&lt;/code&gt;  这两者的值对于管理者来讲是一样的。对于一些&lt;b&gt;对精度要求不准确而且数据量很大&lt;/b&gt;的场景是非常适合的。&lt;/p&gt;
&lt;p&gt;比如以下场景：计算网站的 PV，UV，统计日活，月活，统计用户每天搜索的词条数等等。&lt;/p&gt;
&lt;h3 id=&#34;hyperloglog-的常用命令&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#hyperloglog-的常用命令&#34;&gt;#&lt;/a&gt;  &lt;code&gt;HyperLogLog&lt;/code&gt;  的常用命令&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;HyperLogLog&lt;/code&gt;  应该是 &lt;code&gt;Redis&lt;/code&gt;  所有结构中命令最少的了，只有三个命令。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;PFADD key element [element ...]&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;添加元素。&lt;br&gt;
如果一个 &lt;code&gt;HyperLogLog&lt;/code&gt;  的估计的近似基数在执行命令过程中发了变化，  &lt;code&gt;PFADD&lt;/code&gt;  返回 &lt;code&gt;1&lt;/code&gt; ，否则返回 &lt;code&gt;0&lt;/code&gt; ，如果指定的 &lt;code&gt;key&lt;/code&gt;  不存在，这个命令会自动创建一个空的 &lt;code&gt;HyperLogLog&lt;/code&gt;  结构（指定长度和编码的字符串）.&lt;/p&gt;
&lt;figure class=&#34;highlight r&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:&lt;span class=&#34;number&#34;&gt;6379&lt;/span&gt;&amp;gt; pfadd k96 v1 v2 v3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(integer) &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;127.0&lt;/span&gt;.0.1:&lt;span class=&#34;number&#34;&gt;6379&lt;/span&gt;&amp;gt; pfadd k96 v4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(integer) &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;127.0&lt;/span&gt;.0.1:&lt;span class=&#34;number&#34;&gt;6379&lt;/span&gt;&amp;gt; pfadd k96 v1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(integer) &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;127.0&lt;/span&gt;.0.1:&lt;span class=&#34;number&#34;&gt;6379&lt;/span&gt;&amp;gt; pfadd k96 v2 v3 v4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(integer) &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;127.0&lt;/span&gt;.0.1:&lt;span class=&#34;number&#34;&gt;6379&lt;/span&gt;&amp;gt; &lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;PFCOUNT key [key ...]&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;当参数为一个 &lt;code&gt;key&lt;/code&gt;  时，返回存储在 &lt;code&gt;HyperLogLog&lt;/code&gt;  结构体的该变量的近似基数，如果该变量不存在，则返回 &lt;code&gt;0&lt;/code&gt; .&lt;/p&gt;
&lt;p&gt;当参数为多个 &lt;code&gt;key&lt;/code&gt;  时，返回这些 &lt;code&gt;HyperLogLog&lt;/code&gt;  并集的近似基数，这个值是将所给定的所有 &lt;code&gt;key&lt;/code&gt;  的 &lt;code&gt;HyperLoglog&lt;/code&gt;  结构合并到一个临时的 &lt;code&gt;HyperLogLog&lt;/code&gt;  结构中计算而得到的.&lt;/p&gt;
&lt;figure class=&#34;highlight r&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:&lt;span class=&#34;number&#34;&gt;6379&lt;/span&gt;&amp;gt; pfadd k97 v1 v2 v3 v4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(integer) &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;127.0&lt;/span&gt;.0.1:&lt;span class=&#34;number&#34;&gt;6379&lt;/span&gt;&amp;gt; PFCOUNT k97&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(integer) &lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 测试多个key&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;127.0&lt;/span&gt;.0.1:&lt;span class=&#34;number&#34;&gt;6379&lt;/span&gt;&amp;gt; PFCOUNT k97 k96&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(integer) &lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;127.0&lt;/span&gt;.0.1:&lt;span class=&#34;number&#34;&gt;6379&lt;/span&gt;&amp;gt; PFADD k97 v5 v6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(integer) &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;127.0&lt;/span&gt;.0.1:&lt;span class=&#34;number&#34;&gt;6379&lt;/span&gt;&amp;gt; PFCOUNT k97 k96&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(integer) &lt;span class=&#34;number&#34;&gt;6&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;刚才说了， &lt;code&gt;HyperLogLog&lt;/code&gt;  只是存储总数的一种结构，而且其值也会和实际值有偏差。我们一起来验证一下这个结果&lt;/p&gt;
&lt;p&gt;我们往 &lt;code&gt;Redis&lt;/code&gt;  中插入 &lt;code&gt;10000&lt;/code&gt;  条数据，查看其  &lt;code&gt;pfcount&lt;/code&gt;  的值是多少。&lt;/p&gt;
&lt;p&gt;使用下面这个脚本去插入 ( &lt;code&gt;java&lt;/code&gt;  实现)。公众号回复  &lt;code&gt;RedisClient&lt;/code&gt;  可以获取完整源码。&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;String host = &lt;span class=&#34;string&#34;&gt;&amp;quot;10.1.14.159&amp;quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; port = &lt;span class=&#34;number&#34;&gt;6379&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;SocketRedisClient client = &lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; SocketRedisClient(host, port);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;String authCmd = client.exec(&lt;span class=&#34;string&#34;&gt;&amp;quot;auth moyang&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;System.out.println(&lt;span class=&#34;string&#34;&gt;&amp;quot;登录验证结果:&amp;quot;&lt;/span&gt; + authCmd);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;System.out.println(&lt;span class=&#34;string&#34;&gt;&amp;quot;删除已经存在的key :&amp;quot;&lt;/span&gt; + client.exec(&lt;span class=&#34;string&#34;&gt;&amp;quot;del k97&amp;quot;&lt;/span&gt;));&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; i = &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;; i &amp;lt;= &lt;span class=&#34;number&#34;&gt;10000&lt;/span&gt;; i++) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    String cmd = &lt;span class=&#34;string&#34;&gt;&amp;quot;pfadd k97 &amp;quot;&lt;/span&gt; + i;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    client.exec(cmd);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    String cmd2 = &lt;span class=&#34;string&#34;&gt;&amp;quot;pfcount k97 &amp;quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    String exec = client.exec(cmd2);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    System.out.println(&lt;span class=&#34;string&#34;&gt;&amp;quot;执行命令:&amp;quot;&lt;/span&gt; + cmd + &lt;span class=&#34;string&#34;&gt;&amp;quot; 返回结果:&amp;quot;&lt;/span&gt; + exec); &lt;span class=&#34;comment&#34;&gt;// 返回的结果是未解析Redis协议的。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;client.releases();&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;插入完成之后，如下图，我们可以看到  &lt;code&gt;pfCount&lt;/code&gt;  的结果是  &lt;code&gt;9988&lt;/code&gt; .&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/images/Redis%E7%B3%BB%E5%88%97/images/pf-%E6%89%A7%E8%A1%8C10000%E6%AC%A1%E6%8F%92%E5%85%A5%E7%BB%93%E6%9E%9C.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;如果不相信我们可以 在 &lt;code&gt;shell&lt;/code&gt;  里看看。&lt;/p&gt;
&lt;figure class=&#34;highlight r&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:&lt;span class=&#34;number&#34;&gt;6379&lt;/span&gt;&amp;gt; pfcount k97&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(integer) &lt;span class=&#34;number&#34;&gt;9988&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;我这次测试正好相等，其实由于脚本的问题呢，从程序里获取的值和 &lt;code&gt;shell&lt;/code&gt;  里获取的值，可能不一样，这种怎么解决呢？ 使用脚本单独再执行一次，就会一样了。具体原因，不赘述了。&lt;/p&gt;
&lt;p&gt;好了，我们插入了 &lt;code&gt;10000&lt;/code&gt;  次，但是得出的值却是  &lt;code&gt;9988&lt;/code&gt; ， 这也就验证了其不精确性。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;PFMERGE destkey sourcekey [sourcekey ...]&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;将多个  &lt;code&gt;HyperLogLog&lt;/code&gt;  合并（ &lt;code&gt;merge&lt;/code&gt; ）为一个  &lt;code&gt;HyperLogLog&lt;/code&gt;  ， 合并后的  &lt;code&gt;HyperLogLog&lt;/code&gt;  的基数接近于所有输入  &lt;code&gt;HyperLogLog&lt;/code&gt;  的可见集合（ &lt;code&gt;observed set&lt;/code&gt; ）的并集.&lt;/p&gt;
&lt;p&gt;合并得出的  &lt;code&gt;HyperLogLog&lt;/code&gt;  会被储存在目标变量（第一个参数）里面， 如果该键并不存在， 那么命令在执行之前， 会先为该键创建一个空的  &lt;code&gt;HyperLogLog&lt;/code&gt; .&lt;/p&gt;
&lt;figure class=&#34;highlight r&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:&lt;span class=&#34;number&#34;&gt;6379&lt;/span&gt;&amp;gt; pfadd k98 v1 v2 v3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(integer) &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;127.0&lt;/span&gt;.0.1:&lt;span class=&#34;number&#34;&gt;6379&lt;/span&gt;&amp;gt; pfadd k98_1 v2 v3 v4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(integer) &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;127.0&lt;/span&gt;.0.1:&lt;span class=&#34;number&#34;&gt;6379&lt;/span&gt;&amp;gt; pfadd k98_2 v3 v4 v5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(integer) &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;127.0&lt;/span&gt;.0.1:&lt;span class=&#34;number&#34;&gt;6379&lt;/span&gt;&amp;gt; pfmerge k98 k98_1 k98_2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;OK&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;127.0&lt;/span&gt;.0.1:&lt;span class=&#34;number&#34;&gt;6379&lt;/span&gt;&amp;gt; pfcount k98&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(integer) &lt;span class=&#34;number&#34;&gt;5&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;127.0&lt;/span&gt;.0.1:&lt;span class=&#34;number&#34;&gt;6379&lt;/span&gt;&amp;gt; pfcount k98_1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(integer) &lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;127.0&lt;/span&gt;.0.1:&lt;span class=&#34;number&#34;&gt;6379&lt;/span&gt;&amp;gt; pfcount k98_2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(integer) &lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;以上就是  &lt;code&gt;HyperLogLog&lt;/code&gt;  的命令，老规矩我们下一步来看看  &lt;code&gt;HyperLogLog&lt;/code&gt;  在 Redis 中是怎么实现的。&lt;/p&gt;
&lt;h3 id=&#34;hyperloglog的结构&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#hyperloglog的结构&#34;&gt;#&lt;/a&gt;  &lt;code&gt;HyperLogLog&lt;/code&gt;  的结构&lt;/h3&gt;
&lt;p&gt;在  &lt;code&gt;Clion&lt;/code&gt;  中直接查找 &lt;code&gt;hyperloglog&lt;/code&gt;  ，就是  &lt;code&gt;hyperloglog&lt;/code&gt;  的实现了。&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/images/Redis%E7%B3%BB%E5%88%97/images/hyperloglog-%E6%9F%A5%E6%89%BE%E7%9B%AE%E5%BD%95.png&#34; alt=&#34;hyperloglog-查找目录.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;我们可以看到有一个  &lt;code&gt;struct&lt;/code&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;class&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;struct&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;hllhdr&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;char&lt;/span&gt; magic[&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;];      &lt;span class=&#34;comment&#34;&gt;/* 魔数: &amp;quot;HYLL&amp;quot; */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;uint8_t&lt;/span&gt; encoding;   &lt;span class=&#34;comment&#34;&gt;/* HLL_DENSE或HLL_SPARSE */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;uint8_t&lt;/span&gt; notused[&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;]; &lt;span class=&#34;comment&#34;&gt;/* 保留以供将来使用，必须为零。 */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;uint8_t&lt;/span&gt; card[&lt;span class=&#34;number&#34;&gt;8&lt;/span&gt;];    &lt;span class=&#34;comment&#34;&gt;/* 缓存基数，小端。 */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;uint8_t&lt;/span&gt; registers[]; &lt;span class=&#34;comment&#34;&gt;/* 数据字节。 */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;这个就是  &lt;code&gt;HyperLogLog&lt;/code&gt;  的存储结构了。这里大家大体有个印象就可以了。HyperLogLog 是一种基数估算算法的实现。后面我们会介绍这种&lt;b&gt;基数估算法&lt;/b&gt;。&lt;/p&gt;
&lt;h2 id=&#34;预告&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#预告&#34;&gt;#&lt;/a&gt; 预告&lt;/h2&gt;
&lt;p&gt;最后一个 数据类型  &lt;code&gt;geohash&lt;/code&gt;  (多维空间点索引算法)！！！&lt;/p&gt;
&lt;h2 id=&#34;最后&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#最后&#34;&gt;#&lt;/a&gt; 最后&lt;/h2&gt;
&lt;p&gt;希望与你一起遇见更好的自己&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/images/Redis%E7%B3%BB%E5%88%97/images/qrcode.jpg&#34; alt=&#34;微信二维码&#34;&gt;&lt;/p&gt;
</content>
        <category term="Redis" />
        <updated>2021-08-01T10:58:55.000Z</updated>
    </entry>
    <entry>
        <id>https://fangjiaxiaobai.github.io/2021/08/01/Redis%E7%B3%BB%E5%88%97/B-6-Redis%E7%9A%84%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B%E4%B9%8B%E4%BD%8D%E5%9B%BEbitmap/</id>
        <title>Redis数据结构之位图 BitMap</title>
        <link rel="alternate" href="https://fangjiaxiaobai.github.io/2021/08/01/Redis%E7%B3%BB%E5%88%97/B-6-Redis%E7%9A%84%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B%E4%B9%8B%E4%BD%8D%E5%9B%BEbitmap/"/>
        <content type="html">&lt;h2 id=&#34;书接上回&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#书接上回&#34;&gt;#&lt;/a&gt; 书接上回&lt;/h2&gt;
&lt;p&gt;上一篇我们学习的  &lt;code&gt;zset&lt;/code&gt;  集合这一数据类型。其内部是由 &lt;code&gt;skiplist&lt;/code&gt;  和 &lt;code&gt;hashtable&lt;/code&gt;  这种两种数据结构编码的。&lt;br&gt;
如果不记得了，那就来坐穿梭机回去看看吧。 &lt;a href=&#34;/2021/08/01/Redis%E7%B3%BB%E5%88%97/B-5-Redis%E7%9A%84%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B%E4%B9%8B%E6%9C%89%E5%BA%8F%E9%9B%86%E5%90%88zset/&#34;&gt;开始穿梭&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;接下来，我们继续学习一个新的 &lt;code&gt;&amp;quot;数据类型&amp;quot;&lt;/code&gt; , 位图， &lt;code&gt;bitmap&lt;/code&gt; .（注意啦，数据类型，我加了引号！！）&lt;/p&gt;
&lt;h2 id=&#34;bitmap简介&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#bitmap简介&#34;&gt;#&lt;/a&gt;  &lt;code&gt;bitmap&lt;/code&gt;  简介&lt;/h2&gt;
&lt;p&gt;那么什么是 &lt;code&gt;bitmap&lt;/code&gt; , 我们先从名字上来说， &lt;code&gt;bit&lt;/code&gt; ，计算机中最小的单位，一个 &lt;code&gt;bit&lt;/code&gt;  表示一个二进制位。 &lt;code&gt;map&lt;/code&gt; ，映射，图。所以， &lt;code&gt;bitmap&lt;/code&gt;  就是表示对二进制位的映射。那具体是怎么回事呢？ &lt;code&gt;bitmap&lt;/code&gt;  其实就是以字符串的形式对二进制位进行操作，从而达到节约空间占用的作用。&lt;/p&gt;
&lt;p&gt;而且， &lt;code&gt;bitmap&lt;/code&gt; ，中文的意思就是位图。 不知道你用没用过 &lt;code&gt;C&lt;/code&gt;  语言的位图结构，他们的目的都是一样。&lt;/p&gt;
&lt;p&gt;可能你还是不理解，别急，往下看。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;bitmap&lt;/code&gt;  怎么用呢？&lt;/p&gt;
&lt;p&gt;恰巧，前几天小编在面试中被问到过这个问题。&lt;/p&gt;
&lt;p&gt;面试官说： &lt;b&gt;有个业务场景：我们这边有 10000 家线下门店，我们要对部分门店进行广告投放，怎么记录某条广告投放给哪家门店里了呢？我们的门店 &lt;code&gt;id&lt;/code&gt;  是递增的。&lt;/b&gt;&lt;/p&gt;
&lt;p&gt;首先我们可以有三张表，广告表 ( &lt;code&gt;G&lt;/code&gt;  表)，门店表（ &lt;code&gt;M&lt;/code&gt;  表），广告门店关联表（ &lt;code&gt;GM&lt;/code&gt;  表）。&lt;/p&gt;
&lt;p&gt;如果我们投放广告的时候，把每条广告和每个门店的关联作为一条数据插入到 &lt;code&gt;GM&lt;/code&gt;  表中，那么这个表中的数据量增长还是非常快的。如果有 &lt;code&gt;10&lt;/code&gt;  万家门店呢？广告的投放和撤销比较频繁。也就是说数据的修改也是比较频繁的。那怎么搞呢？&lt;/p&gt;
&lt;p&gt;门店的 &lt;code&gt;id&lt;/code&gt;  是递增的，那么我们可以这么搞，用 &lt;code&gt;10001&lt;/code&gt;  个二进制位表示 &lt;code&gt;10000&lt;/code&gt;  家门店的 id，如果该门店投放了该广告，就把该位置上的数字置为 &lt;code&gt;1&lt;/code&gt; 。并且每四个字节转换成一个整数型数，将（ &lt;code&gt;10000/8/4&lt;/code&gt; ） &lt;code&gt;313&lt;/code&gt;  个整形数按照一定的规则转换成字符串存储到 &lt;code&gt;GM&lt;/code&gt;  表中。表示一条广告已经投放的门店。这样我们就使用了 &lt;code&gt;0.1kb&lt;/code&gt;  左右的空间记录了某条广告投放门店的情况。&lt;/p&gt;
&lt;p&gt;其实呢，这就是使用 &lt;code&gt;bitmap&lt;/code&gt;  进行存储的。&lt;/p&gt;
&lt;p&gt;接下来，我们看下如何使用 位图。&lt;/p&gt;
&lt;h2 id=&#34;bitmap的基本命令&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#bitmap的基本命令&#34;&gt;#&lt;/a&gt;  &lt;code&gt;bitmap&lt;/code&gt;  的基本命令&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;SETBIT&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;setbit key offset value&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;对  &lt;code&gt;key&lt;/code&gt;  所储存的字符串值，设置或清除指定偏移量上的位 ( &lt;code&gt;bit&lt;/code&gt; )。&lt;br&gt;
位的设置或清除取决于  &lt;code&gt;value&lt;/code&gt;  参数，可以是  &lt;code&gt;0&lt;/code&gt;  也可以是  &lt;code&gt;1&lt;/code&gt;  。&lt;br&gt;
当  &lt;code&gt;key&lt;/code&gt;  不存在时，自动生成一个新的字符串值。&lt;br&gt;
字符串会进行伸展 ( &lt;code&gt;grown&lt;/code&gt; ) 以确保它可以将  &lt;code&gt;value&lt;/code&gt;  保存在指定的偏移量上。当字符串值进行伸展时，空白位置以  &lt;code&gt;0&lt;/code&gt;  填充。&lt;br&gt;
 &lt;code&gt;offset&lt;/code&gt;  参数必须大于或等于  &lt;code&gt;0&lt;/code&gt;  ，小于  &lt;code&gt;2^32&lt;/code&gt;  ( &lt;code&gt;bit&lt;/code&gt;  映射被限制在  &lt;code&gt;512 MB&lt;/code&gt;  之内)。&lt;/p&gt;
&lt;p&gt;假设我们使用 位图来存储 &lt;code&gt;Redis&lt;/code&gt;  这个字符串。&lt;/p&gt;
&lt;p&gt;在演示这个命令之前，我们首先来看下 如何使用二进制来表示字符串。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Redis&lt;/code&gt;  中的  &lt;code&gt;R&lt;/code&gt;  对应  &lt;code&gt;ASCII&lt;/code&gt;  码是:  &lt;code&gt;82&lt;/code&gt; . 转化成二进制就是:  &lt;code&gt;0b01010010&lt;/code&gt; , 其他字符依次如下所示：&lt;br&gt;
 &lt;code&gt;Redis&lt;/code&gt;  中的  &lt;code&gt;e&lt;/code&gt;  对应  &lt;code&gt;ASCII&lt;/code&gt;  码是:  &lt;code&gt;101&lt;/code&gt; . 转化成二进制就是:  &lt;code&gt;0b01100101&lt;/code&gt; ，&lt;br&gt;
 &lt;code&gt;Redis&lt;/code&gt;  中的  &lt;code&gt;d&lt;/code&gt;  对应  &lt;code&gt;ASCII&lt;/code&gt;  码是:  &lt;code&gt;100&lt;/code&gt; . 转化成二进制就是:  &lt;code&gt;0b01100100&lt;/code&gt; ，&lt;br&gt;
 &lt;code&gt;Redis&lt;/code&gt;  中的  &lt;code&gt;i&lt;/code&gt;  对应  &lt;code&gt;ASCII&lt;/code&gt;  码是:  &lt;code&gt;105&lt;/code&gt; . 转化成二进制就是:  &lt;code&gt;0b01101001&lt;/code&gt; ，&lt;br&gt;
 &lt;code&gt;Redis&lt;/code&gt;  中的  &lt;code&gt;s&lt;/code&gt;  对应  &lt;code&gt;ASCII&lt;/code&gt;  码是:  &lt;code&gt;115&lt;/code&gt; . 转化成二进制就是:  &lt;code&gt;0b01110011&lt;/code&gt; 。&lt;/p&gt;
&lt;p&gt;看到这里，我要告诉你一个知识点：对于位图的操作，我们可以实现 &lt;b&gt;  &lt;code&gt;零存整取&lt;/code&gt;  &lt;/b&gt;。 什么意思呢？&lt;/p&gt;
&lt;p&gt;我来给你演示一下&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/images/Redis%E7%B3%BB%E5%88%97/images/bitmap-R%E7%9A%84%E4%BA%8C%E8%BF%9B%E5%88%B6.png&#34; alt=&#34;R对应的位图&#34;&gt;&lt;/p&gt;
&lt;p&gt;如上图， &lt;code&gt;R&lt;/code&gt;  这个字符，对应的每个二进制上的数。由于位图会自动填充空位为 0，所以我们只需要设置二进制位上为 &lt;code&gt;1&lt;/code&gt;  的就可以了。具体命令如下&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; setbit k87 1 1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(integer) 0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; setbit k87 3 1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(integer) 0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; setbit k87 6 1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(integer) 0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; get k87&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;quot;R&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;解释一下，我们根据  &lt;code&gt;R&lt;/code&gt;  每个二进制位上数值设置到 k87 中，然后通过 &lt;code&gt;get k87&lt;/code&gt;  这个命令，返回了  &lt;code&gt;R&lt;/code&gt; 。 这就是所谓的  &lt;code&gt;零存整取&lt;/code&gt; 。如果我继续设置剩下的  &lt;code&gt;edis&lt;/code&gt;  字符串呢？&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/images/Redis%E7%B3%BB%E5%88%97/images/bitmap-Redis%E7%9A%84%E4%BA%8C%E8%BF%9B%E5%88%B6.png&#34; alt=&#34;Redis完整的位图&#34;&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; setbit k87 9 1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(integer) 0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; setbit k87 10 1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(integer) 0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; setbit k87 13 1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(integer) 0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; setbit k87 15 1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(integer) 0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; setbit k87 17 1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(integer) 0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; setbit k87 18 1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(integer) 0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; setbit k87 21 1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(integer) 0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; setbit k87 25 1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(integer) 0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; setbit k87 26 1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(integer) 0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; setbit k87 28 1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(integer) 0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; setbit k87 31 1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(integer) 0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; setbit k87 33 1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(integer) 0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; setbit k87 34 1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(integer) 0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; setbit k87 35 1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(integer) 0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; setbit k87 38 1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(integer) 0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; setbit k87 39 1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(integer) 0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; get k87&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;quot;Redis&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;这里你就可能说，有谁会这样使用，自己计算出每个位，然后去获取完整的？ 是啊，不过这里只是一个例子，来说明 位图  &lt;code&gt;零存整取&lt;/code&gt;  功能，接下来，我们接着看 位图  &lt;code&gt;整存零取&lt;/code&gt; 的功能。&lt;/p&gt;
&lt;p&gt;这里呢，就要介绍  &lt;code&gt;gitbit&lt;/code&gt;  这个命令。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;GETBIT&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;GETBIT key offset&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;对  &lt;code&gt;key&lt;/code&gt;  所储存的字符串值，获取指定 &lt;code&gt;offset&lt;/code&gt;  上的位 ( &lt;code&gt;bit&lt;/code&gt; ).&lt;/p&gt;
&lt;p&gt;如果 &lt;code&gt;key&lt;/code&gt;  不存在，获取 &lt;code&gt;offset&lt;/code&gt;  超出范围，返回 &lt;code&gt;0&lt;/code&gt; .&lt;/p&gt;
&lt;p&gt;首先我们设置 一个  &lt;code&gt;string&lt;/code&gt;  类型的字符串到 &lt;code&gt;Redis&lt;/code&gt;  中，然后依次获取每一位上的值。&lt;/p&gt;
&lt;p&gt;可以和下图进行比对。&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/images/Redis%E7%B3%BB%E5%88%97/images/bitmap-Redis%E7%9A%84%E4%BA%8C%E8%BF%9B%E5%88%B6.png&#34; alt=&#34;Redis完整的位图&#34;&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; set k88 Redis&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;OK&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; getbit k88 0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(integer) 0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; getbit k88 1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(integer) 1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; getbit k88 2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(integer) 0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; getbit k88 3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(integer) 1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; getbit k88 4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(integer) 0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; getbit k88 5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(integer) 0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; getbit k88 6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(integer) 1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; getbit k88 7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(integer) 0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; getbit k88 8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(integer) 0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; getbit k88 9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(integer) 1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; getbit k88 10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(integer) 1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;#&lt;/span&gt;&lt;span class=&#34;bash&#34;&gt; ....&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; getbit k88 38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(integer) 1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; getbit k88 39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(integer) 1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;#&lt;/span&gt;&lt;span class=&#34;bash&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 演示超出范围&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; getbit k88 40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(integer) 0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; getbit k88 41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(integer) 0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; getbit k88 42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(integer) 0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; &lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;这个就是 位图提供的   &lt;code&gt;整存零取&lt;/code&gt; 的功能了。综合上面的两项功能，我们轻而易举的就可以得出 Redis 的位图是可以  &lt;code&gt;零存零取&lt;/code&gt; 的。就是使用  &lt;code&gt;setbit&lt;/code&gt;  和  &lt;code&gt;gitbit&lt;/code&gt;  命令了。这里就不演示了。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;BITCOUNT&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;bitCount key [start] [end]&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;计算指定 &lt;code&gt;key&lt;/code&gt;  的对应字符串，被设置为 &lt;code&gt;1&lt;/code&gt;  的比特位的数量。&lt;/p&gt;
&lt;p&gt;还是以上面的 &lt;code&gt;Redis&lt;/code&gt;  为例，一共是 &lt;code&gt;19&lt;/code&gt;  位 &lt;code&gt;1&lt;/code&gt; . 我们来演示一下&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;#&lt;/span&gt;&lt;span class=&#34;bash&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 不存在的时候，返回0&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; bitcount k89&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(integer) 0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; set k89 Redis&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;OK&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; bitcount k89 &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(integer) 19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;#&lt;/span&gt;&lt;span class=&#34;bash&#34;&gt; 注意这里start end 都是表示字节。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; bitcount k89 0 1 &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(integer) 7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;这个适合什么场景下使用呢？ 比如，我们要计算某个用户登录天数。第一天登录的时候，我们 可以设置  &lt;code&gt;setbit user1 1 1&lt;/code&gt; , 第二天设置  &lt;code&gt;setbit use1 2 1&lt;/code&gt; , 那么使用  &lt;code&gt;bitcount user1&lt;/code&gt;  就能知道该用户总共的登录天数了，也能够计算出该用户在哪天登录了。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;BITPOS&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;bitpos key  bit [start] [end]&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;返回 key 的指定区段内容，第一个 bit 的位置。&lt;/p&gt;
&lt;p&gt;比如我们以  &lt;code&gt;Redis&lt;/code&gt;  为例，如下图&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;./images/bitmap-Redis%E7%9A%84%E4%BA%8C%E8%BF%9B%E5%88%B6.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; set key90 Redis&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;OK&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; bitops key90 1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(error) ERR unknown command `bitops`, with args beginning with: `key90`, `1`, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; bitpos key90 1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(integer) 1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; bitpos key90 0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(integer) 0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;#&lt;/span&gt;&lt;span class=&#34;bash&#34;&gt; 这里的start和end也指的是字节&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; bitpos key90 0 2 10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(integer) 16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; bitpos key90 1 2 10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(integer) 17&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;BITOP&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;BITOP operation destkey key [key …]&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;对一个或多个保存二进制位的字符串 key 进行位元操作，并将结果保存到 destkey 上。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;operation&lt;/code&gt;  可以是  &lt;code&gt;AND&lt;/code&gt;  、  &lt;code&gt;OR&lt;/code&gt;  、  &lt;code&gt;NOT&lt;/code&gt;  、  &lt;code&gt;XOR&lt;/code&gt;  这四种操作中的任意一种：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;BITOP AND destkey key [key ...]&lt;/code&gt;  ，对一个或多个  &lt;code&gt;key&lt;/code&gt;  求逻辑并，并将结果保存到  &lt;code&gt;destkey&lt;/code&gt;  。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;BITOP OR destkey key [key ...]&lt;/code&gt;  ，对一个或多个  &lt;code&gt;key&lt;/code&gt;  求逻辑或，并将结果保存到  &lt;code&gt;destkey&lt;/code&gt;  。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;BITOP XOR destkey key [key ...]&lt;/code&gt;  ，对一个或多个  &lt;code&gt;key&lt;/code&gt;  求逻辑异或，并将结果保存到  &lt;code&gt;destkey&lt;/code&gt;  。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;BITOP NOT destkey key&lt;/code&gt;  ，对给定  &lt;code&gt;key&lt;/code&gt;  求逻辑非，并将结果保存到  &lt;code&gt;destkey&lt;/code&gt;  。&lt;/p&gt;
&lt;p&gt;除了  &lt;code&gt;NOT&lt;/code&gt;  操作之外，其他操作都可以接受一个或多个  &lt;code&gt;key&lt;/code&gt;  作为输入。&lt;/p&gt;
&lt;p&gt;这里我们做一个简单例子。&lt;/p&gt;
&lt;figure class=&#34;highlight r&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;47&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:&lt;span class=&#34;number&#34;&gt;6379&lt;/span&gt;&amp;gt; setbit k91_1 &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(integer) &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;127.0&lt;/span&gt;.0.1:&lt;span class=&#34;number&#34;&gt;6379&lt;/span&gt;&amp;gt; setbit k91_1 &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(integer) &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;127.0&lt;/span&gt;.0.1:&lt;span class=&#34;number&#34;&gt;6379&lt;/span&gt;&amp;gt; setbit k91_1 &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(integer) &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;127.0&lt;/span&gt;.0.1:&lt;span class=&#34;number&#34;&gt;6379&lt;/span&gt;&amp;gt; setbit k91_1 &lt;span class=&#34;number&#34;&gt;3&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(integer) &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;127.0&lt;/span&gt;.0.1:&lt;span class=&#34;number&#34;&gt;6379&lt;/span&gt;&amp;gt; get k91_1 &lt;span class=&#34;comment&#34;&gt;# 1111 (低位-&amp;gt;高位)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;&amp;quot;\xf0&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;127.0&lt;/span&gt;.0.1:&lt;span class=&#34;number&#34;&gt;6379&lt;/span&gt;&amp;gt; setbit k91_2 &lt;span class=&#34;number&#34;&gt;3&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(integer) &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;127.0&lt;/span&gt;.0.1:&lt;span class=&#34;number&#34;&gt;6379&lt;/span&gt;&amp;gt; setbit k91_2 &lt;span class=&#34;number&#34;&gt;4&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(integer) &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;127.0&lt;/span&gt;.0.1:&lt;span class=&#34;number&#34;&gt;6379&lt;/span&gt;&amp;gt; setbit k91_2 &lt;span class=&#34;number&#34;&gt;5&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(integer) &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;127.0&lt;/span&gt;.0.1:&lt;span class=&#34;number&#34;&gt;6379&lt;/span&gt;&amp;gt; get k91_2 &lt;span class=&#34;comment&#34;&gt;# 000111 (低位-&amp;gt;高位)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;&amp;quot;\x1c&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;## and 操作&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;127.0&lt;/span&gt;.0.1:&lt;span class=&#34;number&#34;&gt;6379&lt;/span&gt;&amp;gt; bitop AND k91_d_1 k91_1 k91_2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(integer) &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;127.0&lt;/span&gt;.0.1:&lt;span class=&#34;number&#34;&gt;6379&lt;/span&gt;&amp;gt; get k91_d_1 &lt;span class=&#34;comment&#34;&gt;# 000100 (低位-&amp;gt;高位)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;&amp;quot;\x10&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;## OR 操作&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;127.0&lt;/span&gt;.0.1:&lt;span class=&#34;number&#34;&gt;6379&lt;/span&gt;&amp;gt; bitop OR k91_d_2 k91_1 k91_2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(integer) &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;127.0&lt;/span&gt;.0.1:&lt;span class=&#34;number&#34;&gt;6379&lt;/span&gt;&amp;gt; get k91_d_2 &lt;span class=&#34;comment&#34;&gt;# 111111 (低位-&amp;gt;高位)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;&amp;quot;\xfc&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;## XOR 亦或操作&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;127.0&lt;/span&gt;.0.1:&lt;span class=&#34;number&#34;&gt;6379&lt;/span&gt;&amp;gt; bitop XOR k91_d_3 k91_1 k92_2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(integer) &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;127.0&lt;/span&gt;.0.1:&lt;span class=&#34;number&#34;&gt;6379&lt;/span&gt;&amp;gt; get k91_d_3 &lt;span class=&#34;comment&#34;&gt;# 111011 (低位-&amp;gt;高位)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;&amp;quot;\xf0&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;## NOT 操作&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;127.0&lt;/span&gt;.0.1:&lt;span class=&#34;number&#34;&gt;6379&lt;/span&gt;&amp;gt; bitop NOT k91_d_4 k91_1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(integer) &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;127.0&lt;/span&gt;.0.1:&lt;span class=&#34;number&#34;&gt;6379&lt;/span&gt;&amp;gt; get k91_d_4 &lt;span class=&#34;comment&#34;&gt;# 00001111 (低位-&amp;gt;高位)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;&amp;quot;\x0f&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;127.0&lt;/span&gt;.0.1:&lt;span class=&#34;number&#34;&gt;6379&lt;/span&gt;&amp;gt; bitop NOT k91_d_5 k91_2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(integer) &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;127.0&lt;/span&gt;.0.1:&lt;span class=&#34;number&#34;&gt;6379&lt;/span&gt;&amp;gt; get k91_d_5 &lt;span class=&#34;comment&#34;&gt;# 111011 (低位-&amp;gt;高位)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;&amp;quot;\xe3&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;BITFIELD&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;BITFIELD key [GET type offset] [SET type offset value] [INCRBY type offset increment] [OVERFLOW WRAP|SAT|FAIL]&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;BITFIELD&lt;/code&gt;  命令可以将一个  &lt;code&gt;Redis&lt;/code&gt;  字符串看作是一个由二进制位组成的数组， 并对这个数组中储存的长度不同的整数进行访问 （被储存的整数无需进行对齐）。 换句话说， 通过这个命令， 用户可以执行诸如 “对偏移量  &lt;code&gt;1234&lt;/code&gt;  上的  &lt;code&gt;5&lt;/code&gt;  位长有符号整数进行设置”、 “获取偏移量  &lt;code&gt;4567&lt;/code&gt;  上的  &lt;code&gt;31&lt;/code&gt;  位长无符号整数” 等操作。 此外，  &lt;code&gt;BITFIELD&lt;/code&gt;  命令还可以对指定的整数执行加法操作和减法操作， 并且这些操作可以通过设置妥善地处理计算时出现的溢出情况。&lt;br&gt;
这是一个比较复杂的命令了。我们依次来看看。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;GET type offset&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;type&lt;/code&gt;  是什么呢？  &lt;code&gt;type&lt;/code&gt;  是返回的数值类型。可选值有： &lt;code&gt;i8&lt;/code&gt; （有符号 &lt;code&gt;8&lt;/code&gt;  个 &lt;code&gt;bit&lt;/code&gt;  位）, &lt;code&gt;i16&lt;/code&gt; （有符号 &lt;code&gt;16&lt;/code&gt;  个 &lt;code&gt;bi&lt;/code&gt; t 位）, &lt;code&gt;u8&lt;/code&gt; （无符号 &lt;code&gt;8&lt;/code&gt;  个 &lt;code&gt;bit&lt;/code&gt;  位）, &lt;code&gt;u16&lt;/code&gt; （无符号 &lt;code&gt;16&lt;/code&gt;  个 &lt;code&gt;bit&lt;/code&gt;  位）,…&lt;/p&gt;
&lt;p&gt;这个的命令的功能就是返回执行的二进制的范围，&lt;b&gt;offset 是指第几个二进制位&lt;/b&gt;。&lt;br&gt;
注意：&lt;br&gt;
 &lt;code&gt;BITFIELD&lt;/code&gt;  命令最大支持 &lt;code&gt;64&lt;/code&gt;  位长的有符号整数以及  &lt;code&gt;63&lt;/code&gt;  位长的无符号整数， 其中无符号整数的  &lt;code&gt;63&lt;/code&gt;  位长度限制是由于  &lt;code&gt;Redis&lt;/code&gt;  协议目前还无法返回  &lt;code&gt;64&lt;/code&gt;  位长的无符号整数而导致的。&lt;/p&gt;
&lt;p&gt;用下面这个例子来演示一下。&lt;/p&gt;
&lt;figure class=&#34;highlight r&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:&lt;span class=&#34;number&#34;&gt;6379&lt;/span&gt;&amp;gt; set k92 Redis&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;OK&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;127.0&lt;/span&gt;.0.1:&lt;span class=&#34;number&#34;&gt;6379&lt;/span&gt;&amp;gt; bitfield k92 get i8 &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;) (integer) &lt;span class=&#34;number&#34;&gt;82&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;127.0&lt;/span&gt;.0.1:&lt;span class=&#34;number&#34;&gt;6379&lt;/span&gt;&amp;gt; bitfield k92 get u8 &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;) (integer) &lt;span class=&#34;number&#34;&gt;82&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;127.0&lt;/span&gt;.0.1:&lt;span class=&#34;number&#34;&gt;6379&lt;/span&gt;&amp;gt; bitfield k92 get i16 &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;) (integer) &lt;span class=&#34;number&#34;&gt;21093&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;127.0&lt;/span&gt;.0.1:&lt;span class=&#34;number&#34;&gt;6379&lt;/span&gt;&amp;gt; bitfield k92 get u16 &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;) (integer) &lt;span class=&#34;number&#34;&gt;21093&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;结合上面的那张图，我们看下&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/images/Redis%E7%B3%BB%E5%88%97/images/bitmap-Redis%E7%9A%84%E4%BA%8C%E8%BF%9B%E5%88%B6.png&#34; alt=&#34;Redis的bitmap图&#34;&gt;&lt;/p&gt;
&lt;p&gt;我们手动的将前 &lt;code&gt;8&lt;/code&gt;  个 &lt;code&gt;bit&lt;/code&gt;  位装换成 &lt;code&gt;10&lt;/code&gt;  进制，就是 &lt;code&gt;82&lt;/code&gt; 。高位为 &lt;code&gt;0&lt;/code&gt; ，所以此时， &lt;code&gt;u8&lt;/code&gt;  和 &lt;code&gt;i8&lt;/code&gt;  的值是一样的。同样的  &lt;code&gt;u16&lt;/code&gt; , &lt;code&gt;i16&lt;/code&gt; , &lt;code&gt;u24&lt;/code&gt; , &lt;code&gt;u48&lt;/code&gt; , 大家可以自行验证一下。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;SET type offset value&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;这个命令是和 &lt;code&gt;GET&lt;/code&gt;  命令相反的一个命令。&lt;/p&gt;
&lt;p&gt;直接用一个例子来演示一下。&lt;/p&gt;
&lt;figure class=&#34;highlight r&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:&lt;span class=&#34;number&#34;&gt;6379&lt;/span&gt;&amp;gt; bitfield k93 SET u8 &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;82&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;) (integer) &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;127.0&lt;/span&gt;.0.1:&lt;span class=&#34;number&#34;&gt;6379&lt;/span&gt;&amp;gt; get k93&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;&amp;quot;R&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;127.0&lt;/span&gt;.0.1:&lt;span class=&#34;number&#34;&gt;6379&lt;/span&gt;&amp;gt; bitfield k93 SET u8 &lt;span class=&#34;number&#34;&gt;8&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;101&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;) (integer) &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;127.0&lt;/span&gt;.0.1:&lt;span class=&#34;number&#34;&gt;6379&lt;/span&gt;&amp;gt; get k93&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;&amp;quot;Re&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;127.0&lt;/span&gt;.0.1:&lt;span class=&#34;number&#34;&gt;6379&lt;/span&gt;&amp;gt; bitfield k93 SET u8 &lt;span class=&#34;number&#34;&gt;16&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;100&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;) (integer) &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;127.0&lt;/span&gt;.0.1:&lt;span class=&#34;number&#34;&gt;6379&lt;/span&gt;&amp;gt; get k93&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;&amp;quot;Red&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# ... &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 剩下的i和s，大家自己试一下吧&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;INCRBY type offset increment&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;从制定的偏移位开始，增加 &lt;code&gt;increment&lt;/code&gt; 。&lt;/p&gt;
&lt;p&gt;什么意思呢？&lt;/p&gt;
&lt;p&gt;来演示一下:&lt;/p&gt;
&lt;p&gt;字符 &lt;code&gt;A&lt;/code&gt;  的 &lt;code&gt;ASCII&lt;/code&gt;  码是 &lt;code&gt;65&lt;/code&gt; ， &lt;code&gt;R&lt;/code&gt;  是 &lt;code&gt;82&lt;/code&gt; ，如果从 &lt;code&gt;A&lt;/code&gt;  变成 &lt;code&gt;R&lt;/code&gt; ，需要增加 &lt;code&gt;17&lt;/code&gt; 。&lt;/p&gt;
&lt;figure class=&#34;highlight r&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:&lt;span class=&#34;number&#34;&gt;6379&lt;/span&gt;&amp;gt; set k94 A&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;OK&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;127.0&lt;/span&gt;.0.1:&lt;span class=&#34;number&#34;&gt;6379&lt;/span&gt;&amp;gt; bitfield k94 INCRBY u8 &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;17&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;) (integer) &lt;span class=&#34;number&#34;&gt;82&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;127.0&lt;/span&gt;.0.1:&lt;span class=&#34;number&#34;&gt;6379&lt;/span&gt;&amp;gt; get k94&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;&amp;quot;R&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;127.0&lt;/span&gt;.0.1:&lt;span class=&#34;number&#34;&gt;6379&lt;/span&gt;&amp;gt; bitfield k94 INCRBY u8 &lt;span class=&#34;number&#34;&gt;8&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;101&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;) (integer) &lt;span class=&#34;number&#34;&gt;101&lt;/span&gt;get&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;127.0&lt;/span&gt;.0.1:&lt;span class=&#34;number&#34;&gt;6379&lt;/span&gt;&amp;gt; get k94&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;&amp;quot;Re&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;OVERFLOW WRAP|SAT|FAIL&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;这是 &lt;code&gt;bitmap&lt;/code&gt;  对  &lt;code&gt;INCRBY&lt;/code&gt;  命令执行时，发生异常行为的控制。&lt;/p&gt;
&lt;p&gt;用户可以通过  &lt;code&gt;OVERFLOW&lt;/code&gt;  命令以及以下展示的三个参数， 指定  &lt;code&gt;BITFIELD&lt;/code&gt;  命令在执行自增或者自减操作时， 碰上向上溢出（ &lt;code&gt;overflow&lt;/code&gt; ）或者向下溢出（ &lt;code&gt;underflow&lt;/code&gt; ）情况时的行为：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;WRAP&lt;/code&gt;  ： 使用回绕（ &lt;code&gt;wrap around&lt;/code&gt; ）方法处理有符号整数和无符号整数的溢出情况。 对于无符号整数来说， 回绕就像使用数值本身与能够被储存的最大无符号整数执行取模计算， 这也是  &lt;code&gt;C&lt;/code&gt;  语言的标准行为。 对于有符号整数来说， 上溢将导致数字重新从最小的负数开始计算， 而下溢将导致数字重新从最大的正数开始计算。 比如说， 如果我们对一个值为  &lt;code&gt;127&lt;/code&gt;  的  &lt;code&gt;i8&lt;/code&gt;  整数执行加一操作， 那么将得到结果  &lt;code&gt;-128&lt;/code&gt;  。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;SAT&lt;/code&gt;  ： 使用饱和计算（ &lt;code&gt;saturation arithmetic&lt;/code&gt; ）方法处理溢出， 也即是说， 下溢计算的结果为最小的整数值， 而上溢计算的结果为最大的整数值。 举个例子， 如果我们对一个值为  &lt;code&gt;120&lt;/code&gt;  的  &lt;code&gt;i8&lt;/code&gt;  整数执行加  &lt;code&gt;10&lt;/code&gt;  计算， 那么命令的结果将为  &lt;code&gt;i8&lt;/code&gt;  类型所能储存的最大整数值  &lt;code&gt;127&lt;/code&gt;  。 与此相反， 如果一个针对  &lt;code&gt;i8&lt;/code&gt;  值的计算造成了下溢， 那么这个 i8 值将被设置为  &lt;code&gt;-127&lt;/code&gt;  。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;FAIL&lt;/code&gt;  ： 在这一模式下， 命令将拒绝执行那些会导致上溢或者下溢情况出现的计算， 并向用户返回空值表示计算未被执行。&lt;/p&gt;
&lt;p&gt;我们演示一下这几种情况&lt;/p&gt;
&lt;figure class=&#34;highlight r&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 使用 WRAP 方式，重复执行相同的命令，在一个2bit上，从 0,1,2,3 来回折返。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;127.0&lt;/span&gt;.0.1:&lt;span class=&#34;number&#34;&gt;6379&lt;/span&gt;&amp;gt; bitfield k95_1 OVERFLOW WRAP incrby u2 &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;) (integer) &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;127.0&lt;/span&gt;.0.1:&lt;span class=&#34;number&#34;&gt;6379&lt;/span&gt;&amp;gt; bitfield k95_1 OVERFLOW WRAP incrby u2 &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;) (integer) &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;127.0&lt;/span&gt;.0.1:&lt;span class=&#34;number&#34;&gt;6379&lt;/span&gt;&amp;gt; bitfield k95_1 OVERFLOW WRAP incrby u2 &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;) (integer) &lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;127.0&lt;/span&gt;.0.1:&lt;span class=&#34;number&#34;&gt;6379&lt;/span&gt;&amp;gt; bitfield k95_1 OVERFLOW WRAP incrby u2 &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;) (integer) &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;127.0&lt;/span&gt;.0.1:&lt;span class=&#34;number&#34;&gt;6379&lt;/span&gt;&amp;gt; bitfield k95_1 OVERFLOW WRAP incrby u2 &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;) (integer) &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;127.0&lt;/span&gt;.0.1:&lt;span class=&#34;number&#34;&gt;6379&lt;/span&gt;&amp;gt; bitfield k95_1 OVERFLOW WRAP incrby u2 &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;) (integer) &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;127.0&lt;/span&gt;.0.1:&lt;span class=&#34;number&#34;&gt;6379&lt;/span&gt;&amp;gt; bitfield k95_1 OVERFLOW WRAP incrby u2 &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;) (integer) &lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 使用 SAT 方式，当要发生溢出的时候，不再执行。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;127.0&lt;/span&gt;.0.1:&lt;span class=&#34;number&#34;&gt;6379&lt;/span&gt;&amp;gt; bitfield k95_2 OVERFLOW SAT incrby u2 &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;) (integer) &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;127.0&lt;/span&gt;.0.1:&lt;span class=&#34;number&#34;&gt;6379&lt;/span&gt;&amp;gt; bitfield k95_2 OVERFLOW SAT incrby u2 &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;) (integer) &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;127.0&lt;/span&gt;.0.1:&lt;span class=&#34;number&#34;&gt;6379&lt;/span&gt;&amp;gt; bitfield k95_2 OVERFLOW SAT incrby u2 &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;) (integer) &lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;127.0&lt;/span&gt;.0.1:&lt;span class=&#34;number&#34;&gt;6379&lt;/span&gt;&amp;gt; bitfield k95_2 OVERFLOW SAT incrby u2 &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;) (integer) &lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;127.0&lt;/span&gt;.0.1:&lt;span class=&#34;number&#34;&gt;6379&lt;/span&gt;&amp;gt; bitfield k95_2 OVERFLOW SAT incrby u2 &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;) (integer) &lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;127.0&lt;/span&gt;.0.1:&lt;span class=&#34;number&#34;&gt;6379&lt;/span&gt;&amp;gt; bitfield k95_2 OVERFLOW SAT incrby u2 &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;) (integer) &lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;127.0&lt;/span&gt;.0.1:&lt;span class=&#34;number&#34;&gt;6379&lt;/span&gt;&amp;gt; bitfield k95_2 OVERFLOW SAT incrby u2 &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;) (integer) &lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 使用FAIL模式，则返回(nil)，不执行且返回nil&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;127.0&lt;/span&gt;.0.1:&lt;span class=&#34;number&#34;&gt;6379&lt;/span&gt;&amp;gt; bitfield k95 OVERFLOW FAIL incrby u2 &lt;span class=&#34;number&#34;&gt;102&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;) (nil)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;code&gt;BITFIELD&lt;/code&gt;  命令的作用在于它能够将很多小的整数储存到一个长度较大的位图中， 又或者将一个非常庞大的键分割为多个较小的键来进行储存， 从而非常高效地使用内存， 使得 Redis 能够得到更多不同的应用 —— 特别是在实时分析领域：  &lt;code&gt;BITFIELD&lt;/code&gt;  能够以指定的方式对计算溢出进行控制的能力， 使得它可以被应用于这一领域。&lt;/p&gt;
&lt;p&gt;以上就是 &lt;code&gt;Redis&lt;/code&gt;  中 &lt;code&gt;bitmap&lt;/code&gt;  相关的命令了。下面我简单的来看下 bitmap 这种 &lt;code&gt;&amp;quot;数据结构&amp;quot;&lt;/code&gt;  是如何实现的。&lt;/p&gt;
&lt;p&gt;注意，这里的数据结构我还是加上了引号。具体为什么呢？&lt;/p&gt;
&lt;h3 id=&#34;bitmap-的实现&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#bitmap-的实现&#34;&gt;#&lt;/a&gt;  &lt;code&gt;bitmap&lt;/code&gt;  的实现&lt;/h3&gt;
&lt;p&gt;话不多说，我们直接去看看源码中是怎么实现的。直接搜文件  &lt;code&gt;bit&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/images/Redis%E7%B3%BB%E5%88%97/images/bitmap-%E6%9F%A5%E6%89%BE%E7%9B%AE%E5%BD%95.png&#34; alt=&#34;bitmap-查找目录&#34;&gt;&lt;/p&gt;
&lt;p&gt;我们要看 &lt;code&gt;src&lt;/code&gt;  目录下的，所以，直接看 &lt;code&gt;bitops.c&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;这里我们就是以一个命令 &lt;code&gt;setbit&lt;/code&gt;  为例简单的来看看 &lt;code&gt;bitmap&lt;/code&gt;  的运行过程。&lt;/p&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;figcaption&gt;&lt;span&gt;&amp;#123;.line-numbers&amp;#125;&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;/**&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt; * SETBIT 命令的实现&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt; * @param c 客户端对象&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt; */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;setbitCommand&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(client *c)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    robj *o; &lt;span class=&#34;comment&#34;&gt;///  setbit key offset value 中的 key对应的Redis Object。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;char&lt;/span&gt; *err = &lt;span class=&#34;string&#34;&gt;&amp;quot;bit is not an integer or out of range&amp;quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;size_t&lt;/span&gt; bitoffset; &lt;span class=&#34;comment&#34;&gt;/// 指定要修改的位的偏移量&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;ssize_t&lt;/span&gt; byte, bit;  &lt;span class=&#34;comment&#34;&gt;/// byte: 要修改的位 所占的字节。第byte个字节上。 bit，在所占字节中的第bit位上。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; byteval, bitval; &lt;span class=&#34;comment&#34;&gt;/// byteval: 要修改的位所占的字节的值。十进制数。  bitVal 是原来的指定bit上的值&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;long&lt;/span&gt; on; &lt;span class=&#34;comment&#34;&gt;/// 修改的值。就是 setbit key offset value 中的value。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;/// 解析 offset 参数，是否符合规范(是否位负数，是否超过512M)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (getBitOffsetFromArgument(c, c-&amp;gt;argv[&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;], &amp;amp;bitoffset, &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;) != C_OK)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;/// 解析 value 参数 =&amp;gt; 赋值给on变量&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (getLongFromObjectOrReply(c, c-&amp;gt;argv[&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;], &amp;amp;on, err) != C_OK)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;/// 验证on(value)只能是0或者1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (on &amp;amp; ~&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        addReplyError(c, err);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;/// 返回key对应的对象&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;/// 该对象是一个OBJ_STRING类型&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ((o = lookupStringForBitCommand(c, bitoffset)) == &lt;span class=&#34;literal&#34;&gt;NULL&lt;/span&gt;) &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;/// 获取当前位置上的值&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    byte = bitoffset &amp;gt;&amp;gt; &lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;; &lt;span class=&#34;comment&#34;&gt;/// 计算出字节，确定offset所在的字节。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    byteval = ((&lt;span class=&#34;keyword&#34;&gt;uint8_t&lt;/span&gt; *) o-&amp;gt;ptr)[byte]; &lt;span class=&#34;comment&#34;&gt;/// 将指定字节上的数转换成无符号整型数。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    bit = &lt;span class=&#34;number&#34;&gt;7&lt;/span&gt; - (bitoffset &amp;amp; &lt;span class=&#34;number&#34;&gt;0x7&lt;/span&gt;); &lt;span class=&#34;comment&#34;&gt;/// 计算要修改的位，是当前字节中的第几位。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    bitval = byteval &amp;amp; (&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt; &amp;lt;&amp;lt; bit); &lt;span class=&#34;comment&#34;&gt;/// 计算出修改后的值。(bitVal是修改后的整个字节上值)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;/* Update byte with new bit value and return original value */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;/// 更新 String 的值为 bitVal，并且返回原来的值。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    byteval &amp;amp;= ~(&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt; &amp;lt;&amp;lt; bit); &lt;span class=&#34;comment&#34;&gt;/// 将字节上原来的值，指定位上置为0.(即要赋值的位，bit为当前字节中的位。)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    byteval |= ((on &amp;amp; &lt;span class=&#34;number&#34;&gt;0x1&lt;/span&gt;) &amp;lt;&amp;lt; bit); &lt;span class=&#34;comment&#34;&gt;/// 将on的值复制给byteVal,取或运算，如果on为1，则1，若on为0，则0，上一行代码已经将指定位置置为了0.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    ((&lt;span class=&#34;keyword&#34;&gt;uint8_t&lt;/span&gt; *) o-&amp;gt;ptr)[byte] = byteval; &lt;span class=&#34;comment&#34;&gt;/// 修改对象中指定字节的值。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    signalModifiedKey(c-&amp;gt;db, c-&amp;gt;argv[&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;]); &lt;span class=&#34;comment&#34;&gt;/// 通知修改了key。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    notifyKeyspaceEvent(NOTIFY_STRING, &lt;span class=&#34;string&#34;&gt;&amp;quot;setbit&amp;quot;&lt;/span&gt;, c-&amp;gt;argv[&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;], c-&amp;gt;db-&amp;gt;id);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    server.dirty++; &lt;span class=&#34;comment&#34;&gt;// 从上次保存到数据库的更改次数&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    addReply(c, bitval ? shared.cone : shared.czero); &lt;span class=&#34;comment&#34;&gt;/// 返回原来的值&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;上面代码就是  &lt;code&gt;setBit&lt;/code&gt;  命令的实现过程了，这篇文章中我们不做研究&lt;b&gt;我们只看第 &lt;code&gt;27&lt;/code&gt;  行&lt;/b&gt;. 这一行中有一个  &lt;code&gt;lookupStringForBitCommand&lt;/code&gt;  方法。在这里我们猜测一下，&lt;b&gt; &lt;code&gt;bitmap&lt;/code&gt;  其实就是一个  &lt;code&gt;OBJ_STRING&lt;/code&gt;  类型的结构&lt;/b&gt;。&lt;/p&gt;
&lt;p&gt;到底是不是呢？&lt;/p&gt;
&lt;p&gt;看一下源码。&lt;/p&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;figcaption&gt;&lt;span&gt;&amp;#123;.line-numbers&amp;#125;&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;/**&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt; * 这是用于需要将位写入字符串对象的命令实现的辅助函数。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt; *&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt; * 否则，如果密钥持有错误的类型，则返回NULL，并且*向客户端发送错误。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt; * 该命令创建或填充字符串零，以便可以寻址“ maxbit”位。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt; * 该对象最终返回。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt; * 否则，如果密钥持有错误的类型，则返回NULL并将错误发送给客户端。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt; */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;robj *&lt;span class=&#34;title&#34;&gt;lookupStringForBitCommand&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(client *c, &lt;span class=&#34;keyword&#34;&gt;size_t&lt;/span&gt; maxbit)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;size_t&lt;/span&gt; byte = maxbit &amp;gt;&amp;gt; &lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;; &lt;span class=&#34;comment&#34;&gt;// 计算字节&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;/// 为写操作找出一个key。 【setbit key offset value】中argv[1] 即为key&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    robj *o = lookupKeyWrite(c-&amp;gt;db, c-&amp;gt;argv[&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;]);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;/// 是否找到了key&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (o == &lt;span class=&#34;literal&#34;&gt;NULL&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;comment&#34;&gt;/// 没有找到。 创建一个对象写入。对象为OBJ_STRING类型。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        o = createObject(OBJ_STRING, sdsnewlen(&lt;span class=&#34;literal&#34;&gt;NULL&lt;/span&gt;, byte + &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;));&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        dbAdd(c-&amp;gt;db, c-&amp;gt;argv[&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;], o);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125; &lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;comment&#34;&gt;/// 找到了key对象，如果不是 OBJ_STRING 类型直接返回。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (checkType(c, o, OBJ_STRING)) &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;literal&#34;&gt;NULL&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;comment&#34;&gt;/// 获取要修改的对象。上一行代码已经进行了判断，确定其为 OBJ_STRING 类型。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        o = dbUnshareStringValue(c-&amp;gt;db, c-&amp;gt;argv[&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;], o);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;comment&#34;&gt;/// 增加 STRING类型的长度&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        o-&amp;gt;ptr = sdsgrowzero(o-&amp;gt;ptr, byte + &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; o;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;在第 &lt;code&gt;17&lt;/code&gt;  行和第 &lt;code&gt;23&lt;/code&gt;  行。就很清楚了。&lt;/p&gt;
&lt;p&gt;所以，在文章一开始加上引号的 数据结构 ，谜题就解开了。&lt;/p&gt;
&lt;p&gt;&lt;b&gt; &lt;code&gt;bitmap&lt;/code&gt;  并不是一个新的数据结构，本质上是用  &lt;code&gt;STRING&lt;/code&gt;  这个数据结构来实现的。&lt;/b&gt;&lt;/p&gt;
&lt;p&gt;如果你想看 &lt;code&gt;bitmap&lt;/code&gt;  的全部源码，那么满足你！！👉👉 &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRlZS5jb20vZmFuZ2ppYXhpYW9iYWkvcmVkaXMuZ2l0&#34;&gt;点击这里&lt;/span&gt;👈👈&lt;/p&gt;
&lt;p&gt;&lt;b&gt;公众号里回复  &lt;code&gt;redis源码&lt;/code&gt; ，即可获取完整路径哦&lt;/b&gt;&lt;/p&gt;
&lt;p&gt;虽然 redis 源码不是我写的，但是我看过的都加上注释啦～&lt;/p&gt;
&lt;p&gt;除此之外，小白还自己实现了一个  &lt;code&gt;bitmap&lt;/code&gt; 。感兴趣的朋友欢迎  &lt;code&gt;star&lt;/code&gt; .👉👉 &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL2ZhbmdqaWF4aWFvYmFpL2NvZGVfcmVwby9ibG9iL21hc3Rlci8wMV9kYXRhX3N0cnVjdHVyZXMvYml0bWFwL2JpdG1hcC9CaXRNYXAuamF2YQ==&#34;&gt;bitMap 源码，点击这里&lt;/span&gt; 👈👈&lt;/p&gt;
&lt;p&gt;&lt;b&gt;公众号里回复  &lt;code&gt;bitmap&lt;/code&gt; , 即可获取完整路径哦&lt;/b&gt;&lt;/p&gt;
&lt;p&gt;当然: JDK 也提供了一个 &lt;code&gt;BitMap&lt;/code&gt;  的实现，叫 &lt;code&gt;BitSet&lt;/code&gt; ，位于 &lt;code&gt;java.util&lt;/code&gt;  包下。其底层使用的是一个 &lt;code&gt;long&lt;/code&gt;  类型的数组，一个 &lt;code&gt;long&lt;/code&gt;  代表一个 &lt;code&gt;word&lt;/code&gt; 。但 &lt;code&gt;BitSet&lt;/code&gt;  没有解决上面提到的输入稀疏的问题。谷歌开源的 &lt;code&gt;EWAHCompressedBitMap&lt;/code&gt;  解决了输入稀疏的问题。&lt;/p&gt;
&lt;p&gt;这里我们总结一下。&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;code&gt;Redis&lt;/code&gt;  的数据类型&lt;/th&gt;
&lt;th style=&#34;text-align:center&#34;&gt;底层实现结构&lt;/th&gt;
&lt;th style=&#34;text-align:center&#34;&gt;文章参考&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;STRING&lt;/code&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;code&gt;sds&lt;/code&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s/0sGGSYe5zYNiLUrK5XTsWQ&#34;&gt;数据类型之 &lt;code&gt;String&lt;/code&gt; &lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;list&lt;/code&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;code&gt;quicklist&lt;/code&gt; ,  &lt;code&gt;ziplist&lt;/code&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s/n9fzELpKXR1d02yn0usyvg&#34;&gt;数据类型之 &lt;code&gt;list&lt;/code&gt; &lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;hash&lt;/code&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;code&gt;ziplist&lt;/code&gt; ,  &lt;code&gt;dict&lt;/code&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s/bQ-jnUuHKLC8-M4G8HpZ9w&#34;&gt;数据类型之 &lt;code&gt;hash&lt;/code&gt; &lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;set&lt;/code&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;code&gt;dict&lt;/code&gt;  , &lt;code&gt;intset&lt;/code&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s/qK-CujsG43kAjGpgXYhQWg&#34;&gt;数据类型之 &lt;code&gt;set&lt;/code&gt; &lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;zset&lt;/code&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;code&gt;dict&lt;/code&gt; ,  &lt;code&gt;skipList&lt;/code&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s/4fyT9XCLv2MYCtB1WH0Jvg&#34;&gt;数据类型之 &lt;code&gt;zset&lt;/code&gt; &lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;bitmap&lt;/code&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;code&gt;sds&lt;/code&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;a href=&#34;#&#34;&gt;数据类型之 &lt;code&gt;bitmap&lt;/code&gt; &lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id=&#34;最后&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#最后&#34;&gt;#&lt;/a&gt; 最后&lt;/h2&gt;
&lt;p&gt;希望与你一起遇见更好的自己&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/images/Redis%E7%B3%BB%E5%88%97/images/qrcode.jpg&#34; alt=&#34;微信二维码&#34;&gt;&lt;/p&gt;
</content>
        <category term="Redis" />
        <updated>2021-08-01T10:48:55.000Z</updated>
    </entry>
    <entry>
        <id>https://fangjiaxiaobai.github.io/2021/08/01/Redis%E7%B3%BB%E5%88%97/B-5-Redis%E7%9A%84%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B%E4%B9%8B%E6%9C%89%E5%BA%8F%E9%9B%86%E5%90%88zset/</id>
        <title>Redis数据结构之有序集合 zset</title>
        <link rel="alternate" href="https://fangjiaxiaobai.github.io/2021/08/01/Redis%E7%B3%BB%E5%88%97/B-5-Redis%E7%9A%84%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B%E4%B9%8B%E6%9C%89%E5%BA%8F%E9%9B%86%E5%90%88zset/"/>
        <content type="html">&lt;h2 id=&#34;书接上回&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#书接上回&#34;&gt;#&lt;/a&gt; 书接上回&lt;/h2&gt;
&lt;p&gt;上一篇我们学习的  &lt;code&gt;set&lt;/code&gt;  集合这一数据类型。其内部是由 &lt;code&gt;inset&lt;/code&gt;  和 &lt;code&gt;hashtable&lt;/code&gt;  这种两种数据结构编码的。&lt;br&gt;
如果不记得了，那就来坐穿梭机回去看看吧。 &lt;a href=&#34;/2021/08/01/Redis%E7%B3%BB%E5%88%97/B-4-Redis%E7%9A%84%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B%E4%B9%8B%E9%9B%86%E5%90%88set/&#34;&gt;开始穿梭&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;接下来，我们继续学习一个新的数据类型，有序集合.  &lt;code&gt;zset&lt;/code&gt; .&lt;/p&gt;
&lt;h2 id=&#34;zset简介&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#zset简介&#34;&gt;#&lt;/a&gt;  &lt;code&gt;zset&lt;/code&gt;  简介&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;zset&lt;/code&gt;  , 中文名字叫 有序集合。序这个字，在 &lt;code&gt;Redis&lt;/code&gt;  的实现是  &lt;code&gt;score&lt;/code&gt;  字段。我们先不急这个字段，后面会介绍。&lt;/p&gt;
&lt;p&gt;在 &lt;code&gt;Redis&lt;/code&gt;  中有序的数据类型，还有一个就是我们前面学习的  &lt;code&gt;list&lt;/code&gt;  了。 它们还都可以获得某一定范围内的元素。&lt;/p&gt;
&lt;p&gt;而  &lt;code&gt;zset&lt;/code&gt;  的优点是：  &lt;code&gt;list&lt;/code&gt;  通过链表实现，在两端操作数据都很方便。但是操作中间的数据就比较慢了。  &lt;code&gt;zset&lt;/code&gt;  是用  &lt;code&gt;hashtable&lt;/code&gt;  和  &lt;code&gt;skiplist&lt;/code&gt;  来实现的。即使是操作中间数据，速度也很快。时间复杂度为:  &lt;code&gt;O(logN)&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;zset&lt;/code&gt;  的缺点就是：就是比较耗费内存。&lt;/p&gt;
&lt;h2 id=&#34;zset类型的应用场景&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#zset类型的应用场景&#34;&gt;#&lt;/a&gt;  &lt;code&gt;zset&lt;/code&gt;  类型的应用场景&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;存储学生成绩快速做成绩排名功能。&lt;/li&gt;
&lt;li&gt;排行榜，比如：列出某用户当前的全球排名，比赛中胜场数排名。&lt;/li&gt;
&lt;li&gt;带权重的消息队列功能&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;zset的基本命令&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#zset的基本命令&#34;&gt;#&lt;/a&gt;  &lt;code&gt;zset&lt;/code&gt;  的基本命令&lt;/h2&gt;
&lt;h3 id=&#34;zadd&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#zadd&#34;&gt;#&lt;/a&gt;  &lt;code&gt;zadd&lt;/code&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;语法&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;ZADD key [NX|XX] [CH] [INCR] score member [score member ...]&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;解释&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;将 &lt;code&gt;member&lt;/code&gt;  添加有序集合中.&lt;/p&gt;
&lt;p&gt;如果 &lt;code&gt;member&lt;/code&gt;  存在，会更新 &lt;code&gt;member&lt;/code&gt;  的 &lt;code&gt;score&lt;/code&gt;  值。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;NX&lt;/code&gt;  表示存在相同的 &lt;code&gt;member&lt;/code&gt;  就会设置失败，NX 的作用就是 新增 &lt;code&gt;member&lt;/code&gt; ，不会修改 &lt;code&gt;Member&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;XX&lt;/code&gt;  表示不存在相同的 &lt;code&gt;member&lt;/code&gt;  就会设置失败。所以:  &lt;code&gt;XX&lt;/code&gt;  总是更新元素。不会新增元素&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;CH&lt;/code&gt; ( &lt;code&gt;change&lt;/code&gt; ): 返回修改的元素个数。更改的元素是添加的新元素以及已为其更新分数的现有元素。因此，命令行中指定的具有与过去相同分数的元素将不计算在内。注意：通常， &lt;code&gt;ZADD&lt;/code&gt;  的返回值仅计算添加的新元素的数量。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;INCR&lt;/code&gt; : 指定此选项后， &lt;code&gt;ZADD&lt;/code&gt;  的行为类似于&lt;a href=&#34;#ZINCRBY&#34;&gt; &lt;code&gt;ZINCRBY&lt;/code&gt; &lt;/a&gt;。在此模式下只能指定一对得分元素。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;演示&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;63&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;#&lt;/span&gt;&lt;span class=&#34;bash&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 设置一个元素&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; ZADD k67 1 m1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(integer) 1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;#&lt;/span&gt;&lt;span class=&#34;bash&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 设置多个元素&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; ZADD k67 2 m2 3 m3 4 m4 5 m5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(integer) 4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;#&lt;/span&gt;&lt;span class=&#34;bash&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 演示 NX 语义,只能新增.&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; ZADD k67 NX 5 m5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(integer) 0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; ZADD k67 NX 6 m6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(integer) 1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; ZADD k67 NX 6 m6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(integer) 0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;#&lt;/span&gt;&lt;span class=&#34;bash&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 演示 XX 语言,只能修改&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; ZADD k67 XX 7 m7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(integer) 0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; ZADD k67 7 m7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(integer) 1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;#&lt;/span&gt;&lt;span class=&#34;bash&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 进行修改，注意返回值. 如果要返回个数，则加 CH&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; ZADD k67 XX 7 m7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(integer) 0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; ZADD k67 XX 77 m7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(integer) 0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;#&lt;/span&gt;&lt;span class=&#34;bash&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 演示CH, 返回修改的个数&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; ZADD k67 CH 8 m8 9 m9 10 m10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(integer) 3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; ZADD k67 CH 8 m8 999 m9 10 m10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(integer) 1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;#&lt;/span&gt;&lt;span class=&#34;bash&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 演示INCR, 增长&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; ZADD k67 11 m11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(integer) 1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;#&lt;/span&gt;&lt;span class=&#34;bash&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 此时 score 表示的是步长&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; ZADD k67 INCR 10 m11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;quot;21&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;#&lt;/span&gt;&lt;span class=&#34;bash&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 查看设置的值。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; ZRANGE k67 0 -1 WITHSCORES&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; 1) &amp;quot;m1&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; 2) &amp;quot;1&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; 3) &amp;quot;m2&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; 4) &amp;quot;2&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; 5) &amp;quot;m3&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; 6) &amp;quot;3&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; 7) &amp;quot;m4&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; 8) &amp;quot;4&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; 9) &amp;quot;m5&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10) &amp;quot;5&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11) &amp;quot;m6&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12) &amp;quot;6&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13) &amp;quot;m8&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14) &amp;quot;8&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15) &amp;quot;m10&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16) &amp;quot;10&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17) &amp;quot;m11&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18) &amp;quot;21&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19) &amp;quot;m7&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20) &amp;quot;77&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21) &amp;quot;m9&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22) &amp;quot;999&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;zscore&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#zscore&#34;&gt;#&lt;/a&gt;  &lt;code&gt;zscore&lt;/code&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;语法&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;ZSCORE key member&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;解释&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;zset score&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;查看对应元素的 &lt;code&gt;score&lt;/code&gt;  值&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;* 当`key`不存在或者`member`不存在的时候,返回`(nil)`
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;返回 &lt;code&gt;score&lt;/code&gt;  的值。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;演示&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight sh&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 验证k68不存在的时候，返回nil&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; ZSCORE k68 m1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(nil)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; ZADD k68 1 m1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(&lt;span class=&#34;built_in&#34;&gt;integer&lt;/span&gt;) 1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 返回元素的score值&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; ZSCORE k68 m1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;&amp;quot;1&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 验证 member 不存在的时候，返回&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; ZSCORE k68 m2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(nil)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;zincrby&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#zincrby&#34;&gt;#&lt;/a&gt;  &lt;code&gt;zincrby&lt;/code&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;语法&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;ZINCRBY key increment member&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;解释&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;zset increment by&lt;/code&gt; &lt;br&gt;
*  &lt;code&gt;increment&lt;/code&gt; : 步长。&lt;br&gt;
*  &lt;code&gt;member&lt;/code&gt; : 指定的成员&lt;/p&gt;
&lt;p&gt;为有序集合 &lt;code&gt;key&lt;/code&gt;  的成员 &lt;code&gt;member&lt;/code&gt;  的 &lt;code&gt;score&lt;/code&gt;  值加上  &lt;code&gt;increment&lt;/code&gt; 。&lt;/p&gt;
&lt;p&gt;如果 &lt;code&gt;key&lt;/code&gt;  或者 &lt;code&gt;member&lt;/code&gt;  不存在，则新增一个元素。相当于  &lt;code&gt;zadd&lt;/code&gt; .&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;演示&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight sh&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 插入一个不存在的key。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; ZINCRBY k69 10 m1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;&amp;quot;10&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; ZRANGE k69 0 -1 WITHSCORES&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1) &lt;span class=&#34;string&#34;&gt;&amp;quot;m1&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2) &lt;span class=&#34;string&#34;&gt;&amp;quot;10&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#累加&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; ZINCRBY k69 10 m1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;&amp;quot;20&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; ZRANGE k69 0 -1 WITHSCORES&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1) &lt;span class=&#34;string&#34;&gt;&amp;quot;m1&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2) &lt;span class=&#34;string&#34;&gt;&amp;quot;20&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 累加一个负数&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; ZINCRBY k69 -30 m1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;&amp;quot;-10&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; ZRANGE k69 0 -1 WITHSCORES&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1) &lt;span class=&#34;string&#34;&gt;&amp;quot;m1&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2) &lt;span class=&#34;string&#34;&gt;&amp;quot;-10&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;zcard&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#zcard&#34;&gt;#&lt;/a&gt;  &lt;code&gt;zcard&lt;/code&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;语法&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;ZCARD key&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;解释&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;返回 有序集合的 &lt;code&gt;key&lt;/code&gt;  中的元素个数。即 &lt;code&gt;member&lt;/code&gt;  的个数。&lt;br&gt;
不存在的时候，返回 &lt;code&gt;0&lt;/code&gt; .&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;演示&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;#&lt;/span&gt;&lt;span class=&#34;bash&#34;&gt; 返回member的个数&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; ZADD k70 1 m1 2 m2 3 m3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(integer) 3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; ZCARD k70&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(integer) 3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; ZADD k70 4 m4 5 m5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(integer) 2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; ZCARD k70&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(integer) 5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;#&lt;/span&gt;&lt;span class=&#34;bash&#34;&gt; 不存在的时候，返回0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; EXISTS k70_1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(integer) 0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; ZCARD k70_1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(integer) 0&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;zcount&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#zcount&#34;&gt;#&lt;/a&gt;  &lt;code&gt;zcount&lt;/code&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;语法&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;ZCOUNT key min max&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;解释&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;返回  &lt;code&gt;score&lt;/code&gt;  值在 &lt;code&gt;min&lt;/code&gt;  和  &lt;code&gt;max&lt;/code&gt;  之间的元素的个数。包括等于  &lt;code&gt;min&lt;/code&gt;  和  &lt;code&gt;max&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;演示&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight sh&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; ZADD k71 1 m1 2 m2 3 m3 4 m4 5 m5 6 m6 7 m7 8 m8 9 m9 10 m10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(&lt;span class=&#34;built_in&#34;&gt;integer&lt;/span&gt;) 10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; ZCOUNT k71 2 5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(&lt;span class=&#34;built_in&#34;&gt;integer&lt;/span&gt;) 4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#不存在的key或者不在区间内时，返回0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; zcount k71_1 0 10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(&lt;span class=&#34;built_in&#34;&gt;integer&lt;/span&gt;) 0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; zcount k71 11 12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(&lt;span class=&#34;built_in&#34;&gt;integer&lt;/span&gt;) 0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; zcount k71 12 11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(&lt;span class=&#34;built_in&#34;&gt;integer&lt;/span&gt;) 0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; &lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;zrange&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#zrange&#34;&gt;#&lt;/a&gt;  &lt;code&gt;zrange&lt;/code&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;语法&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;ZRANGE key start stop [WITHSCORES]&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;解释&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;这个命令我们已经用过，就是返回指定开始结束位置上的元素。从  &lt;code&gt;0&lt;/code&gt;  开始。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;演示&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight sh&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; ZRANGE k72 1 3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1) &lt;span class=&#34;string&#34;&gt;&amp;quot;m2&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2) &lt;span class=&#34;string&#34;&gt;&amp;quot;m3&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3) &lt;span class=&#34;string&#34;&gt;&amp;quot;m4&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; ZRANGE k72 1 3 WITHSCORES&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1) &lt;span class=&#34;string&#34;&gt;&amp;quot;m2&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2) &lt;span class=&#34;string&#34;&gt;&amp;quot;2&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3) &lt;span class=&#34;string&#34;&gt;&amp;quot;m3&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4) &lt;span class=&#34;string&#34;&gt;&amp;quot;3&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5) &lt;span class=&#34;string&#34;&gt;&amp;quot;m4&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6) &lt;span class=&#34;string&#34;&gt;&amp;quot;4&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;zrevrange&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#zrevrange&#34;&gt;#&lt;/a&gt;  &lt;code&gt;zrevrange&lt;/code&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;语法&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;ZREVRANGE key start stop [WITHSCORES]&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;解释&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;返回有序集合中指定区间的成员。&lt;br&gt;
其中成员的位置按  &lt;code&gt;score&lt;/code&gt;  值递减 (从大到小) 来排列。 具有相同  &lt;code&gt;score&lt;/code&gt;  值的成员按字典序的逆序 ( &lt;code&gt;reverse lexicographical order&lt;/code&gt; ) 排列。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;演示&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight sh&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; ZADD k73 1 m1 2 m2 3 m3 4 m4 5 m5 6 m6 7 m7 8 m8 9 m9 10 m10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(&lt;span class=&#34;built_in&#34;&gt;integer&lt;/span&gt;) 10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 使用 zrange 正序返回数据&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; ZRANGE k73 0 3 WITHSCORES&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1) &lt;span class=&#34;string&#34;&gt;&amp;quot;m1&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2) &lt;span class=&#34;string&#34;&gt;&amp;quot;1&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3) &lt;span class=&#34;string&#34;&gt;&amp;quot;m2&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4) &lt;span class=&#34;string&#34;&gt;&amp;quot;2&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5) &lt;span class=&#34;string&#34;&gt;&amp;quot;m3&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6) &lt;span class=&#34;string&#34;&gt;&amp;quot;3&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7) &lt;span class=&#34;string&#34;&gt;&amp;quot;m4&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8) &lt;span class=&#34;string&#34;&gt;&amp;quot;4&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 使用 zrevrange 倒序返回数据&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; ZREVRANGE k73 0 3 WITHSCORES&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1) &lt;span class=&#34;string&#34;&gt;&amp;quot;m10\x11&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2) &lt;span class=&#34;string&#34;&gt;&amp;quot;10&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3) &lt;span class=&#34;string&#34;&gt;&amp;quot;m9&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4) &lt;span class=&#34;string&#34;&gt;&amp;quot;9&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5) &lt;span class=&#34;string&#34;&gt;&amp;quot;m8&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6) &lt;span class=&#34;string&#34;&gt;&amp;quot;8&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7) &lt;span class=&#34;string&#34;&gt;&amp;quot;m7&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8) &lt;span class=&#34;string&#34;&gt;&amp;quot;7&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;zrangebyscore&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#zrangebyscore&#34;&gt;#&lt;/a&gt;  &lt;code&gt;zrangebyscore&lt;/code&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;语法&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;ZRANGEBYSCORE key min max [WITHSCORES] [LIMIT offset count]&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;解释&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;zset range by score&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;类似  &lt;code&gt;zrange&lt;/code&gt; , 不过是按照  &lt;code&gt;score&lt;/code&gt;  的值进行排序的。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;[LIMIT offset count]&lt;/code&gt; , 是从 offset 开始，返回 &lt;code&gt;count&lt;/code&gt;  个。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;演示&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight sh&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 返回 score值在 [9,10]之间的member。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; ZADD k74 1 m1 2 m2 3 m3 4 m4 5 m5 6 m6 7 m7 8 m8 9 m9 10 m10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(&lt;span class=&#34;built_in&#34;&gt;integer&lt;/span&gt;) 10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; ZRANGEBYSCORE k74 9 10 WITHSCORES&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1) &lt;span class=&#34;string&#34;&gt;&amp;quot;m9&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2) &lt;span class=&#34;string&#34;&gt;&amp;quot;9&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3) &lt;span class=&#34;string&#34;&gt;&amp;quot;m10\x11&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4) &lt;span class=&#34;string&#34;&gt;&amp;quot;10&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 从第2个(区间内索引为1)开始，返回1个元素&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; ZRANGEBYSCORE k74 9 10 WITHSCORES LIMIT 1 1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1) &lt;span class=&#34;string&#34;&gt;&amp;quot;m10\x11&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2) &lt;span class=&#34;string&#34;&gt;&amp;quot;10&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;zrevrangebyscore&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#zrevrangebyscore&#34;&gt;#&lt;/a&gt;  &lt;code&gt;zrevrangebyscore&lt;/code&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;语法&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;ZREVRANGEBYSCORE key max min [WITHSCORES] [LIMIT offset count]&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;解释&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;返回有序集  &lt;code&gt;key&lt;/code&gt;  中，  &lt;code&gt;score&lt;/code&gt;  值介于  &lt;code&gt;max&lt;/code&gt;  和  &lt;code&gt;min&lt;/code&gt;  之间 (默认包括等于  &lt;code&gt;max&lt;/code&gt;  或  &lt;code&gt;min&lt;/code&gt;  ) 的所有的成员。有序集成员按  &lt;code&gt;score&lt;/code&gt;  值递减 (从大到小) 的次序排列。&lt;/p&gt;
&lt;p&gt;注意各个参数的位置哦。这里和  &lt;code&gt;zrevrange&lt;/code&gt;  的参数不一样。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;演示&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight sh&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; ZADD k75 1 m1 2 m2 3 m3 4 m4 5 m5 6 m6 7 m7 8 m8 9 m9 10 m10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(&lt;span class=&#34;built_in&#34;&gt;integer&lt;/span&gt;) 10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; ZREVRANGEBYSCORE k75 8 6 WITHSCORES &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1) &lt;span class=&#34;string&#34;&gt;&amp;quot;m8&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2) &lt;span class=&#34;string&#34;&gt;&amp;quot;8&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3) &lt;span class=&#34;string&#34;&gt;&amp;quot;m7&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4) &lt;span class=&#34;string&#34;&gt;&amp;quot;7&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5) &lt;span class=&#34;string&#34;&gt;&amp;quot;m6&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6) &lt;span class=&#34;string&#34;&gt;&amp;quot;6&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; ZREVRANGEBYSCORE k75 8 6 WITHSCORES  LIMIT 1  1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1) &lt;span class=&#34;string&#34;&gt;&amp;quot;m7&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2) &lt;span class=&#34;string&#34;&gt;&amp;quot;7&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;zrank&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#zrank&#34;&gt;#&lt;/a&gt;  &lt;code&gt;zrank&lt;/code&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;语法&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;ZRANK key member&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;解释&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;返回有序集  &lt;code&gt;key&lt;/code&gt;  中成员  &lt;code&gt;member&lt;/code&gt;  的排名。其中有序集成员按  &lt;code&gt;score&lt;/code&gt;  值递增 (从小到大) 顺序排列&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;演示&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight sh&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; ZADD k76 1 m1 2 m2 3 m3 4 m4 5 m5 6 m6 7 m7 8 m8 9 m9 10 m10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(&lt;span class=&#34;built_in&#34;&gt;integer&lt;/span&gt;) 10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; zrank k76 m4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(&lt;span class=&#34;built_in&#34;&gt;integer&lt;/span&gt;) 3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; zrank k76 m10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(&lt;span class=&#34;built_in&#34;&gt;integer&lt;/span&gt;) 9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;zrevrank&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#zrevrank&#34;&gt;#&lt;/a&gt;  &lt;code&gt;zrevrank&lt;/code&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;语法&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;ZREVRANK key member&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;解释&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;返回有序集  &lt;code&gt;key&lt;/code&gt;  中成员  &lt;code&gt;member&lt;/code&gt;  的排名。其中有序集成员按  &lt;code&gt;score&lt;/code&gt;  值递减 (从大到小) 排序。&lt;/p&gt;
&lt;p&gt;排名以  &lt;code&gt;0&lt;/code&gt;  为底，也就是说，  &lt;code&gt;score&lt;/code&gt;  值最大的成员排名为  &lt;code&gt;0&lt;/code&gt;  。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;演示&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight sh&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; ZADD k77 1 m1 2 m2 3 m3 4 m4 5 m5 6 m6 7 m7 8 m8 9 m9 10 m10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(&lt;span class=&#34;built_in&#34;&gt;integer&lt;/span&gt;) 10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; ZREVRANK k77 m10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(&lt;span class=&#34;built_in&#34;&gt;integer&lt;/span&gt;) 0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; ZREVRANK k77 m4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(&lt;span class=&#34;built_in&#34;&gt;integer&lt;/span&gt;) 6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;zrem&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#zrem&#34;&gt;#&lt;/a&gt;  &lt;code&gt;zrem&lt;/code&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;语法&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;ZREM key member [member ...]&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;解释&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;zset remove&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;移除有序集  &lt;code&gt;key&lt;/code&gt;  中的一个或多个成员，不存在的成员将被忽略。&lt;/p&gt;
&lt;p&gt;当  &lt;code&gt;key&lt;/code&gt;  存在但不是有序集类型时，返回一个错误。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;演示&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight sh&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; ZADD k78 1 m1 2 m2 3 m3 4 m4 5 m5 6 m6 7 m7 8 m8 9 m9 10 m10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(&lt;span class=&#34;built_in&#34;&gt;integer&lt;/span&gt;) 10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 删除m2,m3,m4&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; ZREM k78 m2 m3 m4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(&lt;span class=&#34;built_in&#34;&gt;integer&lt;/span&gt;) 3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; ZRANGE k78 0 -1 WITHSCORES&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; 1) &lt;span class=&#34;string&#34;&gt;&amp;quot;m1&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; 2) &lt;span class=&#34;string&#34;&gt;&amp;quot;1&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; 3) &lt;span class=&#34;string&#34;&gt;&amp;quot;m5&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; 4) &lt;span class=&#34;string&#34;&gt;&amp;quot;5&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; 5) &lt;span class=&#34;string&#34;&gt;&amp;quot;m6&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; 6) &lt;span class=&#34;string&#34;&gt;&amp;quot;6&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; 7) &lt;span class=&#34;string&#34;&gt;&amp;quot;m7&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; 8) &lt;span class=&#34;string&#34;&gt;&amp;quot;7&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; 9) &lt;span class=&#34;string&#34;&gt;&amp;quot;m8&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10) &lt;span class=&#34;string&#34;&gt;&amp;quot;8&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11) &lt;span class=&#34;string&#34;&gt;&amp;quot;m9&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12) &lt;span class=&#34;string&#34;&gt;&amp;quot;9&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13) &lt;span class=&#34;string&#34;&gt;&amp;quot;m10&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14) &lt;span class=&#34;string&#34;&gt;&amp;quot;10&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;zremrangebyrank&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#zremrangebyrank&#34;&gt;#&lt;/a&gt;  &lt;code&gt;zremrangebyrank&lt;/code&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;语法&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;ZREMRANGEBYRANK key start stop&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;解释&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;移除有序集  &lt;code&gt;key&lt;/code&gt;  中，指定排名 ( &lt;code&gt;rank&lt;/code&gt; ) 区间内的所有成员。&lt;/p&gt;
&lt;p&gt;区间分别以下标参数  &lt;code&gt;start&lt;/code&gt;  和  &lt;code&gt;stop&lt;/code&gt;  指出，包含  &lt;code&gt;start&lt;/code&gt;  和  &lt;code&gt;stop&lt;/code&gt;  在内。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;演示&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight sh&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; ZADD k79 1 m1 2 m2 3 m3 4 m4 5 m5 6 m6 7 m7 8 m8 9 m9 10 m10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(&lt;span class=&#34;built_in&#34;&gt;integer&lt;/span&gt;) 10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 删除排名第2到排名第4的member&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; ZREMRANGEBYRANK k79 1 3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(&lt;span class=&#34;built_in&#34;&gt;integer&lt;/span&gt;) 3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; ZRANGE k79 0 -1 WITHSCORES&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; 1) &lt;span class=&#34;string&#34;&gt;&amp;quot;m1&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; 2) &lt;span class=&#34;string&#34;&gt;&amp;quot;1&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; 3) &lt;span class=&#34;string&#34;&gt;&amp;quot;m5&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; 4) &lt;span class=&#34;string&#34;&gt;&amp;quot;5&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; 5) &lt;span class=&#34;string&#34;&gt;&amp;quot;m6&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; 6) &lt;span class=&#34;string&#34;&gt;&amp;quot;6&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; 7) &lt;span class=&#34;string&#34;&gt;&amp;quot;m7&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; 8) &lt;span class=&#34;string&#34;&gt;&amp;quot;7&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; 9) &lt;span class=&#34;string&#34;&gt;&amp;quot;m8&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10) &lt;span class=&#34;string&#34;&gt;&amp;quot;8&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11) &lt;span class=&#34;string&#34;&gt;&amp;quot;m9&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12) &lt;span class=&#34;string&#34;&gt;&amp;quot;9&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13) &lt;span class=&#34;string&#34;&gt;&amp;quot;m10&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14) &lt;span class=&#34;string&#34;&gt;&amp;quot;10&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;zremrangebyscore&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#zremrangebyscore&#34;&gt;#&lt;/a&gt; zremrangebyscore&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;语法&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;ZREMRANGEBYSCORE key min max&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;解释&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;移除有序集  &lt;code&gt;key&lt;/code&gt;  中，所有  &lt;code&gt;score&lt;/code&gt;  值介于  &lt;code&gt;min&lt;/code&gt;  和  &lt;code&gt;max&lt;/code&gt;  之间 (包括等于  &lt;code&gt;min&lt;/code&gt;  或  &lt;code&gt;max&lt;/code&gt;  ) 的成员。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;演示&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight sh&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; ZADD k80 1 m1 2 m2 3 m3 4 m4 5 m5 6 m6 7 m7 8 m8 9 m9 10 m10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(&lt;span class=&#34;built_in&#34;&gt;integer&lt;/span&gt;) 10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 删除 score&amp;gt;=1 and score &amp;lt;=9 的元素&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; ZREMRANGEBYSCORE k80 1 9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(&lt;span class=&#34;built_in&#34;&gt;integer&lt;/span&gt;) 9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; zrange k80 0 -1  WITHSCORES&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1) &lt;span class=&#34;string&#34;&gt;&amp;quot;m10&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2) &lt;span class=&#34;string&#34;&gt;&amp;quot;10&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;zrangebylex&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#zrangebylex&#34;&gt;#&lt;/a&gt; zrangebylex&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;语法&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;ZRANGEBYLEX key min max [LIMIT offset count]&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;解释&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;当有序集合的所有成员都具有相同的分值时， 有序集合的元素会根据成员的字典序（ &lt;code&gt;lexicographical ordering&lt;/code&gt; ）来进行排序， 而这个命令则可以返回给定的有序集合键  &lt;code&gt;key&lt;/code&gt;  中， 值介于  &lt;code&gt;min&lt;/code&gt;  和  &lt;code&gt;max&lt;/code&gt;  之间的成员。&lt;/p&gt;
&lt;p&gt;注意:&lt;/p&gt;
&lt;p&gt;合法的  &lt;code&gt;min&lt;/code&gt;  和  &lt;code&gt;max&lt;/code&gt;  参数必须包含 ( 或者  &lt;code&gt;[&lt;/code&gt;  ， 其中  &lt;code&gt;(&lt;/code&gt;  表示开区间（指定的值不会被包含在范围之内）， 而  &lt;code&gt;[&lt;/code&gt;  则表示闭区间（指定的值会被包含在范围之内）。&lt;/p&gt;
&lt;p&gt;特殊值  &lt;code&gt;+&lt;/code&gt;  和  &lt;code&gt;-&lt;/code&gt;  在  &lt;code&gt;min&lt;/code&gt;  参数以及  &lt;code&gt;max&lt;/code&gt;  参数中具有特殊的意义， 其中  &lt;code&gt;+&lt;/code&gt;  表示正无限， 而  &lt;code&gt;-&lt;/code&gt;  表示负无限。 因此， 向一个所有成员的分值都相同的有序集合发送命令  &lt;code&gt;ZRANGEBYLEX &amp;lt;zset&amp;gt; - + &lt;/code&gt; ， 命令将返回有序集合中的所有元素&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;lex&lt;/code&gt; :&lt;br&gt;
 表示如果 &lt;code&gt;score&lt;/code&gt;  相等，则按照 &lt;code&gt;member&lt;/code&gt;  的字典顺序排序。&lt;br&gt;
此外这个命令，比如 &lt;code&gt;ZRANGBYSCORE&lt;/code&gt;  稍微强大一点儿。可以指定区间范围，当只知道 &lt;code&gt;member&lt;/code&gt; ，不知道 score 的时候，可以是使用带有  &lt;code&gt;lex&lt;/code&gt;  的命令。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;演示&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight sh&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; zadd k81 1 a 2 b 3 c 4 d 5 f 6 g&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(&lt;span class=&#34;built_in&#34;&gt;integer&lt;/span&gt;) 6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 返回 score值在a的score值和c的score值之间的member&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 即: score&amp;gt; Score(a) &amp;amp;&amp;amp; score &amp;lt;= Score(c)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; ZRANGEBYLEX k81 (a  [c &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1) &lt;span class=&#34;string&#34;&gt;&amp;quot;b&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2) &lt;span class=&#34;string&#34;&gt;&amp;quot;c&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 返回 小于等于c的Score值的元素&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; ZRANGEBYLEX k81 -  [c &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1) &lt;span class=&#34;string&#34;&gt;&amp;quot;a&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2) &lt;span class=&#34;string&#34;&gt;&amp;quot;b&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3) &lt;span class=&#34;string&#34;&gt;&amp;quot;c&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 返回所有元素&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; ZRANGEBYLEX k81 - + &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1) &lt;span class=&#34;string&#34;&gt;&amp;quot;a&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2) &lt;span class=&#34;string&#34;&gt;&amp;quot;b&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3) &lt;span class=&#34;string&#34;&gt;&amp;quot;c&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4) &lt;span class=&#34;string&#34;&gt;&amp;quot;d&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5) &lt;span class=&#34;string&#34;&gt;&amp;quot;f&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6) &lt;span class=&#34;string&#34;&gt;&amp;quot;g&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;zlexcount&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#zlexcount&#34;&gt;#&lt;/a&gt;  &lt;code&gt;zlexcount&lt;/code&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;语法&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;ZLEXCOUNT key min max&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;解释&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;对于一个所有成员的分值都相同的有序集合键  &lt;code&gt;key&lt;/code&gt;  来说， 这个命令会返回该集合中， 成员介于  &lt;code&gt;min&lt;/code&gt;  和  &lt;code&gt;max&lt;/code&gt;  范围内的元素数量。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;演示&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight sh&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; zadd k82 1 a 2 b 3 c 4 d 5 f 6 g&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(&lt;span class=&#34;built_in&#34;&gt;integer&lt;/span&gt;) 6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; ZLEXCOUNT k82 2 5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(error) ERR min or max not valid string range item&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; ZLEXCOUNT k82 a b&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 大于Score(a),小于等于Score(b)的member,只有b.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; ZLEXCOUNT k82 (a [b&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(&lt;span class=&#34;built_in&#34;&gt;integer&lt;/span&gt;) 1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 大于Score(a),小于等于Score(d)的member,有b.c.d，三个&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; ZLEXCOUNT k82 (a [d&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(&lt;span class=&#34;built_in&#34;&gt;integer&lt;/span&gt;) 3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;zremrangebylex&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#zremrangebylex&#34;&gt;#&lt;/a&gt;  &lt;code&gt;zremrangebylex&lt;/code&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;语法&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;ZREMRANGEBYLEX key min max&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;解释&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;对于一个所有成员的分值都相同的有序集合键  &lt;code&gt;key&lt;/code&gt;  来说， 这个命令会移除该集合中， 成员介于  &lt;code&gt;min&lt;/code&gt;  和  &lt;code&gt;max&lt;/code&gt;  范围内的所有元素。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;演示&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight sh&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; zadd k83 1 a 2 b 3 c 4 d 5 f 6 g&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(&lt;span class=&#34;built_in&#34;&gt;integer&lt;/span&gt;) 6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 删除 score值在 (Score(a),Score(c)] 之间的member&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; ZREMRANGEBYLEX k83 (a [c&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(&lt;span class=&#34;built_in&#34;&gt;integer&lt;/span&gt;) 2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 删除了，b,c&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; zrange k83 0 -1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1) &lt;span class=&#34;string&#34;&gt;&amp;quot;a&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2) &lt;span class=&#34;string&#34;&gt;&amp;quot;d&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3) &lt;span class=&#34;string&#34;&gt;&amp;quot;f&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4) &lt;span class=&#34;string&#34;&gt;&amp;quot;g&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;zscan&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#zscan&#34;&gt;#&lt;/a&gt; zscan&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;语法&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;ZSCAN key cursor [MATCH pattern] [COUNT count]&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;解释&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;这是一个查询命令。 同  &lt;code&gt;SCAN&lt;/code&gt;  命令。可以参考这篇文章 &lt;a href=&#34;./010-%E5%85%B6%E4%BB%96%E5%91%BD%E4%BB%A4.md&#34;&gt;010 - 其他命令&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;SCAN&lt;/code&gt;  命令是一个基于游标的迭代器（ &lt;code&gt;cursor based iterator&lt;/code&gt; ）：  &lt;code&gt;SCAN&lt;/code&gt;  命令每次被调用之后， 都会向用户返回一个新的游标， 用户在下次迭代时需要使用这个新游标作为  &lt;code&gt;SCAN&lt;/code&gt;  命令的游标参数， 以此来延续之前的迭代过程。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;演示&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight sh&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; ZADD k84 1 m1 2 m2 3 m3 4 m4 5 m5 6 m6 7 m7 8 m8 9 m9 10 m10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(&lt;span class=&#34;built_in&#34;&gt;integer&lt;/span&gt;) 10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; zscan k84 0 MATCH m* COUNT 3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1) &lt;span class=&#34;string&#34;&gt;&amp;quot;0&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2)  1) &lt;span class=&#34;string&#34;&gt;&amp;quot;m1&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    2) &lt;span class=&#34;string&#34;&gt;&amp;quot;1&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    3) &lt;span class=&#34;string&#34;&gt;&amp;quot;m2&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    4) &lt;span class=&#34;string&#34;&gt;&amp;quot;2&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    5) &lt;span class=&#34;string&#34;&gt;&amp;quot;m3&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    6) &lt;span class=&#34;string&#34;&gt;&amp;quot;3&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    7) &lt;span class=&#34;string&#34;&gt;&amp;quot;m4&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    8) &lt;span class=&#34;string&#34;&gt;&amp;quot;4&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    9) &lt;span class=&#34;string&#34;&gt;&amp;quot;m5&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   10) &lt;span class=&#34;string&#34;&gt;&amp;quot;5&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   11) &lt;span class=&#34;string&#34;&gt;&amp;quot;m6&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   12) &lt;span class=&#34;string&#34;&gt;&amp;quot;6&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   13) &lt;span class=&#34;string&#34;&gt;&amp;quot;m7&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   14) &lt;span class=&#34;string&#34;&gt;&amp;quot;7&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   15) &lt;span class=&#34;string&#34;&gt;&amp;quot;m8&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   16) &lt;span class=&#34;string&#34;&gt;&amp;quot;8&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   17) &lt;span class=&#34;string&#34;&gt;&amp;quot;m9&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   18) &lt;span class=&#34;string&#34;&gt;&amp;quot;9&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   19) &lt;span class=&#34;string&#34;&gt;&amp;quot;m10&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   20) &lt;span class=&#34;string&#34;&gt;&amp;quot;10&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;zunionstore&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#zunionstore&#34;&gt;#&lt;/a&gt;  &lt;code&gt;zunionstore&lt;/code&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;语法&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;ZUNIONSTORE destination numkeys key [key ...] [WEIGHTS weight] [AGGREGATE SUM|MIN|MAX]&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;解释&lt;br&gt;
计算给定的一个或多个有序集合的并集，其中给定 key 的数量必须以 numkeys 参数指定，并将该并集 (结果集) 储存到 destination 。&lt;br&gt;
如果 key 相同的时候，对应的 score 值会相加。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;WEIGHTS&lt;/code&gt; : 使用  &lt;code&gt;WEIGHTS&lt;/code&gt;  选项，你可以为 每个 给定有序集 分别 指定一个乘法因子 ( &lt;code&gt;multiplication factor&lt;/code&gt; )，每个给定有序集的所有成员的  &lt;code&gt;score&lt;/code&gt;  值在传递给聚合函数 ( &lt;code&gt;aggregation function&lt;/code&gt; ) 之前都要先乘以该有序集的因子。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;AGGREGATE&lt;/code&gt; : 使用  &lt;code&gt;AGGREGATE&lt;/code&gt;  选项，你可以指定并集的结果集的聚合方式。&lt;br&gt;
默认使用的参数  &lt;code&gt;SUM&lt;/code&gt;  ，可以将所有集合中某个成员的  &lt;code&gt;score&lt;/code&gt;  值之 和 作为结果集中该成员的  &lt;code&gt;score&lt;/code&gt;  值；使用参数  &lt;code&gt;MIN&lt;/code&gt;  ，可以将所有集合中某个成员的 最小  &lt;code&gt;score&lt;/code&gt;  值作为结果集中该成员的  &lt;code&gt;score&lt;/code&gt;  值；而参数  &lt;code&gt;MAX&lt;/code&gt;  则是将所有集合中某个成员的 最大  &lt;code&gt;score&lt;/code&gt;  值作为结果集中该成员的  &lt;code&gt;score&lt;/code&gt;  值。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;演示&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight sh&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;48&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; ZADD k85_1 1 m1 2 m2 3 m3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(&lt;span class=&#34;built_in&#34;&gt;integer&lt;/span&gt;) 3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; ZADD k85_2 1 m1 4 m4 5 m5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(&lt;span class=&#34;built_in&#34;&gt;integer&lt;/span&gt;) 3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; ZUNIONSTORE k85 2 k85_1 k85_2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(&lt;span class=&#34;built_in&#34;&gt;integer&lt;/span&gt;) 5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; zrange k85 0 -1 WITHSCORES&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; 1) &lt;span class=&#34;string&#34;&gt;&amp;quot;m1&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; 2) &lt;span class=&#34;string&#34;&gt;&amp;quot;2&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; 3) &lt;span class=&#34;string&#34;&gt;&amp;quot;m2&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; 4) &lt;span class=&#34;string&#34;&gt;&amp;quot;2&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; 5) &lt;span class=&#34;string&#34;&gt;&amp;quot;m3&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; 6) &lt;span class=&#34;string&#34;&gt;&amp;quot;3&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; 7) &lt;span class=&#34;string&#34;&gt;&amp;quot;m4&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; 8) &lt;span class=&#34;string&#34;&gt;&amp;quot;4&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; 9) &lt;span class=&#34;string&#34;&gt;&amp;quot;m5&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10) &lt;span class=&#34;string&#34;&gt;&amp;quot;5&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 演示 Weights参数： WEIGHTS 2 3&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 指: 第一个zset的所有元素 *2 ，第二个有序集合中的元素 *3&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; ZUNIONSTORE k85 2 k85_1 k85_2 WEIGHTS 2 3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(&lt;span class=&#34;built_in&#34;&gt;integer&lt;/span&gt;) 5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; ZRANGE k85 0 -1 WITHSCORES&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; 1) &lt;span class=&#34;string&#34;&gt;&amp;quot;m2&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; 2) &lt;span class=&#34;string&#34;&gt;&amp;quot;4&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; 3) &lt;span class=&#34;string&#34;&gt;&amp;quot;m1&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; 4) &lt;span class=&#34;string&#34;&gt;&amp;quot;5&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; 5) &lt;span class=&#34;string&#34;&gt;&amp;quot;m3&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; 6) &lt;span class=&#34;string&#34;&gt;&amp;quot;6&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; 7) &lt;span class=&#34;string&#34;&gt;&amp;quot;m4&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; 8) &lt;span class=&#34;string&#34;&gt;&amp;quot;12&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; 9) &lt;span class=&#34;string&#34;&gt;&amp;quot;m5&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10) &lt;span class=&#34;string&#34;&gt;&amp;quot;15&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 演示 Weights参数： WEIGHTS 2 4&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 指: 第一个zset的所有元素 *2 ，第二个有序集合中的元素 *3&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; ZUNIONSTORE k85 2 k85_1 k85_2 WEIGHTS 2 4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(&lt;span class=&#34;built_in&#34;&gt;integer&lt;/span&gt;) 5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; ZRANGE k85 0 -1 WITHSCORES&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; 1) &lt;span class=&#34;string&#34;&gt;&amp;quot;m2&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; 2) &lt;span class=&#34;string&#34;&gt;&amp;quot;4&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; 3) &lt;span class=&#34;string&#34;&gt;&amp;quot;m1&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; 4) &lt;span class=&#34;string&#34;&gt;&amp;quot;6&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; 5) &lt;span class=&#34;string&#34;&gt;&amp;quot;m3&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; 6) &lt;span class=&#34;string&#34;&gt;&amp;quot;6&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; 7) &lt;span class=&#34;string&#34;&gt;&amp;quot;m4&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; 8) &lt;span class=&#34;string&#34;&gt;&amp;quot;16&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; 9) &lt;span class=&#34;string&#34;&gt;&amp;quot;m5&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10) &lt;span class=&#34;string&#34;&gt;&amp;quot;20&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;zinterstore&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#zinterstore&#34;&gt;#&lt;/a&gt; zinterstore&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;语法&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;ZINTERSTORE destination numkeys key [key …] [WEIGHTS weight [weight …]] [AGGREGATE SUM|MIN|MAX]&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;解释&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;计算给定的一个或多个有序集的交集，其中给定  &lt;code&gt;key&lt;/code&gt;  的数量必须以  &lt;code&gt;numkeys&lt;/code&gt;  参数指定，并将该交集 (结果集) 储存到  &lt;code&gt;destination&lt;/code&gt;  。&lt;/p&gt;
&lt;p&gt;默认情况下，结果集中某个成员的  &lt;code&gt;score&lt;/code&gt;  值是所有给定集下该成员  &lt;code&gt;score&lt;/code&gt;  值之和.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;演示&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight sh&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; zadd k86_1 1 m1 2 m2 3 m3 4 m4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(&lt;span class=&#34;built_in&#34;&gt;integer&lt;/span&gt;) 4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; ZADD k86_2 20 m2 30 m3 50 m5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(&lt;span class=&#34;built_in&#34;&gt;integer&lt;/span&gt;) 3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; ZINTERSTORE k86 2 k86_1 k86_2 &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(&lt;span class=&#34;built_in&#34;&gt;integer&lt;/span&gt;) 2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 取交集(默认相加)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; zrange k86 0 -1 WITHSCORES&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1) &lt;span class=&#34;string&#34;&gt;&amp;quot;m2&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2) &lt;span class=&#34;string&#34;&gt;&amp;quot;22&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3) &lt;span class=&#34;string&#34;&gt;&amp;quot;m3&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4) &lt;span class=&#34;string&#34;&gt;&amp;quot;33&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# WEIGTHS 参数和上面的 ZUNIONSTORE命令一样.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 这里演示一下, AGGREGATE参数&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 默认使用的是SUM. 就是本命令中上面的例子了.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 下面演示MIN 和 MAX&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; ZINTERSTORE k86 2 k86_1 k86_2 AGGREGATE MIN&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(&lt;span class=&#34;built_in&#34;&gt;integer&lt;/span&gt;) 2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; ZRANGE k86 0 -1 WITHSCORES&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1) &lt;span class=&#34;string&#34;&gt;&amp;quot;m2&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2) &lt;span class=&#34;string&#34;&gt;&amp;quot;2&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3) &lt;span class=&#34;string&#34;&gt;&amp;quot;m3&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4) &lt;span class=&#34;string&#34;&gt;&amp;quot;3&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; ZINTERSTORE k86 2 k86_1 k86_2 AGGREGATE MAX&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(&lt;span class=&#34;built_in&#34;&gt;integer&lt;/span&gt;) 2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; ZRANGE k86 0 -1 WITHSCORES&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1) &lt;span class=&#34;string&#34;&gt;&amp;quot;m2&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2) &lt;span class=&#34;string&#34;&gt;&amp;quot;20&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3) &lt;span class=&#34;string&#34;&gt;&amp;quot;m3&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4) &lt;span class=&#34;string&#34;&gt;&amp;quot;30&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&#34;zset的内部结构&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#zset的内部结构&#34;&gt;#&lt;/a&gt;  &lt;code&gt;zset&lt;/code&gt;  的内部结构&lt;/h2&gt;
&lt;p&gt;这里我们主要看 &lt;code&gt;skiplist&lt;/code&gt; ，如果忘记了 &lt;code&gt;hashtable&lt;/code&gt; ，就看着&lt;a href=&#34;2021/08/01/Redis%E7%B3%BB%E5%88%97/C-8-Redis%E4%B8%AD%E7%9A%84%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B9%8B%E5%AD%97%E5%85%B8Dict/&#34;&gt;这篇文章&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;我们从命令 &lt;code&gt;zadd&lt;/code&gt;  入手，找到 &lt;code&gt;zset&lt;/code&gt;  的 &lt;code&gt;add&lt;/code&gt;  通用方法 &lt;code&gt;zaddGenericCommand(c,ZADD_NONE);&lt;/code&gt;  来看一下。省略了部分代码。&lt;/p&gt;
&lt;figure class=&#34;highlight c++&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;...&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (server.zset_max_ziplist_entries == &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt; ||&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            server.zset_max_ziplist_value &amp;lt; &lt;span class=&#34;built_in&#34;&gt;sdslen&lt;/span&gt;(c-&amp;gt;argv[scoreidx+&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;]-&amp;gt;ptr))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;/// 创建 OBJ_ENCODING_SKIPLIST 编码的结构&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    zobj = &lt;span class=&#34;built_in&#34;&gt;createZsetObject&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125; &lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;/// 创建 OBJ_ZSET 编码的结构&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    zobj = &lt;span class=&#34;built_in&#34;&gt;createZsetZiplistObject&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;....&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;来看一下  &lt;code&gt;createZsetObject()&lt;/code&gt;  方法的实现，就再清晰不过了。&lt;/p&gt;
&lt;figure class=&#34;highlight c++&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;/// 创建 Zset 对象。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;robj *&lt;span class=&#34;title&#34;&gt;createZsetObject&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(&lt;span class=&#34;keyword&#34;&gt;void&lt;/span&gt;)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    zset *zs = &lt;span class=&#34;built_in&#34;&gt;zmalloc&lt;/span&gt;(&lt;span class=&#34;built_in&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;sizeof&lt;/span&gt;&lt;/span&gt;(*zs));&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    robj *o;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    zs-&amp;gt;dict = &lt;span class=&#34;built_in&#34;&gt;dictCreate&lt;/span&gt;(&amp;amp;zsetDictType, &lt;span class=&#34;literal&#34;&gt;NULL&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    zs-&amp;gt;zsl = &lt;span class=&#34;built_in&#34;&gt;zslCreate&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    o = &lt;span class=&#34;built_in&#34;&gt;createObject&lt;/span&gt;(OBJ_ZSET, zs);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    o-&amp;gt;encoding = OBJ_ENCODING_SKIPLIST;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; o;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;到这里，就是我们和  &lt;code&gt;zset&lt;/code&gt;  这种数据类型的初次深入见面了。 我们先看下  &lt;code&gt;zset&lt;/code&gt;  这种结构体的定义。&lt;/p&gt;
&lt;figure class=&#34;highlight c++&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;/// 有序集合的结构定义&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;typedef&lt;/span&gt; &lt;span class=&#34;class&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;struct&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;zset&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;/// 字典，键为成员,值为score&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;/// 用于支持 O(1) 复杂度的按成员分值操作。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    dict *dict;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;/// 跳跃表,按分值排序成员&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;/// 用于支持平均复杂度为 O(logN)的按分值定位成员以及范围的操作。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    zskiplist *zsl;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125; zset;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;code&gt;dict&lt;/code&gt;  前面已经看过了，这里来看下 &lt;code&gt;zskiplist&lt;/code&gt; 。&lt;/p&gt;
&lt;h3 id=&#34;skiplist&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#skiplist&#34;&gt;#&lt;/a&gt;  &lt;code&gt;skiplist&lt;/code&gt;&lt;/h3&gt;
&lt;figure class=&#34;highlight c++&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;/// 跳跃表&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;typedef&lt;/span&gt; &lt;span class=&#34;class&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;struct&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;zskiplist&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;/// 表头，表尾&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;class&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;struct&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;zskiplistNode&lt;/span&gt; *&lt;span class=&#34;title&#34;&gt;header&lt;/span&gt;, *&lt;span class=&#34;title&#34;&gt;tail&lt;/span&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;/// 表中节点的数量&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;unsigned&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;long&lt;/span&gt; length;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;/// 表中层数最大的节点的层数&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; level;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125; zskiplist;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;typedef&lt;/span&gt; &lt;span class=&#34;class&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;struct&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;zskiplistNode&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    sds ele;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;/// 分数&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;double&lt;/span&gt; score;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;/// 后退的指针&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;class&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;struct&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;zskiplistNode&lt;/span&gt; *&lt;span class=&#34;title&#34;&gt;backward&lt;/span&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;/// 层&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;class&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;struct&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;zskiplistLevel&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;comment&#34;&gt;/// 前进指针&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;class&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;struct&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;zskiplistNode&lt;/span&gt; *&lt;span class=&#34;title&#34;&gt;forward&lt;/span&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;comment&#34;&gt;/// 跨度&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;unsigned&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;long&lt;/span&gt; span;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125; level[];&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125; zskiplistNode;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&#34;总结&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#总结&#34;&gt;#&lt;/a&gt; 总结&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;本章是一个新的常用数据类型， &lt;code&gt;ZSET&lt;/code&gt;  有序集合。底层的数据结构是使用的是  &lt;code&gt;skipList&lt;/code&gt;  和  &lt;code&gt;hashtable&lt;/code&gt;  . 关于 &lt;code&gt;Skiplist&lt;/code&gt;  的初步了解文章&lt;a href=&#34;#&#34;&gt;穿梭机&lt;/a&gt; 和  &lt;code&gt;Redis&lt;/code&gt;  中  &lt;code&gt;skiplist&lt;/code&gt;  的实现源码解读&lt;a href=&#34;&#34;&gt;穿梭机&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;然后简单介绍了  &lt;code&gt;Redis ZSET&lt;/code&gt;  数据类型的基础使用场景。关键字有  &lt;code&gt;有序&lt;/code&gt; ， &lt;code&gt;排名&lt;/code&gt; ， &lt;code&gt;权重&lt;/code&gt; 等.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ZSET&lt;/code&gt;  的  &lt;code&gt;20&lt;/code&gt;  个常有命令。 后面我会针对这  &lt;code&gt;20&lt;/code&gt;  个命令的实现进行简单的分享.&lt;/li&gt;
&lt;li&gt;然后简单的看了一下 &lt;code&gt;Redis&lt;/code&gt;  中的数据结构的实现，还是那句话， &lt;code&gt;Redis&lt;/code&gt;  的数据结构是动态编码的，  &lt;code&gt;ZSET&lt;/code&gt;  是有 &lt;code&gt;hashtable&lt;/code&gt;  和  &lt;code&gt;skiplist&lt;/code&gt;  实现的。 skiplist 是一个非常高效的数据结构，增删查的效率都是  &lt;code&gt;O(logN)&lt;/code&gt; . 实现原理可以参考这篇文章&lt;a href=&#34;#&#34;&gt;直通车&lt;/a&gt;，里面有几种流行的语言的实现，可以针对自己擅长的语言进行查看。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;最后&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#最后&#34;&gt;#&lt;/a&gt; 最后&lt;/h2&gt;
&lt;p&gt;期望与你一起遇见更好的自己&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/images/qrcode.jpg&#34; alt=&#34;期望与你一起遇见更好的自己&#34;&gt;&lt;/p&gt;
</content>
        <category term="Redis" />
        <updated>2021-08-01T10:38:55.000Z</updated>
    </entry>
    <entry>
        <id>https://fangjiaxiaobai.github.io/2021/08/01/Redis%E7%B3%BB%E5%88%97/B-4-Redis%E7%9A%84%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B%E4%B9%8B%E9%9B%86%E5%90%88set/</id>
        <title>Redis数据结构之集合 Set</title>
        <link rel="alternate" href="https://fangjiaxiaobai.github.io/2021/08/01/Redis%E7%B3%BB%E5%88%97/B-4-Redis%E7%9A%84%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B%E4%B9%8B%E9%9B%86%E5%90%88set/"/>
        <content type="html">&lt;h2 id=&#34;书接上回&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#书接上回&#34;&gt;#&lt;/a&gt; 书接上回&lt;/h2&gt;
&lt;p&gt;前一篇文章，我们学习的是 &lt;a href=&#34;/2021/08/01/Redis%E7%B3%BB%E5%88%97/B-3-Redis%E7%9A%84%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B%E4%B9%8Bhash/&#34;&gt;Redis 的数据结构之 hash&lt;/a&gt;， 学习了其基本的操作和使用内部数据结构是 &lt;code&gt;hashtable&lt;/code&gt;  和 &lt;code&gt;ziplist&lt;/code&gt; ，其中 &lt;code&gt;Redis&lt;/code&gt;  中的 &lt;code&gt;hashtable&lt;/code&gt;  是用  &lt;code&gt;dict&lt;/code&gt;  表示的。如果不记得了其内部构成，就再看看看着&lt;a href=&#34;/2021/08/01/Redis%E7%B3%BB%E5%88%97/B-3-Redis%E7%9A%84%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B%E4%B9%8Bhash/&#34;&gt;上篇文章&lt;/a&gt;吧。现在我们继续学习下一个数据类型  &lt;code&gt;set&lt;/code&gt; 。&lt;/p&gt;
&lt;h2 id=&#34;set简介&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#set简介&#34;&gt;#&lt;/a&gt;  &lt;code&gt;set&lt;/code&gt;  简介&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;Redis&lt;/code&gt;  的  &lt;code&gt;set&lt;/code&gt;  数据类型表示 一堆不重复值的集合。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Redis&lt;/code&gt;  的 &lt;code&gt;set&lt;/code&gt;  数据类型有两种编码方式.  &lt;code&gt;OBJ_ENCODING_INTSET&lt;/code&gt;  和  &lt;code&gt;OBJ_ENCODING_HT&lt;/code&gt; .&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;OBJ_ENCODING_HT&lt;/code&gt;  这种编码方式在上一篇文章 &lt;a href=&#34;/2021/08/01/Redis%E7%B3%BB%E5%88%97/B-3-Redis%E7%9A%84%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B%E4%B9%8Bhash/&#34;&gt;07-Redis 的数据类型之 hash&lt;/a&gt; 中已经简单的介绍过了。其实现的数据结构为  &lt;code&gt;dict&lt;/code&gt; 。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;OBJ_ENCODING_INTSET&lt;/code&gt; , 这种编码方式是我们要新学习的编码方式。 &lt;a href=&#34;#intset&#34;&gt;电梯直达&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;如果你看到这句话，那就说明你是一个特别认真的人。哈哈哈，我们还是先遵循惯例。先学习 &lt;code&gt;set&lt;/code&gt;  类型相关的命令。&lt;/p&gt;
&lt;h2 id=&#34;set类型的应用场景&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#set类型的应用场景&#34;&gt;#&lt;/a&gt;  &lt;code&gt;set&lt;/code&gt;  类型的应用场景&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;社交系统中存储关注信息，点赞信息，利用交并差运算，计算共同好友等业务中。比如 &lt;code&gt;qq&lt;/code&gt;  的好友推荐逻辑，就可以使用差集运算。&lt;/li&gt;
&lt;li&gt;需要去重的业务逻辑中。某一时间端内系统的增长人数。&lt;/li&gt;
&lt;li&gt;统计访问网站的独立 &lt;code&gt;IP&lt;/code&gt; 。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;set的基本命令&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#set的基本命令&#34;&gt;#&lt;/a&gt;  &lt;code&gt;set&lt;/code&gt;  的基本命令&lt;/h2&gt;
&lt;h3 id=&#34;sadd&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#sadd&#34;&gt;#&lt;/a&gt;  &lt;code&gt;sadd&lt;/code&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;语法&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;SADD key member [member ...]&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;解释&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;set add&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;将一个或多个  &lt;code&gt;member&lt;/code&gt;  元素加入到集合  &lt;code&gt;key&lt;/code&gt;  当中，已经存在于集合的  &lt;code&gt;member&lt;/code&gt;  元素将被忽略。&lt;/p&gt;
&lt;p&gt;假如  &lt;code&gt;key&lt;/code&gt;  不存在，则创建一个只包含  &lt;code&gt;member&lt;/code&gt;  元素作成员的集合。&lt;/p&gt;
&lt;p&gt;当  &lt;code&gt;key&lt;/code&gt;  不是集合类型时，返回一个错误。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;演示&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight sh&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; sadd k52 mem1 mem2 &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(&lt;span class=&#34;built_in&#34;&gt;integer&lt;/span&gt;) 2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; sadd k52 mem1 &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(&lt;span class=&#34;built_in&#34;&gt;integer&lt;/span&gt;) 0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; sadd k52 mem1 mem3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(&lt;span class=&#34;built_in&#34;&gt;integer&lt;/span&gt;) 1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;smembers&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#smembers&#34;&gt;#&lt;/a&gt;  &lt;code&gt;smembers&lt;/code&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;语法&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;SMEMBERS key&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;解释&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;set members&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;返回集合  &lt;code&gt;key&lt;/code&gt;  中的所有成员。&lt;/p&gt;
&lt;p&gt;不存在的  &lt;code&gt;key&lt;/code&gt;  被视为空集合&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;演示&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight sh&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 查询元素， 注意保存是无序的.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; SADD k53 m1 m2 m3 m4 m5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(&lt;span class=&#34;built_in&#34;&gt;integer&lt;/span&gt;) 5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; SMEMBERS k53&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1) &lt;span class=&#34;string&#34;&gt;&amp;quot;m4&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2) &lt;span class=&#34;string&#34;&gt;&amp;quot;m3&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3) &lt;span class=&#34;string&#34;&gt;&amp;quot;m2&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4) &lt;span class=&#34;string&#34;&gt;&amp;quot;m1&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5) &lt;span class=&#34;string&#34;&gt;&amp;quot;m5&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;sismember&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#sismember&#34;&gt;#&lt;/a&gt;  &lt;code&gt;sismember&lt;/code&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;语法&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;SISMEMBER key member&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;解释&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;set is members&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;判断  &lt;code&gt;member&lt;/code&gt;  元素是否集合  &lt;code&gt;key&lt;/code&gt;  的成员。&lt;/p&gt;
&lt;p&gt;如果  &lt;code&gt;member&lt;/code&gt;  元素是集合的成员，返回  &lt;code&gt;1&lt;/code&gt;  。 如果  &lt;code&gt;member&lt;/code&gt;  元素不是集合的成员，或  &lt;code&gt;key&lt;/code&gt;  不存在，返回  &lt;code&gt;0&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;演示&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight sh&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; SADD k54 m1 m2 m3 m4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(&lt;span class=&#34;built_in&#34;&gt;integer&lt;/span&gt;) 4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; SISMEMBER k54 m2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(&lt;span class=&#34;built_in&#34;&gt;integer&lt;/span&gt;) 1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; SISMEMBER k54 m5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(&lt;span class=&#34;built_in&#34;&gt;integer&lt;/span&gt;) 0&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;spop&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#spop&#34;&gt;#&lt;/a&gt;  &lt;code&gt;spop&lt;/code&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;语法&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;SPOP key [count]&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;解释&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;set pop&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;移除并返回集合中的 &lt;b&gt;随机一个&lt;/b&gt; 元素。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;演示&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight sh&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; SADD k55 m1 m2 m3 m4 m5 m6 m7 m8 m9 m10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(&lt;span class=&#34;built_in&#34;&gt;integer&lt;/span&gt;) 10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 随机移除一个元素&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; spop k55&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;&amp;quot;m9&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; spop k55&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;&amp;quot;m2&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; spop k55&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;&amp;quot;m3&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 随机移除3个元素&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; spop k55 3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1) &lt;span class=&#34;string&#34;&gt;&amp;quot;m5&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2) &lt;span class=&#34;string&#34;&gt;&amp;quot;m4&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3) &lt;span class=&#34;string&#34;&gt;&amp;quot;m10&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 查看所有元素&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; SMEMBERS k55&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1) &lt;span class=&#34;string&#34;&gt;&amp;quot;m1&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2) &lt;span class=&#34;string&#34;&gt;&amp;quot;m7&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3) &lt;span class=&#34;string&#34;&gt;&amp;quot;m8&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4) &lt;span class=&#34;string&#34;&gt;&amp;quot;m6&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;srandmemeber&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#srandmemeber&#34;&gt;#&lt;/a&gt;  &lt;code&gt;srandmemeber&lt;/code&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;语法&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;SRANDMEMBER key [count]&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;解释&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;set rand member&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;返回集合中的 随机  &lt;code&gt;count&lt;/code&gt;  个元素 (不会删除元素)&lt;/p&gt;
&lt;p&gt;如果  &lt;code&gt;count&lt;/code&gt;  为正数，且小于集合基数，那么命令返回一个包含  &lt;code&gt;count&lt;/code&gt;  个元素的数组，数组中的元素各不相同。如果  &lt;code&gt;count&lt;/code&gt;  大于等于集合基数，那么返回整个集合。&lt;/p&gt;
&lt;p&gt;如果  &lt;code&gt;count&lt;/code&gt;  为负数，那么命令返回一个数组，数组中的元素可能会重复出现多次，而数组的长度为  &lt;code&gt;count&lt;/code&gt;  的绝对值。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;演示&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight sh&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;50&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; SADD k56 m1 m2 m3 m4 m5 m6 m7 m8 m9 m10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(&lt;span class=&#34;built_in&#34;&gt;integer&lt;/span&gt;) 10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 随机返回一个元素&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; SRANDMEMBER k56 &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;&amp;quot;m1&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; SRANDMEMBER k56 &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;&amp;quot;m9&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; SRANDMEMBER k56 &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;&amp;quot;m5&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# count是正数，小于集合的元素数,返回count个元素，无重复元素&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; SRANDMEMBER k56 5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1) &lt;span class=&#34;string&#34;&gt;&amp;quot;m7&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2) &lt;span class=&#34;string&#34;&gt;&amp;quot;m1&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3) &lt;span class=&#34;string&#34;&gt;&amp;quot;m5&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4) &lt;span class=&#34;string&#34;&gt;&amp;quot;m6&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5) &lt;span class=&#34;string&#34;&gt;&amp;quot;m3&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# count是正数，大于集合的元素数,返回整个集合&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; SRANDMEMBER k56 20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; 1) &lt;span class=&#34;string&#34;&gt;&amp;quot;m5&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; 2) &lt;span class=&#34;string&#34;&gt;&amp;quot;m6&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; 3) &lt;span class=&#34;string&#34;&gt;&amp;quot;m4&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; 4) &lt;span class=&#34;string&#34;&gt;&amp;quot;m8&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; 5) &lt;span class=&#34;string&#34;&gt;&amp;quot;m7&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; 6) &lt;span class=&#34;string&#34;&gt;&amp;quot;m1&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; 7) &lt;span class=&#34;string&#34;&gt;&amp;quot;m10&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; 8) &lt;span class=&#34;string&#34;&gt;&amp;quot;m3&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; 9) &lt;span class=&#34;string&#34;&gt;&amp;quot;m2&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10) &lt;span class=&#34;string&#34;&gt;&amp;quot;m9&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# count为负数， 返回20个集合中的元素，元素会重复&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; SRANDMEMBER k56 -20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; 1) &lt;span class=&#34;string&#34;&gt;&amp;quot;m6&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; 2) &lt;span class=&#34;string&#34;&gt;&amp;quot;m6&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; 3) &lt;span class=&#34;string&#34;&gt;&amp;quot;m9&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; 4) &lt;span class=&#34;string&#34;&gt;&amp;quot;m7&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; 5) &lt;span class=&#34;string&#34;&gt;&amp;quot;m6&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; 6) &lt;span class=&#34;string&#34;&gt;&amp;quot;m5&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; 7) &lt;span class=&#34;string&#34;&gt;&amp;quot;m6&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; 8) &lt;span class=&#34;string&#34;&gt;&amp;quot;m9&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; 9) &lt;span class=&#34;string&#34;&gt;&amp;quot;m1&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10) &lt;span class=&#34;string&#34;&gt;&amp;quot;m6&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11) &lt;span class=&#34;string&#34;&gt;&amp;quot;m1&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12) &lt;span class=&#34;string&#34;&gt;&amp;quot;m9&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13) &lt;span class=&#34;string&#34;&gt;&amp;quot;m2&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14) &lt;span class=&#34;string&#34;&gt;&amp;quot;m1&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15) &lt;span class=&#34;string&#34;&gt;&amp;quot;m2&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16) &lt;span class=&#34;string&#34;&gt;&amp;quot;m5&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17) &lt;span class=&#34;string&#34;&gt;&amp;quot;m9&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18) &lt;span class=&#34;string&#34;&gt;&amp;quot;m2&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19) &lt;span class=&#34;string&#34;&gt;&amp;quot;m4&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20) &lt;span class=&#34;string&#34;&gt;&amp;quot;m6&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;srem&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#srem&#34;&gt;#&lt;/a&gt;  &lt;code&gt;srem&lt;/code&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;语法&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;SREM key member [member ...]&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;解释&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;set remove&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;移除集合  &lt;code&gt;key&lt;/code&gt;  中的一个或多个  &lt;code&gt;member&lt;/code&gt;  元素，不存在的  &lt;code&gt;member&lt;/code&gt;  元素会被忽略。&lt;/p&gt;
&lt;p&gt;当  &lt;code&gt;key&lt;/code&gt;  不是集合类型，返回一个错误。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;演示&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight sh&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; SADD k57 m1 m2 m3 m4 m5 m6 m7 m8 m9 m10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(&lt;span class=&#34;built_in&#34;&gt;integer&lt;/span&gt;) 10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; SREM k57 m1 m2 m3 &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(&lt;span class=&#34;built_in&#34;&gt;integer&lt;/span&gt;) 3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; SMEMBERS k57&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1) &lt;span class=&#34;string&#34;&gt;&amp;quot;m7&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2) &lt;span class=&#34;string&#34;&gt;&amp;quot;m8&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3) &lt;span class=&#34;string&#34;&gt;&amp;quot;m5&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4) &lt;span class=&#34;string&#34;&gt;&amp;quot;m6&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5) &lt;span class=&#34;string&#34;&gt;&amp;quot;m4&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6) &lt;span class=&#34;string&#34;&gt;&amp;quot;m10&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7) &lt;span class=&#34;string&#34;&gt;&amp;quot;m9&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; SREM k57 m11 m12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(&lt;span class=&#34;built_in&#34;&gt;integer&lt;/span&gt;) 0&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;smove&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#smove&#34;&gt;#&lt;/a&gt;  &lt;code&gt;smove&lt;/code&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;语法&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;SMOVE source destination member&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;解释&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;set move&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;将  &lt;code&gt;member&lt;/code&gt;  元素从  &lt;code&gt;source&lt;/code&gt;  集合移动到  &lt;code&gt;destination&lt;/code&gt;  集合。&lt;/p&gt;
&lt;p&gt;&lt;b&gt; &lt;code&gt;SMOVE&lt;/code&gt;  是原子性操作&lt;/b&gt;。&lt;/p&gt;
&lt;p&gt;如果  &lt;code&gt;source&lt;/code&gt;  集合不存在或不包含指定的  &lt;code&gt;member&lt;/code&gt;  元素，则  &lt;code&gt;SMOVE&lt;/code&gt;  命令不执行任何操作，仅返回  &lt;code&gt;0&lt;/code&gt;  。否则，  &lt;code&gt;member&lt;/code&gt;  元素从  &lt;code&gt;source&lt;/code&gt;  集合中被移除，并添加到  &lt;code&gt;destination&lt;/code&gt;  集合中去。&lt;/p&gt;
&lt;p&gt;当  &lt;code&gt;destination&lt;/code&gt;  集合已经包含  &lt;code&gt;member&lt;/code&gt;  元素时，  &lt;code&gt;SMOVE&lt;/code&gt;  命令只是简单地将  &lt;code&gt;source&lt;/code&gt;  集合中的  &lt;code&gt;member&lt;/code&gt;  元素删除。&lt;/p&gt;
&lt;p&gt;当  &lt;code&gt;source&lt;/code&gt;  或  &lt;code&gt;destination&lt;/code&gt;  不是集合类型时，返回一个错误。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;演示&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight sh&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; SADD k58 m1 m2 m3 m4 m5 m6 m7 m8 m9 m10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(&lt;span class=&#34;built_in&#34;&gt;integer&lt;/span&gt;) 10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 移动两个元素到k58_dis&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; SMOVE k58 k58_dis m1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(&lt;span class=&#34;built_in&#34;&gt;integer&lt;/span&gt;) 1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; SMOVE k58 k58_dis m2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(&lt;span class=&#34;built_in&#34;&gt;integer&lt;/span&gt;) 1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; SMOVE k58 k58_dis m1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(&lt;span class=&#34;built_in&#34;&gt;integer&lt;/span&gt;) 0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# k58中的m1，m2 已被移除。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; SMEMBERS k58&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1) &lt;span class=&#34;string&#34;&gt;&amp;quot;m7&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2) &lt;span class=&#34;string&#34;&gt;&amp;quot;m8&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3) &lt;span class=&#34;string&#34;&gt;&amp;quot;m5&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4) &lt;span class=&#34;string&#34;&gt;&amp;quot;m6&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5) &lt;span class=&#34;string&#34;&gt;&amp;quot;m4&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6) &lt;span class=&#34;string&#34;&gt;&amp;quot;m10&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7) &lt;span class=&#34;string&#34;&gt;&amp;quot;m3&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8) &lt;span class=&#34;string&#34;&gt;&amp;quot;m9&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# k58_dis中的m1,m2&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; SMEMBERS k58_dis&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1) &lt;span class=&#34;string&#34;&gt;&amp;quot;m2&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2) &lt;span class=&#34;string&#34;&gt;&amp;quot;m1&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;scard&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#scard&#34;&gt;#&lt;/a&gt;  &lt;code&gt;scard&lt;/code&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;语法&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;SCARD key&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;解释&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;返回集合  &lt;code&gt;key&lt;/code&gt;  的基数 (集合中元素的数量)。&lt;br&gt;
集合的基数。 当  &lt;code&gt;key&lt;/code&gt;  不存在时，返回  &lt;code&gt;0&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;演示&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight sh&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; SADD k59 m1 m2 m3 m4 m5 m6 m7 m8 m9 m10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(&lt;span class=&#34;built_in&#34;&gt;integer&lt;/span&gt;) 10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 获取元素个数&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; SCARD k59&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(&lt;span class=&#34;built_in&#34;&gt;integer&lt;/span&gt;) 10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;sinter&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#sinter&#34;&gt;#&lt;/a&gt;  &lt;code&gt;sinter&lt;/code&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;语法&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt; SINTER key [key ...]&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;解释&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;set intersection&lt;/code&gt;  :  &lt;code&gt;set&lt;/code&gt;  的交集&lt;/p&gt;
&lt;p&gt;返回一个集合的全部成员，该集合是所有给定集合的交集。&lt;/p&gt;
&lt;p&gt;不存在的  &lt;code&gt;key&lt;/code&gt;  被视为空集。&lt;/p&gt;
&lt;p&gt;当给定集合当中有一个空集时，结果也为空集 (根据集合运算定律)。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;演示&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight sh&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; SADD k60_1 m1 m2 m3 m4 m5 &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(&lt;span class=&#34;built_in&#34;&gt;integer&lt;/span&gt;) 5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; SADD k60_2 m2 m3 m4 m5 m6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(&lt;span class=&#34;built_in&#34;&gt;integer&lt;/span&gt;) 5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; SADD k60_3 m4 m5 m6 m7 m8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(&lt;span class=&#34;built_in&#34;&gt;integer&lt;/span&gt;) 5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 指定了一个key，返回集合的所有元素&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; SINTER k60_1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1) &lt;span class=&#34;string&#34;&gt;&amp;quot;m4&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2) &lt;span class=&#34;string&#34;&gt;&amp;quot;m3&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3) &lt;span class=&#34;string&#34;&gt;&amp;quot;m2&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4) &lt;span class=&#34;string&#34;&gt;&amp;quot;m1&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5) &lt;span class=&#34;string&#34;&gt;&amp;quot;m5&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 多个key的时候，返回集合的交集。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; SINTER k60_1 k60_2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1) &lt;span class=&#34;string&#34;&gt;&amp;quot;m4&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2) &lt;span class=&#34;string&#34;&gt;&amp;quot;m3&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3) &lt;span class=&#34;string&#34;&gt;&amp;quot;m2&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4) &lt;span class=&#34;string&#34;&gt;&amp;quot;m5&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 多个key的时候，返回集合的交集。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; SINTER k60_1 k60_2 k60_3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1) &lt;span class=&#34;string&#34;&gt;&amp;quot;m4&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2) &lt;span class=&#34;string&#34;&gt;&amp;quot;m5&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# k60_4不存在，为空集&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; SINTER k60_1 k60_4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(empty list or &lt;span class=&#34;built_in&#34;&gt;set&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;sinterstore&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#sinterstore&#34;&gt;#&lt;/a&gt;  &lt;code&gt;sinterstore&lt;/code&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;语法&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;SINTERSTORE destination key [key ...]&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;解释&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;set intersection and store&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;这个命令类似于 SINTER key [key …] 命令，返回集合的交集。但它将结果保存到 destination 集合，而不是简单地返回结果集。&lt;/p&gt;
&lt;p&gt;如果 destination 集合已经存在，则将其覆盖。&lt;/p&gt;
&lt;p&gt;destination 可以是 key 本身。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;演示&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight sh&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; SADD k61_1 m1 m2 m3 m4 m5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(&lt;span class=&#34;built_in&#34;&gt;integer&lt;/span&gt;) 5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; SADD k61_2 m4 m5 m6 m7 m8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(&lt;span class=&#34;built_in&#34;&gt;integer&lt;/span&gt;) 5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 将k61_1 和 k61_2 集合的交集存储到k61_dis中&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; SINTERSTORE k61_dis k61_1 k61_2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(&lt;span class=&#34;built_in&#34;&gt;integer&lt;/span&gt;) 2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 查看 k61_dis&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; SMEMBERS k61_dis&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1) &lt;span class=&#34;string&#34;&gt;&amp;quot;m4&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2) &lt;span class=&#34;string&#34;&gt;&amp;quot;m5&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# k61_1 和 k61_2 没有变化&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; SMEMBERS k61_1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1) &lt;span class=&#34;string&#34;&gt;&amp;quot;m4&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2) &lt;span class=&#34;string&#34;&gt;&amp;quot;m3&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3) &lt;span class=&#34;string&#34;&gt;&amp;quot;m2&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4) &lt;span class=&#34;string&#34;&gt;&amp;quot;m1&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5) &lt;span class=&#34;string&#34;&gt;&amp;quot;m5&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; SMEMBERS k61_2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1) &lt;span class=&#34;string&#34;&gt;&amp;quot;m7&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2) &lt;span class=&#34;string&#34;&gt;&amp;quot;m8&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3) &lt;span class=&#34;string&#34;&gt;&amp;quot;m5&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4) &lt;span class=&#34;string&#34;&gt;&amp;quot;m6&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5) &lt;span class=&#34;string&#34;&gt;&amp;quot;m4&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 如果目标集合(k61_dis)存在，元素会被覆盖掉。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; SADD k61_3 m1 m2 m3 &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(&lt;span class=&#34;built_in&#34;&gt;integer&lt;/span&gt;) 3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; SINTERSTORE k61_dis k61_1 k61_3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(&lt;span class=&#34;built_in&#34;&gt;integer&lt;/span&gt;) 3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; SMEMBERS k61_dis&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1) &lt;span class=&#34;string&#34;&gt;&amp;quot;m1&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2) &lt;span class=&#34;string&#34;&gt;&amp;quot;m2&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3) &lt;span class=&#34;string&#34;&gt;&amp;quot;m3&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;sunion&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#sunion&#34;&gt;#&lt;/a&gt;  &lt;code&gt;sunion&lt;/code&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;语法&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;SUNION key [key ...]&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;解释&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;set union&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;返回一个集合的全部成员，如果是多个集合 (key), 返回所有给定集合的并集。&lt;/p&gt;
&lt;p&gt;不存在的 key 被视为空集。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;演示&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight sh&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; SADD k62_1 m1 m2 m3 &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(&lt;span class=&#34;built_in&#34;&gt;integer&lt;/span&gt;) 3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; SADD k62_2 m2 m3 m4 m5 m6 &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(&lt;span class=&#34;built_in&#34;&gt;integer&lt;/span&gt;) 5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 一个key，返回整个集合。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; SUNION k62_1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1) &lt;span class=&#34;string&#34;&gt;&amp;quot;m1&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2) &lt;span class=&#34;string&#34;&gt;&amp;quot;m2&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3) &lt;span class=&#34;string&#34;&gt;&amp;quot;m3&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 多个key，返回并集&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; SUNION k62_1 k62_2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1) &lt;span class=&#34;string&#34;&gt;&amp;quot;m3&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2) &lt;span class=&#34;string&#34;&gt;&amp;quot;m1&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3) &lt;span class=&#34;string&#34;&gt;&amp;quot;m5&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4) &lt;span class=&#34;string&#34;&gt;&amp;quot;m6&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5) &lt;span class=&#34;string&#34;&gt;&amp;quot;m2&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6) &lt;span class=&#34;string&#34;&gt;&amp;quot;m4&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;sunionstore&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#sunionstore&#34;&gt;#&lt;/a&gt;  &lt;code&gt;sunionstore&lt;/code&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;语法&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;SUNIONSTORE destination key [key ...]&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;解释&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;set union and store&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;同 SINTERSTORE , 只不过存储的是并集的结果。 将多个集合的并集存储到 distination 中。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;演示&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight sh&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; SADD k63_1 m1 m2 m3 &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(&lt;span class=&#34;built_in&#34;&gt;integer&lt;/span&gt;) 3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; SADD k63_2 m2 m3 m4 m5 m6 &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(&lt;span class=&#34;built_in&#34;&gt;integer&lt;/span&gt;) 5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; SUNIONSTORE k63_dis k62_1 k62_2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(&lt;span class=&#34;built_in&#34;&gt;integer&lt;/span&gt;) 6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; SMEMBERS k63_dis&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1) &lt;span class=&#34;string&#34;&gt;&amp;quot;m3&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2) &lt;span class=&#34;string&#34;&gt;&amp;quot;m1&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3) &lt;span class=&#34;string&#34;&gt;&amp;quot;m5&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4) &lt;span class=&#34;string&#34;&gt;&amp;quot;m6&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5) &lt;span class=&#34;string&#34;&gt;&amp;quot;m2&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6) &lt;span class=&#34;string&#34;&gt;&amp;quot;m4&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;sdiff&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#sdiff&#34;&gt;#&lt;/a&gt;  &lt;code&gt;sdiff&lt;/code&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;语法&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;SDIFF key [key ...]&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;解释&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;set difference&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;如果指定一个集合， &lt;code&gt;key&lt;/code&gt; ，返回一个集合的全部成员，&lt;/p&gt;
&lt;p&gt;如果指定了多个集合 ( &lt;code&gt;key&lt;/code&gt; ), 则返回 所有给定集合之间的差集。&lt;/p&gt;
&lt;p&gt;不存在的  &lt;code&gt;key&lt;/code&gt;  被视为空集。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;演示&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight sh&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; SADD k64_1 m1 m2 m3 &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(&lt;span class=&#34;built_in&#34;&gt;integer&lt;/span&gt;) 3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; SADD k64_2 m2 m3 m4 m5 m6 &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(&lt;span class=&#34;built_in&#34;&gt;integer&lt;/span&gt;) 5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 返回 k64_1 - k64_2&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; SDIFF k64_1 k64_2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1) &lt;span class=&#34;string&#34;&gt;&amp;quot;m1&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 返回 k64_2 - k64_1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; SDIFF k64_2 k64_1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1) &lt;span class=&#34;string&#34;&gt;&amp;quot;m6&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2) &lt;span class=&#34;string&#34;&gt;&amp;quot;m4&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3) &lt;span class=&#34;string&#34;&gt;&amp;quot;m5&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;sdiffstore&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#sdiffstore&#34;&gt;#&lt;/a&gt;  &lt;code&gt;sdiffstore&lt;/code&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;语法&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;SDIFFSTORE destination key [key ...]&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;解释&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;将集合的差集存储到  &lt;code&gt;destination&lt;/code&gt;  集合中.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;演示&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight sh&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; SADD k65_1 m1 m2 m3 &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(&lt;span class=&#34;built_in&#34;&gt;integer&lt;/span&gt;) 3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; SADD k65_2 m2 m3 m4 m5 m6 &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(&lt;span class=&#34;built_in&#34;&gt;integer&lt;/span&gt;) 5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; SDIFFSTORE k65_dis_1 k65_1 k65_2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(&lt;span class=&#34;built_in&#34;&gt;integer&lt;/span&gt;) 1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; SMEMBERS k65_dis_1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1) &lt;span class=&#34;string&#34;&gt;&amp;quot;m1&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; SDIFFSTORE k65_dis_2 k65_2 k65_1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(&lt;span class=&#34;built_in&#34;&gt;integer&lt;/span&gt;) 3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; SMEMBERS k65_dis_2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1) &lt;span class=&#34;string&#34;&gt;&amp;quot;m6&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2) &lt;span class=&#34;string&#34;&gt;&amp;quot;m4&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3) &lt;span class=&#34;string&#34;&gt;&amp;quot;m5&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;sscan&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#sscan&#34;&gt;#&lt;/a&gt;  &lt;code&gt;sscan&lt;/code&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;语法&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;SSCAN key cursor [MATCH pattern] [COUNT count]&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;解释&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;set scan&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;这是一个查询命令。 同  &lt;code&gt;SCAN&lt;/code&gt;  命令。可以参考这篇文章 &lt;a href=&#34;./010-%E5%85%B6%E4%BB%96%E5%91%BD%E4%BB%A4.md&#34;&gt;010 - 其他命令&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;SCAN&lt;/code&gt;  命令是一个基于游标的迭代器（ &lt;code&gt;cursor based iterator&lt;/code&gt; ）：  &lt;code&gt;SCAN&lt;/code&gt;  命令每次被调用之后， 都会向用户返回一个新的游标， 用户在下次迭代时需要使用这个新游标作为  &lt;code&gt;SCAN&lt;/code&gt;  命令的游标参数， 以此来延续之前的迭代过程。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;演示&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight sh&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; SSCAN k66 1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1) &lt;span class=&#34;string&#34;&gt;&amp;quot;0&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2) 1) &lt;span class=&#34;string&#34;&gt;&amp;quot;m1&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   2) &lt;span class=&#34;string&#34;&gt;&amp;quot;m3&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   3) &lt;span class=&#34;string&#34;&gt;&amp;quot;m2&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   4) &lt;span class=&#34;string&#34;&gt;&amp;quot;m4&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   5) &lt;span class=&#34;string&#34;&gt;&amp;quot;m5&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; SSCAN k66 0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1) &lt;span class=&#34;string&#34;&gt;&amp;quot;0&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2) 1) &lt;span class=&#34;string&#34;&gt;&amp;quot;m6&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   2) &lt;span class=&#34;string&#34;&gt;&amp;quot;m1&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   3) &lt;span class=&#34;string&#34;&gt;&amp;quot;m3&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   4) &lt;span class=&#34;string&#34;&gt;&amp;quot;m2&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   5) &lt;span class=&#34;string&#34;&gt;&amp;quot;m4&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   6) &lt;span class=&#34;string&#34;&gt;&amp;quot;m5&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; SSCAN k66 1 MATCH m2 Count 10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1) &lt;span class=&#34;string&#34;&gt;&amp;quot;0&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2) 1) &lt;span class=&#34;string&#34;&gt;&amp;quot;m2&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; &lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&#34;set的内部结构&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#set的内部结构&#34;&gt;#&lt;/a&gt;  &lt;code&gt;set&lt;/code&gt;  的内部结构&lt;/h2&gt;
&lt;p&gt;在 t_set.c 这个文件中。&lt;/p&gt;
&lt;figure class=&#34;highlight c++&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;robj *&lt;span class=&#34;title&#34;&gt;setTypeCreate&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(sds value)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (&lt;span class=&#34;built_in&#34;&gt;isSdsRepresentableAsLongLong&lt;/span&gt;(value,&lt;span class=&#34;literal&#34;&gt;NULL&lt;/span&gt;) == C_OK)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;createIntsetObject&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;createSetObject&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;表明， &lt;code&gt;set&lt;/code&gt;  数据类型是由两种数据结构来实现的。&lt;/p&gt;
&lt;p&gt;而在  &lt;code&gt;createSetObject()&lt;/code&gt; ，指明了其编码方式是  &lt;code&gt;OBJ_ENCODING_HT&lt;/code&gt; , 即哈希表的方式，也就是使用 dict 这种数据结构来存储的。&lt;/p&gt;
&lt;figure class=&#34;highlight c++&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;robj *&lt;span class=&#34;title&#34;&gt;createSetObject&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(&lt;span class=&#34;keyword&#34;&gt;void&lt;/span&gt;)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    dict *d = &lt;span class=&#34;built_in&#34;&gt;dictCreate&lt;/span&gt;(&amp;amp;setDictType, &lt;span class=&#34;literal&#34;&gt;NULL&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    robj *o = &lt;span class=&#34;built_in&#34;&gt;createObject&lt;/span&gt;(OBJ_SET, d);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    o-&amp;gt;encoding = OBJ_ENCODING_HT;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; o;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;hashtable&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#hashtable&#34;&gt;#&lt;/a&gt;  &lt;code&gt;hashtable&lt;/code&gt;&lt;/h3&gt;
&lt;p&gt;这里就不赘述了。直接上&lt;a href=&#34;/2021/08/01/Redis%E7%B3%BB%E5%88%97/B-3-Redis%E7%9A%84%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B%E4%B9%8Bhash/&#34;&gt;穿梭机&lt;/a&gt;吧。&lt;/p&gt;
&lt;h3 id=&#34;intset&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#intset&#34;&gt;#&lt;/a&gt; intset&lt;/h3&gt;
&lt;p&gt;在 &lt;code&gt;createIntsetObject()&lt;/code&gt;  中指明了使用的编码方式是  &lt;code&gt;OBJ_ENCODING_INTSET&lt;/code&gt; . 如下。&lt;/p&gt;
&lt;figure class=&#34;highlight c++&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;robj *&lt;span class=&#34;title&#34;&gt;createIntsetObject&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(&lt;span class=&#34;keyword&#34;&gt;void&lt;/span&gt;)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    intset *is = &lt;span class=&#34;built_in&#34;&gt;intsetNew&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    robj *o = &lt;span class=&#34;built_in&#34;&gt;createObject&lt;/span&gt;(OBJ_SET, is);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    o-&amp;gt;encoding = OBJ_ENCODING_INTSET;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; o;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;我们来看看  &lt;code&gt;intset&lt;/code&gt;  到底什么何方利器.&lt;/p&gt;
&lt;p&gt;我直接全项目搜索:  &lt;code&gt;intset&lt;/code&gt;  ，就找到了  &lt;code&gt;intset.h&lt;/code&gt; .&lt;/p&gt;
&lt;figure class=&#34;highlight c++&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;typedef&lt;/span&gt; &lt;span class=&#34;class&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;struct&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;intset&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;uint32_t&lt;/span&gt; encoding; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;uint32_t&lt;/span&gt; length;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;int8_t&lt;/span&gt; contents[];&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125; intset;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&#34;字段解释&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#字段解释&#34;&gt;#&lt;/a&gt; 字段解释:&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;encoding&lt;/code&gt; : 数据编码，表示 &lt;code&gt;intset&lt;/code&gt;  中的每个数据元素用几个字节来存储。它有三种可能的取值： &lt;code&gt;INTSET_ENC_INT16&lt;/code&gt;  表示每个元素用 &lt;code&gt;2&lt;/code&gt;  个字节存储， &lt;code&gt;INTSET_ENC_INT32&lt;/code&gt;  表示每个元素用 &lt;code&gt;4&lt;/code&gt;  个字节存储， &lt;code&gt;INTSET_ENC_INT64&lt;/code&gt;  表示每个元素用 &lt;code&gt;8&lt;/code&gt;  个字节存储。因此， &lt;code&gt;intset&lt;/code&gt;  中存储的整数最多只能占用 &lt;code&gt;64bit&lt;/code&gt; 。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;length&lt;/code&gt; : 表示 &lt;code&gt;intset&lt;/code&gt;  中的元素个数。 &lt;code&gt;encoding&lt;/code&gt;  和 &lt;code&gt;length&lt;/code&gt;  两个字段构成了 &lt;code&gt;intset&lt;/code&gt;  的头部（ &lt;code&gt;header&lt;/code&gt; ）。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;contents&lt;/code&gt; : 是一个柔性数组（ &lt;code&gt;flexible array member&lt;/code&gt; ），表示 &lt;code&gt;intset&lt;/code&gt;  的 &lt;code&gt;header&lt;/code&gt;  后面紧跟着数据元素。这个数组的总长度（即总字节数）等于 &lt;code&gt;encoding * length&lt;/code&gt; 。柔性数组在 &lt;code&gt;Redis&lt;/code&gt;  的很多数据结构的定义中都出现过（例如 &lt;code&gt;sds&lt;/code&gt; ,  &lt;code&gt;quicklist&lt;/code&gt; ,  &lt;code&gt;skiplist&lt;/code&gt; ），用于表达一个偏移量。 &lt;code&gt;contents&lt;/code&gt;  需要单独为其分配空间，这部分内存不包含在 &lt;code&gt;intset&lt;/code&gt;  结构当中。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;这里有个问题.&lt;/p&gt;
&lt;p&gt;Redis 是如何决定一个 set 使用哪种编码方式的呢？&lt;/p&gt;
&lt;p&gt;set 的编码是由第一个元素决定的。&lt;/p&gt;
&lt;figure class=&#34;highlight c++&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;robj *&lt;span class=&#34;title&#34;&gt;setTypeCreate&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(sds value)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (&lt;span class=&#34;built_in&#34;&gt;isSdsRepresentableAsLongLong&lt;/span&gt;(value,&lt;span class=&#34;literal&#34;&gt;NULL&lt;/span&gt;) == C_OK)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;createIntsetObject&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;createSetObject&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;isSdsRepresentableAsLongLong&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(sds s, &lt;span class=&#34;keyword&#34;&gt;long&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;long&lt;/span&gt; *llval)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;string2ll&lt;/span&gt;(s, &lt;span class=&#34;built_in&#34;&gt;sdslen&lt;/span&gt;(s), llval) ? C_OK : C_ERR;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;如果  &lt;code&gt;value&lt;/code&gt;  可以转换成  &lt;code&gt;long long&lt;/code&gt;  类型的话，就使用  &lt;code&gt;inset&lt;/code&gt;  编码方式。&lt;/p&gt;
&lt;p&gt;通过看源码发现:&lt;/p&gt;
&lt;p&gt;当 &lt;code&gt;intset&lt;/code&gt;  的元素个数超过  &lt;code&gt;set_max_intset_entries&lt;/code&gt;  这个配置的时候，就会从 &lt;code&gt;intset&lt;/code&gt;  编码 ( &lt;code&gt;OBJ_ENCODING_INTSET&lt;/code&gt; ) 转换成  &lt;code&gt;ht&lt;/code&gt;  编码 ( &lt;code&gt;OBJ_ENCODING_HT&lt;/code&gt; )。&lt;/p&gt;
&lt;p&gt;这个我们会在后续文章中说明这里的方案。&lt;/p&gt;
&lt;p&gt;好了，关于 set 类型的介绍就到这里了。&lt;/p&gt;
&lt;h2 id=&#34;总结&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#总结&#34;&gt;#&lt;/a&gt; 总结&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;set&lt;/code&gt;  这种类型是一种无重复元素的集合。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;set&lt;/code&gt;  的业务场景关键字：去重，交并差运算。但是一定是无序的。如果要求有序的话，那就 &lt;a href=&#34;./09-Redis%E7%9A%84%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B%E4%B9%8B%E6%9C%89%E5%BA%8F%E9%9B%86%E5%90%88zset.md&#34;&gt;下一篇文章  zset&lt;/a&gt; ~&lt;/li&gt;
&lt;li&gt;&lt;code&gt;set&lt;/code&gt;  的  &lt;code&gt;15&lt;/code&gt;  个命令，务必熟记！！！&lt;/li&gt;
&lt;li&gt;&lt;code&gt;set&lt;/code&gt;  的内部编码方式。哈希表编码和 &lt;code&gt;intset&lt;/code&gt;  编码。后面会有 关于  &lt;code&gt;intset&lt;/code&gt;  数据结构的详细介绍的文章～&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;最后&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#最后&#34;&gt;#&lt;/a&gt; 最后&lt;/h2&gt;
&lt;p&gt;期望与你一起遇见更好的自己&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/images/qrcode.jpg&#34; alt=&#34;期望与你一起遇见更好的自己&#34;&gt;&lt;/p&gt;
</content>
        <category term="Redis" />
        <updated>2021-08-01T10:28:55.000Z</updated>
    </entry>
    <entry>
        <id>https://fangjiaxiaobai.github.io/2021/08/01/Redis%E7%B3%BB%E5%88%97/B-3-Redis%E7%9A%84%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B%E4%B9%8Bhash/</id>
        <title>Redis数据结构之 Hash</title>
        <link rel="alternate" href="https://fangjiaxiaobai.github.io/2021/08/01/Redis%E7%B3%BB%E5%88%97/B-3-Redis%E7%9A%84%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B%E4%B9%8Bhash/"/>
        <content type="html">&lt;h2 id=&#34;书接上回&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#书接上回&#34;&gt;#&lt;/a&gt; 书接上回&lt;/h2&gt;
&lt;p&gt;前一篇文章，我们学习的是 &lt;a href=&#34;/2021/08/01/Redis%E7%B3%BB%E5%88%97/B-2-Redis%E7%9A%84%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B%E4%B9%8Blist/&#34;&gt;Redis 的数据结构 list&lt;/a&gt;， 学习了其基本的操作和使用内部数据结构是 &lt;code&gt;quicklist&lt;/code&gt;  和 &lt;code&gt;ziplist&lt;/code&gt; ，这两种数据结构虽然起得名字是 &lt;code&gt;list&lt;/code&gt; ，但是其内部结构却是链表。如果不记得了其内部构成，就再看看看着&lt;a href=&#34;/2021/08/01/Redis%E7%B3%BB%E5%88%97/B-2-Redis%E7%9A%84%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B%E4%B9%8Blist/&#34;&gt;上篇文章&lt;/a&gt;吧。现在我们继续学习下一个数据类型  &lt;code&gt;hash&lt;/code&gt;&lt;/p&gt;
&lt;h2 id=&#34;hash简介&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#hash简介&#34;&gt;#&lt;/a&gt;  &lt;code&gt;hash&lt;/code&gt;  简介&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;hash&lt;/code&gt;  是一个键值对集合。是  &lt;code&gt;string&lt;/code&gt;  类型的  &lt;code&gt;key&lt;/code&gt;  和  &lt;code&gt;value&lt;/code&gt;  的映射表，hash 特别适合用于存储对象，每个 &lt;code&gt;hash&lt;/code&gt;  类型可以存储  &lt;code&gt;2^32-1&lt;/code&gt;  个键值对。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;hash&lt;/code&gt;  实际上就是一个 哈希表。类似于  &lt;code&gt;Java&lt;/code&gt;  里的 &lt;code&gt;HashTable&lt;/code&gt; 。&lt;/p&gt;
&lt;p&gt;但是  &lt;code&gt;Redis&lt;/code&gt;  的哈希是有两种数据结构 (内部编码) 来表示的。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;一种是  &lt;code&gt;ziplist&lt;/code&gt;  , 上篇文章中我们简单的介绍了 &lt;code&gt;ziplist&lt;/code&gt;  的内部构成，见 &lt;a href=&#34;./06-Redis%E7%9A%84%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B%E4%B9%8Blist.md&#34;&gt;Redis 的数据结构 list&lt;/a&gt;, 以及 &lt;code&gt;ziplist&lt;/code&gt;  的编码方式，可以看这篇文章 &lt;a href=&#34;/2021/08/01/Redis%E7%B3%BB%E5%88%97/C-1-Redis%E7%9A%84%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B9%8Bziplist/&#34;&gt;10-Redis 的数据结构之 ziplist.md&lt;/a&gt;. 那么  &lt;code&gt;Redis&lt;/code&gt;  什么时候会使用 &lt;code&gt;ziplist&lt;/code&gt;  这种编码方式呢？&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;当  &lt;code&gt;hash&lt;/code&gt;  类型的元素的个数小于  &lt;code&gt;hash-max-ziplist-enties&lt;/code&gt;  配置，默认 &lt;code&gt;512&lt;/code&gt; .&lt;/li&gt;
&lt;li&gt;所有的值都小于 &lt;code&gt;hash-max-ziplist-value&lt;/code&gt;  的值，默认是 &lt;code&gt;64&lt;/code&gt;  个字节的时候。&lt;br&gt;
当同时满足以上两个条件的时候， 就会使用  &lt;code&gt;ziplist&lt;/code&gt;  这种结构。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;这种方式最大的优点就是节约空间。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;另一种就是使用  &lt;code&gt;hashtable&lt;/code&gt;  来编码了。当不满足上面提及的两个条件时，就会使用  &lt;code&gt;hashtable&lt;/code&gt;  来编码。实际上是  &lt;code&gt;dict&lt;/code&gt;  这种数据结构。这里我们又可以学习到一个新的数据结构  &lt;code&gt;dict&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;hash的应用场景&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#hash的应用场景&#34;&gt;#&lt;/a&gt; hash 的应用场景&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;缓存对象信息：对象的每个属性对应着 &lt;code&gt;hash&lt;/code&gt;  的一个键值对。改变的时候，只需要改变对应的某个 &lt;code&gt;filed-value&lt;/code&gt;  即可。&lt;/li&gt;
&lt;li&gt;缓存购物车的信息：用户的 &lt;code&gt;id&lt;/code&gt;  为 &lt;code&gt;key&lt;/code&gt; ， 商品的 &lt;code&gt;id&lt;/code&gt;  为  &lt;code&gt;field&lt;/code&gt; . 商品的数量为 &lt;code&gt;value&lt;/code&gt; 。 比如:  &lt;code&gt;hset userId productId productCount&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;hash的基本命令&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#hash的基本命令&#34;&gt;#&lt;/a&gt;  &lt;code&gt;hash&lt;/code&gt;  的基本命令&lt;/h2&gt;
&lt;h3 id=&#34;hset&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#hset&#34;&gt;#&lt;/a&gt;  &lt;code&gt;hset&lt;/code&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;语法&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;hset key field value&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;解释&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;将哈希表  &lt;code&gt;hash&lt;/code&gt;  中域  &lt;code&gt;field&lt;/code&gt;  的值设置为  &lt;code&gt;value&lt;/code&gt;  。&lt;/p&gt;
&lt;p&gt;如果给定的哈希表并不存在， 那么一个新的哈希表将被创建并执行  &lt;code&gt;HSET&lt;/code&gt;  操作。&lt;/p&gt;
&lt;p&gt;如果域  &lt;code&gt;field&lt;/code&gt;  已经存在于哈希表中， 那么它的旧值将被新值  &lt;code&gt;value&lt;/code&gt;  覆盖。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;演示&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight sh&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;## 设置一个hash结构&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; HSET k38 f1 v38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(&lt;span class=&#34;built_in&#34;&gt;integer&lt;/span&gt;) 1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 获取一个字段&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; HGET k38 f1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;&amp;quot;v38&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 设置一个已经存在的值, 注意返回的值。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; HSET k38 f1 v38v38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(&lt;span class=&#34;built_in&#34;&gt;integer&lt;/span&gt;) 0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; HGET k38 f1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;&amp;quot;v38v38&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;hsetnx&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#hsetnx&#34;&gt;#&lt;/a&gt;  &lt;code&gt;hsetnx&lt;/code&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;语法&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;HSETNX key field value&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;解释&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;当且仅当域  &lt;code&gt;field&lt;/code&gt;  尚未存在于哈希表的情况下， 将它的值设置为  &lt;code&gt;value&lt;/code&gt;  。&lt;/p&gt;
&lt;p&gt;如果给定域已经存在于哈希表当中， 那么命令将放弃执行设置操作。&lt;/p&gt;
&lt;p&gt;如果哈希表  &lt;code&gt;hash&lt;/code&gt;  不存在， 那么一个新的哈希表将被创建并执行  &lt;code&gt;HSETNX&lt;/code&gt;  命令。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;演示&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight sh&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 设置一个不存在的 key&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; HSETNX k39 f1 v39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(&lt;span class=&#34;built_in&#34;&gt;integer&lt;/span&gt;) 1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; HGET k39 f1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;&amp;quot;v39&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 再次设置&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; HSETNX k39 f1 v39v39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(&lt;span class=&#34;built_in&#34;&gt;integer&lt;/span&gt;) 0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; HGET k39 f1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;&amp;quot;v39&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;hget&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#hget&#34;&gt;#&lt;/a&gt;  &lt;code&gt;hget&lt;/code&gt;&lt;/h3&gt;
&lt;p&gt;这个命令上面已经用到了。这里就不浪费时间了。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;语法&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;HGET key field&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;解释&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;获取对应的  &lt;code&gt;key&lt;/code&gt;  下的域  &lt;code&gt;field&lt;/code&gt;  的值。不存在的时候，返回  &lt;code&gt;nil&lt;/code&gt;&lt;/p&gt;
&lt;h3 id=&#34;hgetall&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#hgetall&#34;&gt;#&lt;/a&gt;  &lt;code&gt;hgetall&lt;/code&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;语法&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;HGETALL key&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;解释&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;返回哈希表  &lt;code&gt;key&lt;/code&gt;  中，所有的域和值。&lt;/p&gt;
&lt;p&gt;在返回值里，紧跟每个域名 ( &lt;code&gt;field name&lt;/code&gt; ) 之后是域的值 ( &lt;code&gt;value&lt;/code&gt; )，所以返回值的长度是哈希表大小的两倍。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;演示&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight sh&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; HGETALL k39 &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1) &lt;span class=&#34;string&#34;&gt;&amp;quot;f1&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2) &lt;span class=&#34;string&#34;&gt;&amp;quot;v39&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; hset k39 f2 v39_2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(&lt;span class=&#34;built_in&#34;&gt;integer&lt;/span&gt;) 1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; HGETALL k39 &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1) &lt;span class=&#34;string&#34;&gt;&amp;quot;f1&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2) &lt;span class=&#34;string&#34;&gt;&amp;quot;v39&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3) &lt;span class=&#34;string&#34;&gt;&amp;quot;f2&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4) &lt;span class=&#34;string&#34;&gt;&amp;quot;v39_2&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;hexists&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#hexists&#34;&gt;#&lt;/a&gt;  &lt;code&gt;hexists&lt;/code&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;语法&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt; HEXISTS key field&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;解释&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;检查给定域  &lt;code&gt;field&lt;/code&gt;  是否存在于哈希表  &lt;code&gt;hash&lt;/code&gt;  当中。&lt;/p&gt;
&lt;p&gt;存在返回 &lt;code&gt;1&lt;/code&gt; , 不存在返回 &lt;code&gt;0&lt;/code&gt; 。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;演示&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight sh&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; HEXISTS k40 f1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(&lt;span class=&#34;built_in&#34;&gt;integer&lt;/span&gt;) 0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; HSET k40 f1 v40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(&lt;span class=&#34;built_in&#34;&gt;integer&lt;/span&gt;) 1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; HEXISTS k40 f1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(&lt;span class=&#34;built_in&#34;&gt;integer&lt;/span&gt;) 1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;del&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#del&#34;&gt;#&lt;/a&gt;  &lt;code&gt;del&lt;/code&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;语法&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;HDEL key field [field ...]&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;解释&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;删除哈希表 key 中的一个或多个指定域，不存在的域将被忽略。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;演示&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight sh&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; HSET k41 f1 v41_1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(&lt;span class=&#34;built_in&#34;&gt;integer&lt;/span&gt;) 1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; HSET k41 f2 v41_2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(&lt;span class=&#34;built_in&#34;&gt;integer&lt;/span&gt;) 1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; HSET k41 f3 v41_3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(&lt;span class=&#34;built_in&#34;&gt;integer&lt;/span&gt;) 1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; HGETALL k41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1) &lt;span class=&#34;string&#34;&gt;&amp;quot;f1&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2) &lt;span class=&#34;string&#34;&gt;&amp;quot;v41_1&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3) &lt;span class=&#34;string&#34;&gt;&amp;quot;f2&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4) &lt;span class=&#34;string&#34;&gt;&amp;quot;v41_2&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5) &lt;span class=&#34;string&#34;&gt;&amp;quot;f3&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6) &lt;span class=&#34;string&#34;&gt;&amp;quot;v41_3&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; HDEL k41 f1 f3 f4 &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(&lt;span class=&#34;built_in&#34;&gt;integer&lt;/span&gt;) 2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; HGETALL k41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1) &lt;span class=&#34;string&#34;&gt;&amp;quot;f2&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2) &lt;span class=&#34;string&#34;&gt;&amp;quot;v41_2&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;hlen&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#hlen&#34;&gt;#&lt;/a&gt;  &lt;code&gt;hlen&lt;/code&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;语法&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;HLEN key&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;解释&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;返回哈希表  &lt;code&gt;key&lt;/code&gt;  中域的数量。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;演示&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight sh&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; HSET k42 f1 v42_1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(&lt;span class=&#34;built_in&#34;&gt;integer&lt;/span&gt;) 1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; HSET k42 f2 v42_2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(&lt;span class=&#34;built_in&#34;&gt;integer&lt;/span&gt;) 1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; HSET k42 f3 v42_3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(&lt;span class=&#34;built_in&#34;&gt;integer&lt;/span&gt;) 1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; hlen k42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(&lt;span class=&#34;built_in&#34;&gt;integer&lt;/span&gt;) 3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;hstrlen&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#hstrlen&#34;&gt;#&lt;/a&gt;  &lt;code&gt;hstrlen&lt;/code&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;语法&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;HSTRLEN key field&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;解释&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;返回哈希表  &lt;code&gt;key&lt;/code&gt;  中， 与给定域  &lt;code&gt;field&lt;/code&gt;  相关联的值的字符串长度（ &lt;code&gt;string length&lt;/code&gt; ）。&lt;/p&gt;
&lt;p&gt;如果给定的键或者域不存在， 那么命令返回  &lt;code&gt;0&lt;/code&gt;  。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;演示&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight sh&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; HSET k43 f1 &lt;span class=&#34;string&#34;&gt;&amp;quot;Hello World&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(&lt;span class=&#34;built_in&#34;&gt;integer&lt;/span&gt;) 1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; HSTRLEN k43 f1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(&lt;span class=&#34;built_in&#34;&gt;integer&lt;/span&gt;) 11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; HSTRLEN k43 f2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(&lt;span class=&#34;built_in&#34;&gt;integer&lt;/span&gt;) 0&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;hincrby&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#hincrby&#34;&gt;#&lt;/a&gt; hincrby&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;语法&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;HINCRBY key field increment&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;解释&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;为哈希表  &lt;code&gt;key&lt;/code&gt;  中的域  &lt;code&gt;field&lt;/code&gt;  的值加上增量  &lt;code&gt;increment&lt;/code&gt;  。&lt;/p&gt;
&lt;p&gt;增量也可以为负数，相当于对给定域进行减法操作。&lt;/p&gt;
&lt;p&gt;如果  &lt;code&gt;key&lt;/code&gt;  不存在，一个新的哈希表被创建并执行  &lt;code&gt;HINCRBY&lt;/code&gt;  命令。&lt;/p&gt;
&lt;p&gt;如果域  &lt;code&gt;field&lt;/code&gt;  不存在，那么在执行命令前，域的值被初始化为  &lt;code&gt;0&lt;/code&gt;  。&lt;/p&gt;
&lt;p&gt;对一个储存字符串值的域  &lt;code&gt;field&lt;/code&gt;  执行  &lt;code&gt;HINCRBY&lt;/code&gt;  命令将造成一个错误。&lt;/p&gt;
&lt;p&gt;本操作的值被限制在  &lt;code&gt;64&lt;/code&gt;  位 ( &lt;code&gt;bit&lt;/code&gt; ) 有符号数字表示之内。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;演示&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight sh&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 不存在的key与域 field&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; HINCRBY k45 f1 100&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(&lt;span class=&#34;built_in&#34;&gt;integer&lt;/span&gt;) 100&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; HINCRBY k45 f1 -200&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(&lt;span class=&#34;built_in&#34;&gt;integer&lt;/span&gt;) -100&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; HINCRBY k45 f1 200&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(&lt;span class=&#34;built_in&#34;&gt;integer&lt;/span&gt;) 100&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 错误的类型&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; HSET k45 f2 v45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(&lt;span class=&#34;built_in&#34;&gt;integer&lt;/span&gt;) 1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; HINCRBY k45 f2 100&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(error) ERR &lt;span class=&#34;built_in&#34;&gt;hash&lt;/span&gt; value is not an &lt;span class=&#34;built_in&#34;&gt;integer&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;hincrbyfloat&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#hincrbyfloat&#34;&gt;#&lt;/a&gt;  &lt;code&gt;hincrbyfloat&lt;/code&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;语法&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;HINCRBYFLOAT  key field increment&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;解释&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;为哈希表  &lt;code&gt;key&lt;/code&gt;  中的域  &lt;code&gt;field&lt;/code&gt;  加上浮点数增量  &lt;code&gt;increment&lt;/code&gt;  。&lt;/p&gt;
&lt;p&gt;如果哈希表中没有域  &lt;code&gt;field&lt;/code&gt;  ，那么  &lt;code&gt;HINCRBYFLOAT&lt;/code&gt;  会先将域  &lt;code&gt;field&lt;/code&gt;  的值设为  &lt;code&gt;0&lt;/code&gt;  ，然后再执行加法操作。&lt;/p&gt;
&lt;p&gt;如果键  &lt;code&gt;key&lt;/code&gt;  不存在，那么  &lt;code&gt;HINCRBYFLOAT&lt;/code&gt;  会先创建一个哈希表，再创建域  &lt;code&gt;field&lt;/code&gt;  ，最后再执行加法操作。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;演示&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight sh&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; HINCRBYFLOAT  k46 f1 100.5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;&amp;quot;100.5&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; HINCRBYFLOAT  k46 f1 100.5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;&amp;quot;201&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; HINCRBYFLOAT  k46 f1 -100.5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;&amp;quot;100.5&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; HSET k46 f2 v46_2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(&lt;span class=&#34;built_in&#34;&gt;integer&lt;/span&gt;) 1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;hmset&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#hmset&#34;&gt;#&lt;/a&gt;  &lt;code&gt;hmset&lt;/code&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;语法&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;HMSET key field value [field value ...]&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;解释&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;同时将多个  &lt;code&gt;field-value&lt;/code&gt;  (域 - 值) 对设置到哈希表  &lt;code&gt;key&lt;/code&gt;  中。&lt;/p&gt;
&lt;p&gt;此命令会覆盖哈希表中已存在的域。&lt;/p&gt;
&lt;p&gt;如果  &lt;code&gt;key&lt;/code&gt;  不存在，一个空哈希表被创建并执行  &lt;code&gt;HMSET&lt;/code&gt;  操作。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;演示&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight sh&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; HMSET k47  f1 v47_1 f2 v47_2 f3 v47_3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;OK&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; HGETALL k47&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1) &lt;span class=&#34;string&#34;&gt;&amp;quot;f1&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2) &lt;span class=&#34;string&#34;&gt;&amp;quot;v47_1&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3) &lt;span class=&#34;string&#34;&gt;&amp;quot;f2&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4) &lt;span class=&#34;string&#34;&gt;&amp;quot;v47_2&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5) &lt;span class=&#34;string&#34;&gt;&amp;quot;f3&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6) &lt;span class=&#34;string&#34;&gt;&amp;quot;v47_3&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;hmget&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#hmget&#34;&gt;#&lt;/a&gt;  &lt;code&gt;hmget&lt;/code&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;语法&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;HMGET key field [field ...]&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;解释&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;返回哈希表  &lt;code&gt;key&lt;/code&gt;  中，一个或多个给定域的值。&lt;/p&gt;
&lt;p&gt;如果给定的域不存在于哈希表，那么返回一个  &lt;code&gt;nil&lt;/code&gt;  值。&lt;/p&gt;
&lt;p&gt;因为不存在的  &lt;code&gt;key&lt;/code&gt;  被当作一个空哈希表来处理，所以对一个不存在的  &lt;code&gt;key&lt;/code&gt;  进行  &lt;code&gt;HMGET&lt;/code&gt;  操作将返回一个只带有  &lt;code&gt;nil&lt;/code&gt;  值的表。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;演示&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight sh&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; HMSET k48 f1 v1 f2 v2 f3 v3 f4 v4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;OK&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; hmget k48 f1 f3 f4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1) &lt;span class=&#34;string&#34;&gt;&amp;quot;v1&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2) &lt;span class=&#34;string&#34;&gt;&amp;quot;v3&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3) &lt;span class=&#34;string&#34;&gt;&amp;quot;v4&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; &lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;hkeys&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#hkeys&#34;&gt;#&lt;/a&gt;  &lt;code&gt;hkeys&lt;/code&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;语法&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;HKEYS key&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;解释&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;返回哈希表  &lt;code&gt;key&lt;/code&gt;  中的所有域。&lt;/p&gt;
&lt;p&gt;当  &lt;code&gt;key&lt;/code&gt;  不存在时，返回一个空表。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;演示&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight sh&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; HMSET k49 f1 v1 f2 v2 f3 v3 f4 v4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;OK&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; HKEYS k49&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1) &lt;span class=&#34;string&#34;&gt;&amp;quot;f1&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2) &lt;span class=&#34;string&#34;&gt;&amp;quot;f2&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3) &lt;span class=&#34;string&#34;&gt;&amp;quot;f3&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4) &lt;span class=&#34;string&#34;&gt;&amp;quot;f4&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;hvals&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#hvals&#34;&gt;#&lt;/a&gt;  &lt;code&gt;hvals&lt;/code&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;语法&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;HVALS key&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;解释&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;返回  &lt;code&gt;key&lt;/code&gt;  对应的所有的 &lt;code&gt;value&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;演示&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight sh&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; HMSET k50 f1 v1 f2 v2 f3 v3 f4 v4 &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;OK&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; HVALS k50&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1) &lt;span class=&#34;string&#34;&gt;&amp;quot;v1&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2) &lt;span class=&#34;string&#34;&gt;&amp;quot;v2&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3) &lt;span class=&#34;string&#34;&gt;&amp;quot;v3&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4) &lt;span class=&#34;string&#34;&gt;&amp;quot;v4&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;hscan&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#hscan&#34;&gt;#&lt;/a&gt;  &lt;code&gt;hscan&lt;/code&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;语法&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;HSCAN key cursor [MATCH pattern] [COUNT count]&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;解释&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;这是一个查询命令。 同 SCAN 命令。可以参考这篇文章 &lt;a href=&#34;./010-%E5%85%B6%E4%BB%96%E5%91%BD%E4%BB%A4.md&#34;&gt;010 - 其他命令&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;SCAN&lt;/code&gt;  命令是一个基于游标的迭代器（ &lt;code&gt;cursor based iterator&lt;/code&gt; ）：  &lt;code&gt;SCAN&lt;/code&gt;  命令每次被调用之后， 都会向用户返回一个新的游标， 用户在下次迭代时需要使用这个新游标作为  &lt;code&gt;SCAN&lt;/code&gt;  命令的游标参数， 以此来延续之前的迭代过程。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;演示&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight sh&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; HMSET k51  f1 v1 f2 v2 f3 v3 f4 v4 f5 v5 f6 v6 f7 v7 f8 v8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;OK&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; hscan k51 0 &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1) &lt;span class=&#34;string&#34;&gt;&amp;quot;0&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2)  1) &lt;span class=&#34;string&#34;&gt;&amp;quot;f1&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    2) &lt;span class=&#34;string&#34;&gt;&amp;quot;v1&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    3) &lt;span class=&#34;string&#34;&gt;&amp;quot;f2&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    4) &lt;span class=&#34;string&#34;&gt;&amp;quot;v2&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    5) &lt;span class=&#34;string&#34;&gt;&amp;quot;f3&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    6) &lt;span class=&#34;string&#34;&gt;&amp;quot;v3&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    7) &lt;span class=&#34;string&#34;&gt;&amp;quot;f4&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    8) &lt;span class=&#34;string&#34;&gt;&amp;quot;v4&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    9) &lt;span class=&#34;string&#34;&gt;&amp;quot;f5&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   10) &lt;span class=&#34;string&#34;&gt;&amp;quot;v5&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   11) &lt;span class=&#34;string&#34;&gt;&amp;quot;f6&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   12) &lt;span class=&#34;string&#34;&gt;&amp;quot;v6&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   13) &lt;span class=&#34;string&#34;&gt;&amp;quot;f7&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   14) &lt;span class=&#34;string&#34;&gt;&amp;quot;v7&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   15) &lt;span class=&#34;string&#34;&gt;&amp;quot;f8&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   16) &lt;span class=&#34;string&#34;&gt;&amp;quot;v8&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;以上，就是  &lt;code&gt;Redis&lt;/code&gt;  中 &lt;code&gt;hash&lt;/code&gt;  类型相关的 &lt;code&gt;15&lt;/code&gt;  个命令了。务必熟记～&lt;/p&gt;
&lt;h2 id=&#34;hash的内部结构&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#hash的内部结构&#34;&gt;#&lt;/a&gt;  &lt;code&gt;hash&lt;/code&gt;  的内部结构&lt;/h2&gt;
&lt;p&gt;在  &lt;code&gt;hash&lt;/code&gt;  类型简介的时候，我们就说过  &lt;code&gt;hash&lt;/code&gt;  是用两种数据结构来编码的。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;ziplist&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;hashtable&lt;/code&gt; ( &lt;code&gt;dict&lt;/code&gt; )&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;ziplist&lt;/code&gt;  之前已经分享过了。具体参考之前的文章吧。 &lt;a href=&#34;./06-Redis%E7%9A%84%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B%E4%B9%8Blist.md&#34;&gt;链接&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;这里我们就简单的来看下  &lt;code&gt;hashtable&lt;/code&gt; .&lt;/p&gt;
&lt;p&gt;我们直接搜索  &lt;code&gt;hash&lt;/code&gt;  , 可以发现  &lt;code&gt;t_hash.c&lt;/code&gt;  这个文件，引入了  &lt;code&gt;server.h&lt;/code&gt;  . 大体看了一下，都是函数的实现。那我们看下  &lt;code&gt;server.h&lt;/code&gt;  ，应该存在对  &lt;code&gt;hastable&lt;/code&gt;  的定义吧。然而，并没有。&lt;/p&gt;
&lt;p&gt;那我们来看下 &lt;code&gt;t_hash.c&lt;/code&gt;  中添加方法的实现吧.  &lt;code&gt;int hashTypeSet(robj *o, sds field, sds value, int flags)&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;源码太长了，这里就不粘了， 可以看&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRlZS5jb20vZmFuZ2ppYXhpYW9iYWkvcmVkaXMvYmxvYi9yZWRpczUuMF9jaGluZXNlX3RyYW5zbGF0ZS9zcmMvdF9oYXNoLmM=&#34;&gt;源码&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;通过查看源码可以得出:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;hash&lt;/code&gt;  类型的默认编码是  &lt;code&gt;OBJ_ZIPLIST&lt;/code&gt; . 即默认是使用  &lt;code&gt;ziplist&lt;/code&gt;  这种数据结构进行编码存储的。&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight c++&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;robj *&lt;span class=&#34;title&#34;&gt;createHashObject&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(&lt;span class=&#34;keyword&#34;&gt;void&lt;/span&gt;)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;unsigned&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;char&lt;/span&gt; *zl = &lt;span class=&#34;built_in&#34;&gt;ziplistNew&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    robj *o = &lt;span class=&#34;built_in&#34;&gt;createObject&lt;/span&gt;(OBJ_HASH, zl);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    o-&amp;gt;encoding = OBJ_ENCODING_ZIPLIST;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; o;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;当 &lt;code&gt;hash&lt;/code&gt;  元素的个数大于  &lt;code&gt;hash_max_ziplist_entries&lt;/code&gt;  时会，转换成  &lt;code&gt;hashTable&lt;/code&gt; ( &lt;code&gt;OBJ_ENCODING_HT&lt;/code&gt; ),&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight c++&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;...&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (&lt;span class=&#34;built_in&#34;&gt;hashTypeLength&lt;/span&gt;(o) &amp;gt; server.hash_max_ziplist_entries)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;built_in&#34;&gt;hashTypeConvert&lt;/span&gt;(o, OBJ_ENCODING_HT);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;...&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;但是在  &lt;code&gt;redis 5.0.7&lt;/code&gt;  中暂时不支持这种方式，还没有实现。(&lt;b&gt;没有实现从 &lt;code&gt;ziplist&lt;/code&gt;  编码转化成 &lt;code&gt;hash&lt;/code&gt;  编码。&lt;/b&gt;)&lt;/p&gt;
&lt;figure class=&#34;highlight c++&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;hashTypeConvert&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(robj *o, &lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; enc)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (o-&amp;gt;encoding == OBJ_ENCODING_ZIPLIST) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;built_in&#34;&gt;hashTypeConvertZiplist&lt;/span&gt;(o, enc);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;/// 这里！！！&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (o-&amp;gt;encoding == OBJ_ENCODING_HT) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;built_in&#34;&gt;serverPanic&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;Not implemented&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125; &lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;built_in&#34;&gt;serverPanic&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;Unknown hash encoding&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;当创建的 &lt;code&gt;hash&lt;/code&gt;  类型是  &lt;code&gt;hashtable&lt;/code&gt;  编码 ( &lt;code&gt;OBJ_ENCODING_HT&lt;/code&gt; ) 时，是使用 &lt;code&gt;dict&lt;/code&gt;  这种类型存储的.&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight c++&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;/// dict类型&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;typedef&lt;/span&gt; &lt;span class=&#34;class&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;struct&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;dict&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    dictType *type;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;void&lt;/span&gt; *privdata;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;/// 2个哈希表来实现&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    dictht ht[&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;long&lt;/span&gt; rehashidx; &lt;span class=&#34;comment&#34;&gt;/* rehashing not in progress if rehashidx == -1 */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;unsigned&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;long&lt;/span&gt; iterators; &lt;span class=&#34;comment&#34;&gt;/* number of iterators currently running */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125; dict;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;/// 哈希表实现&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;typedef&lt;/span&gt; &lt;span class=&#34;class&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;struct&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;dictht&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    dictEntry **table; &lt;span class=&#34;comment&#34;&gt;/// 哈希表节点指针数据(java源码中的桶的概念)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;unsigned&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;long&lt;/span&gt; size; &lt;span class=&#34;comment&#34;&gt;/// 指针数组的大小&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;unsigned&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;long&lt;/span&gt; sizemask; &lt;span class=&#34;comment&#34;&gt;/// 指针数据的长度掩码,用于计算索引值&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;unsigned&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;long&lt;/span&gt; used; &lt;span class=&#34;comment&#34;&gt;/// 哈希表现有的节点数量&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125; dictht;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;///哈希表的节点&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;typedef&lt;/span&gt; &lt;span class=&#34;class&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;struct&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;dictEntry&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;/// 键&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;void&lt;/span&gt; *key;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;/// 值&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;class&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;union&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;void&lt;/span&gt; *val;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;uint64_t&lt;/span&gt; u64;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;int64_t&lt;/span&gt; s64;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;double&lt;/span&gt; d;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125; v;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;/// 下一个节点: dictht 是使用链地址法来处理hash冲突。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;class&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;struct&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;dictEntry&lt;/span&gt; *&lt;span class=&#34;title&#34;&gt;next&lt;/span&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125; dictEntry;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;整个  &lt;code&gt;dict&lt;/code&gt;  结构就可以这么表示:&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/images/Redis%E7%B3%BB%E5%88%97/images/Redis-01-dict%E7%BB%93%E6%9E%84%E5%AD%98%E5%82%A8.png&#34; alt=&#34;Redis-01-dict结构存储&#34;&gt;&lt;/p&gt;
&lt;p&gt;到这里，我们就知道了  &lt;code&gt;hash&lt;/code&gt;  这种类型，是如何存储的了。 如果你还想了解&lt;br&gt;
 &lt;code&gt;dict&lt;/code&gt;  是如何  &lt;code&gt;rehash&lt;/code&gt; , 扩容，缩容。以及  &lt;code&gt;dict api&lt;/code&gt;  相关实现的话，移驾这篇文章吧。 &lt;a href=&#34;./Redis%E4%B8%AD%E7%9A%84dict%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84.md&#34;&gt;起驾～&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;总结&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#总结&#34;&gt;#&lt;/a&gt; 总结&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;hash&lt;/code&gt;  结构，是一种哈希表结构。通过两种数据结构 &lt;code&gt;ziplist&lt;/code&gt;  和  &lt;code&gt;hashtable&lt;/code&gt; ( &lt;code&gt;dict&lt;/code&gt; ) 实现。&lt;/li&gt;
&lt;li&gt;要熟练掌握的  &lt;code&gt;hash&lt;/code&gt;  相关的 &lt;code&gt;15&lt;/code&gt;  个命令。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;hashtable&lt;/code&gt;  的编码格式，实际上就是使用的  &lt;code&gt;dict&lt;/code&gt;  这种编码方式。我们简单的学习了 &lt;code&gt;Redis&lt;/code&gt;  中 &lt;code&gt;dict&lt;/code&gt;  结构的实现。还有一篇专门的文章，来介绍  &lt;code&gt;dict&lt;/code&gt;  的详细内容。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;最后&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#最后&#34;&gt;#&lt;/a&gt; 最后&lt;/h2&gt;
&lt;p&gt;期望与你一起遇见更好的自己&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/images/qrcode.jpg&#34; alt=&#34;期望与你一起遇见更好的自己&#34;&gt;&lt;/p&gt;
</content>
        <category term="Redis" />
        <updated>2021-08-01T07:18:55.000Z</updated>
    </entry>
    <entry>
        <id>https://fangjiaxiaobai.github.io/2021/08/01/Redis%E7%B3%BB%E5%88%97/B-2-Redis%E7%9A%84%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B%E4%B9%8Blist/</id>
        <title>Redis数据结构之 List</title>
        <link rel="alternate" href="https://fangjiaxiaobai.github.io/2021/08/01/Redis%E7%B3%BB%E5%88%97/B-2-Redis%E7%9A%84%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B%E4%B9%8Blist/"/>
        <content type="html">&lt;h2 id=&#34;书接上回&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#书接上回&#34;&gt;#&lt;/a&gt; 书接上回&lt;/h2&gt;
&lt;p&gt;上一篇文章 &lt;a href=&#34;/2021/08/01/Redis%E7%B3%BB%E5%88%97/B-1-Redis%E7%9A%84%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B%E4%B9%8BString/&#34;&gt;Redis 的数据结构 string&lt;/a&gt; 我们一起学习了这种类型的常用命令，并且还学习了  &lt;code&gt;Redis&lt;/code&gt;  中的字符串的结构表示以及好处，这里我们接着学习另外一种数据结构  &lt;code&gt;list&lt;/code&gt; 。&lt;/p&gt;
&lt;h2 id=&#34;list-简介&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#list-简介&#34;&gt;#&lt;/a&gt;  &lt;code&gt;list&lt;/code&gt;  简介&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;list&lt;/code&gt; , 一般都会称为列表。在 &lt;code&gt;Redis&lt;/code&gt;  中，这种数据结构是一种比较灵活的结构，由于其元素的是有序的，所以可以充当栈和队列这两种数据结构。实际在开发总也有很多应用场景。&lt;/p&gt;
&lt;p&gt;一个 &lt;code&gt;List&lt;/code&gt;  最多可以包含  &lt;code&gt;2^32-1&lt;/code&gt;  个元素。&lt;/p&gt;
&lt;p&gt;很多人都会以为 &lt;code&gt;list&lt;/code&gt;  是用数组来实现的，非也，非也。它内部是 &lt;code&gt;quicklist&lt;/code&gt;  这种数据结构。想要先睹为快的，那么坐&lt;a href=&#34;##%60list%60%E5%86%85%E9%83%A8%E7%BB%93%E6%9E%84%E4%B9%8B%60quicklist%60&#34;&gt;电梯直达&lt;/a&gt;吧。&lt;/p&gt;
&lt;h2 id=&#34;list的相关命令&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#list的相关命令&#34;&gt;#&lt;/a&gt;  &lt;code&gt;list&lt;/code&gt;  的相关命令&lt;/h2&gt;
&lt;h3 id=&#34;lpush命令&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#lpush命令&#34;&gt;#&lt;/a&gt;  &lt;code&gt;LPUSH&lt;/code&gt;  命令&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;语法&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;LPUSH key value [value …]&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;解释&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;lpush&lt;/code&gt;  :  &lt;code&gt;left push&lt;/code&gt; 。&lt;/p&gt;
&lt;p&gt;将一个或者多个值插入到列表 &lt;code&gt;key&lt;/code&gt;  的表头，返回列表的长度。元素可以是重复的。&lt;/p&gt;
&lt;p&gt;如果 &lt;code&gt;key&lt;/code&gt;  不存在，那么会先穿件一个列表，然后再执行 &lt;code&gt;push&lt;/code&gt;  操作.&lt;/p&gt;
&lt;p&gt;如果 &lt;code&gt;key&lt;/code&gt;  值存在，但是 &lt;code&gt;value&lt;/code&gt;  类型不是列表类型时，会返回一个错误。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;演示&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;#&lt;/span&gt;&lt;span class=&#34;bash&#34;&gt; 设置一个列表&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; LPUSH k22 v22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(integer) 1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;#&lt;/span&gt;&lt;span class=&#34;bash&#34;&gt; 查询指定区间内的数据,使用lrange命令&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; LRANGE k22 0 10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1) &amp;quot;v22&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;#&lt;/span&gt;&lt;span class=&#34;bash&#34;&gt; 一次插入多个值&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; LPUSH k22 v22_1 v22_2 v22_3 v22_4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(integer) 5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; LRANGE k22 0 10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1) &amp;quot;v22_4&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2) &amp;quot;v22_3&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3) &amp;quot;v22_2&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4) &amp;quot;v22_1&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5) &amp;quot;v22&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;lpushx-命令&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#lpushx-命令&#34;&gt;#&lt;/a&gt;  &lt;code&gt;lpushx&lt;/code&gt;  命令&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;语法&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;LPUSHX key value&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;解释&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;仅当  &lt;code&gt;key&lt;/code&gt;  存在的时候，才将  &lt;code&gt;value&lt;/code&gt;  插入列表的表头。返回列表中元素的个数。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;演示&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight sh&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 当key值不存在的时候，不会放入列表中&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; LPUSHX k23 v23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(&lt;span class=&#34;built_in&#34;&gt;integer&lt;/span&gt;) 0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 再次尝试放入，也不可以。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; LPUSHX k23 v23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(&lt;span class=&#34;built_in&#34;&gt;integer&lt;/span&gt;) 0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 先往数组放入一个元素&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; lpush k23 v23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(&lt;span class=&#34;built_in&#34;&gt;integer&lt;/span&gt;) 1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 再次尝试使用lpushx放入数据&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; LPUSHX k23 v23_1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(&lt;span class=&#34;built_in&#34;&gt;integer&lt;/span&gt;) 2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 再次尝试使用lpushx放入数据&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; LPUSHX k23 v23_2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(&lt;span class=&#34;built_in&#34;&gt;integer&lt;/span&gt;) 3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 查看列表 k23 中的数据。注意：和插入的顺序是相反的。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; Lrange k23 0 -1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1) &lt;span class=&#34;string&#34;&gt;&amp;quot;v23_2&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2) &lt;span class=&#34;string&#34;&gt;&amp;quot;v23_1&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3) &lt;span class=&#34;string&#34;&gt;&amp;quot;v23&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;rpush-命令&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#rpush-命令&#34;&gt;#&lt;/a&gt;  &lt;code&gt;rpush&lt;/code&gt;  命令&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;语法&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;RPUSH key value [value ...]&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;解释&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;rpush&lt;/code&gt;  就是 &lt;code&gt;right push&lt;/code&gt; 。将一个或多个值  &lt;code&gt;value&lt;/code&gt;  插入到列表  &lt;code&gt;key&lt;/code&gt;  的表尾 (最右边)。返回列表的长度。&lt;/p&gt;
&lt;p&gt;如果  &lt;code&gt;key&lt;/code&gt;  不存在的时候，会创建一个空列表，然后在执行  &lt;code&gt;rpush&lt;/code&gt;  操作。&lt;/p&gt;
&lt;p&gt;如果  &lt;code&gt;key&lt;/code&gt;  存在，但是不是一个列表类型时，返回一个错误。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;演示&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;#&lt;/span&gt;&lt;span class=&#34;bash&#34;&gt; 往列表中加入数据&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; RPUSH k24 v24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(integer) 1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; RPUSH k24 v24_1 v25_2 v25_3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(integer) 4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; lrange k24 0 -1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1) &amp;quot;v24&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2) &amp;quot;v24_1&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3) &amp;quot;v25_2&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4) &amp;quot;v25_3&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;#&lt;/span&gt;&lt;span class=&#34;bash&#34;&gt; 演示 key 存在，但是不是一个列表类型&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; set k24_1 v24_1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;OK&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; rpush k24_1 v24_1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(error) WRONGTYPE Operation against a key holding the wrong kind of value&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;rpushx-命令&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#rpushx-命令&#34;&gt;#&lt;/a&gt;  &lt;code&gt;rpushx&lt;/code&gt;  命令&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;语法&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;rpushx key value&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;解释&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;与  &lt;code&gt;lpushx&lt;/code&gt;  类似，如果 &lt;code&gt;key&lt;/code&gt;  不存在时，什么都不会操作。如果 &lt;code&gt;key&lt;/code&gt;  存在，才会将元素添加到表尾。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;演示&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;#&lt;/span&gt;&lt;span class=&#34;bash&#34;&gt; key不存在的时候，不会插入数据&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; rpushx k25 v25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(integer) 0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;#&lt;/span&gt;&lt;span class=&#34;bash&#34;&gt; 先设置一个列表&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; rpush k25 v25_1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(integer) 1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; rpushx k25 v25_2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(integer) 2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; rpushx k25 v25_3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(integer) 3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;#&lt;/span&gt;&lt;span class=&#34;bash&#34;&gt; 查看列表中的数据。注意和插入的顺序是一致的。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; lrange k25 0 -1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1) &amp;quot;v25_1&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2) &amp;quot;v25_2&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3) &amp;quot;v25_3&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;lpop-命令&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#lpop-命令&#34;&gt;#&lt;/a&gt;  &lt;code&gt;lpop&lt;/code&gt;  命令&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;语法&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;LPOP key&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;解释&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;left pop&lt;/code&gt; ;&lt;/p&gt;
&lt;p&gt;移除并返回列表的头元素。当 &lt;code&gt;key&lt;/code&gt;  不存在的时候，返回 &lt;code&gt;nil&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;演示&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;#&lt;/span&gt;&lt;span class=&#34;bash&#34;&gt; key不存在的时候，返回nil&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; LPOP k26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(nil)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;#&lt;/span&gt;&lt;span class=&#34;bash&#34;&gt; 设置一个列表，有三个元素&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; lpush k26 v26_1 v26_2 v26_3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(integer) 3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;#&lt;/span&gt;&lt;span class=&#34;bash&#34;&gt; 查看列表中的元素&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; lrange k26 0 -1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1) &amp;quot;v26_3&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2) &amp;quot;v26_2&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3) &amp;quot;v26_1&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;#&lt;/span&gt;&lt;span class=&#34;bash&#34;&gt; 依次pop出元素&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; lpop k26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;quot;v26_3&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; lpop k26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;quot;v26_2&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; lpop k26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;quot;v26_1&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; lpop k26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(nil)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;tip：  &lt;code&gt;lpush&lt;/code&gt;  +  &lt;code&gt;lpop&lt;/code&gt;  =&amp;gt; 栈， &lt;code&gt;rpush&lt;/code&gt;  +  &lt;code&gt;lpop&lt;/code&gt;  =&amp;gt; 队列。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;rpop-命令&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#rpop-命令&#34;&gt;#&lt;/a&gt;  &lt;code&gt;rpop&lt;/code&gt;  命令&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;语法&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;rpop key&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;解释&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;rpop&lt;/code&gt;  ：  &lt;code&gt;right pop&lt;/code&gt; ;&lt;/p&gt;
&lt;p&gt;和 lpop 相反。移除并返回列表的尾元素。如果 key 不存在返回 nil。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;演示&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight sh&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# key 不存在，返回nil&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; rpop k27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(nil)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 先设置一个列表&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; lpush k27 v27_1 v27_2 v27_3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(&lt;span class=&#34;built_in&#34;&gt;integer&lt;/span&gt;) 3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; lrange k27 0 -1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1) &lt;span class=&#34;string&#34;&gt;&amp;quot;v27_3&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2) &lt;span class=&#34;string&#34;&gt;&amp;quot;v27_2&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3) &lt;span class=&#34;string&#34;&gt;&amp;quot;v27_1&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 一次pop每个值&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; rpop k27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;&amp;quot;v27_1&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; rpop k27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;&amp;quot;v27_2&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; rpop k27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;&amp;quot;v27_3&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; rpop k27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(nil)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;tip:  &lt;code&gt;lpush&lt;/code&gt;  +  &lt;code&gt;rpop&lt;/code&gt;  =&amp;gt; 队列， &lt;code&gt;rpush&lt;/code&gt;  +  &lt;code&gt;rpop&lt;/code&gt;  =&amp;gt; 栈。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;lrange-命令&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#lrange-命令&#34;&gt;#&lt;/a&gt;  &lt;code&gt;lrange&lt;/code&gt;  命令&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;语法&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;LRANGE key start stop&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;解释&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;获取指定区间内的元素。0 表示第一个元素。如果超过了实际范围就返回空数组。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;演示&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight sh&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; LRANGE k22 0 10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1) &lt;span class=&#34;string&#34;&gt;&amp;quot;v22_4&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2) &lt;span class=&#34;string&#34;&gt;&amp;quot;v22_3&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3) &lt;span class=&#34;string&#34;&gt;&amp;quot;v22_2&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4) &lt;span class=&#34;string&#34;&gt;&amp;quot;v22_1&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5) &lt;span class=&#34;string&#34;&gt;&amp;quot;v22&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; LRANGE k22 0 1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1) &lt;span class=&#34;string&#34;&gt;&amp;quot;v22_4&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2) &lt;span class=&#34;string&#34;&gt;&amp;quot;v22_3&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; LRANGE k22 10 100&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(empty list or &lt;span class=&#34;built_in&#34;&gt;set&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;rpoplpush-命令&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#rpoplpush-命令&#34;&gt;#&lt;/a&gt;  &lt;code&gt;rpoplpush&lt;/code&gt;  命令&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;语法&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;RPOPLPUSH source destination&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;解释&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;将  &lt;code&gt;source&lt;/code&gt;  的尾元素插入到 &lt;code&gt;destination&lt;/code&gt;  列表的头元素中，返回该元素。 注意，这是一个原子操作。&lt;/p&gt;
&lt;p&gt;比如:  &lt;code&gt;source&lt;/code&gt; :  &lt;code&gt;a,b,c&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;distination&lt;/code&gt; :  &lt;code&gt;1,2,3&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;使用  &lt;code&gt;RPOPLPUSH source distination&lt;/code&gt;  , 则：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;source&lt;/code&gt; :  &lt;code&gt;a,b&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;distination&lt;/code&gt; :  &lt;code&gt;c,1,2,3&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;演示&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight sh&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 设置列表1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; lpush k28_1 v28_c v28_b v28_a&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(&lt;span class=&#34;built_in&#34;&gt;integer&lt;/span&gt;) 3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 设置列表2&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; lpush k28_2 v28_3 v28_2 v28_1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(&lt;span class=&#34;built_in&#34;&gt;integer&lt;/span&gt;) 3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 使用 rpoppush命令&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; RPOPLPUSH k28_1 k28_2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;&amp;quot;v28_c&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 查看列表1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; lrange k28_1 0 -1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1) &lt;span class=&#34;string&#34;&gt;&amp;quot;v28_a&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2) &lt;span class=&#34;string&#34;&gt;&amp;quot;v28_b&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 查看列表2&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; lrange k28_2 0 -1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1) &lt;span class=&#34;string&#34;&gt;&amp;quot;v28_c&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2) &lt;span class=&#34;string&#34;&gt;&amp;quot;v28_1&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3) &lt;span class=&#34;string&#34;&gt;&amp;quot;v28_2&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4) &lt;span class=&#34;string&#34;&gt;&amp;quot;v28_3&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;lrem-命令&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#lrem-命令&#34;&gt;#&lt;/a&gt;  &lt;code&gt;lrem&lt;/code&gt;  命令&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;语法&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;LREM key count value&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;解释&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;至多移除列表中  &lt;code&gt;count&lt;/code&gt;  个与参数  &lt;code&gt;value&lt;/code&gt;  相等的元素。&lt;/p&gt;
&lt;p&gt;有以下情況:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;count &amp;gt; 0&lt;/code&gt;  : 从表头开始向表尾搜索，移除与  &lt;code&gt;value&lt;/code&gt;  相等的元素，最多移除 &lt;code&gt;count&lt;/code&gt;  个 。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;count &amp;lt; 0&lt;/code&gt;  : 从表尾开始向表头搜索，移除与  &lt;code&gt;value&lt;/code&gt;  相等的元素，最多移除 &lt;code&gt;|count|&lt;/code&gt;  个。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;count = 0&lt;/code&gt;  : 移除表中所有与  &lt;code&gt;value&lt;/code&gt;  相等的值。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;演示&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;#&lt;/span&gt;&lt;span class=&#34;bash&#34;&gt; 演示 count&amp;gt;0 时&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;#&lt;/span&gt;&lt;span class=&#34;bash&#34;&gt; 设置一个列表&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; lpush k29_1 v29_1  v29  v29_2 v29 v29_3 v29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(integer) 6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;#&lt;/span&gt;&lt;span class=&#34;bash&#34;&gt; 从表头开始，移除2个 v29&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; lrem k29_1 2 v29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(integer) 2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; lrange k29_1 0 -1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1) &amp;quot;v29_3&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2) &amp;quot;v29_2&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3) &amp;quot;v29&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4) &amp;quot;v29_1&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;#&lt;/span&gt;&lt;span class=&#34;bash&#34;&gt; 演示count&amp;lt;0 时&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; lpush k29_2 v29_1 v29  v29_2 v29 v29_3 v29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(integer) 6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; lrem k29_2 -2 v29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(integer) 2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; LRANGE k29_2 0 -1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1) &amp;quot;v29&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2) &amp;quot;v29_3&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3) &amp;quot;v29_2&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4) &amp;quot;v29_1&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;#&lt;/span&gt;&lt;span class=&#34;bash&#34;&gt; 演示count=0时&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; lpush k29_3 v29_1 v29  v29_2 v29 v29_3 v29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(integer) 6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; lrem k29_3 0 v29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(integer) 3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; LRANGE k29_3 0 -1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1) &amp;quot;v29_3&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2) &amp;quot;v29_2&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3) &amp;quot;v29_1&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;llen-命令&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#llen-命令&#34;&gt;#&lt;/a&gt;  &lt;code&gt;llen&lt;/code&gt;  命令&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;语法&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;LLEN key&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;解释&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;获取列表的长度。&lt;/p&gt;
&lt;p&gt;如果  &lt;code&gt;key&lt;/code&gt;  不存在的时候，返回 &lt;code&gt;0&lt;/code&gt; .&lt;/p&gt;
&lt;p&gt;如果  &lt;code&gt;key&lt;/code&gt;  对应类型不是  &lt;code&gt;list&lt;/code&gt;  ，则返回一个错误。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;演示&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight sh&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; llen k30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(&lt;span class=&#34;built_in&#34;&gt;integer&lt;/span&gt;) 0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; lpush k30 v30_1 v30_2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(&lt;span class=&#34;built_in&#34;&gt;integer&lt;/span&gt;) 2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; llen k30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(&lt;span class=&#34;built_in&#34;&gt;integer&lt;/span&gt;) 2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 删掉k30，演示，类型不是list的时候，报错&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; del k30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(&lt;span class=&#34;built_in&#34;&gt;integer&lt;/span&gt;) 1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; &lt;span class=&#34;built_in&#34;&gt;set&lt;/span&gt; k30 v30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;OK&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; llen k30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(error) WRONGTYPE Operation against a key holding the wrong kind of value&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;lindex-命令&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#lindex-命令&#34;&gt;#&lt;/a&gt;  &lt;code&gt;lindex&lt;/code&gt;  命令&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;语法&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;lindex key index&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;解释&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;返回列表中，下标为  &lt;code&gt;index&lt;/code&gt;  的元素.  &lt;code&gt;-1&lt;/code&gt;  表示列表的最后一个元素，如果 &lt;code&gt;key&lt;/code&gt;  不存在，或者 &lt;code&gt;index&lt;/code&gt;  超出范围，返回 &lt;code&gt;nil&lt;/code&gt; ， 如果 key 不是一个列表类型，返回一个错误。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;演示&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; lpush k31 v31_3 v31_2 v31_1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(integer) 3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; LINDEX k31 2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;quot;v31_3&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; LINDEX k31 1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;quot;v31_2&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; LINDEX k31 0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;quot;v31_1&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;linsert-命令&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#linsert-命令&#34;&gt;#&lt;/a&gt;  &lt;code&gt;linsert&lt;/code&gt;  命令&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;语法&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;linsert key BEFORE|AFTER pivot value&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;解释&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;将 &lt;code&gt;value&lt;/code&gt;  插入到 &lt;code&gt;key&lt;/code&gt;  队列 &lt;code&gt;pivot&lt;/code&gt;  值之前或者之后。返回插入完成之后列表的长度。&lt;/p&gt;
&lt;p&gt;如果  &lt;code&gt;pivot&lt;/code&gt;  不存在 或者  &lt;code&gt;key&lt;/code&gt;  不存在，不执行任何操作。&lt;/p&gt;
&lt;p&gt;如果  &lt;code&gt;key&lt;/code&gt;  对应的不是一个列表类型，返回一个错误。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;演示&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; linsert k32 BEFORE k31_1 k31_0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(integer) 0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; lpush k32 v32_1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(integer) 1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;#&lt;/span&gt;&lt;span class=&#34;bash&#34;&gt; k32_3 =&amp;gt; pivot不存在&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; linsert k32 BEFORE v32_3 v31_2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(integer) -1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;#&lt;/span&gt;&lt;span class=&#34;bash&#34;&gt; pivot之前插入&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; linsert k32 BEFORE v32_1 v31_0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(integer) 2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;#&lt;/span&gt;&lt;span class=&#34;bash&#34;&gt; pivot之后插入&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; linsert k32 AFTER v32_1 v31_2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(integer) 3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;lset-命令&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#lset-命令&#34;&gt;#&lt;/a&gt; lset 命令&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;语法&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;lset key index value&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;解释&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;将列表中的 索引为 &lt;code&gt;index&lt;/code&gt;  的值设置为 &lt;code&gt;value&lt;/code&gt; 。 如果 &lt;code&gt;index&lt;/code&gt;  超出范围，则返回一个错误&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;演示&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight sh&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; lpush k33 v33_3 v33_1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(&lt;span class=&#34;built_in&#34;&gt;integer&lt;/span&gt;) 2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; lrange k33 0 -1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1) &lt;span class=&#34;string&#34;&gt;&amp;quot;v33_1&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2) &lt;span class=&#34;string&#34;&gt;&amp;quot;v33_3&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;## 将第二个值，索引为1，设置为v33_2&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; lset k33 1 v33_2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;OK&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; lrange k33 0 -1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1) &lt;span class=&#34;string&#34;&gt;&amp;quot;v33_1&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2) &lt;span class=&#34;string&#34;&gt;&amp;quot;v33_2&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 超出范围返回错误&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; lset k33 2 v33_2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(error) ERR index out of range&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;ltrim-命令&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#ltrim-命令&#34;&gt;#&lt;/a&gt;  &lt;code&gt;ltrim&lt;/code&gt;  命令&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;语法&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;ltrim key start stop&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;解释&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;保留列表从 &lt;code&gt;start&lt;/code&gt;  到 &lt;code&gt;stop&lt;/code&gt;  之间的元素。其他元素都将被删除。 注意：包含 (不删除) &lt;code&gt;start&lt;/code&gt;  和 &lt;code&gt;stop&lt;/code&gt;  两个元素.&lt;/p&gt;
&lt;p&gt;如果 &lt;code&gt;key&lt;/code&gt;  不存在，直接返回 &lt;code&gt;OK&lt;/code&gt; , 如果 &lt;code&gt;key&lt;/code&gt;  对应的不是列表，直接返回错误。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;演示&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight sh&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; lpush k34 v34_1 v34_2 v34_3 v34_4 v34_5 v34_6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(&lt;span class=&#34;built_in&#34;&gt;integer&lt;/span&gt;) 6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; ltrim k34 1 4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;OK&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; lrange k34  0 -1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1) &lt;span class=&#34;string&#34;&gt;&amp;quot;v34_5&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2) &lt;span class=&#34;string&#34;&gt;&amp;quot;v34_4&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3) &lt;span class=&#34;string&#34;&gt;&amp;quot;v34_3&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4) &lt;span class=&#34;string&#34;&gt;&amp;quot;v34_2&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;blpop-命令&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#blpop-命令&#34;&gt;#&lt;/a&gt; blpop 命令&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;语法&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;BLPOP key [key ...] timeout&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;解释&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;lpop&lt;/code&gt;  的 阻塞版本。  &lt;code&gt;block left pop&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;当给定列表内没有任何元素可供弹出的时候，连接将被 BLPOP 命令阻塞，直到等待超时或发现可弹出元素为止。&lt;br&gt;
当给定多个 key 参数时，按参数 key 的先后顺序依次检查各个列表，弹出第一个非空列表的头元素。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;演示&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight sh&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# push到三组列表，分别三个元素&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; lpush k35 v35_1 v35_2 v35_3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(&lt;span class=&#34;built_in&#34;&gt;integer&lt;/span&gt;) 3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; lrange k35 0 -1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1) &lt;span class=&#34;string&#34;&gt;&amp;quot;v35_3&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2) &lt;span class=&#34;string&#34;&gt;&amp;quot;v35_2&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3) &lt;span class=&#34;string&#34;&gt;&amp;quot;v35_1&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; lpush k35_1 v35_1 v35_2 v35_3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(&lt;span class=&#34;built_in&#34;&gt;integer&lt;/span&gt;) 3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; lpush k35_2 v35_1 v35_2 v35_3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(&lt;span class=&#34;built_in&#34;&gt;integer&lt;/span&gt;) 3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 阻塞调用lpop, 从左到右 依次pop元素，直到有一个元素可以pop。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; blpop k35 k35_1 k35_2 10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1) &lt;span class=&#34;string&#34;&gt;&amp;quot;k35&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2) &lt;span class=&#34;string&#34;&gt;&amp;quot;v35_3&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; blpop k35 k35_1 k35_2 10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1) &lt;span class=&#34;string&#34;&gt;&amp;quot;k35&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2) &lt;span class=&#34;string&#34;&gt;&amp;quot;v35_2&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; blpop k35 k35_1 k35_2 10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1) &lt;span class=&#34;string&#34;&gt;&amp;quot;k35&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2) &lt;span class=&#34;string&#34;&gt;&amp;quot;v35_1&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; blpop k35 k35_1 k35_2 10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1) &lt;span class=&#34;string&#34;&gt;&amp;quot;k35_1&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2) &lt;span class=&#34;string&#34;&gt;&amp;quot;v35_3&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; blpop k35 k35_1 k35_2 10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1) &lt;span class=&#34;string&#34;&gt;&amp;quot;k35_1&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2) &lt;span class=&#34;string&#34;&gt;&amp;quot;v35_2&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; blpop k35 k35_1 k35_2 10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1) &lt;span class=&#34;string&#34;&gt;&amp;quot;k35_1&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2) &lt;span class=&#34;string&#34;&gt;&amp;quot;v35_1&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; blpop k35 k35_1 k35_2 10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1) &lt;span class=&#34;string&#34;&gt;&amp;quot;k35_2&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2) &lt;span class=&#34;string&#34;&gt;&amp;quot;v35_3&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; blpop k35 k35_1 k35_2 10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1) &lt;span class=&#34;string&#34;&gt;&amp;quot;k35_2&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2) &lt;span class=&#34;string&#34;&gt;&amp;quot;v35_2&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; blpop k35 k35_1 k35_2 10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1) &lt;span class=&#34;string&#34;&gt;&amp;quot;k35_2&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2) &lt;span class=&#34;string&#34;&gt;&amp;quot;v35_1&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; blpop k35 k35_1 k35_2 10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 没有元素的时候会阻塞一直到超时。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(nil)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(10.59s)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;brpop-命令&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#brpop-命令&#34;&gt;#&lt;/a&gt;  &lt;code&gt;brpop&lt;/code&gt;  命令&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;语法&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;BRPOP key [key ...] timeout&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;解释&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;rpop&lt;/code&gt;  的阻塞版本。  &lt;code&gt;block right pop&lt;/code&gt; &lt;br&gt;
 当给定多个 &lt;code&gt;key&lt;/code&gt;  的时候，按照 &lt;code&gt;key&lt;/code&gt;  的先后顺序依次检查各个列表。直到弹出一个元素或者超时。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;演示&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight sh&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 设置两个列表&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; lpush k36 v36_1 v36_2 v36_3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(&lt;span class=&#34;built_in&#34;&gt;integer&lt;/span&gt;) 3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; lpush k36_1 v36_1 v36_2 v36_3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(&lt;span class=&#34;built_in&#34;&gt;integer&lt;/span&gt;) 3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 阻塞式的pop出每个值。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; BRPOP k36 k36_1 10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1) &lt;span class=&#34;string&#34;&gt;&amp;quot;k36&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2) &lt;span class=&#34;string&#34;&gt;&amp;quot;v36_1&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; BRPOP k36 k36_1 10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1) &lt;span class=&#34;string&#34;&gt;&amp;quot;k36&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2) &lt;span class=&#34;string&#34;&gt;&amp;quot;v36_2&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; BRPOP k36 k36_1 10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1) &lt;span class=&#34;string&#34;&gt;&amp;quot;k36&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2) &lt;span class=&#34;string&#34;&gt;&amp;quot;v36_3&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; BRPOP k36 k36_1 10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1) &lt;span class=&#34;string&#34;&gt;&amp;quot;k36_1&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2) &lt;span class=&#34;string&#34;&gt;&amp;quot;v36_1&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; BRPOP k36 k36_1 10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1) &lt;span class=&#34;string&#34;&gt;&amp;quot;k36_1&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2) &lt;span class=&#34;string&#34;&gt;&amp;quot;v36_2&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; BRPOP k36 k36_1 10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1) &lt;span class=&#34;string&#34;&gt;&amp;quot;k36_1&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2) &lt;span class=&#34;string&#34;&gt;&amp;quot;v36_3&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; BRPOP k36 k36_1 10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 阻塞10s&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(nil)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(10.61s)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;Tips:  &lt;code&gt;lpush&lt;/code&gt;  +  &lt;code&gt;brpop&lt;/code&gt;  =&amp;gt; 阻塞队列。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;brpoplpush-命令&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#brpoplpush-命令&#34;&gt;#&lt;/a&gt;  &lt;code&gt;brpoplpush&lt;/code&gt;  命令&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;语法&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;BRPOPLPUSH source destination timeout&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;解释&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;rpoplpush&lt;/code&gt;  的阻塞版本。  &lt;code&gt;block right left push&lt;/code&gt; 。&lt;/p&gt;
&lt;p&gt;当列表  &lt;code&gt;source&lt;/code&gt;  为空的时候，该命令将阻塞，直到超时，或者 source 中有一个元素可以 pop。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;演示&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight sh&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 设置一个列表&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; lpush k37_source v37_1 v37_2 v37_3 v37_4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(&lt;span class=&#34;built_in&#34;&gt;integer&lt;/span&gt;) 4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 将source移动到distination中。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; BRPOPLPUSH k37_source k37_distination 10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;&amp;quot;v37_1&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 查看下distination。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; lrange k37_distination 0 -1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1) &lt;span class=&#34;string&#34;&gt;&amp;quot;v37_1&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; BRPOPLPUSH k37_source k37_distination 10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;&amp;quot;v37_2&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; BRPOPLPUSH k37_source k37_distination 10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;&amp;quot;v37_3&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; BRPOPLPUSH k37_source k37_distination 10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;&amp;quot;v37_4&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 这时我们启动两个客户端,演示阻塞直到另一个客户端执行source列表中的插入操作。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 客户端1中继续执行 BRPOPLPUSH, 然后马上在客户端2中，输入&amp;quot;LPUSH k37_source v37_5&amp;quot;.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 客户端1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; BRPOPLPUSH k37_source k37_distination 10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;&amp;quot;v37_5&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(3.02s)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 客户端2&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; LPUSH k37_source v37_5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(&lt;span class=&#34;built_in&#34;&gt;integer&lt;/span&gt;) 1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&#34;list内部结构之quicklist&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#list内部结构之quicklist&#34;&gt;#&lt;/a&gt;  &lt;code&gt;list&lt;/code&gt;  内部结构之 &lt;code&gt;quicklist&lt;/code&gt;&lt;/h2&gt;
&lt;h3 id=&#34;quicklist&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#quicklist&#34;&gt;#&lt;/a&gt;  &lt;code&gt;quicklist&lt;/code&gt;&lt;/h3&gt;
&lt;p&gt;我们来看一下 &lt;code&gt;list&lt;/code&gt;  的内部实现  &lt;code&gt;quicklist&lt;/code&gt;  结构.&lt;/p&gt;
&lt;p&gt;特别注明：  &lt;code&gt;quicklist&lt;/code&gt;  是双向的链表结构。&lt;/p&gt;
&lt;p&gt;在 &lt;code&gt;Redis&lt;/code&gt;  中使用如下结构体表示.&lt;/p&gt;
&lt;figure class=&#34;highlight c++&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;typedef&lt;/span&gt; &lt;span class=&#34;class&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;struct&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;quicklist&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;// 头结点&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    quicklistNode *head;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;// 尾结点&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    quicklistNode *tail;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;// 列表的元素个数&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;unsigned&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;long&lt;/span&gt; count;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;// 链表的长度&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;unsigned&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;long&lt;/span&gt; len;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;// 单个节点的填充因子&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; fill : &lt;span class=&#34;number&#34;&gt;16&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;// 不进行节点压缩的最大深度&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;// 超过这个节点就会进行节点压缩&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;unsigned&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; compress : &lt;span class=&#34;number&#34;&gt;16&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125; quicklist;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;code&gt;quicklist&lt;/code&gt;  是回一个通用的双向链接快速列表实现。它的每个节点用  &lt;code&gt;quicklistNode&lt;/code&gt;  表示。&lt;/p&gt;
&lt;p&gt;一起来看下  &lt;code&gt;qucklistNode&lt;/code&gt;  是什么吧。&lt;/p&gt;
&lt;h3 id=&#34;quicklistnode&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#quicklistnode&#34;&gt;#&lt;/a&gt;  &lt;code&gt;quicklistNode&lt;/code&gt;&lt;/h3&gt;
&lt;figure class=&#34;highlight c++&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;typedef&lt;/span&gt; &lt;span class=&#34;class&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;struct&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;quicklistNode&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;// 前一个节点&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;class&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;struct&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;quicklistNode&lt;/span&gt; *&lt;span class=&#34;title&#34;&gt;prev&lt;/span&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;// 后一个节点&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;class&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;struct&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;quicklistNode&lt;/span&gt; *&lt;span class=&#34;title&#34;&gt;next&lt;/span&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;// 数据指针。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;// 如果指向的数据没有被压缩,那么会指向zipList结构。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;// 如果进行了压缩，那么会指向 quickLZF结构。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;unsigned&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;char&lt;/span&gt; *zl;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;// 当前节点的大小&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;unsigned&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; sz;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;// 元素的个数&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;unsigned&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; count : &lt;span class=&#34;number&#34;&gt;16&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;// 编码方式，1=RAW，2=LZF&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;// 1 表示未被压缩&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;// 2 表示使用LZF结构进行的压缩&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;unsigned&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; encoding : &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;;   &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;// 使用的容器是什么？1=NONE,2=ZIPLIST&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;unsigned&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; container : &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;// 前一个节点是否被压缩&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;unsigned&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; recompress : &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;// 是否压缩&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;unsigned&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; attempted_compress : &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;// 暂时留出来，以后使用。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;unsigned&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; extra : &lt;span class=&#34;number&#34;&gt;10&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125; quicklistNode;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;code&gt;quicklistNode&lt;/code&gt;  是一个 &lt;code&gt;32byte&lt;/code&gt;  的结构体，用于描述一个 &lt;code&gt;quicklist&lt;/code&gt;  的一个节点。从代码中可看出，使用了位图来节约空间。在上面的代码中我们还提到两种数据结构，对应的是代码中  &lt;code&gt;zl&lt;/code&gt;  指针，指向的位置，如果数据被压缩，指向 &lt;code&gt;quicklistLZF&lt;/code&gt;  和 没有数据没有被压缩就是指向  &lt;code&gt;ziplist&lt;/code&gt; .&lt;/p&gt;
&lt;h3 id=&#34;ziplist&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#ziplist&#34;&gt;#&lt;/a&gt;  &lt;code&gt;ziplist&lt;/code&gt;&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;ziplist&lt;/code&gt;  这种结构比较复杂，而且在源码中也没有给出明确定义。那  &lt;code&gt;ziplist&lt;/code&gt;  这么神秘的结构到底是什么样的呢？&lt;/p&gt;
&lt;p&gt;别着急，我们先大体熟悉下 &lt;code&gt;ziplist&lt;/code&gt;  这种结构的设计意图。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;ziplist&lt;/code&gt;  是一个经过特殊编码的双向链表，它的设计意图就是 提高存储效率，  &lt;code&gt;ziplist&lt;/code&gt;  可以用于存储字符串或者整数，其中整数是按照真正的二进制进行编码的。 它能以 &lt;code&gt;O(1)&lt;/code&gt;  的效率在表的两端进行 &lt;code&gt;pop&lt;/code&gt;  和 &lt;code&gt;push&lt;/code&gt;  操作。&lt;/p&gt;
&lt;p&gt;我们都知道，普通的链表每项都是一块独立的内存空间，各项之间都是通过指针连接起来的。这种方式，会带来大量的空间碎片，指针引用也会占用部分空间内存。所以 &lt;code&gt;ziplist&lt;/code&gt;  是将表中每项放在连续的空间内存中 (类似数组)， &lt;code&gt;ziplist&lt;/code&gt;  还对值采取了一个可变长度的存储方式，大的值就用大空间，小的值就用小空间。&lt;/p&gt;
&lt;h4 id=&#34;ziplist结构的官方定义&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#ziplist结构的官方定义&#34;&gt;#&lt;/a&gt; ziplist 结构的官方定义。&lt;/h4&gt;
&lt;blockquote&gt;
&lt;p&gt;The general layout of the ziplist is as follows:&lt;br&gt;
 &lt;code&gt;&amp;lt;zlbytes&amp;gt; &amp;lt;zltail&amp;gt; &amp;lt;zllen&amp;gt; &amp;lt;entry&amp;gt; &amp;lt;entry&amp;gt; ... &amp;lt;entry&amp;gt; &amp;lt;zlend&amp;gt;&lt;/code&gt; &lt;br&gt;
 &lt;code&gt;&amp;lt;uint32_t zlbytes&amp;gt;&lt;/code&gt;  is an unsigned integer to hold the number of bytes that  the ziplist occupies, including the four bytes of the zlbytes field itself.  This value needs to be stored to be able to resize the entire structure  without the need to traverse it first.&lt;br&gt;
 &lt;code&gt;&amp;lt;uint32_t zltail&amp;gt;&lt;/code&gt;  is the offset to the last entry in the list. This allows  a pop operation on the far side of the list without the need for full  traversal.&lt;br&gt;
 &lt;code&gt;&amp;lt;uint16_t zllen&amp;gt;&lt;/code&gt;  is the number of entries. When there are more than  2^16-2 entries, this value is set to 2^16-1 and we need to traverse the entire list to know how many items it holds.&lt;br&gt;
 &lt;code&gt;&amp;lt;uint8_t zlend&amp;gt;&lt;/code&gt;  is a special entry representing the end of the ziplist. Is encoded as a single byte equal to 255. No other normal entry starts with a byte set to the value of 255.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;根据上面中解释我们可以得出以下这种模型：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;./images/ziplist-01-Ziplist%E7%9A%84%E7%BB%93%E6%9E%84.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;如果没有特殊指定的话，都是采用小尾数法存储的。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;zlbytes&lt;/code&gt; : 存储一个无符号整数，用于存储 ziplist 的所用的字节数，(包括 zlbytes 字段本身的四个字节)，当重新分配内容的时候，不需要遍历整个列表来计算内存大小。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;zltail&lt;/code&gt; : 一个无符号整数，表示 ziplist 中最后一个元素的偏移字节数，这样可以方便的找到最后一个元素，从而可以以 O (1) 的复杂度在尾端进行 pop 和 push。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;zllen：压缩列表包含的结点的个数，即entry的个数。&lt;/code&gt; &lt;br&gt;
这里的 &lt;code&gt;zllen&lt;/code&gt;  是占用 &lt;code&gt;16bit&lt;/code&gt; , 也就是说最多存储  &lt;code&gt;2^16-2&lt;/code&gt;  个。但是 &lt;code&gt;ziplist&lt;/code&gt;  超了 &lt;code&gt;2^16-2&lt;/code&gt;  个也是可以表示的。那种情况就是 &lt;code&gt;16&lt;/code&gt;  个 &lt;code&gt;1&lt;/code&gt;  的时候，只需要从头遍历到尾就好了。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;entry&lt;/code&gt; : 真正存放数据的数据项，每个数据项都有自己的内部结构。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;zlend&lt;/code&gt; :  &lt;code&gt;ziplist&lt;/code&gt;  的最后一个字节，值固定等于 &lt;code&gt;255&lt;/code&gt; ，就是一个结束标记。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;entry-结构&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#entry-结构&#34;&gt;#&lt;/a&gt; entry 结构&lt;/h4&gt;
&lt;p&gt;&lt;code&gt;entry&lt;/code&gt;  是由三部分构成的。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;previous length（pre_entry_length）&lt;/code&gt; ： 表示前一个数据节点占用的总字节数，这个字段的用处是为了让 ziplist 能够从后向前遍历（从后一项的位置，只需向前偏移 &lt;code&gt;previous length&lt;/code&gt;  个字节，就找到了前一项）。这个字段采用变长编码。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;encoding&lt;/code&gt; （ &lt;code&gt;encoding&amp;amp;cur_entry_length&lt;/code&gt; ）：表示当前数据节点 content 的内容类型以及长度。也采用变长编码。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;entry-data&lt;/code&gt; ：表示当前节点存储的数据， &lt;code&gt;entry-data&lt;/code&gt;  的内容类型有整数类型和字节数组类型，且某些条件下 &lt;code&gt;entry-data&lt;/code&gt;  的长度可能为 &lt;code&gt;0&lt;/code&gt; 。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;所以我们可以得出  &lt;code&gt;ziplist&lt;/code&gt;  是一个这样的结构。&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;./images/ziplist-01-entry%E7%9A%84%E7%BB%93%E6%9E%84.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;有时，encoding 也可以代表 entry 本身，就像小整数一样。&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;./images/ziplist-01-entry%E7%9A%84%E7%BB%93%E6%9E%842.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;这里就是大体的了解下 ziplist 这种数据结构。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;这里是一篇关于 &lt;a href=&#34;./10-Redis%E7%9A%84%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B9%8Bziplist.md&#34;&gt;ziplist&lt;/a&gt; 详细解读的文章。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;quicklistlzf&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#quicklistlzf&#34;&gt;#&lt;/a&gt;  &lt;code&gt;quicklistLZF&lt;/code&gt;&lt;/h3&gt;
&lt;p&gt;看完了比较神秘的 &lt;code&gt;ziplist&lt;/code&gt;  结构，我们来看一个比较简单的 &lt;code&gt;quicklist&lt;/code&gt;  的压缩节点的结构  &lt;code&gt;quicklistLZF&lt;/code&gt; 。&lt;/p&gt;
&lt;figure class=&#34;highlight c++&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;/**&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt; * quicklistLZF是一个4 + N字节的 struct。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt; * sz 是 compressed 字段的字节长度。&amp;#x27;compressed&amp;#x27; 是长度为 sz的 LZF数据。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt; *&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt; * 未被压缩的长度保存到 quicklistNode-&amp;gt;sz中。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt; *&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt; * 当压缩了quicklistNode-&amp;gt;zl时，quicklistNode-&amp;gt;zl指向的是一个 quicklistLZF类型的数据。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt; * 未压缩的时候，指向的是ziplist.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt; */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;typedef&lt;/span&gt; &lt;span class=&#34;class&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;struct&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;quicklistLZF&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;///compressed数组长度 &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;unsigned&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; sz; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;char&lt;/span&gt; compressed[];&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125; quicklistLZF;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&#34;总结&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#总结&#34;&gt;#&lt;/a&gt; 总结&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;list&lt;/code&gt;  相关的命令。以及常见的应用场景。比如栈和队列等等。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;list&lt;/code&gt;  其实是一种链表结构，但是不是一个普通的链表结构。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;list&lt;/code&gt;  是由  &lt;code&gt;quicklist&lt;/code&gt;  这种数据结构实现的。 &lt;code&gt;quicklist&lt;/code&gt;  中的每个节点是 &lt;code&gt;quicklistNode&lt;/code&gt; , 而 &lt;code&gt;quicklist&lt;/code&gt;  中 &lt;code&gt;zl&lt;/code&gt;  指针，指向的是 一个 &lt;code&gt;ziplist&lt;/code&gt;  或者 &lt;code&gt;quickListLZF&lt;/code&gt; 。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ziplist&lt;/code&gt;  是一个比较神秘的数据结构，有 &lt;code&gt;5&lt;/code&gt;  部分构成，是连续存储的，可以实现 &lt;code&gt;O(1)&lt;/code&gt;  的尾端 &lt;code&gt;pop&lt;/code&gt;  和 &lt;code&gt;push&lt;/code&gt;  操作。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;最后&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#最后&#34;&gt;#&lt;/a&gt; 最后&lt;/h2&gt;
&lt;p&gt;期望与你一起遇见更好的自己&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/images/qrcode.jpg&#34; alt=&#34;期望与你一起遇见更好的自己&#34;&gt;&lt;/p&gt;
</content>
        <category term="Redis" />
        <updated>2021-08-01T07:08:55.000Z</updated>
    </entry>
    <entry>
        <id>https://fangjiaxiaobai.github.io/2021/08/01/Redis%E7%B3%BB%E5%88%97/B-1-Redis%E7%9A%84%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B%E4%B9%8BString/</id>
        <title>Redis数据结构之 String</title>
        <link rel="alternate" href="https://fangjiaxiaobai.github.io/2021/08/01/Redis%E7%B3%BB%E5%88%97/B-1-Redis%E7%9A%84%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B%E4%B9%8BString/"/>
        <content type="html">&lt;p&gt;今天来聊聊  &lt;code&gt;Redis&lt;/code&gt;  的 &lt;code&gt;string&lt;/code&gt; ，这一数据结构。&lt;/p&gt;
&lt;h3 id=&#34;string简介&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#string简介&#34;&gt;#&lt;/a&gt;  &lt;code&gt;string&lt;/code&gt;  简介&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;string&lt;/code&gt;  是 &lt;code&gt;Redis&lt;/code&gt;  中最基本，也是最简单的数据结构。一个键 ( &lt;code&gt;key&lt;/code&gt; ) 对应着一个 &lt;code&gt;string&lt;/code&gt;  类型的值 ( &lt;code&gt;value&lt;/code&gt; ). 我们都知道 &lt;code&gt;redis&lt;/code&gt;  是使用 &lt;code&gt;C&lt;/code&gt;  语言来编写的，但是  &lt;code&gt;string&lt;/code&gt;  这一个数据结构并非是使用 &lt;code&gt;C&lt;/code&gt;  语言的  &lt;code&gt;string(char[])&lt;/code&gt;  来实现的，要想先了解，那就做电梯吧 -&amp;gt;( &lt;a href=&#34;#%60Redis%60%E5%A6%82%E4%BD%95%E5%AE%9E%E7%8E%B0%E8%BF%99%E4%B8%80%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84&#34;&gt;电梯直达&lt;/a&gt; ).&lt;/p&gt;
&lt;p&gt;现在，先暂且抛开内部实现，我们先看看有怎么使用这一数据结构。&lt;/p&gt;
&lt;h3 id=&#34;string相关常用命令&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#string相关常用命令&#34;&gt;#&lt;/a&gt;  &lt;code&gt;string&lt;/code&gt;  相关常用命令&lt;/h3&gt;
&lt;h4 id=&#34;set命令&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#set命令&#34;&gt;#&lt;/a&gt;  &lt;code&gt;set&lt;/code&gt;  命令&lt;/h4&gt;
&lt;p&gt;&lt;code&gt;SET key value [expiration EX seconds|PX milliseconds] [NX|XX]&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;使用示例:&lt;/p&gt;
&lt;figure class=&#34;highlight sh&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 1.设置一个键值对 f1=&amp;gt;f1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; &lt;span class=&#34;built_in&#34;&gt;set&lt;/span&gt; k1 v1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;OK&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 根据键查询值&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; get k1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;&amp;quot;v1&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 2.设置一个键值对(f2=&amp;gt;f2),设置超时时间为10s&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# EX 表示秒&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; &lt;span class=&#34;built_in&#34;&gt;set&lt;/span&gt; k2 v2 EX 10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;OK&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; get k2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;&amp;quot;v2&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 等待10s之后去查询f2&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; get k2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(nil)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 3.设置一个键值对(f3=&amp;gt;f3),设置超时时间为 10000毫秒&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# PX 表示为毫秒&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; &lt;span class=&#34;built_in&#34;&gt;set&lt;/span&gt; k3 v3 PX 10000&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;OK&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; get k3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;&amp;quot;v3&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; get k3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(nil)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 4.设置键值对k4=&amp;gt;v4,验证&amp;quot;存在相同的key就设置失败&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# setnx 命令也可实现,注意返回值。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; &lt;span class=&#34;built_in&#34;&gt;set&lt;/span&gt; k4 v4 NX&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;OK&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 如果存在相同的key就设置失败(与下面的注意对比)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; &lt;span class=&#34;built_in&#34;&gt;set&lt;/span&gt; k4 v4 NX&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(nil)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 5.验证&amp;quot;不存在相同的key就设置失败&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; &lt;span class=&#34;built_in&#34;&gt;set&lt;/span&gt; k5 v5 XX&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(nil)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 先设置一个键值对,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; &lt;span class=&#34;built_in&#34;&gt;set&lt;/span&gt; k5 v5 &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;OK&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 设置不存在相同的key就设置失败&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; &lt;span class=&#34;built_in&#34;&gt;set&lt;/span&gt; k5 v5 XX&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;OK&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&#34;setnx命令&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#setnx命令&#34;&gt;#&lt;/a&gt;  &lt;code&gt;setnx&lt;/code&gt;  命令&lt;/h4&gt;
&lt;p&gt;&lt;code&gt;setnx key value&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;set if not exists&lt;/code&gt;  的缩写。如果已存在 key, 返回 0, 不存在返回 1. 常用于分布式锁。&lt;/p&gt;
&lt;p&gt;使用实例&lt;/p&gt;
&lt;figure class=&#34;highlight sh&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 设置一个不存在的键值对 k6=&amp;gt;v6&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; setnx k6 v6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(&lt;span class=&#34;built_in&#34;&gt;integer&lt;/span&gt;) 1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 如果key已经存在,则返回0。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; setnx k6 v6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(&lt;span class=&#34;built_in&#34;&gt;integer&lt;/span&gt;) 0&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&#34;setex-命令&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#setex-命令&#34;&gt;#&lt;/a&gt;  &lt;code&gt;setEx&lt;/code&gt;  命令&lt;/h4&gt;
&lt;p&gt;&lt;code&gt;setex key seconds value&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;给键值对设置生存时间 (秒级别)。&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;#&lt;/span&gt;&lt;span class=&#34;bash&#34;&gt; 设置k7=&amp;gt;v7这个键值对的生存时间为5s&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; setex k7 5 v7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;OK&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; get k7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;quot;v7&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;#&lt;/span&gt;&lt;span class=&#34;bash&#34;&gt; 过5s秒钟之后,再查看。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; get k7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(nil)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; &lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&#34;psetex-命令&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#psetex-命令&#34;&gt;#&lt;/a&gt;  &lt;code&gt;psetEx&lt;/code&gt;  命令&lt;/h4&gt;
&lt;p&gt;&lt;code&gt;psetex key milliseconds value&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;tip&lt;/code&gt; : 命令助记:  &lt;code&gt;psetex&lt;/code&gt;  ,  &lt;code&gt;p&lt;/code&gt;  直接的是毫秒。可以参考 &lt;code&gt;set&lt;/code&gt;  命令的 &lt;code&gt;PX&lt;/code&gt;  选项。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;给键值对设置生存时间 (毫秒级别)。&lt;/p&gt;
&lt;figure class=&#34;highlight sh&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 设置键值对&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; psetex k8 5000 v8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;OK&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 获取k8的值&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; get k8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;&amp;quot;v8&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 5s之后，获取k8的值&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; get k8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(nil)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&#34;get命令&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#get命令&#34;&gt;#&lt;/a&gt;  &lt;code&gt;get&lt;/code&gt;  命令&lt;/h4&gt;
&lt;p&gt;这个命令不多说了，获取 &lt;code&gt;key&lt;/code&gt;  相关联的 &lt;code&gt;value&lt;/code&gt; .  &lt;code&gt;get key&lt;/code&gt;&lt;/p&gt;
&lt;h4 id=&#34;getset命令&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#getset命令&#34;&gt;#&lt;/a&gt;  &lt;code&gt;getset&lt;/code&gt;  命令&lt;/h4&gt;
&lt;p&gt;&lt;code&gt;getset key value&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;设置键值对， &lt;code&gt;key=&amp;gt;value&lt;/code&gt; , 如果 &lt;code&gt;key&lt;/code&gt;  已经存在，返回旧值。不存在返回  &lt;code&gt;nil&lt;/code&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight sh&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 设置键值对&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; getset k9 v9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(nil)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 获取值&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; get k9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;&amp;quot;v9&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 在设置一次k9,值为vv9,返回旧值 v9&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; getset k9 vv9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;&amp;quot;v9&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;ps: 如果原来的存在 key，但是 value 的类型与新设置的类型不一致，会抛出命令错误。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;figure class=&#34;highlight sh&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 设置一个list类型，key为k9_1, Value中只有一个元素v9_1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; lpush k9_1 v9_1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(&lt;span class=&#34;built_in&#34;&gt;integer&lt;/span&gt;) 1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 使用getset命令载设置一次,抛出命令错误。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; getset k9_1 vv9_1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(error) WRONGTYPE Operation against a key holding the wrong kind of value&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&#34;strlen-命令&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#strlen-命令&#34;&gt;#&lt;/a&gt;  &lt;code&gt;strlen&lt;/code&gt;  命令&lt;/h4&gt;
&lt;p&gt;&lt;code&gt;strlen key&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;返回字符串的长度。如果 key 不存在的时候，返回 0, 如果 key 对应的不是一个字符串时，返回错误.&lt;/p&gt;
&lt;figure class=&#34;highlight sh&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; &lt;span class=&#34;built_in&#34;&gt;set&lt;/span&gt; k10 v10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;OK&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; strlen k10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(&lt;span class=&#34;built_in&#34;&gt;integer&lt;/span&gt;) 3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 演示报错&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; lpush k10_1 v10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(&lt;span class=&#34;built_in&#34;&gt;integer&lt;/span&gt;) 1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; strlen k10_1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(error) WRONGTYPE Operation against a key holding the wrong kind of value&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&#34;append命令&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#append命令&#34;&gt;#&lt;/a&gt;  &lt;code&gt;APPEND&lt;/code&gt;  命令&lt;/h4&gt;
&lt;p&gt;&lt;code&gt;APPEND key value&lt;/code&gt;  命令&lt;/p&gt;
&lt;p&gt;根据 key，给 key 对应的值追加字符串。如果 key 不存在，就设置一对键值对。&lt;/p&gt;
&lt;figure class=&#34;highlight sh&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 如果key不存在则设置键值对&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; append k11 v11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(&lt;span class=&#34;built_in&#34;&gt;integer&lt;/span&gt;) 3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; get k11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;&amp;quot;v11&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 如果存在，则追加&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; append k11 v11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(&lt;span class=&#34;built_in&#34;&gt;integer&lt;/span&gt;) 6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; get k11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;&amp;quot;v11v11&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&#34;setrange命令&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#setrange命令&#34;&gt;#&lt;/a&gt;  &lt;code&gt;setrange&lt;/code&gt;  命令&lt;/h4&gt;
&lt;p&gt;&lt;code&gt;setrange key offset value&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;从偏移量  &lt;code&gt;offset&lt;/code&gt;  开始覆写原来 &lt;code&gt;key&lt;/code&gt;  的值。如果 &lt;code&gt;key&lt;/code&gt;  不存的时候当作空字符串处理。返回被设置后 &lt;code&gt;Value&lt;/code&gt;  的长度。&lt;/p&gt;
&lt;figure class=&#34;highlight sh&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 设置不存在的key&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; setrange k12 3 v12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(&lt;span class=&#34;built_in&#34;&gt;integer&lt;/span&gt;) 6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 在offset前的空位置会用 \x00 填充&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; get k12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;&amp;quot;\x00\x00\x00v12&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 设置已经存在的key&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; setrange k12 4 v12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(&lt;span class=&#34;built_in&#34;&gt;integer&lt;/span&gt;) 7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; get k12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;&amp;quot;\x00\x00\x00vv12&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&#34;getrange命令&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#getrange命令&#34;&gt;#&lt;/a&gt;  &lt;code&gt;getrange&lt;/code&gt;  命令&lt;/h4&gt;
&lt;p&gt;&lt;code&gt;getrange key start end&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;获取指定区间的值。报错 start 和 end 位置。索引位置是从 0 开始的。&lt;/p&gt;
&lt;p&gt;负数偏移量表示从字符创的末位开始计数。&lt;/p&gt;
&lt;figure class=&#34;highlight sh&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; &lt;span class=&#34;built_in&#34;&gt;set&lt;/span&gt; k13 v13v13v13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;OK&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; getrange k13 2 5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;&amp;quot;3v13&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 从索引为2处，到倒数第4位。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; getrange k13 2 -4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;&amp;quot;3v13&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 如果end大于Value的长度，返回目前start到结束的部分&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; getrange k13 3 10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;&amp;quot;v13v13&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 超过Value的长度返回为 &amp;quot;&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; getrange k13 100 120&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&#34;incr-命令&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#incr-命令&#34;&gt;#&lt;/a&gt;  &lt;code&gt;incr&lt;/code&gt;  命令&lt;/h4&gt;
&lt;p&gt;&lt;code&gt;incr key&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;在 key 对应的 Value 上进行自增 1. 如果 Value 可以解释为数据，则自增，反之，返回错误。&lt;/p&gt;
&lt;p&gt;返回值为自增后的值。&lt;/p&gt;
&lt;p&gt;如果 ke 不存在，则先初始化 key 对应的 Value=0， 然后再自增。&lt;/p&gt;
&lt;p&gt;相对的是: &lt;a href=&#34;#%60DECR%60%E5%91%BD%E4%BB%A4&#34;&gt; &lt;code&gt;DECR&lt;/code&gt;  命令&lt;/a&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight sh&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; incr k14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(&lt;span class=&#34;built_in&#34;&gt;integer&lt;/span&gt;) 1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; get k14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;&amp;quot;1&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; incr k14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(&lt;span class=&#34;built_in&#34;&gt;integer&lt;/span&gt;) 2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&#34;incrby命令&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#incrby命令&#34;&gt;#&lt;/a&gt;  &lt;code&gt;incrby&lt;/code&gt;  命令&lt;/h4&gt;
&lt;p&gt;&lt;code&gt;incrby key increment&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;带有步长的自增命令。&lt;/p&gt;
&lt;p&gt;相对的命令是: &lt;a href=&#34;%60DECRBY%60%E5%91%BD%E4%BB%A4&#34;&gt; &lt;code&gt;DECRBY&lt;/code&gt;  命令&lt;/a&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight sh&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; incrby k15 5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(&lt;span class=&#34;built_in&#34;&gt;integer&lt;/span&gt;) 5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; INCRBY k15 5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(&lt;span class=&#34;built_in&#34;&gt;integer&lt;/span&gt;) 10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; INCRBY k15 5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(&lt;span class=&#34;built_in&#34;&gt;integer&lt;/span&gt;) 15&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&#34;incrbyfloat命令&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#incrbyfloat命令&#34;&gt;#&lt;/a&gt;  &lt;code&gt;INCRBYFLOAT&lt;/code&gt;  命令&lt;/h4&gt;
&lt;p&gt;&lt;code&gt;INCRBYFLOAT key increment&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;带有步长的浮点数自增&lt;/p&gt;
&lt;figure class=&#34;highlight sh&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; INCRBYFLOAT k16 5.0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;&amp;quot;5&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; INCRBYFLOAT k16 5.2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;&amp;quot;10.2&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; INCRBYFLOAT k16 5.4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;&amp;quot;15.6&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&#34;decr命令&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#decr命令&#34;&gt;#&lt;/a&gt;  &lt;code&gt;DECR&lt;/code&gt;  命令&lt;/h4&gt;
&lt;p&gt;&lt;code&gt;DECR key&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;自减 &lt;code&gt;1&lt;/code&gt; .&lt;/p&gt;
&lt;figure class=&#34;highlight sh&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 如果key，不存在，同样会初始化为0，然后自减1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; DECR k17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(&lt;span class=&#34;built_in&#34;&gt;integer&lt;/span&gt;) -1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; DECR k17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(&lt;span class=&#34;built_in&#34;&gt;integer&lt;/span&gt;) -2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; DECR k17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(&lt;span class=&#34;built_in&#34;&gt;integer&lt;/span&gt;) -3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&#34;decrby命令&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#decrby命令&#34;&gt;#&lt;/a&gt;  &lt;code&gt;DECRBY&lt;/code&gt;  命令&lt;/h4&gt;
&lt;p&gt;带有步长的自减命令，与 &lt;a href=&#34;%60INCRBY%60%E5%91%BD%E4%BB%A4&#34;&gt; &lt;code&gt;INCRBY&lt;/code&gt;  命令&lt;/a&gt;相对。&lt;/p&gt;
&lt;figure class=&#34;highlight sh&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 如果key不存在，会初始化为0，在进行自减。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; DECRBY k18 5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(&lt;span class=&#34;built_in&#34;&gt;integer&lt;/span&gt;) -5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; DECRBY k18 5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(&lt;span class=&#34;built_in&#34;&gt;integer&lt;/span&gt;) -10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&#34;mget命令&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#mget命令&#34;&gt;#&lt;/a&gt;  &lt;code&gt;mget&lt;/code&gt;  命令&lt;/h4&gt;
&lt;p&gt;&lt;code&gt;mget key [key ...]&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;一次性返回多个 &lt;code&gt;key&lt;/code&gt;  的值。 如果 &lt;code&gt;key&lt;/code&gt;  不存在，返回  &lt;code&gt;(nil)&lt;/code&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight sh&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; &lt;span class=&#34;built_in&#34;&gt;set&lt;/span&gt; k19_0 v19_0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;OK&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; &lt;span class=&#34;built_in&#34;&gt;set&lt;/span&gt; k19_1 v19_1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;OK&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; mget k19_0 k19_1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1) &lt;span class=&#34;string&#34;&gt;&amp;quot;v19_0&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2) &lt;span class=&#34;string&#34;&gt;&amp;quot;v19_1&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 如果key不存在的时候，返回 (nil)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; mget k19_0 k19_1 k10_2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1) &lt;span class=&#34;string&#34;&gt;&amp;quot;v19_0&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2) &lt;span class=&#34;string&#34;&gt;&amp;quot;v19_1&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3) (nil)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&#34;mset命令&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#mset命令&#34;&gt;#&lt;/a&gt;  &lt;code&gt;mset&lt;/code&gt;  命令&lt;/h4&gt;
&lt;p&gt;同时为设置多个键值对。 如果 key 已经存在，直接覆盖掉。&lt;/p&gt;
&lt;p&gt;注意： 这个原子性操作。所有给定的 key 都会在同一时间内被设置。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;tips: 如果希望，已经存在的 key 不被覆盖，可以参考 &lt;a href=&#34;#%60msetnx%60%E5%91%BD%E4%BB%A4&#34;&gt; &lt;code&gt;msetnx&lt;/code&gt;  命令&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;figure class=&#34;highlight sh&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 一下设置三对&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; mset k20_0 v20_0 k20_1 v20_1 k20_2 v20_2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;OK&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; mget k20_0 k20_1 k20_2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1) &lt;span class=&#34;string&#34;&gt;&amp;quot;v20_0&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2) &lt;span class=&#34;string&#34;&gt;&amp;quot;v20_1&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3) &lt;span class=&#34;string&#34;&gt;&amp;quot;v20_2&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 演示已有的key对应的值会被覆盖掉。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; mset k20_2 vv20_2 k20_3 v20_3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;OK&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; mget k20_2 k20_3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1) &lt;span class=&#34;string&#34;&gt;&amp;quot;vv20_2&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2) &lt;span class=&#34;string&#34;&gt;&amp;quot;v20_3&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&#34;msetnx命令&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#msetnx命令&#34;&gt;#&lt;/a&gt;  &lt;code&gt;msetnx&lt;/code&gt;  命令&lt;/h4&gt;
&lt;p&gt;&lt;code&gt;MSETNX key value [key value ...]&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;当且仅当所有给定的 key 不存在的时候，才会设置键值对。即使有一个 key 存在，该命令也不会设置其他的 key 对应的键值对.&lt;/p&gt;
&lt;figure class=&#34;highlight sh&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 演示设置成功&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; MSETNX k21_0 v21_0 k21_1 v21_1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(&lt;span class=&#34;built_in&#34;&gt;integer&lt;/span&gt;) 1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; MGET k21_0 k21_1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1) &lt;span class=&#34;string&#34;&gt;&amp;quot;v21_0&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2) &lt;span class=&#34;string&#34;&gt;&amp;quot;v21_1&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 存在其中的一个给定key，就不能设置成功&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; msetnx k21_1 vv21_1 k21_2 v21_2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(&lt;span class=&#34;built_in&#34;&gt;integer&lt;/span&gt;) 0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; MGET k21_1 k21_2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1) &lt;span class=&#34;string&#34;&gt;&amp;quot;v21_1&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2) (nil)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;redis如何实现string这一数据结构&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#redis如何实现string这一数据结构&#34;&gt;#&lt;/a&gt;  &lt;code&gt;Redis&lt;/code&gt;  如何实现 &lt;code&gt;String&lt;/code&gt;  这一数据结构&lt;/h3&gt;
&lt;p&gt;在  &lt;code&gt;string&lt;/code&gt;  的相关命令介绍的时候，我其实使用一个错误的描述。就是将 &lt;code&gt;Redis&lt;/code&gt;  的 &lt;code&gt;String&lt;/code&gt;  类型称为字符串。这种说法其实不正确的。&lt;/p&gt;
&lt;p&gt;在  &lt;code&gt;redis&lt;/code&gt;  中， &lt;code&gt;string&lt;/code&gt;  这一数据结构使用 &lt;code&gt;sds&lt;/code&gt;  来表示的。&lt;/p&gt;
&lt;h4 id=&#34;sds&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#sds&#34;&gt;#&lt;/a&gt;  &lt;code&gt;sds&lt;/code&gt;&lt;/h4&gt;
&lt;p&gt;&lt;code&gt;sds&lt;/code&gt;  是  &lt;code&gt;simple dynamic string&lt;/code&gt;  的简称。 意思是  &lt;code&gt;简单的动态字符串&lt;/code&gt; 。 这里面的 &lt;code&gt;string&lt;/code&gt;  就是实打实的 &lt;code&gt;C&lt;/code&gt;  语言中的字符串 ( &lt;code&gt;char[]&lt;/code&gt; ).  &lt;code&gt;Redis&lt;/code&gt;  也并非一点也没有使用  &lt;code&gt;C&lt;/code&gt;  语言的字符串，像一些字面量常亮，日志都是使用 &lt;code&gt;C&lt;/code&gt;  语言的字符串。&lt;/p&gt;
&lt;p&gt;那  &lt;code&gt;sds&lt;/code&gt;  到底是一个什么样的结构呢？&lt;/p&gt;
&lt;p&gt;在源码的  &lt;code&gt;src&lt;/code&gt;  目录下，我找到了  &lt;code&gt;sds.h&lt;/code&gt;  这样一个文件。这里规定了  &lt;code&gt;sds&lt;/code&gt;  结构。&lt;/p&gt;
&lt;figure class=&#34;highlight c++&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;class&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;struct&lt;/span&gt; __&lt;span class=&#34;title&#34;&gt;attribute__&lt;/span&gt; ((__&lt;span class=&#34;title&#34;&gt;packed__&lt;/span&gt;)) &lt;span class=&#34;title&#34;&gt;sdshdr64&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;// 表示已使用的长度,即buf[]的长度。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;uint64_t&lt;/span&gt; len; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;// 已分配的长度(包括未使用的长度)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;// alloc-len,对应着之前版本的free&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;uint64_t&lt;/span&gt; alloc; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;unsigned&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;char&lt;/span&gt; flags; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;char&lt;/span&gt; buf[];&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;tips: 如果你注意到了这个结构体的命名。那么来看下&lt;a href=&#34;&#34;&gt;这篇文章&lt;/a&gt;吧。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;code&gt;sds&lt;/code&gt;  保留了  &lt;code&gt;C&lt;/code&gt;  字符串以空字符结尾的惯例。保留的这个空字符的长度不会保存在  &lt;code&gt;len&lt;/code&gt;  字段中。保留这一惯例的好处就是可以使用 &lt;code&gt;C&lt;/code&gt;  字符串函数库的一些方法。&lt;/p&gt;
&lt;p&gt;假设我们分配了 &lt;code&gt;10&lt;/code&gt;  个字节空间，只保存了  &lt;code&gt;redis&lt;/code&gt;  这个 &lt;code&gt;C&lt;/code&gt;  字符串，那么 在 &lt;code&gt;sds&lt;/code&gt;  中，是这么表示的：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/images/Redis%E7%B3%BB%E5%88%97/images/01-01-sds%E7%A4%BA%E6%84%8F%E5%9B%BE.png&#34; alt=&#34;01-01-sds示意图.png&#34;&gt;&lt;/p&gt;
&lt;h4 id=&#34;使用sds比使用c字符串有什么好处呢&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#使用sds比使用c字符串有什么好处呢&#34;&gt;#&lt;/a&gt; 使用 &lt;code&gt;sds&lt;/code&gt;  比使用 &lt;code&gt;C&lt;/code&gt;  字符串有什么好处呢？&lt;/h4&gt;
&lt;h5 id=&#34;获取字符长度的时间复杂度为-o1&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#获取字符长度的时间复杂度为-o1&#34;&gt;#&lt;/a&gt; 获取字符长度的时间复杂度为  &lt;code&gt;O(1)&lt;/code&gt;&lt;/h5&gt;
&lt;p&gt;&lt;code&gt;C&lt;/code&gt;  语言获取一个字符串的长度为  &lt;code&gt;O(N)&lt;/code&gt; . 需要遍历字符串并累加，判断字符是否为  &lt;code&gt;&#39;\0&#39;&lt;/code&gt;  来获得字符串的长度。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;sds&lt;/code&gt;  只需要根据  &lt;code&gt;len&lt;/code&gt;  字段获取即可。怎么获取的呢？&lt;/p&gt;
&lt;p&gt;我们来看下源码。&lt;/p&gt;
&lt;figure class=&#34;highlight c++&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;// 定义char类型的指针类型。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;typedef&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;char&lt;/span&gt; *sds;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;// 获取长度的结构体指针的宏.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;// 可根据指向buf的指针返回指向sdshdr结构体首地址的宏&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;#&lt;span class=&#34;meta-keyword&#34;&gt;define&lt;/span&gt; SDS_HDR(T,s) ((struct sdshdr##T *)((s)-(sizeof(struct sdshdr##T))))&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;// sds 直接指向结构体里的buf&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;static&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;inline&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;size_t&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;sdslen&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(&lt;span class=&#34;keyword&#34;&gt;const&lt;/span&gt; sds s)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;// sds是直接指向结构体里的buf数据, 当获取len等字段的信息,只需要减去结构体长度，回退一下指针就可以了。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;// 这里使用的尾指针法。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;unsigned&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;char&lt;/span&gt; flags = s[&lt;span class=&#34;number&#34;&gt;-1&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;// 判断属于那种 sdshdr,对应减去不同的地址。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;built_in&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;switch&lt;/span&gt;&lt;/span&gt;(flags&amp;amp;SDS_TYPE_MASK) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;case&lt;/span&gt; SDS_TYPE_5:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;SDS_TYPE_5_LEN&lt;/span&gt;(flags);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;case&lt;/span&gt; SDS_TYPE_8:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;SDS_HDR&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;8&lt;/span&gt;,s)-&amp;gt;len;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;case&lt;/span&gt; SDS_TYPE_16:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;SDS_HDR&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;16&lt;/span&gt;,s)-&amp;gt;len;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;case&lt;/span&gt; SDS_TYPE_32:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;SDS_HDR&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;32&lt;/span&gt;,s)-&amp;gt;len;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;case&lt;/span&gt; SDS_TYPE_64:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;SDS_HDR&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;64&lt;/span&gt;,s)-&amp;gt;len;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h5 id=&#34;可以杜绝缓冲区溢出&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#可以杜绝缓冲区溢出&#34;&gt;#&lt;/a&gt; 可以杜绝缓冲区溢出&lt;/h5&gt;
&lt;p&gt;&lt;code&gt;C&lt;/code&gt;  语言是不会判断数组是否越界的。比如  &lt;code&gt;strcat&lt;/code&gt;  方法，如果当前的数据不能容纳拼接之后字符时，必然会发生缓存区溢出。&lt;br&gt;
但是  &lt;code&gt;sds&lt;/code&gt;  则不会。我们来看下  &lt;code&gt;sds&lt;/code&gt;  的字符串拼接的方法  &lt;code&gt;sdscat&lt;/code&gt; 。&lt;/p&gt;
&lt;figure class=&#34;highlight c++&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;// s 原来的字符串，t是要拼接的字符串&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;sds &lt;span class=&#34;title&#34;&gt;sdscat&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(sds s, &lt;span class=&#34;keyword&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;char&lt;/span&gt; *t)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;sdscatlen&lt;/span&gt;(s, t, &lt;span class=&#34;built_in&#34;&gt;strlen&lt;/span&gt;(t));&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;sds &lt;span class=&#34;title&#34;&gt;sdscatlen&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(sds s, &lt;span class=&#34;keyword&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;void&lt;/span&gt; *t, &lt;span class=&#34;keyword&#34;&gt;size_t&lt;/span&gt; len)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;// 获取原来字符串的长度。(见上面的方法)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;size_t&lt;/span&gt; curlen = &lt;span class=&#34;built_in&#34;&gt;sdslen&lt;/span&gt;(s);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;// 扩大sds字符串末尾的可用空间，&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;//以便调用者确保在调用此函数后可以覆盖字符串末尾的addlen字节，&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;//再为null项再加上一个字节。 具体实现，参考源码(sds.c:204)。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    s = &lt;span class=&#34;built_in&#34;&gt;sdsMakeRoomFor&lt;/span&gt;(s,len);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;// 如果内存分配失败，就会返回null&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (s == &lt;span class=&#34;literal&#34;&gt;NULL&lt;/span&gt;) &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;literal&#34;&gt;NULL&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;// 调用C语言的分配&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;built_in&#34;&gt;memcpy&lt;/span&gt;(s+curlen, t, len);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;// sds设置 sdshdr的len字段的值。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;built_in&#34;&gt;sdssetlen&lt;/span&gt;(s, curlen+len);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;// 添加最后一个字符为: &amp;#x27;\0&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    s[curlen+len] = &lt;span class=&#34;string&#34;&gt;&amp;#x27;\0&amp;#x27;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; s;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h5 id=&#34;sds-优化了c语言的内存分配策略&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#sds-优化了c语言的内存分配策略&#34;&gt;#&lt;/a&gt; sds 优化了 C 语言的内存分配策略&lt;/h5&gt;
&lt;h6 id=&#34;空间预分配&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#空间预分配&#34;&gt;#&lt;/a&gt; 空间预分配&lt;/h6&gt;
&lt;p&gt;空间预分配策略遵循下面的公式:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;如果 &lt;code&gt;SDS&lt;/code&gt;  的长度小于最大的预分配空间 ( &lt;code&gt;1MB&lt;/code&gt; ), 那么会分配两倍的新空间，再加上结尾的空字符 &lt;code&gt;&#39;\0&#39;&lt;/code&gt;  举个例子：原有的 &lt;code&gt;sds&lt;/code&gt;  的 &lt;code&gt;len&lt;/code&gt;  为 &lt;code&gt;5&lt;/code&gt; , &lt;code&gt;alloc&lt;/code&gt;  为 &lt;code&gt;5&lt;/code&gt; , 要拼接的字符串长度为 &lt;code&gt;15&lt;/code&gt; , 那么新分配的空间大小是:  &lt;code&gt;(5byte+15byte)*2 + 1byte = 41byte&lt;/code&gt; .&lt;/li&gt;
&lt;li&gt;如果 &lt;code&gt;sds&lt;/code&gt;  的长度大于等于默认的预分配空间，那么就在新分配的空间大小基础上，在分配 &lt;code&gt;1MB&lt;/code&gt;  的空间。如果修改后的， &lt;code&gt;SDS&lt;/code&gt;  的 &lt;code&gt;len&lt;/code&gt;  是  &lt;code&gt;20M&lt;/code&gt; ，那么 &lt;code&gt;alloc&lt;/code&gt;  就是  &lt;code&gt;20M + 1M + 1byte&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;具体分配过程见下面的源码&lt;/p&gt;
&lt;figure class=&#34;highlight c++&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;48&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;// SDS 默认最大的预分配空间为1M&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;#&lt;span class=&#34;meta-keyword&#34;&gt;define&lt;/span&gt; SDS_MAX_PREALLOC (1024*1024)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;// sds 预分配空间&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;sds &lt;span class=&#34;title&#34;&gt;sdsMakeRoomFor&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(sds s, &lt;span class=&#34;keyword&#34;&gt;size_t&lt;/span&gt; addlen)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;void&lt;/span&gt; *sh, *newsh;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;size_t&lt;/span&gt; avail = &lt;span class=&#34;built_in&#34;&gt;sdsavail&lt;/span&gt;(s);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;size_t&lt;/span&gt; len, newlen;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;char&lt;/span&gt; type, oldtype = s[&lt;span class=&#34;number&#34;&gt;-1&lt;/span&gt;] &amp;amp; SDS_TYPE_MASK;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; hdrlen;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;/* 如果空间足够，直接返回 */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (avail &amp;gt;= addlen) &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; s;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    len = &lt;span class=&#34;built_in&#34;&gt;sdslen&lt;/span&gt;(s);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    sh = (&lt;span class=&#34;keyword&#34;&gt;char&lt;/span&gt;*)s-&lt;span class=&#34;built_in&#34;&gt;sdsHdrSize&lt;/span&gt;(oldtype);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    newlen = (len+addlen);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (newlen &amp;lt; SDS_MAX_PREALLOC)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        newlen *= &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        newlen += SDS_MAX_PREALLOC;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    type = &lt;span class=&#34;built_in&#34;&gt;sdsReqType&lt;/span&gt;(newlen);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;/* Don&amp;#x27;t use type 5: the user is appending to the string and type 5 is&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;     * not able to remember empty space, so sdsMakeRoomFor() must be called&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;     * at every appending operation. */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (type == SDS_TYPE_5) type = SDS_TYPE_8;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    hdrlen = &lt;span class=&#34;built_in&#34;&gt;sdsHdrSize&lt;/span&gt;(type);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (oldtype==type) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        newsh = &lt;span class=&#34;built_in&#34;&gt;s_realloc&lt;/span&gt;(sh, hdrlen+newlen+&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (newsh == &lt;span class=&#34;literal&#34;&gt;NULL&lt;/span&gt;) &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;literal&#34;&gt;NULL&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        s = (&lt;span class=&#34;keyword&#34;&gt;char&lt;/span&gt;*)newsh+hdrlen;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125; &lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;comment&#34;&gt;/* Since the header size changes, need to move the string forward,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;         * and can&amp;#x27;t use realloc */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        newsh = &lt;span class=&#34;built_in&#34;&gt;s_malloc&lt;/span&gt;(hdrlen+newlen+&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (newsh == &lt;span class=&#34;literal&#34;&gt;NULL&lt;/span&gt;) &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;literal&#34;&gt;NULL&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;built_in&#34;&gt;memcpy&lt;/span&gt;((&lt;span class=&#34;keyword&#34;&gt;char&lt;/span&gt;*)newsh+hdrlen, s, len+&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;built_in&#34;&gt;s_free&lt;/span&gt;(sh);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        s = (&lt;span class=&#34;keyword&#34;&gt;char&lt;/span&gt;*)newsh+hdrlen;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        s[&lt;span class=&#34;number&#34;&gt;-1&lt;/span&gt;] = type;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;built_in&#34;&gt;sdssetlen&lt;/span&gt;(s, len);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;built_in&#34;&gt;sdssetalloc&lt;/span&gt;(s, newlen);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; s;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h6 id=&#34;惰性空间释放&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#惰性空间释放&#34;&gt;#&lt;/a&gt; 惰性空间释放&lt;/h6&gt;
&lt;p&gt;当对 sds 进行缩短操作时，程序并不会立马对内存重分配来回收收缩的空间，而是仅仅改变 &lt;code&gt;len&lt;/code&gt;  属性，并且在队对应的位置上将字符设置为:  &lt;code&gt;&#39;\0&#39;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;以 函数  &lt;code&gt;sdstrim&lt;/code&gt;  为例。&lt;/p&gt;
&lt;figure class=&#34;highlight c++&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;sds &lt;span class=&#34;title&#34;&gt;sdstrim&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(sds s, &lt;span class=&#34;keyword&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;char&lt;/span&gt; *cset)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;char&lt;/span&gt; *start, *end, *sp, *ep;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;size_t&lt;/span&gt; len;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    sp = start = s;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    ep = end = s+&lt;span class=&#34;built_in&#34;&gt;sdslen&lt;/span&gt;(s)&lt;span class=&#34;number&#34;&gt;-1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;while&lt;/span&gt;(sp &amp;lt;= end &amp;amp;&amp;amp; &lt;span class=&#34;built_in&#34;&gt;strchr&lt;/span&gt;(cset, *sp)) sp++;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;while&lt;/span&gt;(ep &amp;gt; sp &amp;amp;&amp;amp; &lt;span class=&#34;built_in&#34;&gt;strchr&lt;/span&gt;(cset, *ep)) ep--;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    len = (sp &amp;gt; ep) ? &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt; : ((ep-sp)+&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;// 进行移位&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (s != sp) &lt;span class=&#34;built_in&#34;&gt;memmove&lt;/span&gt;(s, sp, len);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;// 设置字符串结束符&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    s[len] = &lt;span class=&#34;string&#34;&gt;&amp;#x27;\0&amp;#x27;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;// 设置len字段的值&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;built_in&#34;&gt;sdssetlen&lt;/span&gt;(s,len);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; s;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;上述实现中，并没有进行内存回收。 &lt;code&gt;sds&lt;/code&gt;  也提供了内存回收的函数 &lt;code&gt;sds_free&lt;/code&gt; . 具体可以看 &lt;code&gt;Redis 5.0.7&lt;/code&gt;  版源码.  &lt;code&gt;sds.c&lt;/code&gt;  第 &lt;code&gt;1120&lt;/code&gt;  行。这里不再深入学习了。&lt;/p&gt;
&lt;h4 id=&#34;二进制安全&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#二进制安全&#34;&gt;#&lt;/a&gt; 二进制安全&lt;/h4&gt;
&lt;p&gt;&lt;code&gt;sds&lt;/code&gt;  的 &lt;code&gt;API&lt;/code&gt;  都是二进制安全的。因为 &lt;code&gt;Redis&lt;/code&gt;  对  &lt;code&gt;sds&lt;/code&gt;  结构中的 &lt;code&gt;buf&lt;/code&gt;  数组中的数据都是以二进制的方式处理的。&lt;/p&gt;
&lt;h4 id=&#34;兼容部分的c字符串函数&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#兼容部分的c字符串函数&#34;&gt;#&lt;/a&gt; 兼容部分的 &lt;code&gt;C&lt;/code&gt;  字符串函数&lt;/h4&gt;
&lt;p&gt;&lt;code&gt;Redis&lt;/code&gt;  还是遵循了 &lt;code&gt;C&lt;/code&gt;  字符串以  &lt;code&gt;&#39;\0&#39;&lt;/code&gt;  结尾的习惯，所以保存了文本数据的 &lt;code&gt;sds&lt;/code&gt;  是可以复用  &lt;code&gt;&amp;lt;string.h&amp;gt;&lt;/code&gt;  库中的函数。&lt;/p&gt;
&lt;h3 id=&#34;总结&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#总结&#34;&gt;#&lt;/a&gt; 总结&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;string&lt;/code&gt;  是 &lt;code&gt;redis&lt;/code&gt;  中最简单的数据结构.  &lt;code&gt;string&lt;/code&gt;  不是 &lt;code&gt;C&lt;/code&gt;  字符串，而是对 &lt;code&gt;C&lt;/code&gt;  字符串进行了封装.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;学习了 &lt;code&gt;string&lt;/code&gt;  类型相关的 &lt;code&gt;api&lt;/code&gt; 。  &lt;code&gt;set&lt;/code&gt; , &lt;code&gt;setnx&lt;/code&gt; , &lt;code&gt;setex&lt;/code&gt; ,  &lt;code&gt;get&lt;/code&gt; ,  &lt;code&gt;getset&lt;/code&gt; ,  &lt;code&gt;incr&lt;/code&gt; ,  &lt;code&gt;decr&lt;/code&gt; ,…&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;sds&lt;/code&gt;  这种设计的好处，提高了性能，优化内存分配，二进制安全，兼容 &lt;code&gt;C&lt;/code&gt;  字符串。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;最后&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#最后&#34;&gt;#&lt;/a&gt; 最后&lt;/h2&gt;
&lt;p&gt;期望与你一起遇见更好的自己&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/images/qrcode.jpg&#34; alt=&#34;期望与你一起遇见更好的自己&#34;&gt;&lt;/p&gt;
</content>
        <category term="Redis" />
        <updated>2021-08-01T06:58:55.000Z</updated>
    </entry>
    <entry>
        <id>https://fangjiaxiaobai.github.io/2021/08/01/Redis%E7%B3%BB%E5%88%97/02-Redis%E7%9A%84%E5%A4%9A%E4%B8%AA%E6%95%B0%E6%8D%AE%E5%BA%93/</id>
        <title>Redis 多个数据库</title>
        <link rel="alternate" href="https://fangjiaxiaobai.github.io/2021/08/01/Redis%E7%B3%BB%E5%88%97/02-Redis%E7%9A%84%E5%A4%9A%E4%B8%AA%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
        <content type="html">&lt;p&gt;&lt;code&gt;Redis&lt;/code&gt;  默认提供了 &lt;code&gt;16&lt;/code&gt;  个数据库。每个数据库都有一个 &lt;code&gt;id&lt;/code&gt; , 从  &lt;code&gt;0&lt;/code&gt;  开始，[0,15]。 不同的数据库中数据隔离保存。我们可以通过修改 redis 的配置文件进行修改数据库的数量。&lt;/p&gt;
&lt;figure class=&#34;highlight properties&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;attr&#34;&gt;database&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;32&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;使用  &lt;code&gt;select &amp;lt;ID&amp;gt;&lt;/code&gt;  可以切换数据库.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;示例如下:&lt;/p&gt;
&lt;figure class=&#34;highlight sh&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379&amp;gt; select 1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;OK&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 演示数据隔离&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379[1]&amp;gt; &lt;span class=&#34;built_in&#34;&gt;set&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;test&lt;/span&gt; 1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;OK&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379[1]&amp;gt; select 2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Ok&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127.0.0.1:6379[2]&amp;gt; get &lt;span class=&#34;built_in&#34;&gt;test&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(nil)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;可以通过命令之前的部分区分我们所在的数据库.&lt;br&gt;
 &lt;code&gt;127.0.0.1:6379[2]&amp;gt; select 2&lt;/code&gt;  执行这个命令的时候，我们是在数据库 &lt;code&gt;1&lt;/code&gt;  中的。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;使用  &lt;code&gt;flushdb&lt;/code&gt;  只能删除 &lt;b&gt;该数据库 (一个库)&lt;/b&gt; 中的数据。&lt;/li&gt;
&lt;li&gt;使用  &lt;code&gt;flushall&lt;/code&gt;  可以删除 &lt;b&gt;所有库&lt;/b&gt; 中的数据。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;redis使用分库的意义&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#redis使用分库的意义&#34;&gt;#&lt;/a&gt; redis 使用分库的意义&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;避免不同应用相同 &lt;code&gt;key&lt;/code&gt;  的影响。&lt;/li&gt;
&lt;li&gt;更便于管理。&lt;br&gt;
一个实例上运行多个库，只运维这一个实例就可以了。&lt;/li&gt;
&lt;li&gt;也有不少文章说，redis 的作者曾说过，“多数据库的设计可能是最糟糕的决定.”. Redis 是单线程的，即使是多数据库也不会带来性能提升。但是这个并没有和前面的两个好处冲突。下面是作者的原话:&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;I understand how this can be useful, but unfortunately I consider Redis multiple database errors my worst decision in Redis design at all… without any kind of real gain, it makes the internals a lot more complex. The reality is that databases don’t scale well for a number of reason, like active expire of keys and VM. If the DB selection can be performed with a string I can see this feature being used as a scalable O(1) dictionary layer, that instead it is not.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;With DB numbers, with a default of a few DBs, we are communication better what this feature is and how can be used I think. I hope that at some point we can drop the multiple DBs support at all, but I think it is probably too late as there is a number of people relying on this feature for their work.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;redis的分库是怎么实现&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#redis的分库是怎么实现&#34;&gt;#&lt;/a&gt; Redis 的分库是怎么实现？&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;Redis&lt;/code&gt;  服务器间所有的数据库都保存在 服务器状态  &lt;code&gt;redis.h/redisServer&lt;/code&gt;  结构的 db 数组中。 &lt;code&gt;db&lt;/code&gt;  数组中的每个元素都是一个  &lt;code&gt;redis.h/redisDb&lt;/code&gt;  结构。每个 &lt;code&gt;redisDb&lt;/code&gt;  结构代表一个数据库.&lt;/p&gt;
&lt;figure class=&#34;highlight c++&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;class&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;struct&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;redisServer&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;// 保存所有数据库&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    redisDb *db;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;// 数据库的数量(redis.conf文件中 database配置的)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; dbnum;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;每个 &lt;code&gt;Redis&lt;/code&gt;  客户端都有自己的目标数据库，每个客户端执行数据库写命令或者数据库读命令的时候，目标数据库都会成为这些命令的操作对象.&lt;br&gt;
 每个客户端用  &lt;code&gt;RedisClient&lt;/code&gt;  来描述。  &lt;code&gt;RedisClient&lt;/code&gt;  结构的 &lt;code&gt;db&lt;/code&gt;  属性记录了客户端当前的目标数据库，这个属性是一个指向  &lt;code&gt;redisDb&lt;/code&gt;  的指针.&lt;/p&gt;
&lt;figure class=&#34;highlight c++&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;typedef&lt;/span&gt; &lt;span class=&#34;class&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;struct&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;redisClient&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;// 记录客户端端正在使用的数据库id&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    redisDb *db;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125; redisClient;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&#34;举个例子&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#举个例子&#34;&gt;#&lt;/a&gt; 举个例子:&lt;/h4&gt;
&lt;p&gt;假设我们客户端连接的是数据库 &lt;code&gt;1&lt;/code&gt; , 那么客户端与服务器端之间的关系是这样的:&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;./images/00-01%E5%A4%9A%E6%95%B0%E6%8D%AE%E5%BA%93%E7%A4%BA%E6%84%8F%E5%9B%BE.png&#34; alt=&#34;00-01多数据库示意图&#34;&gt;&lt;/p&gt;
&lt;p&gt;如果我们运行  &lt;code&gt;select 2&lt;/code&gt; , 其实，就是改变的 db 的指针。让它指向了  &lt;code&gt;db(2)&lt;/code&gt; , 这就是  &lt;code&gt;select&lt;/code&gt;  命令的运行原理。如下图。&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;./images/00-02%E5%A4%9A%E6%95%B0%E6%8D%AE%E5%BA%93%E7%A4%BA%E6%84%8F%E5%9B%BE.png&#34; alt=&#34;00-02多数据库示意图&#34;&gt;&lt;/p&gt;
&lt;p&gt;以上就是 关于  &lt;code&gt;Redis&lt;/code&gt;  多数据库的内容了。&lt;/p&gt;
&lt;h2 id=&#34;最后&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#最后&#34;&gt;#&lt;/a&gt; 最后&lt;/h2&gt;
&lt;p&gt;期望与你一起遇见更好的自己&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/images/qrcode.jpg&#34; alt=&#34;期望与你一起遇见更好的自己&#34;&gt;&lt;/p&gt;
</content>
        <category term="Redis" />
        <updated>2021-08-01T06:48:55.000Z</updated>
    </entry>
    <entry>
        <id>https://fangjiaxiaobai.github.io/2021/08/01/Redis%E7%B3%BB%E5%88%97/01-Redis%E7%AE%80%E4%BB%8B%E4%BB%A5%E5%8F%8A%E4%B8%8E%E5%85%B6%E4%BB%96%E6%95%B0%E6%8D%AE%E5%BA%93%E7%9A%84%E5%AF%B9%E6%AF%94/</id>
        <title>Redis 简介</title>
        <link rel="alternate" href="https://fangjiaxiaobai.github.io/2021/08/01/Redis%E7%B3%BB%E5%88%97/01-Redis%E7%AE%80%E4%BB%8B%E4%BB%A5%E5%8F%8A%E4%B8%8E%E5%85%B6%E4%BB%96%E6%95%B0%E6%8D%AE%E5%BA%93%E7%9A%84%E5%AF%B9%E6%AF%94/"/>
        <content type="html">&lt;p&gt;&lt;code&gt;Redis&lt;/code&gt;  是一个开放源代码（ &lt;code&gt;BSD&lt;/code&gt;  许可）的内存中数据结构存储，用作数据库，缓存和消息代理。它支持数据结构，例如字符串，哈希，列表，集合，带范围查询的排序集合，位图 ( &lt;code&gt;bitMap&lt;/code&gt; )，超日志 ( &lt;code&gt;hyperlog&lt;/code&gt; )，带有半径查询和流的地理空间索引 ( &lt;code&gt;geohash&lt;/code&gt; )。 &lt;code&gt;Redis&lt;/code&gt;  还内置了副本， &lt;code&gt;Lua&lt;/code&gt;  脚本， &lt;code&gt;LRU&lt;/code&gt;  驱逐策略，事务和不同级别的磁盘持久性，并通过 &lt;code&gt;Redis Sentinel&lt;/code&gt;  和 &lt;code&gt;Redis Cluster&lt;/code&gt;  自动分区提供了高可用性。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Redis&lt;/code&gt;  还支持一下特性:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;事务&lt;/li&gt;
&lt;li&gt;发布 / 订阅模式&lt;/li&gt;
&lt;li&gt;&lt;code&gt;lua&lt;/code&gt;  脚本&lt;/li&gt;
&lt;li&gt;键值的允许生存时长.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;LRU&lt;/code&gt;  驱逐&lt;/li&gt;
&lt;li&gt;故障自动转移&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;与其他数据库对比&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#与其他数据库对比&#34;&gt;#&lt;/a&gt; 与其他数据库对比&lt;/h2&gt;
&lt;p&gt;与其他数据库的对比:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;-&lt;/th&gt;
&lt;th&gt;Redis&lt;/th&gt;
&lt;th&gt;MongoDB&lt;/th&gt;
&lt;th&gt;Hbase&lt;/th&gt;
&lt;th&gt;Mysql&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;数据库类型&lt;/td&gt;
&lt;td&gt;NoSQL&lt;/td&gt;
&lt;td&gt;NOSQL&lt;/td&gt;
&lt;td&gt;NoSQL&lt;/td&gt;
&lt;td&gt;关系型数据库&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;数据类型&lt;/td&gt;
&lt;td&gt;key-value, 提供 String,List,zet 等多种结构&lt;/td&gt;
&lt;td&gt;Collection.Document.BSON&lt;/td&gt;
&lt;td&gt;基于列模式的映射数据库，可表示简单的 key-value 的映射关系。&lt;/td&gt;
&lt;td&gt;DB.table.row/col&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;持久化&lt;/td&gt;
&lt;td&gt;支持 (RDB/AOF)&lt;/td&gt;
&lt;td&gt;支持&lt;/td&gt;
&lt;td&gt;支持&lt;/td&gt;
&lt;td&gt;支持&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;是否支持集群&lt;/td&gt;
&lt;td&gt;支持&lt;/td&gt;
&lt;td&gt;支持&lt;/td&gt;
&lt;td&gt;支持&lt;/td&gt;
&lt;td&gt;支持&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;使用场景&lt;/td&gt;
&lt;td&gt;缓存 (内存稳定，读写性能极佳), 读多写少&lt;/td&gt;
&lt;td&gt;使用 Mysql 等关系型数据库，但是会遇到表结构不稳定的时候 (灵活)&lt;/td&gt;
&lt;td&gt;数据库大，特别大，列数据库，适合写多读少的场景&lt;/td&gt;
&lt;td&gt;常规的数据存储&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;是否支持索引&lt;/td&gt;
&lt;td&gt;支持&lt;/td&gt;
&lt;td&gt;支持&lt;/td&gt;
&lt;td&gt;支持&lt;/td&gt;
&lt;td&gt;支持&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;是否支持事务&lt;/td&gt;
&lt;td&gt;支持&lt;/td&gt;
&lt;td&gt;不支持&lt;/td&gt;
&lt;td&gt;支持&lt;/td&gt;
&lt;td&gt;支持&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id=&#34;最后&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#最后&#34;&gt;#&lt;/a&gt; 最后&lt;/h2&gt;
&lt;p&gt;期望与你一起遇见更好的自己&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/images/qrcode.jpg&#34; alt=&#34;期望与你一起遇见更好的自己&#34;&gt;&lt;/p&gt;
</content>
        <category term="Redis" />
        <updated>2021-08-01T06:40:55.000Z</updated>
    </entry>
    <entry>
        <id>https://fangjiaxiaobai.github.io/2021/08/01/Redis%E7%B3%BB%E5%88%97/01-%E5%AE%89%E8%A3%85%E5%8D%95%E6%9C%BA%E7%89%88Redis/</id>
        <title>Redis的单机部署</title>
        <link rel="alternate" href="https://fangjiaxiaobai.github.io/2021/08/01/Redis%E7%B3%BB%E5%88%97/01-%E5%AE%89%E8%A3%85%E5%8D%95%E6%9C%BA%E7%89%88Redis/"/>
        <content type="html">&lt;h1 id=&#34;源码安装&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#源码安装&#34;&gt;#&lt;/a&gt; 源码安装&lt;/h1&gt;
&lt;h2 id=&#34;下载地址&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#下载地址&#34;&gt;#&lt;/a&gt; 下载地址&lt;/h2&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL2Rvd25sb2FkLnJlZGlzLmlvL3JlbGVhc2VzL3JlZGlzLTUuMC43LnRhci5neg==&#34;&gt;http://download.redis.io/releases/redis-5.0.7.tar.gz&lt;/span&gt;&lt;/p&gt;
&lt;h2 id=&#34;安装步骤&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#安装步骤&#34;&gt;#&lt;/a&gt; 安装步骤&lt;/h2&gt;
&lt;figure class=&#34;highlight sh&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;wget http://download.redis.io/releases/redis-5.0.7.tar.gz&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;tar xvf redis-5.0.7.tar.gz&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[root@fangjiaxiaobai &lt;span class=&#34;built_in&#34;&gt;local&lt;/span&gt;]&lt;span class=&#34;comment&#34;&gt;# cd ./redis-5.0.7/&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[root@fangjiaxiaobai redis-5.0.7]&lt;span class=&#34;comment&#34;&gt;# make &amp;amp;&amp;amp; make install&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Hint: It&lt;span class=&#34;string&#34;&gt;&amp;#x27;s a good idea to run &amp;#x27;&lt;/span&gt;make &lt;span class=&#34;built_in&#34;&gt;test&lt;/span&gt;&lt;span class=&#34;string&#34;&gt;&amp;#x27; ;)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;# 出现上面的提示代表成功了&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;可能出现以下错误&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#可能出现以下错误&#34;&gt;#&lt;/a&gt; 可能出现以下错误:&lt;/h3&gt;
&lt;figure class=&#34;highlight sh&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;/bin/sh: cc: &lt;span class=&#34;built_in&#34;&gt;command&lt;/span&gt; not found&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;解决方案: yum install gcc&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;jemalloc/jemalloc.h: No such file or directory&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;原因是jemalloc重载了Linux下的ANSI C的malloc和free函数。解决办法：make时添加参数。&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;解决方案: make MALLOC=libc&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;启动&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#启动&#34;&gt;#&lt;/a&gt; 启动&lt;/h3&gt;
&lt;p&gt;[root@fangjiaxiaobai ~]# cd /usr/local/redis-5.0.7/src/&lt;/p&gt;
&lt;p&gt;[root@fangjiaxiaobai init.d]# ./redis_6379 start&lt;/p&gt;
&lt;h3 id=&#34;关闭&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#关闭&#34;&gt;#&lt;/a&gt; 关闭&lt;/h3&gt;
&lt;p&gt;[root@fangjiaxiaobai src]# ./redis-cli -p 6379 shutdown&lt;/p&gt;
&lt;h2 id=&#34;最后&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#最后&#34;&gt;#&lt;/a&gt; 最后&lt;/h2&gt;
&lt;p&gt;期望与你一起遇见更好的自己&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/images/qrcode.jpg&#34; alt=&#34;期望与你一起遇见更好的自己&#34;&gt;&lt;/p&gt;
</content>
        <category term="Redis" />
        <updated>2021-08-01T06:38:55.000Z</updated>
    </entry>
    <entry>
        <id>https://fangjiaxiaobai.github.io/2021/07/23/Redis%E7%B3%BB%E5%88%97/00-%E5%89%8D%E8%A8%80/</id>
        <title>Redis 开篇杂谈</title>
        <link rel="alternate" href="https://fangjiaxiaobai.github.io/2021/07/23/Redis%E7%B3%BB%E5%88%97/00-%E5%89%8D%E8%A8%80/"/>
        <content type="html">&lt;h2 id=&#34;杂谈&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#杂谈&#34;&gt;#&lt;/a&gt; 杂谈&lt;/h2&gt;
&lt;p&gt;这里说些杂谈吧。&lt;/p&gt;
&lt;p&gt;以下的文章中，同一个名词并非代表的是同一种对象。比如 list。&lt;/p&gt;
&lt;p&gt;在 t_list.c 中，list 的表示的 面向于用户的 Redis 数据结构 List (列表)。而在 adlsit.c 中表示的 Redis 数据结构的底层实现 list (其实是链表这种数据结构 - 此处的数据结构，表示真实的数据结构)。&lt;/p&gt;
&lt;h2 id=&#34;最后&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#最后&#34;&gt;#&lt;/a&gt; 最后&lt;/h2&gt;
&lt;p&gt;期望与你一起遇见更好的自己&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/images/qrcode.jpg&#34; alt=&#34;期望与你一起遇见更好的自己&#34;&gt;&lt;/p&gt;
</content>
        <category term="Redis" />
        <updated>2021-07-23T06:28:55.000Z</updated>
    </entry>
    <entry>
        <id>https://fangjiaxiaobai.github.io/2021/07/23/Redis%E7%B3%BB%E5%88%97/00-%E7%9B%AE%E5%BD%95/</id>
        <title>Redis 开篇 &amp; 说明</title>
        <link rel="alternate" href="https://fangjiaxiaobai.github.io/2021/07/23/Redis%E7%B3%BB%E5%88%97/00-%E7%9B%AE%E5%BD%95/"/>
        <content type="html">&lt;p&gt;本系列学习笔记以  &lt;code&gt;redis5.0.7&lt;/code&gt;  版本为基础进行学习.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;2021-07-21 Redis 6.0.6&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;2019-12-19 Redis 6.x&lt;/code&gt;  开始发布，具体内容: &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL2FudGlyZXovcmVkaXMvNi4wLzAwLVJFTEVBU0VOT1RFUw==&#34;&gt;Redis 6.x 版本发布明细&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;开篇说明&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#开篇说明&#34;&gt;#&lt;/a&gt; 开篇 &amp;amp; 说明&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;/2021/07/23/Redis%E7%B3%BB%E5%88%97/00-%E5%89%8D%E8%A8%80/&#34;&gt;Redis 开篇 &amp;amp; 说明 &lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;新手入门&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#新手入门&#34;&gt;#&lt;/a&gt; 新手入门&lt;/h2&gt;
&lt;h3 id=&#34;基础概念&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#基础概念&#34;&gt;#&lt;/a&gt; 基础概念&lt;/h3&gt;
&lt;ul class=&#34;task-list&#34;&gt;
&lt;li class=&#34;task-list-item&#34;&gt;&lt;input type=&#34;checkbox&#34; id=&#34;cbx_0&#34; checked=&#34;true&#34; disabled=&#34;true&#34;&gt;&lt;label for=&#34;cbx_0&#34;&gt; &lt;a href=&#34;/2021/08/01/Redis%E7%B3%BB%E5%88%97/01-Redis%E7%AE%80%E4%BB%8B%E4%BB%A5%E5%8F%8A%E4%B8%8E%E5%85%B6%E4%BB%96%E6%95%B0%E6%8D%AE%E5%BA%93%E7%9A%84%E5%AF%B9%E6%AF%94/&#34;&gt;Redis 简介及其他数据库对比&lt;/a&gt;&lt;/label&gt;&lt;/li&gt;
&lt;li class=&#34;task-list-item&#34;&gt;&lt;input type=&#34;checkbox&#34; id=&#34;cbx_1&#34; checked=&#34;true&#34; disabled=&#34;true&#34;&gt;&lt;label for=&#34;cbx_1&#34;&gt; &lt;a href=&#34;/2021/08/01/Redis%E7%B3%BB%E5%88%97/02-Redis%E7%9A%84%E5%A4%9A%E4%B8%AA%E6%95%B0%E6%8D%AE%E5%BA%93/&#34;&gt;Redis 的多个数据库&lt;/a&gt;&lt;/label&gt;&lt;/li&gt;
&lt;li class=&#34;task-list-item&#34;&gt;&lt;input type=&#34;checkbox&#34; id=&#34;cbx_2&#34; checked=&#34;true&#34; disabled=&#34;true&#34;&gt;&lt;label for=&#34;cbx_2&#34;&gt; &lt;a href=&#34;/2021/08/01/Redis%E7%B3%BB%E5%88%97/01-%E5%AE%89%E8%A3%85%E5%8D%95%E6%9C%BA%E7%89%88Redis/&#34;&gt;Redis 的单机部署&lt;/a&gt;&lt;/label&gt;&lt;/li&gt;
&lt;li class=&#34;task-list-item&#34;&gt;&lt;input type=&#34;checkbox&#34; id=&#34;cbx_3&#34; disabled=&#34;true&#34;&gt;&lt;label for=&#34;cbx_3&#34;&gt; Redis 的集群部署 (源码安装 /docker 安装)&lt;/label&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;五种常用的数据类型&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#五种常用的数据类型&#34;&gt;#&lt;/a&gt; 五种常用的数据类型&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;常用的命令以及浅浅的了解内部结构。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul class=&#34;task-list&#34;&gt;
&lt;li class=&#34;task-list-item&#34;&gt;&lt;input type=&#34;checkbox&#34; id=&#34;cbx_4&#34; checked=&#34;true&#34; disabled=&#34;true&#34;&gt;&lt;label for=&#34;cbx_4&#34;&gt; &lt;a href=&#34;/2021/08/01/Redis%E7%B3%BB%E5%88%97/B-1-Redis%E7%9A%84%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B%E4%B9%8BString/&#34;&gt;Redis 数据结构之  &lt;code&gt;String&lt;/code&gt; &lt;/a&gt;&lt;/label&gt;&lt;/li&gt;
&lt;li class=&#34;task-list-item&#34;&gt;&lt;input type=&#34;checkbox&#34; id=&#34;cbx_5&#34; checked=&#34;true&#34; disabled=&#34;true&#34;&gt;&lt;label for=&#34;cbx_5&#34;&gt; &lt;a href=&#34;/2021/08/01/Redis%E7%B3%BB%E5%88%97/B-2-Redis%E7%9A%84%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B%E4%B9%8Blist/&#34;&gt;Redis 数据结构之  &lt;code&gt;List&lt;/code&gt; &lt;/a&gt;&lt;/label&gt;&lt;/li&gt;
&lt;li class=&#34;task-list-item&#34;&gt;&lt;input type=&#34;checkbox&#34; id=&#34;cbx_6&#34; checked=&#34;true&#34; disabled=&#34;true&#34;&gt;&lt;label for=&#34;cbx_6&#34;&gt; &lt;a href=&#34;/2021/08/01/Redis%E7%B3%BB%E5%88%97/B-3-Redis%E7%9A%84%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B%E4%B9%8Bhash/&#34;&gt;Redis 数据结构之  &lt;code&gt;Hash&lt;/code&gt; &lt;/a&gt;&lt;/label&gt;&lt;/li&gt;
&lt;li class=&#34;task-list-item&#34;&gt;&lt;input type=&#34;checkbox&#34; id=&#34;cbx_7&#34; checked=&#34;true&#34; disabled=&#34;true&#34;&gt;&lt;label for=&#34;cbx_7&#34;&gt; &lt;a href=&#34;/2021/08/01/Redis%E7%B3%BB%E5%88%97/B-4-Redis%E7%9A%84%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B%E4%B9%8B%E9%9B%86%E5%90%88set/&#34;&gt;Redis 数据结构之集合  &lt;code&gt;Set&lt;/code&gt; &lt;/a&gt;&lt;/label&gt;&lt;/li&gt;
&lt;li class=&#34;task-list-item&#34;&gt;&lt;input type=&#34;checkbox&#34; id=&#34;cbx_8&#34; checked=&#34;true&#34; disabled=&#34;true&#34;&gt;&lt;label for=&#34;cbx_8&#34;&gt; &lt;a href=&#34;/2021/08/01/Redis%E7%B3%BB%E5%88%97/B-5-Redis%E7%9A%84%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B%E4%B9%8B%E6%9C%89%E5%BA%8F%E9%9B%86%E5%90%88zset/&#34;&gt;Redis 数据结构之有序集合  &lt;code&gt;Zset&lt;/code&gt; &lt;/a&gt;&lt;/label&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;知道会很牛逼的数据类型&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#知道会很牛逼的数据类型&#34;&gt;#&lt;/a&gt; 知道会很牛逼的数据类型&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;常用的命令以及浅浅的了解内部结构。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul class=&#34;task-list&#34;&gt;
&lt;li class=&#34;task-list-item&#34;&gt;&lt;input type=&#34;checkbox&#34; id=&#34;cbx_9&#34; checked=&#34;true&#34; disabled=&#34;true&#34;&gt;&lt;label for=&#34;cbx_9&#34;&gt; &lt;a href=&#34;/2021/08/01/Redis%E7%B3%BB%E5%88%97/B-6-Redis%E7%9A%84%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B%E4%B9%8B%E4%BD%8D%E5%9B%BEbitmap/&#34;&gt;Redis 数据结构之位图  &lt;code&gt;BitMap&lt;/code&gt; &lt;/a&gt;&lt;/label&gt;&lt;/li&gt;
&lt;li class=&#34;task-list-item&#34;&gt;&lt;input type=&#34;checkbox&#34; id=&#34;cbx_10&#34; checked=&#34;true&#34; disabled=&#34;true&#34;&gt;&lt;label for=&#34;cbx_10&#34;&gt; &lt;a href=&#34;/2021/08/01/Redis%E7%B3%BB%E5%88%97/B-7-Redis%E7%9A%84%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B%E4%B9%8BHyperLogLogs/&#34;&gt;Redis 数据结构之  &lt;code&gt;HyperLogLogs&lt;/code&gt; &lt;/a&gt;&lt;/label&gt;&lt;/li&gt;
&lt;li class=&#34;task-list-item&#34;&gt;&lt;input type=&#34;checkbox&#34; id=&#34;cbx_11&#34; disabled=&#34;true&#34;&gt;&lt;label for=&#34;cbx_11&#34;&gt; GeoHash&lt;/label&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;其他命令&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#其他命令&#34;&gt;#&lt;/a&gt; 其他命令&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;除了基本的数据结构之外的 &lt;code&gt;Redis&lt;/code&gt;  的命令。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul class=&#34;task-list&#34;&gt;
&lt;li class=&#34;task-list-item&#34;&gt;&lt;input type=&#34;checkbox&#34; id=&#34;cbx_12&#34; disabled=&#34;true&#34;&gt;&lt;label for=&#34;cbx_12&#34;&gt; help&lt;/label&gt;&lt;/li&gt;
&lt;li class=&#34;task-list-item&#34;&gt;&lt;input type=&#34;checkbox&#34; id=&#34;cbx_13&#34; disabled=&#34;true&#34;&gt;&lt;label for=&#34;cbx_13&#34;&gt; auth&lt;/label&gt;&lt;/li&gt;
&lt;li class=&#34;task-list-item&#34;&gt;&lt;input type=&#34;checkbox&#34; id=&#34;cbx_14&#34; disabled=&#34;true&#34;&gt;&lt;label for=&#34;cbx_14&#34;&gt; scan&lt;/label&gt;&lt;/li&gt;
&lt;li class=&#34;task-list-item&#34;&gt;&lt;input type=&#34;checkbox&#34; id=&#34;cbx_15&#34; disabled=&#34;true&#34;&gt;&lt;label for=&#34;cbx_15&#34;&gt; keys&lt;/label&gt;&lt;/li&gt;
&lt;li class=&#34;task-list-item&#34;&gt;&lt;input type=&#34;checkbox&#34; id=&#34;cbx_16&#34; disabled=&#34;true&#34;&gt;&lt;label for=&#34;cbx_16&#34;&gt; select&lt;/label&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;内功心法&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#内功心法&#34;&gt;#&lt;/a&gt; 内功心法&lt;/h2&gt;
&lt;h3 id=&#34;redis中的数据结构&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#redis中的数据结构&#34;&gt;#&lt;/a&gt; Redis 中的数据结构&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;Redis&lt;/code&gt;  内部的数据结构详解&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul class=&#34;task-list&#34;&gt;
&lt;li class=&#34;task-list-item&#34;&gt;&lt;input type=&#34;checkbox&#34; id=&#34;cbx_17&#34; checked=&#34;true&#34; disabled=&#34;true&#34;&gt;&lt;label for=&#34;cbx_17&#34;&gt; &lt;a href=&#34;/2021/08/02/Redis%E7%B3%BB%E5%88%97/C-4-%E8%B7%B3%E8%A1%A8/&#34;&gt;Redis 中的数据结构之跳表及其原理&lt;/a&gt;&lt;/label&gt;&lt;/li&gt;
&lt;li class=&#34;task-list-item&#34;&gt;&lt;input type=&#34;checkbox&#34; id=&#34;cbx_18&#34; checked=&#34;true&#34; disabled=&#34;true&#34;&gt;&lt;label for=&#34;cbx_18&#34;&gt; &lt;a href=&#34;/2021/08/02/Redis%E7%B3%BB%E5%88%97/C-1-Redis%E7%9A%84%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B9%8Bziplist/&#34;&gt;Redis 数据结构之详解 &lt;code&gt;ziplist&lt;/code&gt; &lt;/a&gt;&lt;/label&gt;&lt;/li&gt;
&lt;li class=&#34;task-list-item&#34;&gt;&lt;input type=&#34;checkbox&#34; id=&#34;cbx_19&#34; disabled=&#34;true&#34;&gt;&lt;label for=&#34;cbx_19&#34;&gt; intset&lt;/label&gt;&lt;/li&gt;
&lt;li class=&#34;task-list-item&#34;&gt;&lt;input type=&#34;checkbox&#34; id=&#34;cbx_20&#34; disabled=&#34;true&#34;&gt;&lt;label for=&#34;cbx_20&#34;&gt; dict&lt;/label&gt;&lt;/li&gt;
&lt;li class=&#34;task-list-item&#34;&gt;&lt;input type=&#34;checkbox&#34; id=&#34;cbx_21&#34; disabled=&#34;true&#34;&gt;&lt;label for=&#34;cbx_21&#34;&gt; skiplist&lt;/label&gt;&lt;/li&gt;
&lt;li class=&#34;task-list-item&#34;&gt;&lt;input type=&#34;checkbox&#34; id=&#34;cbx_22&#34; disabled=&#34;true&#34;&gt;&lt;label for=&#34;cbx_22&#34;&gt; module object&lt;/label&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;高阶 &lt;code&gt;Redis&lt;/code&gt;  使用，助力成为大牛&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul class=&#34;task-list&#34;&gt;
&lt;li class=&#34;task-list-item&#34;&gt;&lt;input type=&#34;checkbox&#34; id=&#34;cbx_23&#34; disabled=&#34;true&#34;&gt;&lt;label for=&#34;cbx_23&#34;&gt; Redis 的数据淘汰机制&lt;/label&gt;&lt;/li&gt;
&lt;li class=&#34;task-list-item&#34;&gt;&lt;input type=&#34;checkbox&#34; id=&#34;cbx_24&#34; disabled=&#34;true&#34;&gt;&lt;label for=&#34;cbx_24&#34;&gt; 持久化策略&lt;/label&gt;&lt;/li&gt;
&lt;li class=&#34;task-list-item&#34;&gt;&lt;input type=&#34;checkbox&#34; id=&#34;cbx_25&#34; disabled=&#34;true&#34;&gt;&lt;label for=&#34;cbx_25&#34;&gt; 主从复制&lt;/label&gt;&lt;/li&gt;
&lt;li class=&#34;task-list-item&#34;&gt;&lt;input type=&#34;checkbox&#34; id=&#34;cbx_26&#34; disabled=&#34;true&#34;&gt;&lt;label for=&#34;cbx_26&#34;&gt; 事务机制&lt;/label&gt;&lt;/li&gt;
&lt;li class=&#34;task-list-item&#34;&gt;&lt;input type=&#34;checkbox&#34; id=&#34;cbx_27&#34; disabled=&#34;true&#34;&gt;&lt;label for=&#34;cbx_27&#34;&gt; 哨兵机制&lt;/label&gt;&lt;/li&gt;
&lt;li class=&#34;task-list-item&#34;&gt;&lt;input type=&#34;checkbox&#34; id=&#34;cbx_28&#34; disabled=&#34;true&#34;&gt;&lt;label for=&#34;cbx_28&#34;&gt; 监察器&lt;/label&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;实战与应用&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#实战与应用&#34;&gt;#&lt;/a&gt; 实战与应用&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;说的再多，不如动手练练&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul class=&#34;task-list&#34;&gt;
&lt;li class=&#34;task-list-item&#34;&gt;&lt;input type=&#34;checkbox&#34; id=&#34;cbx_29&#34; disabled=&#34;true&#34;&gt;&lt;label for=&#34;cbx_29&#34;&gt; Redis 实现分布式锁。&lt;/label&gt;&lt;/li&gt;
&lt;li class=&#34;task-list-item&#34;&gt;&lt;input type=&#34;checkbox&#34; id=&#34;cbx_30&#34; disabled=&#34;true&#34;&gt;&lt;label for=&#34;cbx_30&#34;&gt; Redis 实现发布订阅模式&lt;/label&gt;&lt;/li&gt;
&lt;li class=&#34;task-list-item&#34;&gt;&lt;input type=&#34;checkbox&#34; id=&#34;cbx_31&#34; disabled=&#34;true&#34;&gt;&lt;label for=&#34;cbx_31&#34;&gt; 布隆过滤器&lt;/label&gt;&lt;/li&gt;
&lt;li class=&#34;task-list-item&#34;&gt;&lt;input type=&#34;checkbox&#34; id=&#34;cbx_32&#34; disabled=&#34;true&#34;&gt;&lt;label for=&#34;cbx_32&#34;&gt; 限流实例&lt;/label&gt;&lt;/li&gt;
&lt;li class=&#34;task-list-item&#34;&gt;&lt;input type=&#34;checkbox&#34; id=&#34;cbx_33&#34; disabled=&#34;true&#34;&gt;&lt;label for=&#34;cbx_33&#34;&gt; 延时队列&lt;/label&gt;&lt;/li&gt;
&lt;li class=&#34;task-list-item&#34;&gt;&lt;input type=&#34;checkbox&#34; id=&#34;cbx_34&#34; disabled=&#34;true&#34;&gt;&lt;label for=&#34;cbx_34&#34;&gt; 统计 PV&lt;/label&gt;&lt;/li&gt;
&lt;li class=&#34;task-list-item&#34;&gt;&lt;input type=&#34;checkbox&#34; id=&#34;cbx_35&#34; disabled=&#34;true&#34;&gt;&lt;label for=&#34;cbx_35&#34;&gt; 限流&lt;/label&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;运维&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#运维&#34;&gt;#&lt;/a&gt; 运维&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;不让别人擦屁股&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul class=&#34;task-list&#34;&gt;
&lt;li class=&#34;task-list-item&#34;&gt;&lt;input type=&#34;checkbox&#34; id=&#34;cbx_36&#34; disabled=&#34;true&#34;&gt;&lt;label for=&#34;cbx_36&#34;&gt; 配置文件详解&lt;/label&gt;&lt;/li&gt;
&lt;li class=&#34;task-list-item&#34;&gt;&lt;input type=&#34;checkbox&#34; id=&#34;cbx_37&#34; disabled=&#34;true&#34;&gt;&lt;label for=&#34;cbx_37&#34;&gt; 数据持久化&lt;/label&gt;&lt;/li&gt;
&lt;li class=&#34;task-list-item&#34;&gt;&lt;input type=&#34;checkbox&#34; id=&#34;cbx_38&#34; disabled=&#34;true&#34;&gt;&lt;label for=&#34;cbx_38&#34;&gt; 数据迁移&lt;/label&gt;&lt;/li&gt;
&lt;li class=&#34;task-list-item&#34;&gt;&lt;input type=&#34;checkbox&#34; id=&#34;cbx_39&#34; disabled=&#34;true&#34;&gt;&lt;label for=&#34;cbx_39&#34;&gt; 再谈集群&lt;/label&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;其他&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#其他&#34;&gt;#&lt;/a&gt; 其他&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;不仅要有内涵，更要有颜值。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul class=&#34;task-list&#34;&gt;
&lt;li class=&#34;task-list-item&#34;&gt;&lt;input type=&#34;checkbox&#34; id=&#34;cbx_40&#34; disabled=&#34;true&#34;&gt;&lt;label for=&#34;cbx_40&#34;&gt;  &lt;code&gt;Redis&lt;/code&gt;  面试题&lt;/label&gt;&lt;/li&gt;
&lt;li class=&#34;task-list-item&#34;&gt;&lt;input type=&#34;checkbox&#34; id=&#34;cbx_41&#34; disabled=&#34;true&#34;&gt;&lt;label for=&#34;cbx_41&#34;&gt;  &lt;code&gt;Redis&lt;/code&gt;  为什么这么快&lt;/label&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;学习路线图&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#学习路线图&#34;&gt;#&lt;/a&gt; 学习路线图&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;这里是灯塔。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul class=&#34;task-list&#34;&gt;
&lt;li class=&#34;task-list-item&#34;&gt;&lt;input type=&#34;checkbox&#34; id=&#34;cbx_42&#34; disabled=&#34;true&#34;&gt;&lt;label for=&#34;cbx_42&#34;&gt; 路线图&lt;/label&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;最后&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#最后&#34;&gt;#&lt;/a&gt; 最后&lt;/h2&gt;
&lt;p&gt;期望与你一起遇见更好的自己&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/images/qrcode.jpg&#34; alt=&#34;期望与你一起遇见更好的自己&#34;&gt;&lt;/p&gt;
</content>
        <category term="目录" />
        <category term="Redis" />
        <updated>2021-07-23T06:18:55.000Z</updated>
    </entry>
</feed>
