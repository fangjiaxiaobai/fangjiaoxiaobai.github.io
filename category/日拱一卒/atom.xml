<?xml version="1.0"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://fangjiaxiaobai.github.io</id>
    <title>方家小白 • Posts by &#34;日拱一卒&#34; category</title>
    <link href="https://fangjiaxiaobai.github.io" />
    <updated>2023-02-14T10:18:18.000Z</updated>
    <category term="全站地图" />
    <category term="目录" />
    <category term="源码" />
    <category term="MySQL" />
    <category term="Redis" />
    <category term="日常" />
    <category term="Springboot" />
    <category term="Netty" />
    <category term="雪花算法" />
    <category term="算法" />
    <category term="Elastic Search" />
    <category term="搜索" />
    <category term="数据结构" />
    <category term="git" />
    <category term="go" />
    <category term="go-error" />
    <category term="k8s" />
    <category term="kubernetes" />
    <category term="日拱一卒" />
    <category term="log" />
    <category term="go-log" />
    <category term="MachineLearn" />
    <category term="猫影视" />
    <category term="图片" />
    <category term="RocketMQ" />
    <category term="消息队列" />
    <category term="线程池" />
    <category term="面经" />
    <category term="HD" />
    <category term="BQ" />
    <category term="AC" />
    <category term="动态规划" />
    <category term="leetCode" />
    <category term="数组" />
    <category term="面经之算法题" />
    <category term="链表" />
    <category term="有点难的算法题" />
    <category term="不做也罢的算法题" />
    <category term="String" />
    <category term="JDK" />
    <category term="JDK8" />
    <category term="数据结构与算法" />
    <category term="哈希算法" />
    <category term="HashMap" />
    <category term="排序" />
    <category term="冒泡排序" />
    <category term="分治思想排序" />
    <category term="go-设计模式" />
    <category term="快速排序" />
    <category term="分支思想排序" />
    <category term="交换排序" />
    <category term="桶排序" />
    <category term="线性思想排序" />
    <category term="选择排序" />
    <category term="Java" />
    <category term="dubbo" />
    <category term="架构" />
    <category term="笔记" />
    <category term="递归" />
    <category term="模型评估" />
    <category term="go-runtimes" />
    <category term="KNN" />
    <category term="JDK版本" />
    <category term="JDK11" />
    <category term="OOM" />
    <category term="JVM" />
    <category term="Stream" />
    <entry>
        <id>https://fangjiaxiaobai.github.io/2023/02/14/onedayday/2023-02-14.jvm-gc/</id>
        <title>JVM GC 分析</title>
        <link rel="alternate" href="https://fangjiaxiaobai.github.io/2023/02/14/onedayday/2023-02-14.jvm-gc/"/>
        <content type="html">&lt;h2 id=&#34;频繁gc&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#频繁gc&#34;&gt;#&lt;/a&gt; 频繁 GC&lt;/h2&gt;
&lt;p&gt;今天分享一个面试题，频繁 &lt;code&gt;GC&lt;/code&gt;  怎么处理…&lt;/p&gt;
&lt;p&gt;且不说为什么频繁 &lt;code&gt;GC&lt;/code&gt; , 先聊聊你怎么发现  &lt;code&gt;JVM&lt;/code&gt;  频繁 &lt;code&gt;GC&lt;/code&gt;  的呢？&lt;/p&gt;
&lt;p&gt;告警啊！对的。&lt;br&gt;
第一种就是  &lt;code&gt;FullGC&lt;/code&gt;  的告警，&lt;br&gt;
第二种就是 机器 CPU 的负载过高&lt;br&gt;
第三种就是 大面积的接口超时，无法处理请求。&lt;/p&gt;
&lt;p&gt;那就好说了，咱们分析下什么地方可以进行 &lt;code&gt;GC&lt;/code&gt; ?&lt;/p&gt;
&lt;p&gt;堆！ 但不仅仅是堆，还是堆外内存也会进行 &lt;code&gt;GC&lt;/code&gt; 。&lt;/p&gt;
&lt;p&gt;当然我们主要说堆！&lt;/p&gt;
&lt;p&gt;先看一下常用的名词.&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;./images/2023-02-14-01.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;younggc&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#younggc&#34;&gt;#&lt;/a&gt;  &lt;code&gt;YoungGC&lt;/code&gt;&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;YoungGC&lt;/code&gt;  指发生在新生代的垃圾收集动作，新生代中的对象朝生夕死，所以  &lt;code&gt;Minor GC&lt;/code&gt;  非常频繁，回收速度也比较快。频繁的 &lt;code&gt;YoungGC&lt;/code&gt;  是正常的，要看下  &lt;code&gt;YoungGC&lt;/code&gt;  之后存活的对象是否有问题。&lt;/p&gt;
&lt;p&gt;对象优先在新生代  &lt;code&gt;Eden&lt;/code&gt;  区中分配，如果  &lt;code&gt;Eden&lt;/code&gt;  区没有足够的空间时，就会触发一次  &lt;code&gt;Young GC&lt;/code&gt;  。&lt;/p&gt;
&lt;p&gt;新生代的垃圾收集器有 &lt;code&gt;Serial&lt;/code&gt; ,  &lt;code&gt;ParNew&lt;/code&gt; .&lt;/p&gt;
&lt;p&gt;经过几次 YGC 还存活的就到了老年代。&lt;/p&gt;
&lt;h3 id=&#34;old-gc&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#old-gc&#34;&gt;#&lt;/a&gt;  &lt;code&gt;old GC&lt;/code&gt;&lt;/h3&gt;
&lt;p&gt;指发生在老年代的 &lt;code&gt;GC&lt;/code&gt; ，速度一般比  &lt;code&gt;Minor GC&lt;/code&gt;  慢十倍以上。&lt;br&gt;
老年代的垃圾收集器有  &lt;code&gt;Serial Old&lt;/code&gt; ,  &lt;code&gt;Parallel Old&lt;/code&gt; ， &lt;code&gt;CMS&lt;/code&gt; .&lt;/p&gt;
&lt;p&gt;老年代会在两种情况下触发  &lt;code&gt;Old GC&lt;/code&gt; ：&lt;br&gt;
一是开启分配担保机制，根据历次  &lt;code&gt;Minor GC&lt;/code&gt;  后进入老年代的对象大于当前老年代内存大小，判断  &lt;code&gt;Minor GC&lt;/code&gt;  有风险，则会触发  &lt;code&gt;Old GC&lt;/code&gt; ；比如：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;1. 系统并发高、执行耗时过长，或者数据量过大，导致  &lt;code&gt;young gc&lt;/code&gt;  频繁，且 &lt;code&gt;gc&lt;/code&gt;  后存活对象太多，但是  &lt;code&gt;survivor&lt;/code&gt;  区存放不下（太小 或 动态年龄判断） 导致对象快速进入老年代 老年代迅速堆满&lt;/li&gt;
&lt;li&gt;2. 程序一次性加载过多对象到内存 （大对象），导致频繁有大对象进入老年代&lt;/li&gt;
&lt;li&gt;3. 存在内存溢出的情况，老年代驻留了大量释放不掉的对象， 只要有一点点对象进入老年代 就达到  &lt;code&gt;full gc&lt;/code&gt;  的水位了&lt;br&gt;
二是  &lt;code&gt;Minor GC&lt;/code&gt;  后剩余对象太多，老年代放不下了也会触发  &lt;code&gt;Old GC&lt;/code&gt; 。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;full-gc&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#full-gc&#34;&gt;#&lt;/a&gt;  &lt;code&gt;Full GC&lt;/code&gt;&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;FGC&lt;/code&gt;  收集整个  &lt;code&gt;Young Gen&lt;/code&gt;  以及部分  &lt;code&gt;old gen&lt;/code&gt;  的  &lt;code&gt;GC&lt;/code&gt; ，只有垃圾收集器  &lt;code&gt;G1&lt;/code&gt;  有这个模式。但是我们通常说的 &lt;code&gt;Full GC&lt;/code&gt;  指的是 针对新生代、老年代、永久代的全体内存空间的垃圾回收。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;full gc&lt;/code&gt;  触发条件有&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;1、老年代空间不足， 所以追因的方向就是导致 老年代空间不足的原因：&lt;br&gt;
大量对象频繁进入老年代 + 老年代空间释放不掉&lt;/li&gt;
&lt;li&gt;2、元空间内存不足，也会触发 &lt;code&gt;Full GC&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;3、堆外内存  &lt;code&gt;direct buffer memory&lt;/code&gt;  使用不当导致&lt;/li&gt;
&lt;li&gt;4、代码问题。老年代占用不高，重启效果不明显。这种情况，大概率是在代码里搞执行了  &lt;code&gt;System.gc()&lt;/code&gt; ;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;解决&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#解决&#34;&gt;#&lt;/a&gt; 解决&lt;/h3&gt;
&lt;p&gt;知道了上面的问题之后，解决就简单了。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;1、观察年轻代  &lt;code&gt;gc&lt;/code&gt;  的情况，多久执行一次、每次 &lt;code&gt;gc&lt;/code&gt;  后存活对象有多少  &lt;code&gt;survivor&lt;/code&gt;  区多大&lt;br&gt;
存活对象比较多 超过  &lt;code&gt;survivor&lt;/code&gt;  区大小或触发动态年龄判断 =&amp;gt; 调整内存分配比例&lt;/li&gt;
&lt;li&gt;2、观察老年代的内存情况 水位情况，多久执行一次、执行耗时多少、回收掉多少内存&lt;br&gt;
如果在持续的上涨，而且 &lt;code&gt;full gc&lt;/code&gt;  后回收效果不好，那么很有可能是内存溢出了 =&amp;gt; 查看堆快照，定位内存溢出位置，修复代码。&lt;/li&gt;
&lt;li&gt;3、如果年轻代和老年代的内存都比较低，而且频率低，那么有可能是元数据区加载太多东西了&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;最后&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#最后&#34;&gt;#&lt;/a&gt; 最后&lt;/h2&gt;
&lt;p&gt;&lt;img data-src=&#34;https://fangjiaxiaobai.github.io/images/qrcode.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
</content>
        <category term="日拱一卒" />
        <updated>2023-02-14T10:18:18.000Z</updated>
    </entry>
    <entry>
        <id>https://fangjiaxiaobai.github.io/2023/02/12/onedayday/2023-02-12.Https/</id>
        <title>Https连接过程</title>
        <link rel="alternate" href="https://fangjiaxiaobai.github.io/2023/02/12/onedayday/2023-02-12.Https/"/>
        <content type="html">&lt;h2 id=&#34;https-的连接过程&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#https-的连接过程&#34;&gt;#&lt;/a&gt; Https 的连接过程&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;Https&lt;/code&gt;  全称是  &lt;code&gt;Hypertext Transfer Protocol Secure&lt;/code&gt; ，超文本传输安全协议.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Https&lt;/code&gt;  相比  &lt;code&gt;Http&lt;/code&gt;  是在  &lt;code&gt;TCP&lt;/code&gt;  与  &lt;code&gt;HTTP&lt;/code&gt;  之间多加了一层  &lt;code&gt;SSL&lt;/code&gt; ( &lt;code&gt;Secure Socket Layer&lt;/code&gt;  协议位于  &lt;code&gt;TCP/IP&lt;/code&gt;  协议与各种应用层协议之间，为数据通讯提供安全支持)/ &lt;code&gt;TLS&lt;/code&gt; （ &lt;code&gt;Transport Layer Security&lt;/code&gt; ，安全传输层协议）&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Http&lt;/code&gt;  协议采用明文传输信息，存在信息窃听、信息篡改和信息劫持的风险，而协议 &lt;code&gt;TLS/SSL&lt;/code&gt;  具有身份验证、信息加密和完整性校验的功能，可以避免此类问题发生，所以 &lt;code&gt;HTTP&lt;/code&gt;  与  &lt;code&gt;Https&lt;/code&gt;  之间的关系： &lt;code&gt;HTTP+加密+认证+完整性保护 = Https&lt;/code&gt; 。&lt;/p&gt;
&lt;h3 id=&#34;连接过程&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#连接过程&#34;&gt;#&lt;/a&gt; 连接过程&lt;/h3&gt;
&lt;p&gt;&lt;img data-src=&#34;/images/onedayday/2023-02-12-01.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;Https 会发送两次请求，经过非对称加密和对称加密两个加密过程.&lt;/p&gt;
&lt;p&gt;1. 客户端发送一个 &lt;code&gt;https&lt;/code&gt;  的请求到服务端。首先还是会经过 Http 的三次握手。在第三次握手的时候，会发送客户端支持的加密套件和一个随机数 (随机数 1) 发送给服务端。&lt;br&gt;
2. 服务端申请配置好数字证书，包含公钥和私钥。&lt;br&gt;
3. 服务端也会生成一个随机数 (随机数 2)，将客户端发送过来的加密套件中选择一种，服务端生成的随机数，证书传送给客户端，证书中包含了很多信息，比如证书的颁发机构，过期时间，网址，公钥等&lt;br&gt;
 4. 客户端解析证书，由客户端的 TLS 完成，首先会验证公钥是否有效，比如颁发机构，过期时间等。如果有异常，就会弹出警告信息，并结束通信。如果正常，则生成一个随机值（用于对称加密），然后用服务端的公钥对随机值进行&lt;b&gt;非对称加密&lt;/b&gt;。&lt;br&gt;
5. 客户端保存服务端的随机数，客户端会使用随机数 1 和随机数 2 再次生成一个随机数 (随机数 3) 并使用服务端发送回来的加密套件与服务端发送来公钥加密后 (预主秘钥) 传送到服务端。&lt;br&gt;
6. 服务端使用证书的私钥对加密后的预主密钥进行非对称解密得到预主密钥。 使用约定的加密算法对预主密钥 + 随机数 1 + 随机数 2 进行加密生成会话秘钥。&lt;br&gt;
7. 服务端把对称加密后的会话秘钥到客户端。客户端也会使用随机数 1，随机数 2，随机数 3 生成一个会话秘钥，并且是和服务端的会话秘钥是一样的。&lt;br&gt;
8. 客户端通过会话秘钥对明文进行加密，然后进行数据传输。&lt;/p&gt;
&lt;h3 id=&#34;https-连接为什么只用一次非对称加密内容传输都使用对称传输&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#https-连接为什么只用一次非对称加密内容传输都使用对称传输&#34;&gt;#&lt;/a&gt; Https 连接为什么只用一次非对称加密，内容传输都使用对称传输？&lt;/h3&gt;
&lt;p&gt;非对称加密算法十分复杂，加密解密时间长，效率低，因此我们只在 TSL 连接建立时才使用，后面的数据传输环节统一使用对称加密，这样既能保证效率，又能极大的增强安全性。&lt;/p&gt;
&lt;h2 id=&#34;最后&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#最后&#34;&gt;#&lt;/a&gt; 最后&lt;/h2&gt;
&lt;p&gt;希望和你一起遇见更好的自己。&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://fangjiaxiaobai.github.io/images/qrcode.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
</content>
        <category term="日拱一卒" />
        <updated>2023-02-12T10:18:18.000Z</updated>
    </entry>
    <entry>
        <id>https://fangjiaxiaobai.github.io/2023/02/03/onedayday/2023-02-03.JUC/</id>
        <title>JUC的线程同步类</title>
        <link rel="alternate" href="https://fangjiaxiaobai.github.io/2023/02/03/onedayday/2023-02-03.JUC/"/>
        <content type="html">&lt;p&gt;&lt;code&gt;Juc&lt;/code&gt;  提供了很多关于线程安全的类，比如:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;线程池相关的:  &lt;code&gt;ThreadPoolExecutor&lt;/code&gt; 、 &lt;code&gt;Executors&lt;/code&gt;  等；&lt;/li&gt;
&lt;li&gt;锁相关的，如  &lt;code&gt;Lock&lt;/code&gt; 、 &lt;code&gt;ReadWriteLock&lt;/code&gt; 、 &lt;code&gt;ReentrantLock&lt;/code&gt; ,  &lt;code&gt;ReentrantReadWriteLock&lt;/code&gt;  等；&lt;/li&gt;
&lt;li&gt;线程安全的数据结构，应用于线程安全的集合中，如  &lt;code&gt;ConcurrentHashMap&lt;/code&gt; 、 &lt;code&gt;LinkedBlockingQueue&lt;/code&gt; 、 &lt;code&gt;DelayQueue&lt;/code&gt;  等；&lt;/li&gt;
&lt;li&gt;还有高级的线程同步的类，如  &lt;code&gt;CountDownLatch&lt;/code&gt; 、 &lt;code&gt;CyclicBarrier&lt;/code&gt; 、 &lt;code&gt;Semaphore&lt;/code&gt; , &lt;code&gt;Phaser&lt;/code&gt;  等。&lt;/li&gt;
&lt;li&gt;还有一些原子类。如  &lt;code&gt;AtomicInteger&lt;/code&gt; , &lt;code&gt;AtomicLong&lt;/code&gt; ,  &lt;code&gt;AtomicReference&lt;/code&gt;  等等&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;今天我们就来看下  &lt;code&gt;JUC&lt;/code&gt;  提供的线程同步类。&lt;/p&gt;
&lt;h2 id=&#34;countdownlatch&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#countdownlatch&#34;&gt;#&lt;/a&gt;  &lt;code&gt;CountDownLatch&lt;/code&gt;&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;CountDownLatch&lt;/code&gt;  一种允许一个或多个线程等待，直到在其他线程中执行的一组操作完成的同步辅助工具类。 可以理解为这是一个计数器。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;CountDownLatch&lt;/code&gt;  提供了个好用的方法:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;countDown()&lt;/code&gt; ：调用一次，计数器减  &lt;code&gt;1&lt;/code&gt; 。直到减为 0.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;await()&lt;/code&gt; ：当计数器不为  &lt;code&gt;0&lt;/code&gt;  时，则调用该方法的线程阻塞，当计数器为  &lt;code&gt;0&lt;/code&gt;  时，可以唤醒等待的一个或者全部线程。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;countdownlatch-使用场景&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#countdownlatch-使用场景&#34;&gt;#&lt;/a&gt;  &lt;code&gt;CountDownLatch&lt;/code&gt;  使用场景：&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;排队，比如排队做核酸。假设有个 5 个人做核酸.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;CountDownLatch&lt;/code&gt;  示例代码如下：&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; java.time.LocalDateTime;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; java.time.format.DateTimeFormatter;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; java.util.concurrent.CountDownLatch;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; java.util.concurrent.ExecutorService;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; java.util.concurrent.Executors;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;class&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;Demo&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;static&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(String[] args)&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;throws&lt;/span&gt; InterruptedException &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        CountDownLatch nucleinCountDownLatch = &lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; CountDownLatch(&lt;span class=&#34;number&#34;&gt;5&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        System.out.println(&lt;span class=&#34;string&#34;&gt;&amp;quot;开始做核酸啦~~~&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        ExecutorService executorService = Executors.newCachedThreadPool();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; i = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;; i &amp;lt; &lt;span class=&#34;number&#34;&gt;5&lt;/span&gt;; i++) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;keyword&#34;&gt;final&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; j = i;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            executorService.execute(() -&amp;gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                System.out.println(&lt;span class=&#34;string&#34;&gt;&amp;quot;user&amp;quot;&lt;/span&gt; + j + &lt;span class=&#34;string&#34;&gt;&amp;quot; &amp;quot;&lt;/span&gt;+ LocalDateTime.now().format(DateTimeFormatter.ofPattern(&lt;span class=&#34;string&#34;&gt;&amp;quot;yyyy-MM-dd HH:mm:ss&amp;quot;&lt;/span&gt;)) + &lt;span class=&#34;string&#34;&gt;&amp;quot;做完了核酸&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                nucleinCountDownLatch.countDown();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            Thread.sleep(&lt;span class=&#34;number&#34;&gt;2000&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        nucleinCountDownLatch.await();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        System.out.println(&lt;span class=&#34;string&#34;&gt;&amp;quot;核算员着急忙慌的下班了, 可担心再来一个做核酸的....&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        executorService.shutdown();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;以上程序执行结果如下：&lt;/p&gt;
&lt;figure class=&#34;highlight sh&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;开始做核酸啦~~~&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;user：0 2023-02-03 22:26:44做完了核酸&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;user：1 2023-02-03 22:26:46做完了核酸&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;user：2 2023-02-03 22:26:48做完了核酸&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;user：3 2023-02-03 22:26:50做完了核酸&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;user：4 2023-02-03 22:26:52做完了核酸&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;核算员着急忙慌的下班了, 可担心再来一个做核算的....&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;cyclicbarrier&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#cyclicbarrier&#34;&gt;#&lt;/a&gt;  &lt;code&gt;CyclicBarrier&lt;/code&gt;&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;CyclicBarrier&lt;/code&gt; , 直译过来就是 循环屏障。它允许一组线程全部等待，直接这组线程到达相同的状态的一种同步辅助工具.  CyclicBarriers 在涉及必须偶尔相互等待的固定大小线程组的程序中很有用。 屏障之所以称为循环屏障，是因为它可以在等待线程被释放后重新使用。这句话敲重点！！！&lt;/p&gt;
&lt;p&gt;使用起来也是相当简单！&lt;/p&gt;
&lt;p&gt;就是一个方法，await ().  等待这一组线程都执行相同的状态。与  &lt;code&gt;CountDownLatch&lt;/code&gt;  不同的是，  &lt;code&gt;CyclicBarrier&lt;/code&gt;  是可以重复使用的呦。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;CyclicBarrier&lt;/code&gt;  应用起来太广泛了，我司有班车，不好意思，我司早晚提供免费班车… 你懂得 fa~&lt;/p&gt;
&lt;p&gt;上代码…&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;class&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;CyclicBarrierTest&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;static&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(String[] args)&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;throws&lt;/span&gt; InterruptedException &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;comment&#34;&gt;// 假设每个班车有50个座位.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        CyclicBarrier cyclicBarrier = &lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; CyclicBarrier(&lt;span class=&#34;number&#34;&gt;50&lt;/span&gt;, () -&amp;gt; System.out.println(&lt;span class=&#34;string&#34;&gt;&amp;quot;满座了!  开始起飞.....&amp;quot;&lt;/span&gt;));&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;comment&#34;&gt;// 100人&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; i = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;; i &amp;lt; &lt;span class=&#34;number&#34;&gt;100&lt;/span&gt;; i++) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; Thread(&lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; RegularBus(cyclicBarrier, i)).start();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;/**&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;     * 班车&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;     */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;static&lt;/span&gt; &lt;span class=&#34;class&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;RegularBus&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;implements&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;Runnable&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;private&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;final&lt;/span&gt; CyclicBarrier cyclicBarrier;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;comment&#34;&gt;/**&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;         * 员工工号&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;         */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;private&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;final&lt;/span&gt; Integer ppId;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        RegularBus(CyclicBarrier cyclicBarrier, Integer poorPeopleId) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt;.cyclicBarrier = cyclicBarrier;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt;.ppId = poorPeopleId;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;meta&#34;&gt;@Override&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;run&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;()&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (ppId % &lt;span class=&#34;number&#34;&gt;10&lt;/span&gt; == &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                System.out.println(&lt;span class=&#34;string&#34;&gt;&amp;quot;工号为&amp;quot;&lt;/span&gt; + ppId + &lt;span class=&#34;string&#34;&gt;&amp;quot;的员工抢到了一个的座位.....&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;keyword&#34;&gt;try&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                cyclicBarrier.await();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &amp;#125; &lt;span class=&#34;keyword&#34;&gt;catch&lt;/span&gt; (InterruptedException | BrokenBarrierException e) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                e.printStackTrace();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;以上程序执行结果如下：&lt;/p&gt;
&lt;figure class=&#34;highlight sh&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;工号为10的员工抢到了一个的座位.....&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;工号为0的员工抢到了一个的座位.....&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;工号为30的员工抢到了一个的座位.....&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;工号为20的员工抢到了一个的座位.....&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;工号为40的员工抢到了一个的座位.....&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;满座了!  开始起飞.....&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;工号为50的员工抢到了一个的座位.....&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;工号为60的员工抢到了一个的座位.....&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;工号为70的员工抢到了一个的座位.....&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;工号为80的员工抢到了一个的座位.....&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;工号为90的员工抢到了一个的座位.....&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;满座了!  开始起飞.....&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;semaphore&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#semaphore&#34;&gt;#&lt;/a&gt;  &lt;code&gt;Semaphore&lt;/code&gt;&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;Semaphore&lt;/code&gt;  这个更简单了，直译！信号量。   他用于管理多线程中控制资源的访问与使用。 常见的就是限流。对应生活中的栗子，我想一下哈！&lt;/p&gt;
&lt;p&gt;还是我司！ 门卫！每天早上，我司大门口，都有两个五大三粗的壮汉在数 进来了多少辆车，出去了多少辆车。还时不时的用对讲机：洞幺， 洞幺， 我是洞两，还有几个车位，还有几个车位.&lt;br&gt;
 对讲机那边：我草，我看看。地下没有车位了，地上问问拐哥.&lt;br&gt;
 洞两: “洞拐，洞拐，地上还有几个车位？”&lt;br&gt;
 洞拐: “多得很，多得很。”&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;class&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;SemaphoreTest&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;static&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(String[] args)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;comment&#34;&gt;// 车位总数&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        Semaphore semaphore = &lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; Semaphore(&lt;span class=&#34;number&#34;&gt;5&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;comment&#34;&gt;// 开车上班的人&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        ThreadPoolExecutor richManThreadPool = &lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; ThreadPoolExecutor(&lt;span class=&#34;number&#34;&gt;10&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;50&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;60&lt;/span&gt;, TimeUnit.SECONDS, &lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; LinkedBlockingQueue&amp;lt;&amp;gt;());&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; i = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;; i &amp;lt; &lt;span class=&#34;number&#34;&gt;10&lt;/span&gt;; i++) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; finalI = i;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            richManThreadPool.execute(() -&amp;gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                &lt;span class=&#34;keyword&#34;&gt;try&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                    &lt;span class=&#34;comment&#34;&gt;// 堵塞获取许可，即获取一个车位.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                    semaphore.acquire();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                    System.out.println(&lt;span class=&#34;string&#34;&gt;&amp;quot;开车上班的员工：&amp;quot;&lt;/span&gt; + Thread.currentThread().getName() + &lt;span class=&#34;string&#34;&gt;&amp;quot; 抢到了一个车位：&amp;quot;&lt;/span&gt; + LocalDateTime.now().format(DateTimeFormatter.ofPattern(&lt;span class=&#34;string&#34;&gt;&amp;quot;yyyy-MM-dd HH:mm:ss&amp;quot;&lt;/span&gt;)));&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                    &lt;span class=&#34;comment&#34;&gt;// 假设在上班中....&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                    TimeUnit.SECONDS.sleep(&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                    &lt;span class=&#34;comment&#34;&gt;// 释放许可, 开车回家了...&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                    semaphore.release();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                &amp;#125; &lt;span class=&#34;keyword&#34;&gt;catch&lt;/span&gt; (InterruptedException e) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                    e.printStackTrace();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;以上程序执行结果如下：&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;开车上班的员工：pool-&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;-thread-&lt;span class=&#34;number&#34;&gt;5&lt;/span&gt; 抢到了一个车位：&lt;span class=&#34;number&#34;&gt;2023&lt;/span&gt;-&lt;span class=&#34;number&#34;&gt;02&lt;/span&gt;-&lt;span class=&#34;number&#34;&gt;03&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;23&lt;/span&gt;:&lt;span class=&#34;number&#34;&gt;01&lt;/span&gt;:&lt;span class=&#34;number&#34;&gt;07&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;开车上班的员工：pool-&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;-thread-&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt; 抢到了一个车位：&lt;span class=&#34;number&#34;&gt;2023&lt;/span&gt;-&lt;span class=&#34;number&#34;&gt;02&lt;/span&gt;-&lt;span class=&#34;number&#34;&gt;03&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;23&lt;/span&gt;:&lt;span class=&#34;number&#34;&gt;01&lt;/span&gt;:&lt;span class=&#34;number&#34;&gt;07&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;开车上班的员工：pool-&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;-thread-&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt; 抢到了一个车位：&lt;span class=&#34;number&#34;&gt;2023&lt;/span&gt;-&lt;span class=&#34;number&#34;&gt;02&lt;/span&gt;-&lt;span class=&#34;number&#34;&gt;03&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;23&lt;/span&gt;:&lt;span class=&#34;number&#34;&gt;01&lt;/span&gt;:&lt;span class=&#34;number&#34;&gt;07&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;开车上班的员工：pool-&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;-thread-&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt; 抢到了一个车位：&lt;span class=&#34;number&#34;&gt;2023&lt;/span&gt;-&lt;span class=&#34;number&#34;&gt;02&lt;/span&gt;-&lt;span class=&#34;number&#34;&gt;03&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;23&lt;/span&gt;:&lt;span class=&#34;number&#34;&gt;01&lt;/span&gt;:&lt;span class=&#34;number&#34;&gt;07&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;开车上班的员工：pool-&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;-thread-&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt; 抢到了一个车位：&lt;span class=&#34;number&#34;&gt;2023&lt;/span&gt;-&lt;span class=&#34;number&#34;&gt;02&lt;/span&gt;-&lt;span class=&#34;number&#34;&gt;03&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;23&lt;/span&gt;:&lt;span class=&#34;number&#34;&gt;01&lt;/span&gt;:&lt;span class=&#34;number&#34;&gt;07&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;开车上班的员工：pool-&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;-thread-&lt;span class=&#34;number&#34;&gt;6&lt;/span&gt; 抢到了一个车位：&lt;span class=&#34;number&#34;&gt;2023&lt;/span&gt;-&lt;span class=&#34;number&#34;&gt;02&lt;/span&gt;-&lt;span class=&#34;number&#34;&gt;03&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;23&lt;/span&gt;:&lt;span class=&#34;number&#34;&gt;01&lt;/span&gt;:09&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;开车上班的员工：pool-&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;-thread-&lt;span class=&#34;number&#34;&gt;7&lt;/span&gt; 抢到了一个车位：&lt;span class=&#34;number&#34;&gt;2023&lt;/span&gt;-&lt;span class=&#34;number&#34;&gt;02&lt;/span&gt;-&lt;span class=&#34;number&#34;&gt;03&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;23&lt;/span&gt;:&lt;span class=&#34;number&#34;&gt;01&lt;/span&gt;:09&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;开车上班的员工：pool-&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;-thread-&lt;span class=&#34;number&#34;&gt;8&lt;/span&gt; 抢到了一个车位：&lt;span class=&#34;number&#34;&gt;2023&lt;/span&gt;-&lt;span class=&#34;number&#34;&gt;02&lt;/span&gt;-&lt;span class=&#34;number&#34;&gt;03&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;23&lt;/span&gt;:&lt;span class=&#34;number&#34;&gt;01&lt;/span&gt;:09&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;开车上班的员工：pool-&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;-thread-&lt;span class=&#34;number&#34;&gt;9&lt;/span&gt; 抢到了一个车位：&lt;span class=&#34;number&#34;&gt;2023&lt;/span&gt;-&lt;span class=&#34;number&#34;&gt;02&lt;/span&gt;-&lt;span class=&#34;number&#34;&gt;03&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;23&lt;/span&gt;:&lt;span class=&#34;number&#34;&gt;01&lt;/span&gt;:09&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;开车上班的员工：pool-&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;-thread-&lt;span class=&#34;number&#34;&gt;10&lt;/span&gt; 抢到了一个车位：&lt;span class=&#34;number&#34;&gt;2023&lt;/span&gt;-&lt;span class=&#34;number&#34;&gt;02&lt;/span&gt;-&lt;span class=&#34;number&#34;&gt;03&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;23&lt;/span&gt;:&lt;span class=&#34;number&#34;&gt;01&lt;/span&gt;:09&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;phaser&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#phaser&#34;&gt;#&lt;/a&gt;  &lt;code&gt;Phaser&lt;/code&gt;&lt;/h3&gt;
&lt;p&gt;说实话，这个东西，是我写这篇文章，收获最大的一个东西。扫盲了，在写这篇文章之前，我确实不知道还有这哥们.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Phaser&lt;/code&gt; （移相器）是 JDK 7 提供的，是一个可重用的同步屏障，在功能上类似于 CyclicBarrier 和 CountDownLatch，但支持更灵活的使用。 它的功能是等待所有线程到达之后，才继续或者开始进行新的一组任务。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Phaser&lt;/code&gt;  的功能非常强大，所以方法也比较多，我简单一说，大家细细研究！&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;register()&lt;/code&gt; ：注册新的参与者到  &lt;code&gt;Phaser&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;arriveAndAwaitAdvance()&lt;/code&gt; ：等待其他线程执行&lt;/li&gt;
&lt;li&gt;&lt;code&gt;arriveAndDeregister()&lt;/code&gt; ：注销此线程&lt;/li&gt;
&lt;li&gt;&lt;code&gt;forceTermination()&lt;/code&gt; ：强制  &lt;code&gt;Phaser&lt;/code&gt;  进入终止态&lt;/li&gt;
&lt;li&gt;&lt;code&gt;isTerminated()&lt;/code&gt; ：判断  &lt;code&gt;Phaser&lt;/code&gt;  是否终止&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;这个我司的 &lt;code&gt;case&lt;/code&gt;  就不好举例了。因为班车的栗子举过了呀。 所以，我就想起了有一次我在故宫玩，看到了一个旅行团…&lt;/p&gt;
&lt;p&gt;导游: “首先，这里我看到的是：太和殿，xxx (巴啦啦，说一通历史), 大家先去拍照，拍完照到我这里集合，咱们去下一个殿”&lt;br&gt;
… 旅客在搔首弄姿…&lt;br&gt;
 导游: “那么，这里我看到的是：中和殿，xxx (巴啦啦，说一通历史), 大家先去拍照，拍完照到我这里集合，咱们去下一个殿”&lt;br&gt;
… 旅客在搔首弄姿…・&lt;br&gt;
导游: “最后，这里我看到的是：保和殿，xxx (巴啦啦，说一通历史), 大家先去拍照，拍完照到我这里集合，咱们去看看皇帝和皇后睡觉的地方”&lt;br&gt;
 旅客：拍啥拍了，直接去看吧&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Phaser&lt;/code&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;63&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;64&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;65&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;66&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;67&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;68&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;69&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;70&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;71&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;72&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;73&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;74&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;75&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;76&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;77&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;78&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;79&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; java.util.Random;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; java.util.concurrent.Phaser;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;class&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;PhaserTest&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;static&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(String[] args)&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;throws&lt;/span&gt; InterruptedException &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;comment&#34;&gt;// 导游&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        Phaser phaser = &lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; TouristGuide();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;comment&#34;&gt;// 游客&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        Tourist[] tourists = &lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; Tourist[&lt;span class=&#34;number&#34;&gt;5&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; i = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;; i &amp;lt; tourists.length; i++) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            tourists[i] = &lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; Tourist(phaser, &lt;span class=&#34;string&#34;&gt;&amp;quot;游客&amp;quot;&lt;/span&gt; + i);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;comment&#34;&gt;// 注册 Phaser 等待的线程数，执行一次等待线程数 +1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            phaser.register();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;comment&#34;&gt;// 每个游客自行活动..&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; i = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;; i &amp;lt; tourists.length; i++) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;comment&#34;&gt;// 执行任务&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; Thread(tourists[i]).start();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;static&lt;/span&gt; &lt;span class=&#34;class&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;Tourist&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;implements&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;Runnable&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;private&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;final&lt;/span&gt; Phaser phaser;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;private&lt;/span&gt; String name;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;Tourist&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(Phaser phaser, String name)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt;.phaser = phaser;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt;.name = name;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;meta&#34;&gt;@Override&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;run&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;()&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            System.out.println(&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt;.name + &lt;span class=&#34;string&#34;&gt;&amp;quot; | 到了&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            phaser.arriveAndAwaitAdvance();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;keyword&#34;&gt;try&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                Thread.sleep(&lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; Random().nextInt(&lt;span class=&#34;number&#34;&gt;5&lt;/span&gt;) * &lt;span class=&#34;number&#34;&gt;1000&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                System.out.println(&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt;.name + &lt;span class=&#34;string&#34;&gt;&amp;quot; | 拍完照片了...&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                phaser.arriveAndAwaitAdvance();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                Thread.sleep(&lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; Random().nextInt(&lt;span class=&#34;number&#34;&gt;5&lt;/span&gt;) * &lt;span class=&#34;number&#34;&gt;1000&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                System.out.println(&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt;.name + &lt;span class=&#34;string&#34;&gt;&amp;quot; | 拍完照片了...&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                phaser.arriveAndAwaitAdvance();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                Thread.sleep(&lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; Random().nextInt(&lt;span class=&#34;number&#34;&gt;5&lt;/span&gt;) * &lt;span class=&#34;number&#34;&gt;1000&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                System.out.println(&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt;.name + &lt;span class=&#34;string&#34;&gt;&amp;quot;:\&amp;quot;拍啥拍，赶紧去看皇帝皇后睡觉吧\&amp;quot;&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                phaser.arriveAndAwaitAdvance();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &amp;#125; &lt;span class=&#34;keyword&#34;&gt;catch&lt;/span&gt; (InterruptedException e) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                e.printStackTrace();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;// Phaser 每个阶段完成之后的事件通知.  (===&amp;gt; 导游）&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;static&lt;/span&gt; &lt;span class=&#34;class&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;TouristGuide&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;extends&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;Phaser&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;comment&#34;&gt;/**&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;         * 每个阶段执行完之后的回调&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;         */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;meta&#34;&gt;@Override&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;protected&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;boolean&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;onAdvance&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(&lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; phase, &lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; registeredParties)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;keyword&#34;&gt;switch&lt;/span&gt; (phase) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                &lt;span class=&#34;keyword&#34;&gt;case&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt; -&amp;gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                    System.out.println(&lt;span class=&#34;string&#34;&gt;&amp;quot;首先，这里我看到的是：太和殿, xxx(巴啦啦，说一通历史), 大家先去拍照, 拍完照到我这里集合, 咱们去下一个殿&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                    &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                &lt;span class=&#34;keyword&#34;&gt;case&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;-&amp;gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                    System.out.println(&lt;span class=&#34;string&#34;&gt;&amp;quot;那么，这里我看到的是：中和殿, xxx(巴啦啦，说一通历史), 大家先去拍照, 拍完照到我这里集合, 咱们去下一个殿&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                    &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                &lt;span class=&#34;keyword&#34;&gt;case&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt; -&amp;gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                    System.out.println(&lt;span class=&#34;string&#34;&gt;&amp;quot;最后，这里我看到的是：保和殿, xxx(巴啦啦，说一通历史), 大家先去拍照, 拍完照到我这里集合, 咱们去看看皇帝和皇后睡觉的地方&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                    &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                &lt;span class=&#34;keyword&#34;&gt;default&lt;/span&gt; -&amp;gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                    &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;true&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;以上程序执行结果如下：&lt;/p&gt;
&lt;figure class=&#34;highlight sh&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;游客0 | 到了&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;游客4 | 到了&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;游客3 | 到了&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;游客2 | 到了&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;游客1 | 到了&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;首先，这里我看到的是：太和殿, xxx(巴啦啦，说一通历史), 大家先去拍照, 拍完照到我这里集合, 咱们去下一个殿&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;游客3 | 拍完照片了...&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;游客1 | 拍完照片了...&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;游客2 | 拍完照片了...&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;游客0 | 拍完照片了...&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;游客4 | 拍完照片了...&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;那么，这里我看到的是：中和殿, xxx(巴啦啦，说一通历史), 大家先去拍照, 拍完照到我这里集合, 咱们去下一个殿&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;游客3 | 拍完照片了...&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;游客4 | 拍完照片了...&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;游客0 | 拍完照片了...&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;游客1 | 拍完照片了...&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;游客2 | 拍完照片了...&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;最后，这里我看到的是：保和殿, xxx(巴啦啦，说一通历史), 大家先去拍照, 拍完照到我这里集合, 咱们去看看皇帝和皇后睡觉的地方&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;游客0:&lt;span class=&#34;string&#34;&gt;&amp;quot;拍啥拍，赶紧去看皇帝皇后睡觉吧&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;游客2:&lt;span class=&#34;string&#34;&gt;&amp;quot;拍啥拍，赶紧去看皇帝皇后睡觉吧&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;游客1:&lt;span class=&#34;string&#34;&gt;&amp;quot;拍啥拍，赶紧去看皇帝皇后睡觉吧&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;游客4:&lt;span class=&#34;string&#34;&gt;&amp;quot;拍啥拍，赶紧去看皇帝皇后睡觉吧&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;游客3:&lt;span class=&#34;string&#34;&gt;&amp;quot;拍啥拍，赶紧去看皇帝皇后睡觉吧&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&#34;最后&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#最后&#34;&gt;#&lt;/a&gt; 最后&lt;/h2&gt;
&lt;p&gt;希望和你一起遇见更好的自己&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://fangjiaxiaobai.github.io/images/qrcode.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
</content>
        <category term="日拱一卒" />
        <updated>2023-02-03T10:18:18.000Z</updated>
    </entry>
    <entry>
        <id>https://fangjiaxiaobai.github.io/2023/02/02/onedayday/2023-02-02.ThreadPool/</id>
        <title>线程池工作原理</title>
        <link rel="alternate" href="https://fangjiaxiaobai.github.io/2023/02/02/onedayday/2023-02-02.ThreadPool/"/>
        <content type="html">&lt;h2 id=&#34;threadpoolexecutor-参数说明&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#threadpoolexecutor-参数说明&#34;&gt;#&lt;/a&gt;  &lt;code&gt;ThreadPoolExecutor&lt;/code&gt;  参数说明&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;ThreadPoolExecutor&lt;/code&gt;  构造方法有以下四个，如下图所示：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://images.gitbook.cn/ce89fc40-d2d4-11e9-b6c4-07be7ef1cd0f&#34; alt=&#34;enter image descriptionhere&#34;&gt;&lt;/p&gt;
&lt;p&gt;其中最后一个构造方法有  &lt;code&gt;7&lt;/code&gt;  个构造参数，包含了前三个方法的构造参数，这  &lt;code&gt;7&lt;/code&gt;  个参数名称如下所示：&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;ThreadPoolExecutor&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(&lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; corePoolSize,&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;params&#34;&gt;&lt;span class=&#34;function&#34;&gt;                            &lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; maximumPoolSize,&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;params&#34;&gt;&lt;span class=&#34;function&#34;&gt;                            &lt;span class=&#34;keyword&#34;&gt;long&lt;/span&gt; keepAliveTime,&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;params&#34;&gt;&lt;span class=&#34;function&#34;&gt;                            TimeUnit unit,&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;params&#34;&gt;&lt;span class=&#34;function&#34;&gt;                            BlockingQueue&amp;lt;Runnable&amp;gt; workQueue,&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;params&#34;&gt;&lt;span class=&#34;function&#34;&gt;                            ThreadFactory threadFactory,&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;params&#34;&gt;&lt;span class=&#34;function&#34;&gt;                            RejectedExecutionHandler handler)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;其代表的含义如下：&lt;/p&gt;
&lt;h3 id=&#34;1-corepoolsize&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#1-corepoolsize&#34;&gt;#&lt;/a&gt; ①  &lt;code&gt;corePoolSize&lt;/code&gt;&lt;/h3&gt;
&lt;p&gt;线程池中的核心线程数，默认情况下核心线程一直存活在线程池中，如果将  &lt;code&gt;ThreadPoolExecutor&lt;/code&gt;  的  &lt;code&gt;allowCoreThreadTimeOut&lt;/code&gt;  属性设为  &lt;code&gt;true&lt;/code&gt; ，如果线程池一直闲置并超过了  &lt;code&gt;keepAliveTime&lt;/code&gt;  所指定的时间，核心线程就会被终止。&lt;/p&gt;
&lt;h3 id=&#34;2-maximumpoolsize&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#2-maximumpoolsize&#34;&gt;#&lt;/a&gt; ②  &lt;code&gt;maximumPoolSize&lt;/code&gt;&lt;/h3&gt;
&lt;p&gt;线程池中最大线程数，如果活动的线程达到这个数值以后，后续的新任务将会被阻塞（放入任务队列）。&lt;/p&gt;
&lt;h3 id=&#34;3-keepalivetime&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#3-keepalivetime&#34;&gt;#&lt;/a&gt; ③  &lt;code&gt;keepAliveTime&lt;/code&gt;&lt;/h3&gt;
&lt;p&gt;线程池的闲置超时时间，默认情况下对非核心线程生效，如果闲置时间超过这个时间，非核心线程就会被回收。如果  &lt;code&gt;ThreadPoolExecutor&lt;/code&gt;  的&lt;br&gt;
 &lt;code&gt;allowCoreThreadTimeOut&lt;/code&gt;  设为  &lt;code&gt;true&lt;/code&gt;  的时候，核心线程如果超过闲置时长也会被回收。&lt;/p&gt;
&lt;h3 id=&#34;4-unit&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#4-unit&#34;&gt;#&lt;/a&gt; ④  &lt;code&gt;unit&lt;/code&gt;&lt;/h3&gt;
&lt;p&gt;配合  &lt;code&gt;keepAliveTime&lt;/code&gt;  使用，用来标识  &lt;code&gt;keepAliveTime&lt;/code&gt;  的时间单位。&lt;/p&gt;
&lt;h3 id=&#34;5-workqueue&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#5-workqueue&#34;&gt;#&lt;/a&gt; ⑤  &lt;code&gt;workQueue&lt;/code&gt;&lt;/h3&gt;
&lt;p&gt;线程池中的任务队列，使用  &lt;code&gt;execute()&lt;/code&gt;  或  &lt;code&gt;submit()&lt;/code&gt;  方法提交的任务都会存储在此队列中。&lt;/p&gt;
&lt;h3 id=&#34;6-threadfactory&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#6-threadfactory&#34;&gt;#&lt;/a&gt; ⑥  &lt;code&gt;threadFactory&lt;/code&gt;&lt;/h3&gt;
&lt;p&gt;为线程池提供创建新线程的线程工厂。&lt;/p&gt;
&lt;h3 id=&#34;7-rejectedexecutionhandler&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#7-rejectedexecutionhandler&#34;&gt;#&lt;/a&gt; ⑦  &lt;code&gt;rejectedExecutionHandler&lt;/code&gt;&lt;/h3&gt;
&lt;p&gt;线程池任务队列超过最大值之后的拒绝策略，   &lt;code&gt;RejectedExecutionHandler&lt;/code&gt;  是一个接口，里面只有一个  &lt;code&gt;rejectedExecution&lt;/code&gt;  方法，可在此方法内添加任务超出最大值的事件处理。  &lt;code&gt;ThreadPoolExecutor&lt;/code&gt;  也提供了 4 种默认的拒绝策略：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;new ThreadPoolExecutor.DiscardPolicy()&lt;/code&gt; ：丢弃掉该任务，不进行处理&lt;/li&gt;
&lt;li&gt;&lt;code&gt;new ThreadPoolExecutor.DiscardOldestPolicy()&lt;/code&gt; ：丢弃队列里最近的一个任务，并执行当前任务&lt;/li&gt;
&lt;li&gt;&lt;code&gt;new ThreadPoolExecutor.AbortPolicy()&lt;/code&gt; ：直接抛出  &lt;code&gt;RejectedExecutionException&lt;/code&gt;  异常&lt;/li&gt;
&lt;li&gt;&lt;code&gt;new ThreadPoolExecutor.CallerRunsPolicy()&lt;/code&gt; ：既不抛弃任务也不抛出异常，直接使用主线程来执行此任务&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;线程池的工作原理&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#线程池的工作原理&#34;&gt;#&lt;/a&gt; 线程池的工作原理&lt;/h2&gt;
&lt;p&gt;当线程池中有任务需要执行时，线程池会判断如果线程数量没有超过核心数量就会新建线程池进行任务执行，如果线程池中的线程数量已经超过核心线程数，这时候任务就会被放入任务队列中排队等待执行；如果任务队列超过最大队列数，并且线程池没有达到最大线程数，就会新建线程来执行任务；如果超过了最大线程数，就会执行拒绝执行策略。&lt;/p&gt;
&lt;h2 id=&#34;线程池关闭&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#线程池关闭&#34;&gt;#&lt;/a&gt; 线程池关闭&lt;/h2&gt;
&lt;p&gt;线程池关闭，可以使用  &lt;code&gt;shutdown()&lt;/code&gt;  或  &lt;code&gt;shutdownNow() &lt;/code&gt; 方法，它们的区别是：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;shutdown()&lt;/code&gt; ：不会立即终止线程池，而是要等所有任务队列中的任务都执行完后才会终止。执行完 shutdown 方法之后，线程池就不会再接受新任务了。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;shutdownNow()&lt;/code&gt; ：执行该方法，线程池的状态立刻变成  &lt;code&gt;STOP&lt;/code&gt;  状态，并试图停止所有正在执行的线程，不再处理还在池队列中等待的任务，执行此方法会返回未执行的任务。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;最后&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#最后&#34;&gt;#&lt;/a&gt; 最后&lt;/h2&gt;
&lt;p&gt;希望和你一起遇见更好的自己&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://fangjiaxiaobai.github.io/images/qrcode.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
</content>
        <category term="日拱一卒" />
        <updated>2023-02-02T10:18:18.000Z</updated>
    </entry>
    <entry>
        <id>https://fangjiaxiaobai.github.io/2023/02/01/onedayday/2023-02-01.ThreadLocal/</id>
        <title>ThreadLocal 内存溢出</title>
        <link rel="alternate" href="https://fangjiaxiaobai.github.io/2023/02/01/onedayday/2023-02-01.ThreadLocal/"/>
        <content type="html">&lt;h2 id=&#34;threadlocal-内存溢出代码演示&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#threadlocal-内存溢出代码演示&#34;&gt;#&lt;/a&gt; ThreadLocal 内存溢出代码演示&lt;/h2&gt;
&lt;p&gt;下面我们用代码实现  &lt;code&gt;ThreadLocal&lt;/code&gt;  内存溢出的情况，请参考以下代码。&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;class&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;ThreadLocalTest&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;static&lt;/span&gt; ThreadLocal threadLocal = &lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; ThreadLocal();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;static&lt;/span&gt; Integer MOCK_MAX = &lt;span class=&#34;number&#34;&gt;10000&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;static&lt;/span&gt; Integer THREAD_MAX = &lt;span class=&#34;number&#34;&gt;100&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;static&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(String[] args)&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;throws&lt;/span&gt; InterruptedException &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        ExecutorService executorService = Executors.newFixedThreadPool(THREAD_MAX);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; i = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;; i &amp;lt; THREAD_MAX; i++) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            executorService.execute(() -&amp;gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                threadLocal.set(&lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; ThreadLocalTest().getList());&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                System.out.println(Thread.currentThread().getName());&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;keyword&#34;&gt;try&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                Thread.sleep(&lt;span class=&#34;number&#34;&gt;1000&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &amp;#125; &lt;span class=&#34;keyword&#34;&gt;catch&lt;/span&gt; (InterruptedException e) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                e.printStackTrace();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        executorService.shutdown();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;function&#34;&gt;List &lt;span class=&#34;title&#34;&gt;getList&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;()&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        List list = &lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; ArrayList();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; i = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;; i &amp;lt; MOCK_MAX; i++) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            list.add(&lt;span class=&#34;string&#34;&gt;&amp;quot;Version：JDK 8&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            list.add(&lt;span class=&#34;string&#34;&gt;&amp;quot;ThreadLocal&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            list.add(&lt;span class=&#34;string&#34;&gt;&amp;quot;Author：老王&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            list.add(&lt;span class=&#34;string&#34;&gt;&amp;quot;DateTime：&amp;quot;&lt;/span&gt; + LocalDateTime.now());&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            list.add(&lt;span class=&#34;string&#34;&gt;&amp;quot;Test：ThreadLocal OOM&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; list;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;设置  &lt;code&gt;JVM（Java 虚拟机）&lt;/code&gt; 启动参数  &lt;code&gt;-Xmx100m&lt;/code&gt;  （最大运行内存  &lt;code&gt;100 M&lt;/code&gt; ），运行程序不久后就会出现如下异常：&lt;br&gt;
&lt;img data-src=&#34;https://images.gitbook.cn/8d5895b0-d43c-11e9-b555-8d750b738917&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;此时我们用  &lt;code&gt;VisualVM&lt;/code&gt;  观察到程序运行的内存使用情况，发现内存一直在缓慢地上升直到内存超出最大值，从而发生内存溢出的情况。&lt;/p&gt;
&lt;p&gt;内存使用情况，如下图所示：&lt;br&gt;
&lt;img data-src=&#34;https://images.gitbook.cn/9eacecd0-d43c-11e9-b555-8d750b738917&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h4 id=&#34;内存溢出原理分析&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#内存溢出原理分析&#34;&gt;#&lt;/a&gt; 内存溢出原理分析&lt;/h4&gt;
&lt;p&gt;在开始之前，先来看下  &lt;code&gt;ThreadLocal&lt;/code&gt;  是如何存储数据的。&lt;br&gt;
首先，找到  &lt;code&gt;ThreadLocal.set()&lt;/code&gt;  的源码，代码如下：&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;set&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(T value)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    Thread t = Thread.currentThread();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    ThreadLocalMap map = getMap(t);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (map != &lt;span class=&#34;keyword&#34;&gt;null&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        map.set(&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt;, value);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        createMap(t, value);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;可以看出  &lt;code&gt;ThreadLocal&lt;/code&gt;  首先获取到 ThreadLocalMap 对象，然后再执行  &lt;code&gt;ThreadLocalMap.set()&lt;/code&gt;  方法，进而打开此方法的源码，代码如下：&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;private&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;set&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(ThreadLocal&amp;lt;?&amp;gt; key, Object value)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    Entry[] tab = table;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; len = tab.length;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; i = key.threadLocalHashCode &amp;amp; (len-&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; (Entry e = tab[i];&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;         e != &lt;span class=&#34;keyword&#34;&gt;null&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;         e = tab[i = nextIndex(i, len)]) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        ThreadLocal&amp;lt;?&amp;gt; k = e.get();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (k == key) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            e.value = value;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (k == &lt;span class=&#34;keyword&#34;&gt;null&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            replaceStaleEntry(key, value, i);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    tab[i] = &lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; Entry(key, value);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; sz = ++size;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (!cleanSomeSlots(i, sz) &amp;amp;&amp;amp; sz &amp;gt;= threshold)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        rehash();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;从整个代码可以看出，首先  &lt;code&gt;ThreadLocal&lt;/code&gt;  并不存储数据，而是依靠  &lt;code&gt;ThreadLocalMap&lt;/code&gt;  来存储数据， &lt;code&gt;ThreadLocalMap&lt;/code&gt;  中有一个&lt;br&gt;
 &lt;code&gt;Entry&lt;/code&gt;  数组，每个  &lt;code&gt;Entry&lt;/code&gt;  对象是以 K/V 的形式对数据进行存储的，其中  &lt;code&gt;K&lt;/code&gt;  就是  &lt;code&gt;ThreadLocal&lt;/code&gt;  本身，而 V&lt;br&gt;
 就是要存储的值，如下图所示：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://images.gitbook.cn/b2f02680-d43c-11e9-a4b6-d1d2b628f523&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;可以看出：一个 Thread 中只有一个  &lt;code&gt;ThreadLocalMap&lt;/code&gt; ，每个  &lt;code&gt;ThreadLocalMap&lt;/code&gt;  中存有多个  &lt;code&gt;ThreadLocal&lt;/code&gt; ， &lt;code&gt;ThreadLocal&lt;/code&gt;  引用关系如下：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://images.gitbook.cn/8cb725e0-d7bb-11e9-b208-c16ced46e7a1&#34; alt=&#34;enter image descriptionhere&#34;&gt;&lt;/p&gt;
&lt;p&gt;其中：实线代表强引用，虚线代表弱引用（弱引用具有更短暂的生命周期，在执行垃圾回收时，一旦发现只具有弱引用的对象，不管当前内存空间足够与否，都会回收它的内存）。&lt;/p&gt;
&lt;p&gt;看到这里我们就理解了  &lt;code&gt;ThreadLocal&lt;/code&gt;  造成内存溢出的原因：如果 ThreadLocal 没有被直接引用（外部强引用），在 GC（垃圾回收）时，由于&lt;br&gt;
 &lt;code&gt;ThreadLocalMap&lt;/code&gt;  中的  &lt;code&gt;key&lt;/code&gt;  是弱引用，所以一定就会被回收，这样一来  &lt;code&gt;ThreadLocalMap&lt;/code&gt;  中就会出现  &lt;code&gt;key&lt;/code&gt;  为  &lt;code&gt;null&lt;/code&gt;  的&lt;br&gt;
 Entry，并且没有办法访问这些数据，如果当前线程再迟迟不结束的话，这些  &lt;code&gt;key&lt;/code&gt;  为  &lt;code&gt;null&lt;/code&gt;  的  &lt;code&gt;Entry&lt;/code&gt;  的  &lt;code&gt;value&lt;/code&gt;  就会一直存在一条强引用链： &lt;code&gt;Thread Ref -&amp;gt; Thread -&amp;gt; ThreaLocalMap -&amp;gt; Entry -&amp;gt; value&lt;/code&gt;  并且永远无法回收，从而造成内存泄漏。&lt;/p&gt;
&lt;h2 id=&#34;解决&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#解决&#34;&gt;#&lt;/a&gt; 解决&lt;/h2&gt;
&lt;p&gt;切记 用完之后就  &lt;code&gt;remove&lt;/code&gt;  掉！&lt;/p&gt;
&lt;h2 id=&#34;最后&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#最后&#34;&gt;#&lt;/a&gt; 最后&lt;/h2&gt;
&lt;p&gt;希望和你一起遇见更好的自己。&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://fangjiaxiaobai.github.io/images/qrcode.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
</content>
        <category term="日拱一卒" />
        <updated>2023-02-01T10:18:18.000Z</updated>
    </entry>
</feed>
