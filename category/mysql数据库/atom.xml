<?xml version="1.0"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://fangjiaxiaobai.github.io</id>
    <title>方家小白 • Posts by &#34;mysql数据库&#34; category</title>
    <link href="https://fangjiaxiaobai.github.io" />
    <updated>2022-11-04T10:18:18.000Z</updated>
    <category term="全站地图" />
    <category term="目录" />
    <category term="源码" />
    <category term="MySQL" />
    <category term="日常" />
    <category term="Springboot" />
    <category term="Netty" />
    <category term="Redis" />
    <category term="雪花算法" />
    <category term="算法" />
    <category term="数据结构" />
    <category term="git" />
    <category term="Elastic Search" />
    <category term="搜索" />
    <category term="go" />
    <category term="go-error" />
    <category term="k8s" />
    <category term="kubernetes" />
    <category term="log" />
    <category term="go-log" />
    <category term="MachineLearn" />
    <category term="猫影视" />
    <category term="图片" />
    <category term="RocketMQ" />
    <category term="消息队列" />
    <category term="HD" />
    <category term="BQ" />
    <category term="AC" />
    <category term="动态规划" />
    <category term="leetCode" />
    <category term="链表" />
    <category term="面经之算法题" />
    <category term="数组" />
    <category term="线程池" />
    <category term="面经" />
    <category term="不做也罢的算法题" />
    <category term="String" />
    <category term="JDK" />
    <category term="JDK8" />
    <category term="有点难的算法题" />
    <category term="HashMap" />
    <category term="数据结构与算法" />
    <category term="哈希算法" />
    <category term="排序" />
    <category term="冒泡排序" />
    <category term="交换排序" />
    <category term="递归" />
    <category term="分治思想排序" />
    <category term="快速排序" />
    <category term="分支思想排序" />
    <category term="go-设计模式" />
    <category term="桶排序" />
    <category term="线性思想排序" />
    <category term="选择排序" />
    <category term="Java" />
    <category term="dubbo" />
    <category term="模型评估" />
    <category term="架构" />
    <category term="笔记" />
    <category term="go-runtimes" />
    <category term="KNN" />
    <category term="JDK版本" />
    <category term="JDK11" />
    <category term="OOM" />
    <category term="JVM" />
    <category term="Stream" />
    <entry>
        <id>https://fangjiaxiaobai.github.io/2022/11/04/MySQL-series/MySQL-7-03-BinLog/</id>
        <title>MySQL 日志系统 - binLog</title>
        <link rel="alternate" href="https://fangjiaxiaobai.github.io/2022/11/04/MySQL-series/MySQL-7-03-BinLog/"/>
        <content type="html">&lt;h2 id=&#34;前言&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#前言&#34;&gt;#&lt;/a&gt; 前言&lt;/h2&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXYubXlzcWwuY29tL2RvYy9pbnRlcm5hbHMvZW4vYmluYXJ5LWxvZy1vdmVydmlldy5odG1s&#34;&gt;MySQL 手册 - binary Log&lt;/span&gt;&lt;/p&gt;
&lt;h2 id=&#34;简介&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#简介&#34;&gt;#&lt;/a&gt; 简介&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;binLog&lt;/code&gt;  日志系统是由一组二进制文件和一个索引文件组成。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;binLog&lt;/code&gt;  全称是  &lt;code&gt;binary log&lt;/code&gt; ，即为二进制日志文件。 &lt;code&gt;binlog&lt;/code&gt;  是记录所有数据库表结构变更以及表数据修改的二进制日志。不会记录 &lt;code&gt;Select&lt;/code&gt; , &lt;code&gt;show&lt;/code&gt;  等操作。 &lt;code&gt;binLog&lt;/code&gt;  日志是以事件形式记录，包含了语句执行的消耗时间，正确重现该语句所需的服务器状态信息，错误代码，维护 &lt;code&gt;binlog&lt;/code&gt;  本身所需的元数据等。&lt;/p&gt;
&lt;p&gt;准确地说:&lt;br&gt;
 二进制日志事件描述了可用于重现服务器上发生的相同全局状态更改的操作。&lt;/p&gt;
&lt;p&gt;索引文件是记录了当前的二进制日志文件的文本文件。&lt;/p&gt;
&lt;p&gt;日志文件使用.NNNNNN 后缀顺序编号。 索引文件的后缀为.index。 所有文件共享一个通用基名。 默认的二进制日志文件命名基名称为 “HOSTNAME-bin”。 使用默认的基本名称，二进制日志包含具有以下名称的文件：&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;# bin-log文件&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;fangjiaxiaobai-bin.0000001&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;fangjiaxiaobai-bin.0000002&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;fangjiaxiaobai-bin.0000003&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;...&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# 索引文件&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;fangjiaxiaobai-bin.index&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&#34;binlog-的使用场景&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#binlog-的使用场景&#34;&gt;#&lt;/a&gt; binLog 的使用场景。&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;主从复制：主库中开启 &lt;code&gt;binlog&lt;/code&gt; , 从库读取 &lt;code&gt;binlog&lt;/code&gt;  后，执行 &lt;code&gt;binlog&lt;/code&gt; ，从而达到数据一致性。&lt;/li&gt;
&lt;li&gt;数据恢复：通过保存的 &lt;code&gt;binlog&lt;/code&gt; ，可以使用 &lt;code&gt;mysqlbinlog&lt;/code&gt;  工具来恢复数据。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;binlong-记录模式&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#binlong-记录模式&#34;&gt;#&lt;/a&gt; binlong 记录模式&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;binLog&lt;/code&gt;  文件默认为 &lt;code&gt;&amp;lt;主机名&amp;gt;_binlog_&amp;lt;序列号&amp;gt;&lt;/code&gt;  格式。也可以在配置文件中指定名称。&lt;br&gt;
文件记录模式有  &lt;code&gt;STATEMENT&lt;/code&gt; , &lt;code&gt;ROW&lt;/code&gt; , &lt;code&gt;MIXED&lt;/code&gt;  三种。具体含义如下:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;ROW&lt;/code&gt; 😦 &lt;code&gt;row-based replication&lt;/code&gt; , &lt;code&gt;RBR&lt;/code&gt; )： 日志中会记录每一行数据被修改的情况，然后 &lt;code&gt;Slave&lt;/code&gt;  端对相同的数据进行修改.
&lt;ul&gt;
&lt;li&gt;优点：可以清楚的记录每行数据的修改细节，能完全实现主从数据同步和数据的恢复。&lt;/li&gt;
&lt;li&gt;缺点：批量操作会产生大量的日志，尤其是 &lt;code&gt;alter table&lt;/code&gt;  操作，会让日志爆涨。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;STATEMENT&lt;/code&gt; : ( &lt;code&gt;statement-based replication,SBR&lt;/code&gt; )：
&lt;ul&gt;
&lt;li&gt;优点：日志量小，减少磁盘 IO, 提供存储和恢复速度。&lt;/li&gt;
&lt;li&gt;缺点： 不可靠。如果是主从架构的话使用 &lt;code&gt;last_insert_id()&lt;/code&gt; , &lt;code&gt;now()&lt;/code&gt;  等函数，会导致主从数据不一致。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;MIXED&lt;/code&gt; : ( &lt;code&gt;mixed-based replication&lt;/code&gt; ,  &lt;code&gt;MBR&lt;/code&gt; )：以上两种模式的混合使用。默认使用 &lt;code&gt;STATEMENT&lt;/code&gt;  模式保存  &lt;code&gt;binlog&lt;/code&gt; , 也可以根据自己需要切换到 &lt;code&gt;ROW&lt;/code&gt;  模式，对于 &lt;code&gt;STATEMENT&lt;/code&gt;  模式无法复制的操作使用 &lt;code&gt;ROW&lt;/code&gt;  模式保存 &lt;code&gt;binlog&lt;/code&gt; , &lt;code&gt;MySQL&lt;/code&gt;  会根据执行的 &lt;code&gt;SQL&lt;/code&gt;  语句选择写入模式。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;binlog-文件格式&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#binlog-文件格式&#34;&gt;#&lt;/a&gt; binLog 文件格式&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;binlog&lt;/code&gt;  文件的格式也随着 &lt;code&gt;mysql&lt;/code&gt;  的发展，发生了几次变更。&lt;br&gt;
二进制日志文件格式有几个版本:&lt;br&gt;
 &lt;code&gt;v1版本&lt;/code&gt; ：在 &lt;code&gt;MySQL3.23&lt;/code&gt;  版本中使用。&lt;br&gt;
 &lt;code&gt;v2版本&lt;/code&gt; ：在早期的 &lt;code&gt;MySQL 4.0&lt;/code&gt;  中，简单地使用了 &lt;code&gt;v2&lt;/code&gt;  格式。)，但它已经过时，不再受支持。&lt;br&gt;
 &lt;code&gt;v3版本&lt;/code&gt; ：在 &lt;code&gt;MySQL 4.0.2&lt;/code&gt;  到 &lt;code&gt;4.1&lt;/code&gt;  中使用。&lt;br&gt;
 &lt;code&gt;v4版本&lt;/code&gt; ：适用于 &lt;code&gt;MySQL 5.0&lt;/code&gt;  及以上版本。&lt;/p&gt;
&lt;p&gt;一个 &lt;code&gt;binlog&lt;/code&gt;  文件由两部分组成: &lt;b&gt;4 字节的魔数&lt;/b&gt; 和 &lt;b&gt;标识文件格式的初始描述符事件&lt;/b&gt;。并且：初识描述符事件也是由两部分组成:  &lt;code&gt;header&lt;/code&gt;  和  &lt;code&gt;data&lt;/code&gt;  部分。&lt;/p&gt;
&lt;p&gt;这里只介绍 V4 版本:&lt;br&gt;
&lt;img data-src=&#34;/images/MySQL-series/BinLog-even%E5%9B%BE%E7%A4%BA%E7%BB%93%E6%9E%84.png&#34; alt=&#34;BinLog-event图示结构.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;在 &lt;code&gt;event header&lt;/code&gt;  这一部分，可以看到有如下字段:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;timestamp&lt;/code&gt; :  &lt;code&gt;4&lt;/code&gt;  个字节。 标识某条语句开始执行的时间。它表示为自 &lt;code&gt;1970&lt;/code&gt;  年以来的秒数 ( &lt;code&gt;UTC&lt;/code&gt; )，与 &lt;code&gt;SQL&lt;/code&gt;  时间戳数据类型类似。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;type_code&lt;/code&gt; :  &lt;code&gt;1&lt;/code&gt;  个字节。事件的类型。 &lt;code&gt;1&lt;/code&gt;  表示开始事件 &lt;code&gt;V3&lt;/code&gt; ,  &lt;code&gt;2&lt;/code&gt;  表示查询事件，以此类推。这些数字在 Log event.h 中的 &lt;code&gt;enum&lt;/code&gt;  日志事件类型枚举中定义。(请参阅附录 1。)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;server_id&lt;/code&gt; :4 字节。 最初创建事件的 &lt;code&gt;mysqld&lt;/code&gt;  服务器的 &lt;code&gt;ID&lt;/code&gt; 。 它来自服务器配置文件中为复制目的设置的 &lt;code&gt;server-id&lt;/code&gt;  选项。 使用循环复制时（使用选项 &lt;code&gt;--log-slave-updates&lt;/code&gt;  启用），服务器 ID 可以避免无限循环&lt;/li&gt;
&lt;li&gt;&lt;code&gt;event_length&lt;/code&gt; : 4 个字节。这次活动的总规模。这包括头和数据部分。大多数事件小于 &lt;code&gt;1000&lt;/code&gt;  字节，除了使用加载数据 INFILE 时 (其中事件包含加载的文件，所以它们可以很大)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;next_position&lt;/code&gt; : 4 个字节。下一个事件在主程序二进制日志中的位置。这个字段主要是在 &lt;code&gt;slave&lt;/code&gt;  端使用：
&lt;ul&gt;
&lt;li&gt;为了显示 &lt;code&gt;Slave&lt;/code&gt;  的状态，能够在主坐标系统中显示 最后执行的事件的坐标。&lt;/li&gt;
&lt;li&gt;为了验证  &lt;code&gt;START SLAVE UNTIL MASTER LOG FILE=x&lt;/code&gt; ,  &lt;code&gt;MASTER LOG POS=y&lt;/code&gt; ，这样可以使用 MASTER 的坐标。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;flags&lt;/code&gt; :  &lt;code&gt;1&lt;/code&gt;  个字节。标识。具体含义见附录 2。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;extra_headers&lt;/code&gt; ： 大小可变的。此字段的大小由作为文件中的第一个事件发生的格式描述事件决定。目前，大小为 &lt;code&gt;0&lt;/code&gt; ，因此，实际上，该字段在任何事件中都不会实际发生。当大小变为非零时，该字段仍然不会出现在格式描述事件或旋转事件类型的事件中。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;接下来，我们详细的看下 &lt;code&gt;event-data&lt;/code&gt;  部分的结构是什么样的.&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/images/MySQL-series/binLog-event%E6%A0%BC%E5%BC%8F.png&#34; alt=&#34;binLog-event格式.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;event-data&lt;/code&gt;  表示：特定的事件数据。&lt;br&gt;
事件的数据部分由固定大小的部分和可变大小的部分组成。 根据事件类型，这两个部分中的一个或两个都可能为空。 事件数据部分的大小是事件大小（包含在标头中）减去标头大小。 固定数据部分的大小是事件类型的函数。 可变数据部分的大小是事件大小减去标题的大小再减去固定数据部分的大小。&lt;/p&gt;
&lt;p&gt;binLog 的基本概念就介绍到这里，下面展示一些 binlog 相关的命令:&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;63&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;64&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;65&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;66&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;67&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;68&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;69&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;70&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;71&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;72&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;73&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;74&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;75&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;76&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;77&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;#&lt;/span&gt;&lt;span class=&#34;bash&#34;&gt; 查看binLog属性&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;mysql&amp;gt;&lt;/span&gt;&lt;span class=&#34;bash&#34;&gt; show variables like &lt;span class=&#34;string&#34;&gt;&amp;#x27;%log_bin%&amp;#x27;&lt;/span&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;+---------------------------------+-------------------------------------------------------------+&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;| Variable_name                   | Value                                                       |&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;+---------------------------------+-------------------------------------------------------------+&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;| log_bin                         | ON                                                          |&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;| log_bin_basename                | /usr/local/mysql-8.0.20-macos10.15-x86_64/data/binlog       |&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;| log_bin_index                   | /usr/local/mysql-8.0.20-macos10.15-x86_64/data/binlog.index |&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;| log_bin_trust_function_creators | OFF                                                         |&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;| log_bin_use_v1_row_events       | OFF                                                         |&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;| sql_log_bin                     | ON                                                          |&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;+---------------------------------+-------------------------------------------------------------+&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6 rows in set (0.00 sec)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;#&lt;/span&gt;&lt;span class=&#34;bash&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 开启/关闭 binLog功能，需要在配置文件中修改。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;#&lt;/span&gt;&lt;span class=&#34;bash&#34;&gt; &lt;span class=&#34;built_in&#34;&gt;set&lt;/span&gt; global log_bin; 会报错。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;#&lt;/span&gt;&lt;span class=&#34;bash&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 查看binlog文件&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;mysql&amp;gt;&lt;/span&gt;&lt;span class=&#34;bash&#34;&gt; show binary logs;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;+---------------+-----------+-----------+&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;| Log_name      | File_size | Encrypted |&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;+---------------+-----------+-----------+&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;| binlog.000038 |       156 | No        |&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;| binlog.000039 |       156 | No        |&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;| binlog.000040 |       179 | No        |&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;| binlog.000041 |       179 | No        |&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;| binlog.000042 |       179 | No        |&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;| binlog.000043 |      5307 | No        |&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;| binlog.000044 |       179 | No        |&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;| binlog.000045 |       156 | No        |&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;+---------------+-----------+-----------+&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8 rows in set (0.01 sec)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;mysql&amp;gt;&lt;/span&gt;&lt;span class=&#34;bash&#34;&gt; show master status&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    -&amp;gt; ;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;+---------------+----------+--------------+------------------+-------------------+&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;| File          | Position | Binlog_Do_DB | Binlog_Ignore_DB | Executed_Gtid_Set |&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;+---------------+----------+--------------+------------------+-------------------+&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;| binlog.000045 |      156 |              |                  |                   |&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;+---------------+----------+--------------+------------------+-------------------+&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1 row in set (0.00 sec)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;mysql&amp;gt;&lt;/span&gt;&lt;span class=&#34;bash&#34;&gt; show binlog events;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;+---------------+-----+----------------+-----------+-------------+-----------------------------------+&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;| Log_name      | Pos | Event_type     | Server_id | End_log_pos | Info                              |&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;+---------------+-----+----------------+-----------+-------------+-----------------------------------+&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;| binlog.000038 |   4 | Format_desc    |         1 |         125 | Server ver: 8.0.20, Binlog ver: 4 |&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;| binlog.000038 | 125 | Previous_gtids |         1 |         156 |                                   |&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;+---------------+-----+----------------+-----------+-------------+-----------------------------------+&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2 rows in set (0.00 sec)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;ERROR 1220 (HY000): Error when executing command SHOW BINLOG EVENTS: Could not find target log&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;mysql&amp;gt;&lt;/span&gt;&lt;span class=&#34;bash&#34;&gt; show binlog events &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;#x27;binlog.000045&amp;#x27;&lt;/span&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;+---------------+-----+----------------+-----------+-------------+-----------------------------------+&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;| Log_name      | Pos | Event_type     | Server_id | End_log_pos | Info                              |&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;+---------------+-----+----------------+-----------+-------------+-----------------------------------+&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;| binlog.000045 |   4 | Format_desc    |         1 |         125 | Server ver: 8.0.20, Binlog ver: 4 |&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;| binlog.000045 | 125 | Previous_gtids |         1 |         156 |                                   |&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;+---------------+-----+----------------+-----------+-------------+-----------------------------------+&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2 rows in set (0.00 sec)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;#&lt;/span&gt;&lt;span class=&#34;bash&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 使用 mysqlbinlog 命令&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;mysqlbinlog &amp;#x27;文件名&amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;mysqlbinlog &amp;#x27;文件名&amp;#x27; &amp;gt; test.sql&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;#&lt;/span&gt;&lt;span class=&#34;bash&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 使用binLog恢复数据&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;#&lt;/span&gt;&lt;span class=&#34;bash&#34;&gt; 指定时间恢复&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;mysqlbinlog --start-datetime=&amp;#x27;2020-12-01 00:00:00&amp;#x27; --stop-datetime=&amp;#x27;2020-12-02 00:00:00&amp;#x27;  binlog.000045 | mysql -uroot -p123456&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;#&lt;/span&gt;&lt;span class=&#34;bash&#34;&gt; 指定位置恢复&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;mysqlbinlog --start-pos=100 --stop-pos=120  binlog.000045 | mysql -uroot -p123456&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;#&lt;/span&gt;&lt;span class=&#34;bash&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 删除binlog&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;purge binary log to &amp;#x27;binlog.000001&amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;purge binary log before &amp;#x27;2020-12-01 00:00:00&amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;reset master;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&#34;附录&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#附录&#34;&gt;#&lt;/a&gt; 附录&lt;/h2&gt;
&lt;p&gt;1: 事件类型&lt;/p&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;class&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;enum&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;Log_event_type&lt;/span&gt; &amp;#123;&lt;/span&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  UNKNOWN_EVENT= &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  START_EVENT_V3= &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  QUERY_EVENT= &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  STOP_EVENT= &lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  ROTATE_EVENT= &lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  INTVAR_EVENT= &lt;span class=&#34;number&#34;&gt;5&lt;/span&gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  LOAD_EVENT= &lt;span class=&#34;number&#34;&gt;6&lt;/span&gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  SLAVE_EVENT= &lt;span class=&#34;number&#34;&gt;7&lt;/span&gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  CREATE_FILE_EVENT= &lt;span class=&#34;number&#34;&gt;8&lt;/span&gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  APPEND_BLOCK_EVENT= &lt;span class=&#34;number&#34;&gt;9&lt;/span&gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  EXEC_LOAD_EVENT= &lt;span class=&#34;number&#34;&gt;10&lt;/span&gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  DELETE_FILE_EVENT= &lt;span class=&#34;number&#34;&gt;11&lt;/span&gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  NEW_LOAD_EVENT= &lt;span class=&#34;number&#34;&gt;12&lt;/span&gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  RAND_EVENT= &lt;span class=&#34;number&#34;&gt;13&lt;/span&gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  USER_VAR_EVENT= &lt;span class=&#34;number&#34;&gt;14&lt;/span&gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  FORMAT_DESCRIPTION_EVENT= &lt;span class=&#34;number&#34;&gt;15&lt;/span&gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  XID_EVENT= &lt;span class=&#34;number&#34;&gt;16&lt;/span&gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  BEGIN_LOAD_QUERY_EVENT= &lt;span class=&#34;number&#34;&gt;17&lt;/span&gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  EXECUTE_LOAD_QUERY_EVENT= &lt;span class=&#34;number&#34;&gt;18&lt;/span&gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  TABLE_MAP_EVENT = &lt;span class=&#34;number&#34;&gt;19&lt;/span&gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  PRE_GA_WRITE_ROWS_EVENT = &lt;span class=&#34;number&#34;&gt;20&lt;/span&gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  PRE_GA_UPDATE_ROWS_EVENT = &lt;span class=&#34;number&#34;&gt;21&lt;/span&gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  PRE_GA_DELETE_ROWS_EVENT = &lt;span class=&#34;number&#34;&gt;22&lt;/span&gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  WRITE_ROWS_EVENT = &lt;span class=&#34;number&#34;&gt;23&lt;/span&gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  UPDATE_ROWS_EVENT = &lt;span class=&#34;number&#34;&gt;24&lt;/span&gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  DELETE_ROWS_EVENT = &lt;span class=&#34;number&#34;&gt;25&lt;/span&gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  INCIDENT_EVENT= &lt;span class=&#34;number&#34;&gt;26&lt;/span&gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  HEARTBEAT_LOG_EVENT= &lt;span class=&#34;number&#34;&gt;27&lt;/span&gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  IGNORABLE_LOG_EVENT= &lt;span class=&#34;number&#34;&gt;28&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  ROWS_QUERY_LOG_EVENT= &lt;span class=&#34;number&#34;&gt;29&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  WRITE_ROWS_EVENT = &lt;span class=&#34;number&#34;&gt;30&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  UPDATE_ROWS_EVENT = &lt;span class=&#34;number&#34;&gt;31&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  DELETE_ROWS_EVENT = &lt;span class=&#34;number&#34;&gt;32&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  GTID_LOG_EVENT= &lt;span class=&#34;number&#34;&gt;33&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  ANONYMOUS_GTID_LOG_EVENT= &lt;span class=&#34;number&#34;&gt;34&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  PREVIOUS_GTIDS_LOG_EVENT= &lt;span class=&#34;number&#34;&gt;35&lt;/span&gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  ENUM_END_EVENT &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;comment&#34;&gt;/* end marker */&lt;/span&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;2: 标识&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;LOG_EVENT_BINLOG_IN_USE_F = 0x1 (New in 5.0.3) ：用于指示二进制日志文件是否已正确关闭。它是在事件写入日志文件时设置的。稍后关闭日志文件时，该标志将被清除。该标志仅对 FORMAT_DESCRIPTION_EVENT 有意义。&lt;/li&gt;
&lt;li&gt;LOG_EVENT_THREAD_SPECIFIC_F = 0x4 (New in 4.1.0)：仅由 mysqlbinlog 使用（根本没有复制代码使用），以便能够正确处理临时表。&lt;/li&gt;
&lt;li&gt;LOG_EVENT_SUPPRESS_USE_F = 0x8 (New in 4.1.7)：禁止在要记录的实际语句之前生成 USE 语句。&lt;/li&gt;
&lt;li&gt;LOG_EVENT_UPDATE_TABLE_MAP_VERSION_F = 0x10 (New in 5.1.4)：将事件写入日志后，导致二进制日志内部的表映射版本增加。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;明日再见～&lt;/p&gt;
&lt;h2 id=&#34;最后&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#最后&#34;&gt;#&lt;/a&gt; 最后&lt;/h2&gt;
&lt;p&gt;希望与你一起遇见更好的自己～，一起交流，一起进步&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/images/MySQL-series/qrcode.jpg&#34; alt=&#34;qrcode.jpg&#34;&gt;&lt;/p&gt;
</content>
        <category term="MySQL" />
        <updated>2022-11-04T10:18:18.000Z</updated>
    </entry>
    <entry>
        <id>https://fangjiaxiaobai.github.io/2022/11/03/MySQL-series/MySQL-2-01.MySQL-artific/</id>
        <title>05.体系架构</title>
        <link rel="alternate" href="https://fangjiaxiaobai.github.io/2022/11/03/MySQL-series/MySQL-2-01.MySQL-artific/"/>
        <content type="html">&lt;p&gt;本篇文章是我们【深入一点点】部分第一篇文章，既然我们要 “深入一点点”，那么就剥开 MySQL 的外衣～&lt;br&gt;
 先看看 MySQL 的各个 “部位”。&lt;br&gt;
整体来说，MySQL 体系整体分为客户端连接器，服务端，存储引擎三部分。接下来我们就详细的聊聊 MySQL 数据的体系结构这个话题。&lt;/p&gt;
&lt;p&gt;本文我们围绕着下面这张图来说。&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/images/MySQL-series/20101-MySQL%E4%BD%93%E7%B3%BB%E7%BB%93%E6%9E%84%E5%9B%BE.png&#34; alt=&#34;20101-MySQL体系结构图.png&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;客户端连接器&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#客户端连接器&#34;&gt;#&lt;/a&gt; 客户端连接器&lt;/h2&gt;
&lt;p&gt;主要的功能是：负责处理客户端的连接请求，与客户端建立连接。比如我们之前写过的  &lt;code&gt;mysql -p&lt;/code&gt;  命令和使用 &lt;code&gt;java&lt;/code&gt;  连接数据库的程序就是充当这个角色。&lt;/p&gt;
&lt;h2 id=&#34;server层&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#server层&#34;&gt;#&lt;/a&gt; Server 层&lt;/h2&gt;
&lt;h3 id=&#34;连接池连接器&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#连接池连接器&#34;&gt;#&lt;/a&gt; 连接池 (连接器)&lt;/h3&gt;
&lt;p&gt;如上图中 &lt;code&gt;connect pool&lt;/code&gt;  部分所示。&lt;/p&gt;
&lt;p&gt;主要是负责管客户端和数据库创建的连接，维持，处理，和用户认证，即用户登录身份的认证和鉴权及安全管理，也就是用户执行操作权限校验。&lt;/p&gt;
&lt;p&gt;当我们输入  &lt;code&gt;mysql -p&lt;/code&gt;  这类命令去连接数据库的时候，输入命令的 shell 是客户端的角色，连接到数据库中组件就是连接器了。&lt;/p&gt;
&lt;p&gt;当我输入 &lt;code&gt;mysql -p&lt;/code&gt; , 之后，shell 中显示  &lt;code&gt;enter password:&lt;/code&gt;  这个就是连接器做出的响应，我们输入密码进入后，可以通过命令： &lt;code&gt;show processlist&lt;/code&gt;  来查看连接池中所有的连接。如下图&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/images/MySQL-series/20103-%E6%9F%A5%E7%9C%8B%E8%BF%9E%E6%8E%A5%E6%B1%A0%E5%86%85%E5%AE%B9.png&#34; alt=&#34;20103-查看连接池内容.png&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;d查询缓存mysql80中已经删除了此功能d&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#d查询缓存mysql80中已经删除了此功能d&#34;&gt;#&lt;/a&gt; &lt;d&gt;查询缓存 (MySQL8.0 中已经删除了此功能)&lt;/d&gt;&lt;/h3&gt;
&lt;p&gt;&lt;del&gt;图片是老图，在 &lt;code&gt;MySQL8.0&lt;/code&gt;  版本中已经删除。所以该部分不做说明&lt;/del&gt;&lt;/p&gt;
&lt;h3 id=&#34;解析器parser&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#解析器parser&#34;&gt;#&lt;/a&gt; 解析器 ( &lt;code&gt;parser&lt;/code&gt; )&lt;/h3&gt;
&lt;p&gt;主要负责对 SQL 的语句进行解析，生成解析树。&lt;/p&gt;
&lt;p&gt;首先会将 SQL 语句解析成数据库结构，并且将这个数据结构传递到后续的步骤中。如果再解析的过程中发现错误，就直接返回错误结果。&lt;/p&gt;
&lt;h3 id=&#34;优化器optimizer&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#优化器optimizer&#34;&gt;#&lt;/a&gt; 优化器 ( &lt;code&gt;Optimizer&lt;/code&gt; )&lt;/h3&gt;
&lt;p&gt;经过了解析器的工作之后， &lt;code&gt;MySQL Server&lt;/code&gt;  就知道了你的需求是什么了，优化器的工作就是对需求进行优化，以达到更高的性能要求。&lt;/p&gt;
&lt;p&gt;主要的工作是：优化器会根据解析树生成执行计划，并选择合适的索引，然后按照执行计划执行  &lt;code&gt;SQL&lt;/code&gt;  语言并与各个存储引擎交互。&lt;/p&gt;
&lt;p&gt;比如有一条 SQL :  &lt;code&gt; select * from test01_optimizer where id = 1 and value=1;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;再执行的时候会有一下两种方案：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;先对比表中的数据，找到 id=1 的所有数据，然后在这些数据中再去查找所有 value=1 的数据。&lt;/li&gt;
&lt;li&gt;先对比表中的数据，找到所有 value=2 的所有数据，然后再这些数据中再去查找所有 id=1 的数据。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;优化器就是确定使用性能更高一点的方案去执行任务。&lt;/p&gt;
&lt;h3 id=&#34;执行器&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#执行器&#34;&gt;#&lt;/a&gt; 执行器&lt;/h3&gt;
&lt;p&gt;通过上一步优化器的工作，得到了该条 SQL 的执行方案，执行器就会按照执行方案去执行查询。&lt;/p&gt;
&lt;p&gt;查询执行引擎会根据 SQL 与语句中使用的存储引擎类型，调用不同对应的 API 接口，去与底层存储引擎缓存或者物理文件交互，得到查询结果，并由 MySQL 过滤后，将查询结果返回给客户端。&lt;/p&gt;
&lt;h2 id=&#34;存储引擎层&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#存储引擎层&#34;&gt;#&lt;/a&gt; 存储引擎层&lt;/h2&gt;
&lt;p&gt;存储引擎有很多种，比如 InnoDB，MyISAM 等等，后面我们会有一篇文章来介绍存储引擎，这里不多说。&lt;/p&gt;
&lt;p&gt;接下来，我们详细的来说下 MySQL 服务器端的各个组件的工作原理。&lt;br&gt;
这篇文章就到这里啦～&lt;/p&gt;
&lt;p&gt;明日再见～&lt;/p&gt;
&lt;h2 id=&#34;最后&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#最后&#34;&gt;#&lt;/a&gt; 最后&lt;/h2&gt;
&lt;p&gt;希望与你一起遇见更好的自己～，一起交流，一起进步&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/images/MySQL-series/qrcode.jpg&#34; alt=&#34;qrcode.jpg&#34;&gt;&lt;/p&gt;
</content>
        <category term="MySQL" />
        <updated>2022-11-03T10:18:18.000Z</updated>
    </entry>
    <entry>
        <id>https://fangjiaxiaobai.github.io/2022/11/02/MySQL-series/MySQL-1-04.connect_to_server/</id>
        <title>04.连接到服务端</title>
        <link rel="alternate" href="https://fangjiaxiaobai.github.io/2022/11/02/MySQL-series/MySQL-1-04.connect_to_server/"/>
        <content type="html">&lt;p&gt;同学， &lt;code&gt;MySQL&lt;/code&gt;  数据库，一般指的 &lt;code&gt;MySQL&lt;/code&gt;  服务端。但是 &lt;code&gt;MySQL&lt;/code&gt;  自己呢也有一个客户端。就是我们使用  &lt;code&gt;mysql&lt;/code&gt;  在 &lt;code&gt;shell&lt;/code&gt;  窗口中连接数据库时，其实这就是以一个客户端的身份去连接到 &lt;code&gt;MySQL&lt;/code&gt;  的服务端的。&lt;/p&gt;
&lt;p&gt;本章，就介绍下常用连接数据库的方式:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;MySQL client 连接&lt;/li&gt;
&lt;li&gt;Java - JDBC 原生的连接&lt;/li&gt;
&lt;li&gt;Python 连接&lt;/li&gt;
&lt;li&gt;go 连接&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;mysql-client-连接数据库&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#mysql-client-连接数据库&#34;&gt;#&lt;/a&gt;  &lt;code&gt;MySQL client&lt;/code&gt;  连接数据库&lt;/h2&gt;
&lt;p&gt;这种连接方式，在上一章 &lt;code&gt;MySQL&lt;/code&gt;  数据库的安装中我们已经使用过了。这里呢我们再详细的介绍一下。&lt;/p&gt;
&lt;p&gt;首先，我们使用  &lt;code&gt;mysql --help&lt;/code&gt;  命令，查看 &lt;code&gt;mysql&lt;/code&gt;  命令可以拼接的参数。回车之后，我们可以看到很多的参数&lt;/p&gt;
&lt;p&gt;本篇文章主要列举下，连接用到的参数：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;-h : host ，表示需要连接的主机地址。 默认是 localhost&lt;/li&gt;
&lt;li&gt;-P : port , 表示要建立连接的主机端口。默认是 3306&lt;/li&gt;
&lt;li&gt;-u : user , 表示建立连接使用的用户名。 默认是 root&lt;/li&gt;
&lt;li&gt;-p : password , 表示建立连接使用的密码。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;建立连接时，完整的命令是:  &lt;code&gt;mysql -h 127.0.0.1 -P 3306 -u root -p&lt;/code&gt;  表示使用  &lt;code&gt;root&lt;/code&gt;  用户，连接 &lt;code&gt;127.0.0.1&lt;/code&gt;  的 &lt;code&gt;3306&lt;/code&gt;  端口。&lt;br&gt;
回车之后，输入密码，回车，即可登陆成功。&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/images/MySQL-series/10301-%E7%99%BB%E5%BD%95%E6%95%B0%E6%8D%AE%E5%BA%93.png&#34; alt=&#34;10301-登录数据库.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;在明白了这几个选项之后，我们可以使用  &lt;code&gt;mysql -p&lt;/code&gt;  来登录本机的 &lt;code&gt;MySQL&lt;/code&gt;  服务端。&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/images/MySQL-series/10302-%E7%99%BB%E5%BD%95%E6%95%B0%E6%8D%AE%E5%BA%93.png&#34; alt=&#34;10302-登录数据库.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;建立连接之后，怎么退出呢？有三种方式可以退出。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;输入  &lt;code&gt;exit&lt;/code&gt;  命令&lt;/li&gt;
&lt;li&gt;输入  &lt;code&gt;quit&lt;/code&gt;  命令&lt;/li&gt;
&lt;li&gt;使用  &lt;code&gt;control + D&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;使用jdbc连接mysql数据库&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#使用jdbc连接mysql数据库&#34;&gt;#&lt;/a&gt; 使用 &lt;code&gt;JDBC&lt;/code&gt;  连接 &lt;code&gt;MySQL&lt;/code&gt;  数据库&lt;/h3&gt;
&lt;p&gt;首先我们使用 &lt;code&gt;MySQL-client&lt;/code&gt;  连接上数据库，用下面的命令去创建一个数据库和完成建表操作&lt;/p&gt;
&lt;figure class=&#34;highlight sql&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;mysql&lt;span class=&#34;operator&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;drop&lt;/span&gt; database test01_jdbc;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Query OK, &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;rows&lt;/span&gt; affected (&lt;span class=&#34;number&#34;&gt;0.08&lt;/span&gt; sec)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;mysql&lt;span class=&#34;operator&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;create&lt;/span&gt; database test01_jdbc;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Query OK, &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;row&lt;/span&gt; affected (&lt;span class=&#34;number&#34;&gt;0.06&lt;/span&gt; sec)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;mysql&lt;span class=&#34;operator&#34;&gt;&amp;gt;&lt;/span&gt; use test01_jdbc;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Database changed&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;mysql&lt;span class=&#34;operator&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;create&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;table&lt;/span&gt; test1(id &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;primary&lt;/span&gt; key auto_increment, &lt;span class=&#34;keyword&#34;&gt;value&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; );&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Query OK, &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;rows&lt;/span&gt; affected (&lt;span class=&#34;number&#34;&gt;0.29&lt;/span&gt; sec)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;接下来，你可以直接复制下面的代码，到你的编辑器里进行执行。源码我放到 &lt;code&gt;github&lt;/code&gt;  里了。地址在公众号里哦&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;53&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;class&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;JDBCDemo&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;static&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(String[] args)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        Connection connection = &lt;span class=&#34;keyword&#34;&gt;null&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        PreparedStatement preparedStatement = &lt;span class=&#34;keyword&#34;&gt;null&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        ResultSet resultSet = &lt;span class=&#34;keyword&#34;&gt;null&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;try&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;comment&#34;&gt;// 1.加载驱动&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            Class.forName(&lt;span class=&#34;string&#34;&gt;&amp;quot;com.mysql.cj.jdbc.Driver&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;comment&#34;&gt;// 换成你的数据库地址&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            String url = &lt;span class=&#34;string&#34;&gt;&amp;quot;jdbc:mysql://10.127.138.75:3306/test01_jdbc&amp;quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            String username = &lt;span class=&#34;string&#34;&gt;&amp;quot;root&amp;quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            String password = &lt;span class=&#34;string&#34;&gt;&amp;quot;123456&amp;quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;comment&#34;&gt;/// 获取连接&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            connection = DriverManager.getConnection(url, username, password);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            String sql = &lt;span class=&#34;string&#34;&gt;&amp;quot;show tables&amp;quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;comment&#34;&gt;// 创建 Statement&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            preparedStatement = connection.prepareStatement(sql);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;comment&#34;&gt;// 执行结果，获取resultSet&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            resultSet = preparedStatement.executeQuery();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;comment&#34;&gt;// 处理结果&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;keyword&#34;&gt;while&lt;/span&gt; (resultSet.next()) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                System.out.println(resultSet.getString(&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;));&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125; &lt;span class=&#34;keyword&#34;&gt;catch&lt;/span&gt; (ClassNotFoundException | SQLException e) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            e.printStackTrace();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125; &lt;span class=&#34;keyword&#34;&gt;finally&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;comment&#34;&gt;// 关闭连接&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt;(&lt;span class=&#34;keyword&#34;&gt;null&lt;/span&gt;!=resultSet) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                &lt;span class=&#34;keyword&#34;&gt;try&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                    resultSet.close();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                &amp;#125; &lt;span class=&#34;keyword&#34;&gt;catch&lt;/span&gt; (SQLException throwables) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                    throwables.printStackTrace();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt;(&lt;span class=&#34;keyword&#34;&gt;null&lt;/span&gt;!=preparedStatement) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                &lt;span class=&#34;keyword&#34;&gt;try&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                    preparedStatement.close();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                &amp;#125; &lt;span class=&#34;keyword&#34;&gt;catch&lt;/span&gt; (SQLException throwables) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                    throwables.printStackTrace();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt;(&lt;span class=&#34;keyword&#34;&gt;null&lt;/span&gt;!=connection) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                &lt;span class=&#34;keyword&#34;&gt;try&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                    connection.close();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                &amp;#125; &lt;span class=&#34;keyword&#34;&gt;catch&lt;/span&gt; (SQLException throwables) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                    throwables.printStackTrace();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;执行结果:&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;test1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;这里呢，就简单的理解下， &lt;code&gt;Java&lt;/code&gt;  连接 &lt;code&gt;MySQL&lt;/code&gt;  服务端的过程。实际的开发中也不会遇到这种写法，但是都是使用这种原理进行了封装和优化，比如数据库的连接池的使用。这里就理解下，使用 &lt;code&gt;Java&lt;/code&gt;  实现了数据库的客户端连接。&lt;/p&gt;
&lt;p&gt;其他语言连接数据库的方式，我放到 &lt;code&gt;github&lt;/code&gt;  仓库里。有需要的自取哈。在公众号里回复【连接数据库】就可以获取啦～&lt;/p&gt;
&lt;p&gt;最后，希望和你成为朋友，一起交流～&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/images/MySQL-series/qrcode.jpg&#34; alt=&#34;qrcode.jpg&#34;&gt;&lt;/p&gt;
</content>
        <category term="MySQL" />
        <updated>2022-11-02T10:18:18.000Z</updated>
    </entry>
    <entry>
        <id>https://fangjiaxiaobai.github.io/2022/11/01/MySQL-series/MySQL-1-02.install/</id>
        <title>02.安装MySQL</title>
        <link rel="alternate" href="https://fangjiaxiaobai.github.io/2022/11/01/MySQL-series/MySQL-1-02.install/"/>
        <content type="html">&lt;p&gt;官网上有很多种安装方式:&lt;br&gt;
 &lt;code&gt;https://dev.mysql.com/doc/refman/8.0/en/installing.html&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;这里我们选择一种比较清晰和简单的安装方式进行安装.&lt;/p&gt;
&lt;h2 id=&#34;准备&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#准备&#34;&gt;#&lt;/a&gt; 准备&lt;/h2&gt;
&lt;h3 id=&#34;mysql-80的rpm-安装包&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#mysql-80的rpm-安装包&#34;&gt;#&lt;/a&gt; MySQL 8.0 的 rpm 安装包&lt;/h3&gt;
&lt;p&gt;在页面  &lt;code&gt;https://dev.mysql.com/downloads/repo/yum/&lt;/code&gt;  中根据自己的操作系统版本选择需要下载的数据库版本。&lt;br&gt;
（查看操作系统版本使用  &lt;code&gt;uname -a&lt;/code&gt;  就可以了，）&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/images/MySQL-series/10101-%E6%9F%A5%E7%9C%8B%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E7%9A%84%E7%89%88%E6%9C%AC.png&#34; alt=&#34;10101-查看操作系统的版本.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;这里看到我的操作系统版本是  &lt;code&gt;el7&lt;/code&gt; . 所以我们使用 &lt;code&gt;el7&lt;/code&gt;  版本的 数据库就可以了。&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/images/MySQL-series/10102-%E4%B8%8B%E8%BD%BD%E6%95%B0%E6%8D%AE%E5%BA%93%E7%89%88%E6%9C%AC.png&#34; alt=&#34;10102-下载数据库版本.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;下载下来之后，使用下面的命令进行安装数据库：&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;rpm -ivh mysql80-community-release-el7-3.noarch.rpm&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;img data-src=&#34;/images/MySQL-series/10103-%E5%AE%89%E8%A3%85%E6%95%B0%E6%8D%AE%E5%BA%93.png&#34; alt=&#34;10103-安装数据库.png&#34;&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;yum install mysql-server&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;img data-src=&#34;/images/MySQL-series/10104-%E5%AE%89%E8%A3%85%E6%95%B0%E6%8D%AE%E5%BA%93.png&#34; alt=&#34;10104-安装数据库.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;修改 &lt;code&gt;MySQL&lt;/code&gt;  文件权限&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;chown mysql:mysql -R /var/lib/mysql&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;img data-src=&#34;/images/MySQL-series/10105-%E5%AE%89%E8%A3%85%E6%95%B0%E6%8D%AE%E5%BA%93.png&#34; alt=&#34;10105-安装数据库.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;初始化 &lt;code&gt;MySQL&lt;/code&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;mysqld --initialize&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;img data-src=&#34;/images/MySQL-series/10106-%E5%AE%89%E8%A3%85%E6%95%B0%E6%8D%AE%E5%BA%93.png&#34; alt=&#34;10106-安装数据库.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;启动 &lt;code&gt;MySQL&lt;/code&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;systemctl start mysqld&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;img data-src=&#34;/images/MySQL-series/10107-%E5%AE%89%E8%A3%85%E6%95%B0%E6%8D%AE%E5%BA%93.png&#34; alt=&#34;10107-安装数据库.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;查看运行状态&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;systemctl status mysqld.service&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;img data-src=&#34;/images/MySQL-series/10107-%E5%AE%89%E8%A3%85%E6%95%B0%E6%8D%AE%E5%BA%93.png&#34; alt=&#34;10107-安装数据库.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;设置开机自启动&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;systemctl enable mysqld&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;systemctl daemon-reload&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;查看数据库版本：&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;mysqladmin --version&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;设置数据库的用户名和密码&lt;/p&gt;
&lt;p&gt;MySQL 默认的用户名为 root，密码呢？&lt;/p&gt;
&lt;p&gt;官方文档里说；&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;A superuser account &amp;#x27;root&amp;#x27;@&amp;#x27;localhost&amp;#x27; is created. A password for the superuser is set and stored in the error log file. To reveal it, use the following command for RHEL, Oracle Linux, CentOS, and Fedora systems:&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;使用  &lt;code&gt;shell&amp;gt; sudo grep &#39;temporary password&#39; /var/log/mysqld.log&lt;/code&gt;  或者  &lt;code&gt; sudo grep &#39;temporary password&#39; /var/log/mysql/mysqld.log&lt;/code&gt;  这条命令就可以查询到了，我试了。。我信你个鬼。&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/images/MySQL-series/10110-%E5%AE%89%E8%A3%85%E6%95%B0%E6%8D%AE%E5%BA%93%E9%97%AE%E9%A2%98.png&#34; alt=&#34;10110-安装数据库问题.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;并没有。。&lt;/p&gt;
&lt;p&gt;还是强制处理吧、&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;首先：停止 MySQL 服务：  &lt;code&gt;systemctl stop mysqld&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;然后跳过验证启动： &lt;code&gt;mysqld --user=root --skip-grant-tables &amp;amp;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;然后： &lt;code&gt;mysql：mysql -u root -p&lt;/code&gt; , 输入密码是直接回车。&lt;/li&gt;
&lt;li&gt;进入后：执行  &lt;code&gt;flush privileges;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;最后  &lt;code&gt;flush privileges;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;退出，重启正常启动 MySQL&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;登录成功，至此，数据库安装完毕！&lt;/p&gt;
&lt;h2 id=&#34;问题&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#问题&#34;&gt;#&lt;/a&gt; 问题&lt;/h2&gt;
&lt;p&gt;运行  &lt;code&gt;systemctl start mysqld&lt;/code&gt;  启动 MySQL 的时候，出现下面的报错&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;Job for mysqld.service failed because the control process exited with error code. See &amp;quot;systemctl status mysqld.service&amp;quot; and &amp;quot;journalctl -xe&amp;quot; for details.&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;这个时候查看 MySQL 的启动日志&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;tail -n 200 /var/log/mysqld.log &lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;img data-src=&#34;/images/MySQL-series/10109-%E5%AE%89%E8%A3%85%E6%95%B0%E6%8D%AE%E5%BA%93%E9%97%AE%E9%A2%98.png&#34; alt=&#34;10109-安装数据库问题.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;权限问题，无法创建  &lt;code&gt;/varlib/mysql/&lt;/code&gt;  这个目录下的文件。&lt;/p&gt;
&lt;p&gt;只需要使用以下命令修改目录的权限就可以了。&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;chgrp -R mysql  /var/lib/mysql/ &amp;amp;&amp;amp; chown -R mysql  /var/lib/mysql/&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&#34;最后&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#最后&#34;&gt;#&lt;/a&gt; 最后&lt;/h2&gt;
&lt;p&gt;期望与你一起遇见更好的自己&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/images/qrcode.jpg&#34; alt=&#34;期望与你一起遇见更好的自己&#34;&gt;&lt;/p&gt;
</content>
        <category term="MySQL" />
        <updated>2022-11-01T10:18:18.000Z</updated>
    </entry>
    <entry>
        <id>https://fangjiaxiaobai.github.io/2021/07/24/MySQL-series/MySQL-1-01.MySQL_version/</id>
        <title>01.数据库版本</title>
        <link rel="alternate" href="https://fangjiaxiaobai.github.io/2021/07/24/MySQL-series/MySQL-1-01.MySQL_version/"/>
        <content type="html">&lt;h2 id=&#34;mysql数据库的版本&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#mysql数据库的版本&#34;&gt;#&lt;/a&gt;  &lt;code&gt;MySQL&lt;/code&gt;  数据库的版本&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;mysql-5.0&lt;/code&gt;   :   &lt;code&gt;mysql-5.0&lt;/code&gt;  版本之前， &lt;code&gt;myisam&lt;/code&gt;  默认支持的表大小为 &lt;code&gt;4G&lt;/code&gt; 。从 &lt;code&gt;mysql-5.0&lt;/code&gt;  以后， &lt;code&gt;MyISAM&lt;/code&gt;  默认支持 &lt;code&gt;256T&lt;/code&gt;  的表单数据。 &lt;code&gt;myisam&lt;/code&gt;  只缓存索引数据。  &lt;code&gt;2005&lt;/code&gt;  年的 &lt;code&gt;5.0&lt;/code&gt;  版本又添加了存储过程、服务端游标、触发器、查询优化以及分布式事务功能。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;MySQL5.1&lt;/code&gt;   :   &lt;code&gt;2008&lt;/code&gt;  年发布的 &lt;code&gt;MySQL 5.1&lt;/code&gt;  的版本，基本上就是一个增加了崩溃恢复功能的 &lt;code&gt;MyISAM&lt;/code&gt; ，使用表级锁，但可以做到读写不冲突，即在进行任何类型的更新操作的同时都可以进行读操作，但多个写操作不能并发。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;mysql5.5&lt;/code&gt;  :   &lt;code&gt;2010&lt;/code&gt;  年 &lt;code&gt;12&lt;/code&gt;  月发布 &lt;code&gt;mysql5.5&lt;/code&gt;  版本默认存储引擎更改为 &lt;code&gt;InnoDB&lt;/code&gt;  多个回滚段（ &lt;code&gt;Multiple Rollback Segments&lt;/code&gt; ）, 之前的 &lt;code&gt;innodb&lt;/code&gt;  版本最大能处理 &lt;code&gt;1023&lt;/code&gt;  个并发处理操作，现在 &lt;code&gt;mysql5.5&lt;/code&gt;  可以处理高达 128K 的并发事务，改善事务处理中的元数据锁定。例如，事物中一个语句需要锁一个表，会在事物结束时释放这个表，而不是像以前在语句结束时释放表。 增加了 &lt;code&gt;INFORMATION_SCHEMA&lt;/code&gt;  表，新的表提供了与 InnoDB 压缩和事务处理锁定有关的具体信息。&lt;/p&gt;
&lt;h3 id=&#34;mysql56&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#mysql56&#34;&gt;#&lt;/a&gt; mysql5.6&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;2013&lt;/code&gt;  年 &lt;code&gt;2&lt;/code&gt;  月发布。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;安全性进行了加强。用户的账号和密码进行了更强的加密算法，使用 &lt;code&gt;sha256_passwordSHA-256&lt;/code&gt;  密码哈希的身份验证插件来进行加密。 &lt;code&gt;mysql.user&lt;/code&gt;  表中新增了 &lt;code&gt;password_expired&lt;/code&gt;  字段，过期后，所有连接的执行都会报出异常。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;MySQL Server&lt;/code&gt;  的参数默认值进行了更改。如下图所示:&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img data-src=&#34;/images/MySQL-series/10101-MySQL5.6Server%E7%AB%AF%E5%8F%82%E6%95%B0%E4%BF%AE%E6%94%B9%E7%9A%84%E9%BB%98%E8%AE%A4%E5%80%BC.png&#34; alt=&#34;10101-MySQL5.6Server端参数修改的默认值.png&#34;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;mysql5.6&lt;/code&gt;  版本中 &lt;code&gt;InnoDB&lt;/code&gt;  可以限制大量表打开的时候内存占用过多的问题 &lt;code&gt;InnoDB&lt;/code&gt;  性能加强。如大内存优化等 &lt;code&gt;InnoDB&lt;/code&gt;  死锁信息可以记录到  &lt;code&gt;error&lt;/code&gt;  日志，&lt;br&gt;
&lt;b&gt; &lt;code&gt;InnoDB&lt;/code&gt;  引擎也支持了 &lt;code&gt;FULLTEXT&lt;/code&gt;  索引&lt;/b&gt;。并使用 &lt;code&gt;MATCH() ... AGAINST&lt;/code&gt;  语法查询它们。 &lt;code&gt;ALTER TABLE &lt;/code&gt; 在不复制表，不阻止对表的插入，更新和删除或两者都不进行的情况下，可以执行多种操作。&lt;b&gt; &lt;code&gt;InnoDB&lt;/code&gt;  使用更快的新算法来检测 死锁&lt;/b&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;分区功能&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;分区的最大数量增加到 &lt;code&gt;8192&lt;/code&gt; 。此数量包括表的所有分区和所有子分区。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;复制和日志记录&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;MySQL&lt;/code&gt;  现在支持使用全局事务标识符（也称为  &lt;code&gt;GTID&lt;/code&gt; ）进行基于事务的复制 。这样，当每个事务在原始服务器上提交并被任何从属服务器应用时，就可以识别和跟踪每个事务。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;MySQL&lt;/code&gt;  基于行的复制从该版本开始支持行图像控制&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;优化器增强功能&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;limit&lt;/code&gt;  查询进行了优化，如果 &lt;code&gt;N&lt;/code&gt;  行元素小于排序缓冲区，那么就使用内存排序而不是合并文件。&lt;/li&gt;
&lt;li&gt;优化器可以更有效地处理 &lt;code&gt;FROM&lt;/code&gt;  子句中的子查询 （即派生表）。FROM 子句中子查询的实现 被推迟到查询执行期间需要其内容时为止，从而提高了性能。在查询执行期间，优化器可以将索引添加到派生表中，以加快从中获取行的速度。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;数据类型&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;MySQL&lt;/code&gt;  从 &lt;code&gt;5.6&lt;/code&gt;  开始允许 &lt;code&gt;TIME&lt;/code&gt; ， &lt;code&gt;DATETIME&lt;/code&gt;  和 &lt;code&gt;TIMESTAMP&lt;/code&gt;  值的小数秒，精度高达微秒（ &lt;code&gt;6&lt;/code&gt;  位）。
&lt;ul&gt;
&lt;li&gt;取消了每个表最多可以自动将 &lt;code&gt;TIMESTAMP&lt;/code&gt;  列初始化或更新为当前日期和时间的限制。任何 &lt;code&gt;TIMESTAMP&lt;/code&gt;  列定义都可以具有 &lt;code&gt;DEFAULT CURRENT_TIMESTAMP&lt;/code&gt;  和 &lt;code&gt;ON UPDATE CURRENT_TIMESTAMP&lt;/code&gt;  子句的任意组合。此外，这些子句现在可以与 DATETIME 列定义一起使用。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;主机缓存。&lt;br&gt;
 &lt;code&gt;MySQL&lt;/code&gt;  现在提供有关客户端连接到服务器时发生错误的原因的更多信息，以及对主机缓存的改进访问，该缓存包含客户端 &lt;code&gt;IP&lt;/code&gt;  地址和主机名信息，用于避免 &lt;code&gt;DNS&lt;/code&gt;  查找。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;mysql57&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#mysql57&#34;&gt;#&lt;/a&gt; mysql5.7&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;将  &lt;code&gt;Undo&lt;/code&gt;  从共享表空间  &lt;code&gt;ibdata&lt;/code&gt;  文件中分离出来，可以在安装  &lt;code&gt;MySQL&lt;/code&gt;  时由用户自行指定文件大小和数量。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;增加了  &lt;code&gt;temporary&lt;/code&gt;  临时表空间，里面存储着临时表或临时查询结果集的数据。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;Buffer Pool&lt;/code&gt;  大小可以动态修改，无需重启数据库实例，这是  &lt;code&gt;DBA&lt;/code&gt;  的福音。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;mysql-80-版本新特性如下&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#mysql-80-版本新特性如下&#34;&gt;#&lt;/a&gt; MySQL 8.0 版本新特性如下：&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;将  &lt;code&gt;InnoDB&lt;/code&gt;  表的数据字典和  &lt;code&gt;Undo&lt;/code&gt;  都从共享表空间  &lt;code&gt;ibdata&lt;/code&gt;  中彻底分离出来了，以前需要 &lt;code&gt;ibdata&lt;/code&gt;  文件中数据字典与独立表空间  &lt;code&gt;ibd&lt;/code&gt;  文件中数据字典一致才行， &lt;code&gt;8.0&lt;/code&gt;  版本就不需要了。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;temporary&lt;/code&gt;  临时表空间也可以配置多个物理文件，而且均为  &lt;code&gt;InnoDB&lt;/code&gt;  存储引擎并能创建索引，这样加快了处理的速度。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;用户可以像  &lt;code&gt;Oracle&lt;/code&gt;  数据库那样设置一些表空间，每个表空间对应多个物理文件，每个表空间可以给多个表使用，但一个表只能存储在一个表空间中。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;最后&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#最后&#34;&gt;#&lt;/a&gt; 最后&lt;/h2&gt;
&lt;p&gt;期望与你一起遇见更好的自己&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/images/qrcode.jpg&#34; alt=&#34;期望与你一起遇见更好的自己&#34;&gt;&lt;/p&gt;
</content>
        <category term="MySQL" />
        <updated>2021-07-24T06:48:55.000Z</updated>
    </entry>
    <entry>
        <id>https://fangjiaxiaobai.github.io/2021/07/23/MySQL-series/MySQL-1-00.intro/</id>
        <title>00.开篇&amp;&amp;说明</title>
        <link rel="alternate" href="https://fangjiaxiaobai.github.io/2021/07/23/MySQL-series/MySQL-1-00.intro/"/>
        <content type="html">&lt;h2 id=&#34;版本说明&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#版本说明&#34;&gt;#&lt;/a&gt; 版本说明&lt;/h2&gt;
&lt;p&gt;本系列文章，以 MySQL 8.0.20 版本为实验背景进行编写。&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXYubXlzcWwuY29tL2RvYy9pbnRlcm5hbHMvZW4vYmluYXJ5LWxvZy1vdmVydmlldy5odG1s&#34;&gt;MySQL 手册&lt;/span&gt;&lt;/p&gt;
&lt;h2 id=&#34;最后&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#最后&#34;&gt;#&lt;/a&gt; 最后&lt;/h2&gt;
&lt;p&gt;期望与你一起遇见更好的自己&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/images/qrcode.jpg&#34; alt=&#34;期望与你一起遇见更好的自己&#34;&gt;&lt;/p&gt;
</content>
        <category term="MySQL" />
        <updated>2021-07-23T06:48:55.000Z</updated>
    </entry>
</feed>
