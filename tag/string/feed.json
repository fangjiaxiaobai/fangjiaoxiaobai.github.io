{
    "version": "https://jsonfeed.org/version/1",
    "title": "方家小白 • All posts by \"string\" tag",
    "description": "和你一起遇见更好的自己",
    "home_page_url": "https://fangjiaxiaobai.github.io",
    "items": [
        {
            "id": "https://fangjiaxiaobai.github.io/2021/07/15/JDK%E6%BA%90%E7%A0%81/String/String/",
            "url": "https://fangjiaxiaobai.github.io/2021/07/15/JDK%E6%BA%90%E7%A0%81/String/String/",
            "title": "String类源码解析",
            "date_published": "2021-07-15T06:48:55.000Z",
            "content_html": "<p>一、签名：</p>\n<p><code>public final class String implements java.io.Serializable, Comparable&lt;String&gt;, CharSequence</code></p>\n<ul>\n<li>String 不能被继承，</li>\n<li>实现了 Serializable：可被序列化。</li>\n<li>实现了 Comparable：可以比较，排序，</li>\n<li>实现了 CharSequence：值是可读序列。</li>\n</ul>\n<p>二、成员变量：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">private</span> <span class=\"keyword\">final</span> <span class=\"keyword\">char</span> value[];  <span class=\"comment\">// 存储字符。</span></span><br><span class=\"line\"><span class=\"keyword\">private</span> <span class=\"keyword\">int</span> hash;     <span class=\"comment\">// 缓存字符串的hash值。</span></span><br><span class=\"line\">Private <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> ObjectStreamField[] serialPersistentFields = <span class=\"keyword\">new</span> ObjectStreamFiled[<span class=\"number\">0</span>];  <span class=\"comment\">// 字符串类被指定转化序列化流协议中。</span></span><br><span class=\"line\"><span class=\"comment\">/** use serialVersionUID from JDK 1.0.2 for interoperability */</span></span><br><span class=\"line\"><span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> <span class=\"keyword\">long</span> serialVersionUID = -<span class=\"number\">6849794470754667710L</span>;</span><br></pre></td></tr></table></figure>\n<p>Value 是 final 的，所以 String 一旦定义之后，就不可变的。</p>\n<p>三、构造函数：</p>\n<p>四、常用方法：</p>\n<p>由于 String 中重载的方法太多了，所以就只写方法名了。</p>\n<p>1.   <code>getBytes</code> :</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">byte</span>[] getBytes() &#123;</span><br><span class=\"line\">   <span class=\"keyword\">return</span> StringCoding.encode(value, <span class=\"number\">0</span>, value.length);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>以上面的这个方法为例：它交给了 <code>StringCoding.encode</code>  去获取 <code>bytes</code> 。然而 <code>StringEncoder</code>  去调用了 <code>StringEncoder</code>  的相应方法获取 <code>bytes</code> 、</p>\n<p>2.  equals</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">boolean</span> <span class=\"title\">equals</span><span class=\"params\">(Object anObject)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (<span class=\"keyword\">this</span> == anObject) &#123;   <span class=\"comment\">// 如果地址都相同的话，那肯定就是同一个了</span></span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"keyword\">true</span>; </span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (anObject <span class=\"keyword\">instanceof</span> String) &#123;</span><br><span class=\"line\">            String anotherString = (String)anObject;</span><br><span class=\"line\">            <span class=\"keyword\">int</span> n = value.length;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (n == anotherString.value.length) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">char</span> v1[] = value;</span><br><span class=\"line\">                <span class=\"keyword\">char</span> v2[] = anotherString.value;</span><br><span class=\"line\">                <span class=\"keyword\">int</span> i = <span class=\"number\">0</span>;</span><br><span class=\"line\">                <span class=\"keyword\">while</span> (n-- != <span class=\"number\">0</span>) &#123;  <span class=\"comment\">//不错的编码风格。比for要好一点？</span></span><br><span class=\"line\">                    <span class=\"keyword\">if</span> (v1[i] != v2[i])</span><br><span class=\"line\">                        <span class=\"keyword\">return</span> <span class=\"keyword\">false</span>;</span><br><span class=\"line\">                    i++;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">                <span class=\"keyword\">return</span> <span class=\"keyword\">true</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">false</span>;</span><br><span class=\"line\">    &#125;</span><br></pre></td></tr></table></figure>\n<p>3.  equalsIgnoreCase:</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">boolean</span> <span class=\"title\">equalsIgnoreCase</span><span class=\"params\">(String anotherString)</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">return</span> (<span class=\"keyword\">this</span> == anotherString) ? <span class=\"keyword\">true</span></span><br><span class=\"line\"></span><br><span class=\"line\">          : (anotherString != <span class=\"keyword\">null</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">          &amp;&amp; (anotherString.value.length == value.length)</span><br><span class=\"line\"></span><br><span class=\"line\">          &amp;&amp; regionMatches(<span class=\"keyword\">true</span>, <span class=\"number\">0</span>, anotherString, <span class=\"number\">0</span>, value.length);</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">boolean</span> <span class=\"title\">regionMatches</span><span class=\"params\">(<span class=\"keyword\">boolean</span> ignoreCase, <span class=\"keyword\">int</span> toffset,</span></span></span><br><span class=\"line\"><span class=\"params\"><span class=\"function\"></span></span></span><br><span class=\"line\"><span class=\"params\"><span class=\"function\">            String other, <span class=\"keyword\">int</span> ooffset, <span class=\"keyword\">int</span> len)</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">char</span> ta[] = value;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">int</span> to = toffset;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">char</span> pa[] = other.value;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">int</span> po = ooffset;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">// Note: toffset, ooffset, or len might be near -1&gt;&gt;&gt;1.</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">if</span> ((ooffset &lt; <span class=\"number\">0</span>) || (toffset &lt; <span class=\"number\">0</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">                || (toffset &gt; (<span class=\"keyword\">long</span>)value.length - len)</span><br><span class=\"line\"></span><br><span class=\"line\">                || (ooffset &gt; (<span class=\"keyword\">long</span>)other.value.length - len)) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"keyword\">false</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">while</span> (len-- &gt; <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"keyword\">char</span> c1 = ta[to++];</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"keyword\">char</span> c2 = pa[po++];</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"keyword\">if</span> (c1 == c2) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">                <span class=\"keyword\">continue</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">            &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"keyword\">if</span> (ignoreCase) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">                <span class=\"comment\">// If characters don&#x27;t match but case may be ignored,</span></span><br><span class=\"line\"></span><br><span class=\"line\">                <span class=\"comment\">// try converting both characters to uppercase.</span></span><br><span class=\"line\"></span><br><span class=\"line\">                <span class=\"comment\">// If the results match, then the comparison scan should</span></span><br><span class=\"line\"></span><br><span class=\"line\">                <span class=\"comment\">// continue.</span></span><br><span class=\"line\"></span><br><span class=\"line\">                <span class=\"keyword\">char</span> u1 = Character.toUpperCase(c1);</span><br><span class=\"line\"></span><br><span class=\"line\">                <span class=\"keyword\">char</span> u2 = Character.toUpperCase(c2);</span><br><span class=\"line\"></span><br><span class=\"line\">                <span class=\"keyword\">if</span> (u1 == u2) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">                    <span class=\"keyword\">continue</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">                &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">                <span class=\"comment\">// Unfortunately, conversion to uppercase does not work properly</span></span><br><span class=\"line\"></span><br><span class=\"line\">                <span class=\"comment\">// for the Georgian alphabet, which has strange rules about case</span></span><br><span class=\"line\"></span><br><span class=\"line\">                <span class=\"comment\">// conversion.  So we need to make one last check before</span></span><br><span class=\"line\"></span><br><span class=\"line\">                <span class=\"comment\">// exiting.</span></span><br><span class=\"line\"></span><br><span class=\"line\">                <span class=\"keyword\">if</span> (Character.toLowerCase(u1) == Character.toLowerCase(u2)) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">                    <span class=\"keyword\">continue</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">                &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">            &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"keyword\">false</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">true</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br></pre></td></tr></table></figure>\n<p>在 regionMatches 中首先对传入的参数，进行合法性判断。然后取出每一个字符，比较一下，相同就下个字符，不同，都转换成大写，比较一次，如果相同就比较下一个字符，如果不相同就都转化成小写在比较一下。解释是说：有时候，转大写不一定每次都会正确。</p>\n<p>4.  startsWith:</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">boolean</span> <span class=\"title\">startsWith</span><span class=\"params\">(String prefix, <span class=\"keyword\">int</span> toffset)</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">char</span> ta[] = value;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">int</span> to = toffset;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">char</span> pa[] = prefix.value;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">int</span> po = <span class=\"number\">0</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">int</span> pc = prefix.value.length;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">// Note: toffset might be near -1&gt;&gt;&gt;1.</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">if</span> ((toffset &lt; <span class=\"number\">0</span>) || (toffset &gt; value.length - pc)) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"keyword\">false</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">while</span> (--pc &gt;= <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"keyword\">if</span> (ta[to++] != pa[po++]) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">                <span class=\"keyword\">return</span> <span class=\"keyword\">false</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">            &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">true</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br></pre></td></tr></table></figure>\n<p>5.  endsWith</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">boolean</span> <span class=\"title\">endsWith</span><span class=\"params\">(String suffix)</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> startsWith(suffix, value.length - suffix.value.length);</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>6.  重点来了：hashCode</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">int</span> <span class=\"title\">hashCode</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> h = hash;  <span class=\"comment\">///先获取缓存中的hash值。</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span>(h == <span class=\"number\">0</span> &amp;&amp; value.length &gt; <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">char</span> val[] = value;</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; value.length; i++) &#123;</span><br><span class=\"line\">               h = <span class=\"number\">31</span> * h + val[i];   <span class=\"comment\">// hash值算法。31</span></span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            hash = h;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> h;</span><br><span class=\"line\">    &#125;</span><br></pre></td></tr></table></figure>\n<p>7.  replace</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> String <span class=\"title\">replace</span><span class=\"params\">(<span class=\"keyword\">char</span> oldChar, <span class=\"keyword\">char</span> newChar)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (oldChar != newChar) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">int</span> len = value.length;</span><br><span class=\"line\">            <span class=\"keyword\">int</span> i = -<span class=\"number\">1</span>;</span><br><span class=\"line\">            <span class=\"keyword\">char</span>[] val = value; <span class=\"comment\">/* avoid getfield opcode */</span></span><br><span class=\"line\">            <span class=\"keyword\">while</span> (++i &lt; len) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (val[i] == oldChar) &#123;</span><br><span class=\"line\">                    <span class=\"keyword\">break</span>;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (i &lt; len) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">char</span> buf[] = <span class=\"keyword\">new</span> <span class=\"keyword\">char</span>[len];</span><br><span class=\"line\">                <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> j = <span class=\"number\">0</span>; j &lt; i; j++) &#123;</span><br><span class=\"line\">                    buf[j] = val[j];</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">                <span class=\"keyword\">while</span> (i &lt; len) &#123;</span><br><span class=\"line\">                    <span class=\"keyword\">char</span> c = val[i];</span><br><span class=\"line\">                    buf[i] = (c == oldChar) ? newChar : c;</span><br><span class=\"line\">                    i++;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">                <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> String(buf, <span class=\"keyword\">true</span>);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">this</span>;</span><br><span class=\"line\">    &#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"最后\"><a class=\"markdownIt-Anchor\" href=\"#最后\">#</a> 最后</h3>\n<p>期望与你一起遇见更好的自己</p>\n<p><img data-src=\"/images/qrcode.jpg\" alt=\"期望与你一起遇见更好的自己\"></p>\n",
            "tags": [
                "源码",
                "JDK",
                "JDK8",
                "String"
            ]
        }
    ]
}