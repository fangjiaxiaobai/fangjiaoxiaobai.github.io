{
    "version": "https://jsonfeed.org/version/1",
    "title": "方家小白 • All posts by \"有点难的算法题\" tag",
    "description": "和你一起遇见更好的自己",
    "home_page_url": "https://fangjiaxiaobai.github.io",
    "items": [
        {
            "id": "https://fangjiaxiaobai.github.io/2021/11/04/BQ/LeetCode/0407-trapping-rain-water-ii/",
            "url": "https://fangjiaxiaobai.github.io/2021/11/04/BQ/LeetCode/0407-trapping-rain-water-ii/",
            "title": "LC:407.接雨水II",
            "date_published": "2021-11-04T10:18:18.000Z",
            "content_html": "<h2 id=\"题目\"><a class=\"markdownIt-Anchor\" href=\"#题目\">#</a> 题目</h2>\n<p>给你一个  <code>m x n</code>  的矩阵，其中的值均为非负整数，代表二维高度图每个单元的高度，请计算图中形状最多能接多少体积的雨水。</p>\n<h2 id=\"示例\"><a class=\"markdownIt-Anchor\" href=\"#示例\">#</a> 示例</h2>\n<h3 id=\"示例-1\"><a class=\"markdownIt-Anchor\" href=\"#示例-1\">#</a> 示例 1</h3>\n<p><img data-src=\"/images/ac-code/407/demo1.jpeg\" alt=\"\"></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">输入: heightMap = [[1,4,3,1,3,2],[3,2,1,3,2,4],[2,3,3,2,3,1]]</span><br><span class=\"line\">输出: 4</span><br><span class=\"line\">解释: 下雨后，雨水将会被上图蓝色的方块中。总的接雨水量为1+2+1=4。</span><br></pre></td></tr></table></figure>\n<h3 id=\"示例-2\"><a class=\"markdownIt-Anchor\" href=\"#示例-2\">#</a> 示例 2</h3>\n<p><img data-src=\"/images/ac-code/407/demo2.jpeg\" alt=\"\"></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">输入: heightMap = [[3,3,3,3,3],[3,2,2,2,3],[3,2,1,2,3],[3,2,2,2,3],[3,3,3,3,3]]</span><br><span class=\"line\">输出: 10</span><br></pre></td></tr></table></figure>\n<h2 id=\"提示\"><a class=\"markdownIt-Anchor\" href=\"#提示\">#</a> 提示</h2>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">m == heightMap.length</span><br><span class=\"line\">n == heightMap[i].length</span><br><span class=\"line\">1 &lt;= m, n &lt;= 200</span><br><span class=\"line\">0 &lt;= heightMap[i][j] &lt;= 2 * 104</span><br></pre></td></tr></table></figure>\n<h2 id=\"相关题目\"><a class=\"markdownIt-Anchor\" href=\"#相关题目\">#</a> 相关题目</h2>\n<div class=\"links\"><div class=\"item\" title=\"力扣（LeetCode）407.接雨水II\" style=\"--block-color:#ffa015;\"><span class=\"exturl image\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS1jbi5jb20vcHJvYmxlbXMvdHJhcHBpbmctcmFpbi13YXRlci1paQ==\" data-background-image=\"https://static.leetcode-cn.com/cn-frontendx-assets/production/_next/static/images/lccn-logo-ce3d56eeedaae618e59e2ec5089e4834.svg\"></span>\n          <div class=\"info\">\n          <span class=\"exturl title\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS1jbi5jb20vcHJvYmxlbXMvdHJhcHBpbmctcmFpbi13YXRlci1paQ==\">力扣（LeetCode）407.接雨水II</span>\n          <p class=\"desc\">https://leetcode-cn.com/</p>\n          </div></div></div>\n<h3 id=\"题解\"><a class=\"markdownIt-Anchor\" href=\"#题解\">#</a> 题解</h3>\n<div class=\"links\"><div class=\"item\" title=\"方家小白-LeetCode题解-42.接雨水\" style=\"--block-color:#e0b971;\"><a href=\"http://fangjiaxiaobai.github.io/2021/11/04/BQ/LeetCode/0042.trapping-rain-water/\" class=\"image\" data-background-image=\"https://avatars.githubusercontent.com/u/22616214?v=4\"></a>\n          <div class=\"info\">\n          <a href=\"http://fangjiaxiaobai.github.io/2021/11/04/BQ/LeetCode/0042.trapping-rain-water/\" class=\"title\">方家小白-LeetCode题解-42.接雨水</a>\n          <p class=\"desc\">日常积累的代码，知识点, 数据结构与算法的学习与实现，以及例题分享</p>\n          </div></div></div>\n<h2 id=\"解法\"><a class=\"markdownIt-Anchor\" href=\"#解法\">#</a> 解法</h2>\n<h3 id=\"解法一\"><a class=\"markdownIt-Anchor\" href=\"#解法一\">#</a> 解法一</h3>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">int</span> <span class=\"title\">trapRainWater</span><span class=\"params\">(<span class=\"keyword\">int</span>[][] heightMap)</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (heightMap.length &lt;= <span class=\"number\">2</span> || heightMap[<span class=\"number\">0</span>].length &lt;= <span class=\"number\">2</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> m = heightMap.length;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> n = heightMap[<span class=\"number\">0</span>].length;</span><br><span class=\"line\">    <span class=\"keyword\">boolean</span>[][] visit = <span class=\"keyword\">new</span> <span class=\"keyword\">boolean</span>[m][n];</span><br><span class=\"line\">    PriorityQueue&lt;<span class=\"keyword\">int</span>[]&gt; pq = <span class=\"keyword\">new</span> PriorityQueue&lt;&gt;((o1, o2) -&gt; o1[<span class=\"number\">1</span>] - o2[<span class=\"number\">1</span>]);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; m; ++i) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> j = <span class=\"number\">0</span>; j &lt; n; ++j) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (i == <span class=\"number\">0</span> || i == m - <span class=\"number\">1</span> || j == <span class=\"number\">0</span> || j == n - <span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">                pq.offer(<span class=\"keyword\">new</span> <span class=\"keyword\">int</span>[]&#123;i * n + j, heightMap[i][j]&#125;);</span><br><span class=\"line\">                visit[i][j] = <span class=\"keyword\">true</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> res = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">int</span>[] dirs = &#123;-<span class=\"number\">1</span>, <span class=\"number\">0</span>, <span class=\"number\">1</span>, <span class=\"number\">0</span>, -<span class=\"number\">1</span>&#125;;</span><br><span class=\"line\">    <span class=\"keyword\">while</span> (!pq.isEmpty()) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">int</span>[] curr = pq.poll();</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> k = <span class=\"number\">0</span>; k &lt; <span class=\"number\">4</span>; ++k) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">int</span> nx = curr[<span class=\"number\">0</span>] / n + dirs[k];</span><br><span class=\"line\">            <span class=\"keyword\">int</span> ny = curr[<span class=\"number\">0</span>] % n + dirs[k + <span class=\"number\">1</span>];</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (nx &gt;= <span class=\"number\">0</span> &amp;&amp; nx &lt; m &amp;&amp; ny &gt;= <span class=\"number\">0</span> &amp;&amp; ny &lt; n &amp;&amp; !visit[nx][ny]) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (curr[<span class=\"number\">1</span>] &gt; heightMap[nx][ny]) &#123;</span><br><span class=\"line\">                    res += curr[<span class=\"number\">1</span>] - heightMap[nx][ny];</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">                pq.offer(<span class=\"keyword\">new</span> <span class=\"keyword\">int</span>[]&#123;nx * n + ny, Math.max(heightMap[nx][ny], curr[<span class=\"number\">1</span>])&#125;);</span><br><span class=\"line\">                visit[nx][ny] = <span class=\"keyword\">true</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> res;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"最后\"><a class=\"markdownIt-Anchor\" href=\"#最后\">#</a> 最后</h2>\n<p>期望与你一起遇见更好的自己</p>\n<p><img data-src=\"/images/qrcode.jpg\" alt=\"期望与你一起遇见更好的自己\"></p>\n",
            "tags": [
                "leetCode",
                "面经之算法题",
                "有点难的算法题"
            ]
        }
    ]
}