<?xml version="1.0"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://fangjiaxiaobai.github.io</id>
    <title>方家小白 • Posts by &#34;不做也罢的算法题&#34; tag</title>
    <link href="https://fangjiaxiaobai.github.io" />
    <updated>2021-11-13T10:18:18.000Z</updated>
    <category term="源码" />
    <category term="目录" />
    <category term="全站地图" />
    <category term="MySQL" />
    <category term="Redis" />
    <category term="数据结构" />
    <category term="日常" />
    <category term="Springboot" />
    <category term="Netty" />
    <category term="雪花算法" />
    <category term="算法" />
    <category term="Elastic Search" />
    <category term="搜索" />
    <category term="git" />
    <category term="k8s" />
    <category term="kubernetes" />
    <category term="MachineLearn" />
    <category term="log" />
    <category term="go-log" />
    <category term="猫影视" />
    <category term="图片" />
    <category term="RocketMQ" />
    <category term="消息队列" />
    <category term="线程池" />
    <category term="面经" />
    <category term="go" />
    <category term="go-error" />
    <category term="leetCode" />
    <category term="数组" />
    <category term="面经之算法题" />
    <category term="链表" />
    <category term="有点难的算法题" />
    <category term="不做也罢的算法题" />
    <category term="动态规划" />
    <category term="HD" />
    <category term="BQ" />
    <category term="AC" />
    <category term="HashMap" />
    <category term="JDK" />
    <category term="JDK8" />
    <category term="String" />
    <category term="数据结构与算法" />
    <category term="递归" />
    <category term="哈希算法" />
    <category term="排序" />
    <category term="快速排序" />
    <category term="分支思想排序" />
    <category term="冒泡排序" />
    <category term="交换排序" />
    <category term="go-设计模式" />
    <category term="分治思想排序" />
    <category term="桶排序" />
    <category term="线性思想排序" />
    <category term="选择排序" />
    <category term="Java" />
    <category term="dubbo" />
    <category term="模型评估" />
    <category term="架构" />
    <category term="笔记" />
    <category term="KNN" />
    <category term="go-runtimes" />
    <category term="JDK版本" />
    <category term="JDK11" />
    <category term="OOM" />
    <category term="JVM" />
    <category term="Stream" />
    <entry>
        <id>https://fangjiaxiaobai.github.io/2021/11/13/BQ/LeetCode/0495-teemo-attacking/</id>
        <title>LC:495.提莫攻击</title>
        <link rel="alternate" href="https://fangjiaxiaobai.github.io/2021/11/13/BQ/LeetCode/0495-teemo-attacking/"/>
        <content type="html">&lt;h2 id=&#34;题目&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#题目&#34;&gt;#&lt;/a&gt; 题目&lt;/h2&gt;
&lt;p&gt;在《英雄联盟》的世界中，有一个叫 “提莫” 的英雄。他的攻击可以让敌方英雄艾希（编者注：寒冰射手）进入中毒状态。&lt;/p&gt;
&lt;p&gt;当提莫攻击艾希，艾希的中毒状态正好持续  &lt;code&gt;duration&lt;/code&gt;  秒。&lt;/p&gt;
&lt;p&gt;正式地讲，提莫在 t 发起发起攻击意味着艾希在时间区间  &lt;code&gt;[t, t + duration - 1]&lt;/code&gt; （含  &lt;code&gt;t&lt;/code&gt;  和  &lt;code&gt;t + duration - 1&lt;/code&gt; ）处于中毒状态。如果提莫在中毒影响结束 前 再次攻击，中毒状态计时器将会 重置 ，在新的攻击之后，中毒影响将会在  &lt;code&gt;duration&lt;/code&gt;  秒后结束。&lt;/p&gt;
&lt;p&gt;给你一个 非递减 的整数数组  &lt;code&gt;timeSeries&lt;/code&gt;  ，其中  &lt;code&gt;timeSeries[i]&lt;/code&gt;  表示提莫在  &lt;code&gt;timeSeries[i]&lt;/code&gt;  秒时对艾希发起攻击，以及一个表示中毒持续时间的整数  &lt;code&gt;duration&lt;/code&gt;  。&lt;/p&gt;
&lt;p&gt;返回艾希处于中毒状态的 总 秒数。&lt;/p&gt;
&lt;h2 id=&#34;示例&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#示例&#34;&gt;#&lt;/a&gt; 示例&lt;/h2&gt;
&lt;h3 id=&#34;示例-1&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#示例-1&#34;&gt;#&lt;/a&gt; 示例 1：&lt;/h3&gt;
&lt;p&gt;输入：timeSeries = [1,4], duration = 2&lt;br&gt;
 输出：4&lt;br&gt;
 解释：提莫攻击对艾希的影响如下：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;第 1 秒，提莫攻击艾希并使其立即中毒。中毒状态会维持 2 秒，即第 1 秒和第 2 秒。&lt;/li&gt;
&lt;li&gt;第 4 秒，提莫再次攻击艾希，艾希中毒状态又持续 2 秒，即第 4 秒和第 5 秒。&lt;br&gt;
艾希在第 1、2、4、5 秒处于中毒状态，所以总中毒秒数是 4 。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;示例-2&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#示例-2&#34;&gt;#&lt;/a&gt; 示例 2：&lt;/h3&gt;
&lt;p&gt;输入：timeSeries = [1,2], duration = 2&lt;br&gt;
 输出：3&lt;br&gt;
 解释：提莫攻击对艾希的影响如下：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;第 1 秒，提莫攻击艾希并使其立即中毒。中毒状态会维持 2 秒，即第 1 秒和第 2 秒。&lt;/li&gt;
&lt;li&gt;第 2 秒，提莫再次攻击艾希，并重置中毒计时器，艾希中毒状态需要持续 2 秒，即第 2 秒和第 3 秒。&lt;br&gt;
艾希在第 1、2、3 秒处于中毒状态，所以总中毒秒数是 3 。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;提示&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#提示&#34;&gt;#&lt;/a&gt; 提示&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;1 &amp;lt;= timeSeries.length &amp;lt;= 104&lt;/li&gt;
&lt;li&gt;0 &amp;lt;= timeSeries[i], duration &amp;lt;= 107&lt;/li&gt;
&lt;li&gt;timeSeries 按 非递减 顺序排列&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;相关题目&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#相关题目&#34;&gt;#&lt;/a&gt; 相关题目&lt;/h2&gt;
&lt;div class=&#34;links&#34;&gt;&lt;div class=&#34;item&#34; title=&#34;力扣（LeetCode）495.提莫攻击&#34; style=&#34;--block-color:#ffa015;&#34;&gt;&lt;span class=&#34;exturl image&#34; data-url=&#34;aHR0cHM6Ly9sZWV0Y29kZS1jbi5jb20vcHJvYmxlbXMvdGVlbW8tYXR0YWNraW5n&#34; data-background-image=&#34;https://static.leetcode-cn.com/cn-frontendx-assets/production/_next/static/images/lccn-logo-ce3d56eeedaae618e59e2ec5089e4834.svg&#34;&gt;&lt;/span&gt;
          &lt;div class=&#34;info&#34;&gt;
          &lt;span class=&#34;exturl title&#34; data-url=&#34;aHR0cHM6Ly9sZWV0Y29kZS1jbi5jb20vcHJvYmxlbXMvdGVlbW8tYXR0YWNraW5n&#34;&gt;力扣（LeetCode）495.提莫攻击&lt;/span&gt;
          &lt;p class=&#34;desc&#34;&gt;https://leetcode-cn.com/&lt;/p&gt;
          &lt;/div&gt;&lt;/div&gt;&lt;/div&gt;
&lt;h3 id=&#34;题解&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#题解&#34;&gt;#&lt;/a&gt; 题解&lt;/h3&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;class&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;Solution&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;findPoisonedDuration&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(&lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt;[] timeSeries, &lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; duration)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;comment&#34;&gt;// 中毒时长&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; poisonedCount = duration;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; i = &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;; i &amp;lt; timeSeries.length; i++) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt;(timeSeries[i-&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;]+duration &amp;lt; timeSeries[i])&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                poisonedCount += duration;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &amp;#125;&lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                poisonedCount += (timeSeries[i] - timeSeries[i-&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;]);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; poisonedCount;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&#34;最后&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#最后&#34;&gt;#&lt;/a&gt; 最后&lt;/h2&gt;
&lt;p&gt;期望与你一起遇见更好的自己&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/images/qrcode.jpg&#34; alt=&#34;期望与你一起遇见更好的自己&#34;&gt;&lt;/p&gt;
</content>
        <category term="leetCode" />
        <category term="面经之算法题" />
        <category term="不做也罢的算法题" />
        <updated>2021-11-13T10:18:18.000Z</updated>
    </entry>
    <entry>
        <id>https://fangjiaxiaobai.github.io/2021/11/13/BQ/LeetCode/0520-detect-capital/</id>
        <title>LC:520.检测大写字母</title>
        <link rel="alternate" href="https://fangjiaxiaobai.github.io/2021/11/13/BQ/LeetCode/0520-detect-capital/"/>
        <content type="html">&lt;h2 id=&#34;题目&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#题目&#34;&gt;#&lt;/a&gt; 题目&lt;/h2&gt;
&lt;p&gt;我们定义，在以下情况时，单词的大写用法是正确的：&lt;/p&gt;
&lt;p&gt;全部字母都是大写，比如  &lt;code&gt;USA&lt;/code&gt; 。&lt;br&gt;
单词中所有字母都不是大写，比如  &lt;code&gt;leetcode&lt;/code&gt;  。&lt;br&gt;
如果单词不只含有一个字母，只有首字母大写， 比如  &lt;code&gt;Google&lt;/code&gt;  。&lt;br&gt;
给你一个字符串  &lt;code&gt;word&lt;/code&gt;  。如果大写用法正确，返回  &lt;code&gt;true&lt;/code&gt;  ；否则，返回  &lt;code&gt;false&lt;/code&gt;  。&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;h2 id=&#34;示例&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#示例&#34;&gt;#&lt;/a&gt; 示例&lt;/h2&gt;
&lt;h3 id=&#34;示例-1&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#示例-1&#34;&gt;#&lt;/a&gt; 示例 1&lt;/h3&gt;
&lt;p&gt;输入：word = “USA”&lt;br&gt;
 输出：true&lt;/p&gt;
&lt;h3 id=&#34;示例-2&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#示例-2&#34;&gt;#&lt;/a&gt; 示例 2&lt;/h3&gt;
&lt;p&gt;输入：word = “FlaG”&lt;br&gt;
 输出：false&lt;/p&gt;
&lt;h2 id=&#34;提示&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#提示&#34;&gt;#&lt;/a&gt; 提示&lt;/h2&gt;
&lt;p&gt;1. &lt;code&gt;1 &amp;lt;= word.length &amp;lt;= 100&lt;/code&gt; &lt;br&gt;
2. &lt;code&gt;word&lt;/code&gt;  由小写和大写英文字母组成&lt;/p&gt;
&lt;p&gt;来源：力扣（LeetCode）&lt;br&gt;
链接：&lt;br&gt;
著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。&lt;/p&gt;
&lt;h2 id=&#34;相关题目&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#相关题目&#34;&gt;#&lt;/a&gt; 相关题目&lt;/h2&gt;
&lt;div class=&#34;links&#34;&gt;&lt;div class=&#34;item&#34; title=&#34;力扣（LeetCode）520.检测大写字符&#34; style=&#34;--block-color:#ffa015;&#34;&gt;&lt;span class=&#34;exturl image&#34; data-url=&#34;aHR0cHM6Ly9sZWV0Y29kZS1jbi5jb20vcHJvYmxlbXMvZGV0ZWN0LWNhcGl0YWw=&#34; data-background-image=&#34;https://static.leetcode-cn.com/cn-frontendx-assets/production/_next/static/images/lccn-logo-ce3d56eeedaae618e59e2ec5089e4834.svg&#34;&gt;&lt;/span&gt;
          &lt;div class=&#34;info&#34;&gt;
          &lt;span class=&#34;exturl title&#34; data-url=&#34;aHR0cHM6Ly9sZWV0Y29kZS1jbi5jb20vcHJvYmxlbXMvZGV0ZWN0LWNhcGl0YWw=&#34;&gt;力扣（LeetCode）520.检测大写字符&lt;/span&gt;
          &lt;p class=&#34;desc&#34;&gt;https://leetcode-cn.com/&lt;/p&gt;
          &lt;/div&gt;&lt;/div&gt;&lt;/div&gt;
&lt;h3 id=&#34;题解&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#题解&#34;&gt;#&lt;/a&gt; 题解&lt;/h3&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; java.util.Locale;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;class&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;Solution&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;boolean&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;detectCapitalUse&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(String word)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;     &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (word.length() == &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;true&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;char&lt;/span&gt; c = word.charAt(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (c &amp;lt;= &lt;span class=&#34;string&#34;&gt;&amp;#x27;Z&amp;#x27;&lt;/span&gt; &amp;amp;&amp;amp; c &amp;gt;= &lt;span class=&#34;string&#34;&gt;&amp;#x27;A&amp;#x27;&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;comment&#34;&gt;// 首字符大写&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;keyword&#34;&gt;char&lt;/span&gt; c2 = word.charAt(&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (c2 &amp;lt;= &lt;span class=&#34;string&#34;&gt;&amp;#x27;Z&amp;#x27;&lt;/span&gt; &amp;amp;&amp;amp; c2 &amp;gt;= &lt;span class=&#34;string&#34;&gt;&amp;#x27;A&amp;#x27;&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; word.equals(word.toUpperCase(Locale.ROOT));&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &amp;#125; &lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                String substring = word.substring(&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; substring.equals(substring.toLowerCase(Locale.ROOT));&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125; &lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;comment&#34;&gt;// 首字母小写&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; word.equals(word.toLowerCase(Locale.ROOT));&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&#34;最后&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#最后&#34;&gt;#&lt;/a&gt; 最后&lt;/h2&gt;
&lt;p&gt;期望与你一起遇见更好的自己&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/images/qrcode.jpg&#34; alt=&#34;期望与你一起遇见更好的自己&#34;&gt;&lt;/p&gt;
</content>
        <category term="leetCode" />
        <category term="面经之算法题" />
        <category term="不做也罢的算法题" />
        <updated>2021-11-13T10:18:18.000Z</updated>
    </entry>
    <entry>
        <id>https://fangjiaxiaobai.github.io/2021/11/01/BQ/LeetCode/0575-distribute-candies/</id>
        <title>LC:575.分糖果</title>
        <link rel="alternate" href="https://fangjiaxiaobai.github.io/2021/11/01/BQ/LeetCode/0575-distribute-candies/"/>
        <content type="html">&lt;h2 id=&#34;题目&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#题目&#34;&gt;#&lt;/a&gt; 题目&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;Alice&lt;/code&gt;  有  &lt;code&gt;n&lt;/code&gt;  枚糖，其中第  &lt;code&gt;i&lt;/code&gt;  枚糖的类型为  &lt;code&gt;candyType[i]&lt;/code&gt;  。 &lt;code&gt;Alice&lt;/code&gt;  注意到她的体重正在增长，所以前去拜访了一位医生。&lt;/p&gt;
&lt;p&gt;医生建议  &lt;code&gt;Alice&lt;/code&gt;  要少摄入糖分，只吃掉她所有糖的  &lt;code&gt;n / 2&lt;/code&gt;  即可（ &lt;code&gt;n&lt;/code&gt;  是一个偶数）。 &lt;code&gt;Alice&lt;/code&gt;  非常喜欢这些糖，她想要在遵循医生建议的情况下，尽可能吃到最多不同种类的糖。&lt;/p&gt;
&lt;p&gt;给你一个长度为  &lt;code&gt;n&lt;/code&gt;  的整数数组  &lt;code&gt;candyType&lt;/code&gt;  ，返回：  &lt;code&gt;Alice&lt;/code&gt;  在仅吃掉  &lt;code&gt;n / 2&lt;/code&gt;  枚糖的情况下，可以吃到糖的最多种类数。&lt;/p&gt;
&lt;h2 id=&#34;示例&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#示例&#34;&gt;#&lt;/a&gt; 示例&lt;/h2&gt;
&lt;h3 id=&#34;示例-1&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#示例-1&#34;&gt;#&lt;/a&gt; 示例 1&lt;/h3&gt;
&lt;p&gt;输入：candyType = [1,1,2,2,3,3]&lt;br&gt;
 输出：3&lt;br&gt;
 解释：Alice 只能吃 6 / 2 = 3 枚糖，由于只有 3 种糖，她可以每种吃一枚。&lt;/p&gt;
&lt;h3 id=&#34;示例-2&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#示例-2&#34;&gt;#&lt;/a&gt; 示例 2&lt;/h3&gt;
&lt;p&gt;输入：candyType = [1,1,2,3]&lt;br&gt;
 输出：2&lt;br&gt;
 解释：Alice 只能吃 4 / 2 = 2 枚糖，不管她选择吃的种类是 [1,2]、[1,3] 还是 [2,3]，她只能吃到两种不同类的糖。&lt;/p&gt;
&lt;h3 id=&#34;示例-3&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#示例-3&#34;&gt;#&lt;/a&gt; 示例 3&lt;/h3&gt;
&lt;p&gt;输入：candyType = [6,6,6,6]&lt;br&gt;
 输出：1&lt;br&gt;
 解释：Alice 只能吃 4 / 2 = 2 枚糖，尽管她能吃 2 枚，但只能吃到 1 种糖。&lt;/p&gt;
&lt;h2 id=&#34;提示&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#提示&#34;&gt;#&lt;/a&gt; 提示&lt;/h2&gt;
&lt;p&gt;n == candyType.length&lt;br&gt;
2 &amp;lt;= n &amp;lt;= 104&lt;br&gt;
n 是一个偶数&lt;br&gt;
 - 105 &amp;lt;= candyType [i] &amp;lt;= 105&lt;/p&gt;
&lt;h2 id=&#34;相关题目&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#相关题目&#34;&gt;#&lt;/a&gt; 相关题目&lt;/h2&gt;
&lt;div class=&#34;links&#34;&gt;&lt;div class=&#34;item&#34; title=&#34;力扣（LeetCode）575.分糖果&#34; style=&#34;--block-color:#ffa015;&#34;&gt;&lt;span class=&#34;exturl image&#34; data-url=&#34;aHR0cHM6Ly9sZWV0Y29kZS1jbi5jb20vcHJvYmxlbXMvZGlzdHJpYnV0ZS1jYW5kaWVz&#34; data-background-image=&#34;https://static.leetcode-cn.com/cn-frontendx-assets/production/_next/static/images/lccn-logo-ce3d56eeedaae618e59e2ec5089e4834.svg&#34;&gt;&lt;/span&gt;
          &lt;div class=&#34;info&#34;&gt;
          &lt;span class=&#34;exturl title&#34; data-url=&#34;aHR0cHM6Ly9sZWV0Y29kZS1jbi5jb20vcHJvYmxlbXMvZGlzdHJpYnV0ZS1jYW5kaWVz&#34;&gt;力扣（LeetCode）575.分糖果&lt;/span&gt;
          &lt;p class=&#34;desc&#34;&gt;https://leetcode-cn.com/&lt;/p&gt;
          &lt;/div&gt;&lt;/div&gt;&lt;/div&gt;
&lt;h2 id=&#34;解法&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#解法&#34;&gt;#&lt;/a&gt; 解法&lt;/h2&gt;
&lt;h3 id=&#34;解法一&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#解法一&#34;&gt;#&lt;/a&gt; 解法一&lt;/h3&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;distributeCandies&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(&lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt;[] candyType)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;// 糖的种类&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    Set&amp;lt;Integer&amp;gt; set = Arrays.stream(candyType).boxed().collect(Collectors.toSet());&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;// 比较大小&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; Integer.min(set.size(), candyType.length &amp;gt;&amp;gt; &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&#34;最后&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#最后&#34;&gt;#&lt;/a&gt; 最后&lt;/h2&gt;
&lt;p&gt;期望与你一起遇见更好的自己&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/images/qrcode.jpg&#34; alt=&#34;期望与你一起遇见更好的自己&#34;&gt;&lt;/p&gt;
</content>
        <category term="leetCode" />
        <category term="面经之算法题" />
        <category term="不做也罢的算法题" />
        <updated>2021-11-01T10:18:18.000Z</updated>
    </entry>
</feed>
