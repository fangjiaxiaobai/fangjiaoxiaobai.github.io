{
    "version": "https://jsonfeed.org/version/1",
    "title": "方家小白 • All posts by \"k8s\" tag",
    "description": "和你一起遇见更好的自己",
    "home_page_url": "https://fangjiaxiaobai.github.io",
    "items": [
        {
            "id": "https://fangjiaxiaobai.github.io/2022/07/22/k8s/pit01.incompatible-CNI-versions/",
            "url": "https://fangjiaxiaobai.github.io/2022/07/22/k8s/pit01.incompatible-CNI-versions/",
            "title": "k8s-incompatible CNI versions",
            "date_published": "2022-07-22T10:18:00.000Z",
            "content_html": "<h3 id=\"报错内容\"><a class=\"markdownIt-Anchor\" href=\"#报错内容\">#</a> 报错内容</h3>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Warning  FailedCreatePodSandBox  5m17s kubelet Failed to create pod sandbox: rpc error: code = Unknown desc = failed to setup network <span class=\"keyword\">for</span> sandbox <span class=\"string\">&quot;1ded5da71b38996763e74f28f609d8d8f26a4cc1e4fdd3272312bf3e168e4111&quot;</span>: plugin <span class=\"built_in\">type</span>=<span class=\"string\">&quot;bridge&quot;</span> failed (add): incompatible CNI versions; config is <span class=\"string\">&quot;1.0.0&quot;</span>, plugin supports [<span class=\"string\">&quot;0.1.0&quot;</span> <span class=\"string\">&quot;0.2.0&quot;</span> <span class=\"string\">&quot;0.3.0&quot;</span> <span class=\"string\">&quot;0.3.1&quot;</span> <span class=\"string\">&quot;0.4.0&quot;</span>]</span><br></pre></td></tr></table></figure>\n<h3 id=\"部署的环境\"><a class=\"markdownIt-Anchor\" href=\"#部署的环境\">#</a> 部署的环境</h3>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">centos 8</span><br><span class=\"line\">kubernetes 1.24.3</span><br></pre></td></tr></table></figure>\n<h3 id=\"解决问题\"><a class=\"markdownIt-Anchor\" href=\"#解决问题\">#</a> 解决问题</h3>\n<p>这个问题的主要内容是:  <code>incompatible CNI versions</code> . 当你去网上去搜索解决方案大都是 说 使用  <code>containerd</code>  的版本不对，也就是说，确实是  <code>CNI</code>  的版本是有问题的。</p>\n<p>具体的解决方案在官方网站中是这样说的：</p>\n<p><img data-src=\"/images/k8s/01-01.png\" alt=\"\"></p>\n<p>具体内容可以看这里:<span class=\"exturl\" data-url=\"aHR0cHM6Ly9rdWJlcm5ldGVzLmlvL3poLWNuL2RvY3MvdGFza3MvYWRtaW5pc3Rlci1jbHVzdGVyL21pZ3JhdGluZy1mcm9tLWRvY2tlcnNoaW0vdHJvdWJsZXNob290aW5nLWNuaS1wbHVnaW4tcmVsYXRlZC1lcnJvcnMvI3VwZGF0aW5nLXlvdXItY25pLXBsdWdpbnMtYW5kLWNuaS1jb25maWctZmlsZXM=\">https://kubernetes.io/zh-cn/docs/tasks/administer-cluster/migrating-from-dockershim/troubleshooting-cni-plugin-related-errors/#updating-your-cni-plugins-and-cni-config-files</span></p>\n<p>首先可以查看 当前的  <code>containerd</code>  的版本.</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@k8s-master-01 ~]<span class=\"comment\"># containerd -v</span></span><br><span class=\"line\">containerd github.com/containerd/containerd v1.6.4 212e8b6fa2f44b9c21b2798135fc6fb7c53efc16</span><br></pre></td></tr></table></figure>\n<p>不在  <code>v1.6.0-v1.6.3</code>  中。 文档中说 在  <code>v1.6.4</code>  版本中已经修复了这个问题.</p>\n<p>查看  <code>/etc/cni/net.d/10-containerd-net.conflist</code>  这个文件， cni 版本  <code> &quot;cniVersion&quot;: &quot;1.0.0&quot;,</code> , 也确实是 <code>1.0.0</code></p>\n<p>继续搜索</p>\n<p>在 <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2NvbnRhaW5lcmQvY29udGFpbmVyZC9pc3N1ZXMvNjg3Ng==\">https://github.com/containerd/containerd/issues/6876</span> 中，有一个人遇到了  <code>v1.6.4</code>  版本中出现了  <code>incompatible CNI versions</code>  这个问题。</p>\n<p><img data-src=\"/images/k8s/01-02.jpg\" alt=\"\"></p>\n<p>仔细看他的这个问题，是我遇到的这个问题是一样的  <code>plugins type='bridge'</code> . 而这个  <code>issure</code>  中提到的问题，是当  <code>plugins type = 'loooback'</code> . 这也是上图中  <code>hakman</code>  提到的。</p>\n<p>仔细看  <code>mikebrow</code>  所说的，需要安装一个  <code>1.0.0</code>  版本的  <code>bridge</code> .</p>\n<p>那就在网络中搜索 :  <code>k8s 是安装 bridge</code> ， 在  <code>https://blog.csdn.net/m0_48594855/article/details/107870839</code>  看到 安装 bridge 的方法，他这里是使用 git 仓库 源码编译。其实直接打开 git 仓库  <code>https://github.com/containernetworking/plugins/releases/tag/v1.1.1</code>  下载对应版本即可， 今天是  <code>2022</code>  年 <code>7</code>  月 <code>22</code>  日，我就下载了最新的一版本。</p>\n<p>简单粗暴的  <code>/opt/cni/bin/</code>  下的内容，全部替换掉，然后重启  <code>kubelet</code>  服务就可以了。</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 下载包</span></span><br><span class=\"line\">wget https://github.com/containernetworking/plugins/releases/download/v1.1.1/cni-plugins-linux-amd64-v1.1.1.tgz</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 备份一下驱动</span></span><br><span class=\"line\">mv /opt/cni/bin /opt/cni/bin.bak</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 解压到指定目录</span></span><br><span class=\"line\">tar -zxvf cni-plugins-linux-amd64-v1.1.1.tgz -C /opt/cni/bin </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 重启 kubelet</span></span><br><span class=\"line\">systemctl restart kubelet</span><br></pre></td></tr></table></figure>\n<p>然后再所有的节点上都执行一遍上面的内容，然后就可以了。</p>\n<p>可以通过   <code>kubectl describe pod</code>  查看下是否开始下载镜像了。</p>\n<h3 id=\"问题解决思路\"><a class=\"markdownIt-Anchor\" href=\"#问题解决思路\">#</a> 问题解决思路</h3>\n<ul>\n<li>先看下  <code>contrainerd</code>  版本是否  <code>&gt;=1.6.4</code></li>\n<li>如果  <code>&lt;=1.6.3</code>  那么就需要升级  <code>contrainerd</code>  运行环境.</li>\n<li>如果还有这样的问题，那就是要看下对应的插件类型是否满足版本要求了。</li>\n<li>如果不满足，那就重新安装下对应的插件就行了，比如我的问题中的  <code>bridge</code>  插件。</li>\n</ul>\n<h3 id=\"举一反三\"><a class=\"markdownIt-Anchor\" href=\"#举一反三\">#</a> 举一反三</h3>\n<p>假设有一棵树，那个问题只是这棵树的一片叶子， 这里面还涉及到很多  <code>k8s</code>  的概念性的东西。比如  <code>CNI</code>  网络插件都有什么，每种插件的功能是什么，以及对应的网络驱动是什么，比如  <code>Calico</code>  ,  <code>fannel</code>  ,  <code>bridge</code>  。  <code>CNI</code>  和  <code>containerd</code> ,  <code>cri-o</code>  都是什么关系。所以，要从根儿上去理解这些概念。 废话不多说，下篇文章见。</p>\n<h3 id=\"参考文档\"><a class=\"markdownIt-Anchor\" href=\"#参考文档\">#</a> 参考文档</h3>\n<p>1、<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2NvbnRhaW5lcmQvY29udGFpbmVyZC9pc3N1ZXMvNjg3Ng==\">https://github.com/containerd/containerd/issues/6876</span><br>\n2、<span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ4NTk0ODU1L2FydGljbGUvZGV0YWlscy8xMDc4NzA4Mzk=\">https://blog.csdn.net/m0_48594855/article/details/107870839</span><br>\n3、<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2NvbnRhaW5lcm5ldHdvcmtpbmcvcGx1Z2lucy9yZWxlYXNlcy90YWcvdjEuMS4x\">https://github.com/containernetworking/plugins/releases/tag/v1.1.1</span><br>\n4、<span class=\"exturl\" data-url=\"aHR0cHM6Ly9rdWJlcm5ldGVzLmlvL3poLWNuL2RvY3MvdGFza3MvYWRtaW5pc3Rlci1jbHVzdGVyL21pZ3JhdGluZy1mcm9tLWRvY2tlcnNoaW0vdHJvdWJsZXNob290aW5nLWNuaS1wbHVnaW4tcmVsYXRlZC1lcnJvcnMvI3VwZGF0aW5nLXlvdXItY25pLXBsdWdpbnMtYW5kLWNuaS1jb25maWctZmlsZXM=\">https://kubernetes.io/zh-cn/docs/tasks/administer-cluster/migrating-from-dockershim/troubleshooting-cni-plugin-related-errors/#updating-your-cni-plugins-and-cni-config-files</span></p>\n",
            "tags": [
                "k8s",
                "kubernetes"
            ]
        },
        {
            "id": "https://fangjiaxiaobai.github.io/2022/07/17/k8s/how-to-build/",
            "url": "https://fangjiaxiaobai.github.io/2022/07/17/k8s/how-to-build/",
            "title": "k8s-搭建K8s集群",
            "date_published": "2022-07-17T10:18:00.000Z",
            "content_html": "<p>使用  <code>kubeadm 1.24.3</code>  搭建  <code>k8s</code>  集群</p>\n<h2 id=\"环境准备\"><a class=\"markdownIt-Anchor\" href=\"#环境准备\">#</a> 环境准备</h2>\n<p><code>Centos8</code>  三台.</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">k8s-master-01 192.168.0.10</span><br><span class=\"line\">k8s-node-01   192.168.0.20</span><br><span class=\"line\">k8s-node-02   192.168.0.21</span><br></pre></td></tr></table></figure>\n<p>注意，这三台机器不要做任何配置，尤其不要安装  <code>docker</code> , 因为从 <code>k8s</code>   <code>1.20.x</code>  开始，  <code>kubernetes</code>  弃用了  <code>dockershim</code> , 在  <code>1.20.4</code>  正式移除了  <code>dockershim</code> .</p>\n<blockquote>\n<p>Docker support in the kubelet is now deprecated and will be removed in a future release. The kubelet uses a module called “dockershim” which implements CRI support for Docker and it has seen maintenance issues in the Kubernetes community.</p>\n</blockquote>\n<p>原文地址: <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2t1YmVybmV0ZXMva3ViZXJuZXRlcy9ibG9iL21hc3Rlci9DSEFOR0VMT0cvQ0hBTkdFTE9HLTEuMjAubWQjZGVwcmVjYXRpb24=\">kubernetes 1.20 变更日志</span></p>\n<p>但是  <code>kubernetes</code>  是支持符合为  <code>Kubernetes</code>  创建的容器运行接口  <code>Container Runtime Interface (CRI)</code>  的运行时。  <code>Docker</code>  构建的镜像，将在你的集群的所有运行时中继续工作，一如既往。</p>\n<h3 id=\"设置系统主机名以及host文件的相互解析\"><a class=\"markdownIt-Anchor\" href=\"#设置系统主机名以及host文件的相互解析\">#</a> 设置系统主机名以及 host 文件的相互解析</h3>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hostnamectl set-hostname k8s-master-01</span><br></pre></td></tr></table></figure>\n<h3 id=\"安装依赖包\"><a class=\"markdownIt-Anchor\" href=\"#安装依赖包\">#</a> 安装依赖包</h3>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yum install -y conntrack ipvsadm ipset jq iptables curl sysstat libseccomp wget vim net-tools git</span><br><span class=\"line\"></span><br><span class=\"line\">yum install -y chony <span class=\"comment\"># 配置时间同步</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"关闭防火墙\"><a class=\"markdownIt-Anchor\" href=\"#关闭防火墙\">#</a> 关闭防火墙</h3>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">systemctl stop firewalld &amp;&amp; systemctl <span class=\"built_in\">disable</span> firewalld</span><br></pre></td></tr></table></figure>\n<h3 id=\"关闭selinux\"><a class=\"markdownIt-Anchor\" href=\"#关闭selinux\">#</a> 关闭 <code>SELinux</code></h3>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">swapoff -a &amp;&amp; sed -i <span class=\"string\">&#x27;/ swap / s/^\\(.*\\)$/#\\1/g&#x27;</span> /etc/fstab</span><br><span class=\"line\">setenforce 0 &amp;&amp; sed -i <span class=\"string\">&#x27;s/^SELINUX=.*/SELINUX=disabled/&#x27;</span> /etc/selinux/config</span><br></pre></td></tr></table></figure>\n<h3 id=\"调整内核参数\"><a class=\"markdownIt-Anchor\" href=\"#调整内核参数\">#</a> 调整内核参数</h3>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cat &gt; kubernetes.conf &lt;&lt;<span class=\"string\">EOF</span></span><br><span class=\"line\"><span class=\"string\">net.bridge.bridge-nf-call-iptables=1</span></span><br><span class=\"line\"><span class=\"string\">net.bridge.bridge-nf-call-ip6tables=1</span></span><br><span class=\"line\"><span class=\"string\">net.ipv4.ip_forward=1</span></span><br><span class=\"line\"><span class=\"string\">net.ipv4.tcp_tw_recycle=0</span></span><br><span class=\"line\"><span class=\"string\">vm.swappiness=0 # 禁止使用 swap 空间，只有当系统 OOM 时才允许使用它</span></span><br><span class=\"line\"><span class=\"string\">vm.overcommit</span></span><br><span class=\"line\"><span class=\"string\">_</span></span><br><span class=\"line\"><span class=\"string\">memory=1 # 不检查物理内存是否够用</span></span><br><span class=\"line\"><span class=\"string\">vm.panic_on_oom=0 # 开启 OOM</span></span><br><span class=\"line\"><span class=\"string\">fs.inotify.max_user_instances=8192</span></span><br><span class=\"line\"><span class=\"string\">fs.inotify.max_user_watches=1048576</span></span><br><span class=\"line\"><span class=\"string\">fs.file-max=52706963</span></span><br><span class=\"line\"><span class=\"string\">fs.nr</span></span><br><span class=\"line\"><span class=\"string\">_</span></span><br><span class=\"line\"><span class=\"string\">open=52706963</span></span><br><span class=\"line\"><span class=\"string\">net.ipv6.conf.all.disable_ipv6=1</span></span><br><span class=\"line\"><span class=\"string\">net.netfilter.nf</span></span><br><span class=\"line\"><span class=\"string\">_</span></span><br><span class=\"line\"><span class=\"string\">conntrack</span></span><br><span class=\"line\"><span class=\"string\">_</span></span><br><span class=\"line\"><span class=\"string\">max=2310720</span></span><br><span class=\"line\"><span class=\"string\">EOF</span></span><br><span class=\"line\">cp kubernetes.conf /etc/sysctl.d/kubernetes.conf</span><br><span class=\"line\">sysctl -p /etc/sysctl.d/kubernetes.conf</span><br></pre></td></tr></table></figure>\n<h3 id=\"调整系统时区\"><a class=\"markdownIt-Anchor\" href=\"#调整系统时区\">#</a> 调整系统时区</h3>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 设置系统时区为 中国/上海</span></span><br><span class=\"line\">timedatectl set-timezone Asia/Shanghai</span><br><span class=\"line\"><span class=\"comment\"># 将当前的 UTC 时间写入硬件时钟</span></span><br><span class=\"line\">timedatectl set-local-rtc 0</span><br><span class=\"line\"><span class=\"comment\"># 重启依赖于系统时间的服务</span></span><br><span class=\"line\">systemctl restart rsyslog</span><br><span class=\"line\">systemctl restart crond</span><br></pre></td></tr></table></figure>\n<h3 id=\"关闭系统不需要服务\"><a class=\"markdownIt-Anchor\" href=\"#关闭系统不需要服务\">#</a> 关闭系统不需要服务</h3>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">systemctl stop postfix &amp;&amp; systemctl <span class=\"built_in\">disable</span> postfix</span><br></pre></td></tr></table></figure>\n<h3 id=\"设置-rsyslogd-和-systemd-journald\"><a class=\"markdownIt-Anchor\" href=\"#设置-rsyslogd-和-systemd-journald\">#</a> 设置 rsyslogd 和 systemd journald</h3>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mkdir /var/<span class=\"built_in\">log</span>/journal <span class=\"comment\"># 持久化保存日志的目录</span></span><br><span class=\"line\">mkdir /etc/systemd/journald.conf.d</span><br><span class=\"line\">cat &gt; /etc/systemd/journald.conf.d/99-prophet.conf &lt;&lt;<span class=\"string\">EOF</span></span><br><span class=\"line\"><span class=\"string\">[Journal]</span></span><br><span class=\"line\"><span class=\"string\"># 持久化保存到磁盘</span></span><br><span class=\"line\"><span class=\"string\">Storage=persistent</span></span><br><span class=\"line\"><span class=\"string\"># 压缩历史日志</span></span><br><span class=\"line\"><span class=\"string\">Compress=yes</span></span><br><span class=\"line\"><span class=\"string\">SyncIntervalSec=5m</span></span><br><span class=\"line\"><span class=\"string\">RateLimitInterval=30s</span></span><br><span class=\"line\"><span class=\"string\">RateLimitBurst=1000</span></span><br><span class=\"line\"><span class=\"string\"># 最大占用空间 10G</span></span><br><span class=\"line\"><span class=\"string\">SystemMaxUse=10G</span></span><br><span class=\"line\"><span class=\"string\"># 单日志文件最大 200M</span></span><br><span class=\"line\"><span class=\"string\">SystemMaxFileSize=200M</span></span><br><span class=\"line\"><span class=\"string\"># 日志保存时间 2 周</span></span><br><span class=\"line\"><span class=\"string\">MaxRetentionSec=2week</span></span><br><span class=\"line\"><span class=\"string\"># 不将日志转发到 syslog</span></span><br><span class=\"line\"><span class=\"string\">ForwardToSyslog=no</span></span><br><span class=\"line\"><span class=\"string\">EOF</span></span><br><span class=\"line\">systemctl restart systemd-journald</span><br></pre></td></tr></table></figure>\n<h3 id=\"安装-containerd\"><a class=\"markdownIt-Anchor\" href=\"#安装-containerd\">#</a> 安装  <code>containerd</code></h3>\n<h4 id=\"创建etcmodules-loaddcontainerdconf配置文件\"><a class=\"markdownIt-Anchor\" href=\"#创建etcmodules-loaddcontainerdconf配置文件\">#</a> 创建 <code>/etc/modules-load.d/containerd.conf</code>  配置文件:</h4>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cat &lt;&lt; <span class=\"string\">EOF &gt; /etc/modules-load.d/containerd.conf</span></span><br><span class=\"line\"><span class=\"string\">overlay</span></span><br><span class=\"line\"><span class=\"string\">br_netfilter</span></span><br><span class=\"line\"><span class=\"string\">EOF</span></span><br></pre></td></tr></table></figure>\n<p>执行下面的命令，使其生效</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">modprobe overlay</span><br><span class=\"line\">modprobe br_netfilter</span><br></pre></td></tr></table></figure>\n<p>创建 <code>/etc/sysctl.d/99-kubernetes-cri.conf</code>  配置文件：</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cat &lt;&lt; <span class=\"string\">EOF &gt; /etc/sysctl.d/99-kubernetes-cri.conf</span></span><br><span class=\"line\"><span class=\"string\">net.bridge.bridge-nf-call-ip6tables = 1</span></span><br><span class=\"line\"><span class=\"string\">net.bridge.bridge-nf-call-iptables = 1</span></span><br><span class=\"line\"><span class=\"string\">net.ipv4.ip_forward = 1</span></span><br><span class=\"line\"><span class=\"string\">user.max_user_namespaces=28633</span></span><br><span class=\"line\"><span class=\"string\">EOF</span></span><br></pre></td></tr></table></figure>\n<p>执行以下命令使配置生效:</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sysctl -p /etc/sysctl.d/99-kubernetes-cri.conf</span><br></pre></td></tr></table></figure>\n<h3 id=\"关闭-swap\"><a class=\"markdownIt-Anchor\" href=\"#关闭-swap\">#</a> 关闭  <code>swap</code></h3>\n<p>Kubernetes 1.8 开始要求关闭系统的 Swap，如果不关闭，默认配置下 kubelet 将无法启动。 关闭系统的 Swap 方法如下:</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">swapoff -a</span><br></pre></td></tr></table></figure>\n<p>修改  <code>/etc/fstab</code>  文件，注释掉  <code>SWAP</code>  的自动挂载，使用 <code>free -m</code>  确认 <code>swap</code>  已经关闭。</p>\n<p><code>swappiness</code>  参数调整，修改 <code>/etc/sysctl.d/99-kubernetes-cri.conf</code>  添加下面一行：</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vm.swappiness=0</span><br></pre></td></tr></table></figure>\n<p>执行 <code>sysctl -p /etc/sysctl.d/99-kubernetes-cri.conf</code>  使修改生效。</p>\n<h4 id=\"安装-containerd-2\"><a class=\"markdownIt-Anchor\" href=\"#安装-containerd-2\">#</a> 安装  <code>containerd</code></h4>\n<p>在各个服务器节点上安装容器运行时  <code>Containerd</code>  。</p>\n<p>下载  <code>Containerd</code>  的二进制包:</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wget https://github.com/containerd/containerd/releases/download/v1.6.4/cri-containerd-cni-1.6.4-linux-amd64.tar.gz</span><br><span class=\"line\"></span><br><span class=\"line\">tar -zxvf cri-containerd-cni-1.6.4-linux-amd64.tar.gz -C /</span><br></pre></td></tr></table></figure>\n<p>生成  <code>containerd</code>  的配置文件</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mkdir -p /etc/containerd</span><br><span class=\"line\">containerd config default &gt; /etc/containerd/config.toml</span><br></pre></td></tr></table></figure>\n<p>修改前面生成的配置文件  <code>/etc/containerd/config.toml</code></p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[plugins.<span class=\"string\">&quot;io.containerd.grpc.v1.cri&quot;</span>.containerd.runtimes.runc]</span><br><span class=\"line\">  ...</span><br><span class=\"line\">  [plugins.<span class=\"string\">&quot;io.containerd.grpc.v1.cri&quot;</span>.containerd.runtimes.runc.options]</span><br><span class=\"line\">    SystemdCgroup = <span class=\"literal\">true</span></span><br></pre></td></tr></table></figure>\n<p>再修改 /etc/containerd/config.toml 中的</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[plugins.<span class=\"string\">&quot;io.containerd.grpc.v1.cri&quot;</span>]</span><br><span class=\"line\">  ...</span><br><span class=\"line\">  <span class=\"comment\"># sandbox_image = &quot;k8s.gcr.io/pause:3.6&quot;</span></span><br><span class=\"line\">  sandbox_image = <span class=\"string\">&quot;registry.aliyuncs.com/google_containers/pause:3.7&quot;</span></span><br></pre></td></tr></table></figure>\n<p>配置  <code>containerd</code>  开机启动，并启动  <code>containerd</code></p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">systemctl <span class=\"built_in\">enable</span> containerd --now</span><br></pre></td></tr></table></figure>\n<p>使用 <code>crictl</code>  测试一下，确保可以打印出版本信息并且没有错误信息输出:</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">crictl version</span><br></pre></td></tr></table></figure>\n<p>如下输出:</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Version:  0.1.0</span><br><span class=\"line\">RuntimeName:  containerd</span><br><span class=\"line\">RuntimeVersion:  v1.6.4</span><br><span class=\"line\">RuntimeApiVersion:  v1alpha2</span><br></pre></td></tr></table></figure>\n<h3 id=\"配置服务器支持开启ipvs\"><a class=\"markdownIt-Anchor\" href=\"#配置服务器支持开启ipvs\">#</a> 配置服务器支持开启 ipvs</h3>\n<p>执行下面的脚本</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cat &gt; /etc/sysconfig/modules/ipvs.modules &lt;&lt;<span class=\"string\">EOF</span></span><br><span class=\"line\"><span class=\"string\">#!/bin/bash</span></span><br><span class=\"line\"><span class=\"string\">modprobe -- ip_vs</span></span><br><span class=\"line\"><span class=\"string\">modprobe -- ip_vs_rr</span></span><br><span class=\"line\"><span class=\"string\">modprobe -- ip_vs_wrr</span></span><br><span class=\"line\"><span class=\"string\">modprobe -- ip_vs_sh</span></span><br><span class=\"line\"><span class=\"string\">modprobe -- nf_conntrack</span></span><br><span class=\"line\"><span class=\"string\">EOF</span></span><br><span class=\"line\"></span><br><span class=\"line\">chmod 755 /etc/sysconfig/modules/ipvs.modules &amp;&amp; bash /etc/sysconfig/modules/ipvs.modules &amp;&amp; lsmod | grep -e ip_vs -e nf_conntrack</span><br></pre></td></tr></table></figure>\n<p>上面脚本创建了的 <code>/etc/sysconfig/modules/ipvs.modules</code>  文件，保证在节点重启后能自动加载所需模块。 使用 <code>lsmod | grep -e ip_vs -e nf_conntrack</code>  命令查看是否已经正确加载所需的内核模块。</p>\n<p>接下来，就可以使用  <code>kubeadm</code>  部署  <code>k8s</code>  集群了。</p>\n<h2 id=\"安装k8s集群\"><a class=\"markdownIt-Anchor\" href=\"#安装k8s集群\">#</a> 安装 k8s 集群</h2>\n<p>安装  <code>k8s</code>  集群有很多种方式，这里使用  <code>kubeadm</code>  安装</p>\n<h3 id=\"安装kubeadm\"><a class=\"markdownIt-Anchor\" href=\"#安装kubeadm\">#</a> 安装 kubeadm</h3>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cat &lt;&lt;<span class=\"string\">EOF &gt; /etc/yum.repos.d/kubernetes.repo</span></span><br><span class=\"line\"><span class=\"string\">[kubernetes]</span></span><br><span class=\"line\"><span class=\"string\">name=Kubernetes</span></span><br><span class=\"line\"><span class=\"string\">baseurl=http://mirrors.aliyun.com/kubernetes/yum/repos/kubernetes-el7-x86_64</span></span><br><span class=\"line\"><span class=\"string\">enabled=1</span></span><br><span class=\"line\"><span class=\"string\">gpgcheck=0</span></span><br><span class=\"line\"><span class=\"string\">repo_gpgcheck=0</span></span><br><span class=\"line\"><span class=\"string\">gpgkey=http://mirrors.aliyun.com/kubernetes/yum/doc/yum-key.gpg http://mirrors.aliyun.com/kubernetes/yum/doc/rpm-package-key.gpg</span></span><br><span class=\"line\"><span class=\"string\">EOF</span></span><br><span class=\"line\"></span><br><span class=\"line\">yum makecache</span><br><span class=\"line\"></span><br><span class=\"line\">sudo yum install -y kubelet kubeadm kubectl --disableexcludes=kubernetes</span><br><span class=\"line\"></span><br><span class=\"line\">systemctl <span class=\"built_in\">enable</span> --now kubelet</span><br></pre></td></tr></table></figure>\n<h3 id=\"配置-kubeadm-配置文件\"><a class=\"markdownIt-Anchor\" href=\"#配置-kubeadm-配置文件\">#</a> 配置  <code>kubeadm</code>  配置文件</h3>\n<p>配置  <code>kubeadm</code>  的配置文件.  <code>touch kubeadm-config.yaml</code></p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">apiVersion:</span> <span class=\"string\">kubeadm.k8s.io/v1beta3</span></span><br><span class=\"line\"><span class=\"attr\">kind:</span> <span class=\"string\">InitConfiguration</span></span><br><span class=\"line\"><span class=\"attr\">localAPIEndpoint:</span></span><br><span class=\"line\">  <span class=\"attr\">advertiseAddress:</span> <span class=\"number\">192.168</span><span class=\"number\">.96</span><span class=\"number\">.151</span></span><br><span class=\"line\">  <span class=\"attr\">bindPort:</span> <span class=\"number\">6443</span></span><br><span class=\"line\"><span class=\"attr\">nodeRegistration:</span></span><br><span class=\"line\">  <span class=\"attr\">criSocket:</span> <span class=\"string\">unix:///run/containerd/containerd.sock</span></span><br><span class=\"line\">  <span class=\"attr\">taints:</span></span><br><span class=\"line\">  <span class=\"bullet\">-</span> <span class=\"attr\">effect:</span> <span class=\"string\">PreferNoSchedule</span></span><br><span class=\"line\">    <span class=\"attr\">key:</span> <span class=\"string\">node-role.kubernetes.io/master</span></span><br><span class=\"line\"><span class=\"meta\">---</span></span><br><span class=\"line\"><span class=\"attr\">apiVersion:</span> <span class=\"string\">kubeadm.k8s.io/v1beta2</span></span><br><span class=\"line\"><span class=\"attr\">kind:</span> <span class=\"string\">ClusterConfiguration</span></span><br><span class=\"line\"><span class=\"attr\">kubernetesVersion:</span> <span class=\"string\">v1.24.0</span></span><br><span class=\"line\"><span class=\"attr\">imageRepository:</span> <span class=\"string\">registry.aliyuncs.com/google_containers</span></span><br><span class=\"line\"><span class=\"attr\">networking:</span></span><br><span class=\"line\">  <span class=\"attr\">podSubnet:</span> <span class=\"number\">10.244</span><span class=\"number\">.0</span><span class=\"number\">.0</span><span class=\"string\">/16</span></span><br><span class=\"line\"><span class=\"meta\">---</span></span><br><span class=\"line\"><span class=\"attr\">apiVersion:</span> <span class=\"string\">kubelet.config.k8s.io/v1beta1</span></span><br><span class=\"line\"><span class=\"attr\">kind:</span> <span class=\"string\">KubeletConfiguration</span></span><br><span class=\"line\"><span class=\"attr\">cgroupDriver:</span> <span class=\"string\">systemd</span></span><br><span class=\"line\"><span class=\"attr\">failSwapOn:</span> <span class=\"literal\">false</span></span><br><span class=\"line\"><span class=\"meta\">---</span></span><br><span class=\"line\"><span class=\"attr\">apiVersion:</span> <span class=\"string\">kubeproxy.config.k8s.io/v1alpha1</span></span><br><span class=\"line\"><span class=\"attr\">kind:</span> <span class=\"string\">KubeProxyConfiguration</span></span><br><span class=\"line\"><span class=\"attr\">mode:</span> <span class=\"string\">ipvs</span></span><br></pre></td></tr></table></figure>\n<p>这里定制了 <code>imageRepository</code>  为阿里云的 <code>registry</code> ，避免因 gcr 被墙，无法直接拉取镜像。 <code>criSocket</code>  设置了容器运行时为 <code>containerd</code> 。 同时设置 <code>kubelet</code>  的 <code>cgroupDriver</code>  为 <code>systemd</code> ，设置 <code>kube-proxy</code>  代理模式为 <code>ipvs</code> 。</p>\n<p>可以通过  <code>kubeadm config print init-defaults --component-configs KubeletConfiguration</code>  可以打印集群初始化默认的使用的配置.</p>\n<p>在开始初始化集群之前可以使用 <code>kubeadm config images pull --config kubeadm-config.yaml</code>  预先在各个服务器节点上拉取所 <code>k8s</code>  需要的容器镜像。</p>\n<h3 id=\"初始化-k8s-master节点\"><a class=\"markdownIt-Anchor\" href=\"#初始化-k8s-master节点\">#</a> 初始化  <code>k8s</code>   <code>master</code>  节点</h3>\n<p>在  <code>master</code>  节点上执行  <code>kubeadm init --config kubeadm-config.yaml</code> ,</p>\n<p>看到最后有打印：  <code>Your Kubernetes control-plane has initialized successfully!</code></p>\n<p>就说明执行成功了。</p>\n<p>然后还有提示:</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">To start using your cluster, you need to run the following as a regular user:</span><br><span class=\"line\"></span><br><span class=\"line\">  mkdir -p <span class=\"variable\">$HOME</span>/.kube</span><br><span class=\"line\">  sudo cp -i /etc/kubernetes/admin.conf <span class=\"variable\">$HOME</span>/.kube/config</span><br><span class=\"line\">  sudo chown $(id -u):$(id -g) <span class=\"variable\">$HOME</span>/.kube/config</span><br><span class=\"line\"></span><br><span class=\"line\">Alternatively, <span class=\"keyword\">if</span> you are the root user, you can run:</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"built_in\">export</span> KUBECONFIG=/etc/kubernetes/admin.conf</span><br><span class=\"line\"></span><br><span class=\"line\">You should now deploy a pod network to the cluster.</span><br><span class=\"line\">Run <span class=\"string\">&quot;kubectl apply -f [podnetwork].yaml&quot;</span> with one of the options listed at:</span><br><span class=\"line\">  https://kubernetes.io/docs/concepts/cluster-administration/addons/</span><br><span class=\"line\"></span><br><span class=\"line\">Then you can join any number of worker nodes by running the following on each as root:</span><br><span class=\"line\"></span><br><span class=\"line\">kubeadm join 192.168.0.10:6443 --token e0nvot.l8sgzcgl07d5baq6 \\</span><br><span class=\"line\">\t--discovery-token-ca-cert-hash sha256:d07d9a5b919c23177881134e3ccf90e26fcb173133b8f6172cbf3d74f3c6a75d</span><br></pre></td></tr></table></figure>\n<p>所以，我们按照提示执行。</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mkdir -p <span class=\"variable\">$HOME</span>/.kube</span><br><span class=\"line\">sudo cp -i /etc/kubernetes/admin.conf <span class=\"variable\">$HOME</span>/.kube/config</span><br><span class=\"line\">sudo chown $(id -u):$(id -g) <span class=\"variable\">$HOME</span>/.kube/config</span><br></pre></td></tr></table></figure>\n<p>然后再 两台 <code>node</code>  节点上执行 如下命令来加入到集群中。</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">kubeadm join 192.168.0.10:6443 --token e0nvot.l8sgzcgl07d5baq6 \\</span><br><span class=\"line\">\t--discovery-token-ca-cert-hash sha256:d07d9a5b919c23177881134e3ccf90e26fcb173133b8f6172cbf3d74f3c6a75d</span><br></pre></td></tr></table></figure>\n<p>查看一下集群状态，确认个组件都处于 <code>healthy</code>  状态，是否有错误:</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">kubectl get cs</span><br><span class=\"line\">Warning: v1 ComponentStatus is deprecated <span class=\"keyword\">in</span> v1.19+</span><br><span class=\"line\">NAME                 STATUS    MESSAGE                         ERROR</span><br><span class=\"line\">scheduler            Healthy   ok</span><br><span class=\"line\">controller-manager   Healthy   ok</span><br><span class=\"line\">etcd-0               Healthy   &#123;<span class=\"string\">&quot;health&quot;</span>:<span class=\"string\">&quot;true&quot;</span>,<span class=\"string\">&quot;reason&quot;</span>:<span class=\"string\">&quot;&quot;</span>&#125;</span><br></pre></td></tr></table></figure>\n<p>集群初始化如果遇到问题，可以使用 kubeadm reset 命令进行清理.</p>\n<p>这样 <code>k8s</code>  集群就部署完成了。</p>\n<h2 id=\"最后\"><a class=\"markdownIt-Anchor\" href=\"#最后\">#</a> 最后</h2>\n<p>希望和你一起遇见更好的自己</p>\n<p><img data-src=\"/images/ml/qrcode.jpg\" alt=\"qrcode\"></p>\n",
            "tags": [
                "k8s",
                "kubernetes"
            ]
        }
    ]
}