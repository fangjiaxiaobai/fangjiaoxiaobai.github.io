{
    "version": "https://jsonfeed.org/version/1",
    "title": "方家小白 • All posts by \"k8s\" tag",
    "description": "和你一起遇见更好的自己",
    "home_page_url": "https://fangjiaxiaobai.github.io",
    "items": [
        {
            "id": "https://fangjiaxiaobai.github.io/2022/09/19/k8s/seris100-kuboard/",
            "url": "https://fangjiaxiaobai.github.io/2022/09/19/k8s/seris100-kuboard/",
            "title": "k8s 监控神器 kuboard",
            "date_published": "2022-09-19T10:18:00.000Z",
            "content_html": "<p><code>Kubernetes</code>  容器编排已越来越被大家关注，然而学习  <code>Kubernetes</code>  的门槛却依然很高，主要体现在这几个方面：</p>\n<ul>\n<li>集群的安装复杂</li>\n<li><code>Kubernetes</code>  相较于容器，引入了许多新的概念</li>\n<li>需要手工编写  <code>YAML</code>  文件</li>\n<li>没有好的参考案例可以遵循</li>\n</ul>\n<p>今天给大家介绍的这款工具  <code>Kuboard</code> ，是一款免费的  <code>Kubernetes</code>  图形化管理工具， <code>Kuboard</code>  力图帮助用户快速在  <code>Kubernetes</code>  上落地微服务。为了达到此目标， <code>Kuboard</code>  提供了针对上述问题的解决办法：</p>\n<p><code>Kuboard</code>  提供  <code>Kubernetes</code>  免费安装文档、免费在线答疑，每天约有  <code>200</code>  位网友参照  <code>Kuboard</code>  提供的文档进行 K8S 集群安装。<br>\n <code>Kuboard</code>  提供  <code>Kubernetes</code>  免费中文教程、用户无需付费购买视频教程或参加线下培训班，就可参照  <code>Kuboard</code>  提供的免费教程完成  <code>K8S</code>  的学习，更有  <code>QQ</code>  社群可以和网友互相讨论，共同进步。<br>\n <code>Kuboard</code>  是  <code>Kubernetes</code>  的一款图形化管理工具，使用 Kuboard，用户无需编写  <code>YAML</code>  文件，就可以完成应用程序的部署和管理。<br>\n <code>Kuboard</code>  提供  <code>Spring Cloud</code>  等微服务参考架构在  <code>K8S</code>  上的详细部署文档和步骤，是  <code>Spring Cloud</code>  用户将自己的应用迁移到  <code>K8S</code>  部署环境的非常好的参考资料。<br>\n <code>Kuboard</code>  是一款专为  <code>Kubernetes</code>  设计的免费管理界面，兼容  <code>Kubernetes</code>  版本  <code>1.13</code>  及以上。 <code>Kuboard</code>  每周发布一个  <code>beta</code>  版本，最长每月发布一个正式版本，经过两年的不断迭代和优化，已经具备多集群管理、权限管理、监控套件、日志套件等丰富的功能，并且有  <code>1000+</code>  的企业将  <code>Kuboard</code>  应用于其生产环境。 <code>Kuboard</code>  自  <code>2019年8月</code> 发布第一个版本以来，得到了众多用户的认可，目前已经获得了  <code>10000+ GitHub Star</code></p>\n<h2 id=\"安装\"><a class=\"markdownIt-Anchor\" href=\"#安装\">#</a> 安装</h2>\n<h3 id=\"给-master-节点添加标签\"><a class=\"markdownIt-Anchor\" href=\"#给-master-节点添加标签\">#</a> 给  <code>master</code>  节点添加标签.</h3>\n<p>首先查看一下  <code>master</code>  节点是否有  <code>&quot;k8s.kuboard.cn/role=etcd&quot;</code>  标签:</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">kubectl get nodes --show-labels=true</span><br></pre></td></tr></table></figure>\n<p>如果有则进行下一步.<br>\n 如果没有，添加标签:</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">kubectl label nodes k8s-master-01 k8s.kuboard.cn/role=etcd</span><br></pre></td></tr></table></figure>\n<p>其中 将  <code>k8s-master-01</code>  替换成你的 <code>master</code>  节点。</p>\n<h3 id=\"安装-kuboard\"><a class=\"markdownIt-Anchor\" href=\"#安装-kuboard\">#</a> 安装 kuboard.</h3>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">kubectl create -f https://addons.kuboard.cn/kuboard/kuboard-v3.yaml</span><br></pre></td></tr></table></figure>\n<p>然后查看启动情况</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@k8s-master-01 yamls]# kubectl get pod -n kuboard</span><br><span class=\"line\">NAME                               READY   STATUS    RESTARTS      AGE</span><br><span class=\"line\">kuboard-agent-2-8644cd44c9-wdq5h   1/1     Running   2 (21m ago)   22m</span><br><span class=\"line\">kuboard-agent-8467cc9799-2n4wl     1/1     Running   0             9m5s</span><br><span class=\"line\">kuboard-agent-8467cc9799-p9qb6     1/1     Running   2 (21m ago)   22m</span><br><span class=\"line\">kuboard-etcd-pmdxq                 1/1     Running   0             22m</span><br><span class=\"line\">kuboard-v3-84f9bf8bfc-8gt5z        1/1     Running   0             22m</span><br></pre></td></tr></table></figure>\n<p>都启动成功之后。</p>\n<p>通过浏览器访问  <code>&lt;MasterIp&gt;:30080</code>  即可。</p>\n<p><img data-src=\"/mages/k8s/10-01.png\" alt=\"\"></p>\n<h2 id=\"页面操作\"><a class=\"markdownIt-Anchor\" href=\"#页面操作\">#</a> 页面操作</h2>\n<p><code>Kuboard</code>  是一款专为  <code>Kubernetes</code>  设计的免费管理界面，兼容  <code>Kubernetes</code>  版本  <code>1.13</code>  及以上。  <code>Kuboard</code>  已经具备多集群管理、权限管理、监控套件、日志套件等丰富的功能.</p>\n<h3 id=\"多集群管理\"><a class=\"markdownIt-Anchor\" href=\"#多集群管理\">#</a> 多集群管理</h3>\n<p>管理员可以把 不同的 <code>Kubernetes</code>  集群添加同一个 <code>Kuboard</code>  中， 并且可以分配不同的权限进行控制，将不同集群 / 名称空间的权限分配给指定的用户或用户组。</p>\n<p><img data-src=\"/mages/k8s/10-02.png\" alt=\"\"></p>\n<h3 id=\"微服务分层展示\"><a class=\"markdownIt-Anchor\" href=\"#微服务分层展示\">#</a> 微服务分层展示</h3>\n<p>在  <code>Kuboard</code>  的名称空间概要页中，以经典的微服务分层方式将工作负载划分到不同的分层，更加直观地展示微服务架构的结构，并且可以为每一个名称空间自定义名称空间布局。</p>\n<p><img data-src=\"/mages/k8s/10-03.png\" alt=\"\"></p>\n<p>进入命名空间之后，可以查看各种资源信息。还支持各种常用操作。</p>\n<p><img data-src=\"/mages/k8s/10-04.png\" alt=\"\"></p>\n<h2 id=\"附录-kuboard-v3安装文件\"><a class=\"markdownIt-Anchor\" href=\"#附录-kuboard-v3安装文件\">#</a> 附录 - kuboard-v3 安装文件</h2>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br><span class=\"line\">174</span><br><span class=\"line\">175</span><br><span class=\"line\">176</span><br><span class=\"line\">177</span><br><span class=\"line\">178</span><br><span class=\"line\">179</span><br><span class=\"line\">180</span><br><span class=\"line\">181</span><br><span class=\"line\">182</span><br><span class=\"line\">183</span><br><span class=\"line\">184</span><br><span class=\"line\">185</span><br><span class=\"line\">186</span><br><span class=\"line\">187</span><br><span class=\"line\">188</span><br><span class=\"line\">189</span><br><span class=\"line\">190</span><br><span class=\"line\">191</span><br><span class=\"line\">192</span><br><span class=\"line\">193</span><br><span class=\"line\">194</span><br><span class=\"line\">195</span><br><span class=\"line\">196</span><br><span class=\"line\">197</span><br><span class=\"line\">198</span><br><span class=\"line\">199</span><br><span class=\"line\">200</span><br><span class=\"line\">201</span><br><span class=\"line\">202</span><br><span class=\"line\">203</span><br><span class=\"line\">204</span><br><span class=\"line\">205</span><br><span class=\"line\">206</span><br><span class=\"line\">207</span><br><span class=\"line\">208</span><br><span class=\"line\">209</span><br><span class=\"line\">210</span><br><span class=\"line\">211</span><br><span class=\"line\">212</span><br><span class=\"line\">213</span><br><span class=\"line\">214</span><br><span class=\"line\">215</span><br><span class=\"line\">216</span><br><span class=\"line\">217</span><br><span class=\"line\">218</span><br><span class=\"line\">219</span><br><span class=\"line\">220</span><br><span class=\"line\">221</span><br><span class=\"line\">222</span><br><span class=\"line\">223</span><br><span class=\"line\">224</span><br><span class=\"line\">225</span><br><span class=\"line\">226</span><br><span class=\"line\">227</span><br><span class=\"line\">228</span><br><span class=\"line\">229</span><br><span class=\"line\">230</span><br><span class=\"line\">231</span><br><span class=\"line\">232</span><br><span class=\"line\">233</span><br><span class=\"line\">234</span><br><span class=\"line\">235</span><br><span class=\"line\">236</span><br><span class=\"line\">237</span><br><span class=\"line\">238</span><br><span class=\"line\">239</span><br><span class=\"line\">240</span><br><span class=\"line\">241</span><br><span class=\"line\">242</span><br><span class=\"line\">243</span><br><span class=\"line\">244</span><br><span class=\"line\">245</span><br><span class=\"line\">246</span><br><span class=\"line\">247</span><br><span class=\"line\">248</span><br><span class=\"line\">249</span><br><span class=\"line\">250</span><br><span class=\"line\">251</span><br><span class=\"line\">252</span><br><span class=\"line\">253</span><br><span class=\"line\">254</span><br><span class=\"line\">255</span><br><span class=\"line\">256</span><br><span class=\"line\">257</span><br><span class=\"line\">258</span><br><span class=\"line\">259</span><br><span class=\"line\">260</span><br><span class=\"line\">261</span><br><span class=\"line\">262</span><br><span class=\"line\">263</span><br><span class=\"line\">264</span><br><span class=\"line\">265</span><br><span class=\"line\">266</span><br><span class=\"line\">267</span><br><span class=\"line\">268</span><br><span class=\"line\">269</span><br><span class=\"line\">270</span><br><span class=\"line\">271</span><br><span class=\"line\">272</span><br><span class=\"line\">273</span><br><span class=\"line\">274</span><br><span class=\"line\">275</span><br><span class=\"line\">276</span><br><span class=\"line\">277</span><br><span class=\"line\">278</span><br><span class=\"line\">279</span><br><span class=\"line\">280</span><br><span class=\"line\">281</span><br><span class=\"line\">282</span><br><span class=\"line\">283</span><br><span class=\"line\">284</span><br><span class=\"line\">285</span><br><span class=\"line\">286</span><br><span class=\"line\">287</span><br><span class=\"line\">288</span><br><span class=\"line\">289</span><br><span class=\"line\">290</span><br><span class=\"line\">291</span><br><span class=\"line\">292</span><br><span class=\"line\">293</span><br><span class=\"line\">294</span><br><span class=\"line\">295</span><br><span class=\"line\">296</span><br><span class=\"line\">297</span><br><span class=\"line\">298</span><br><span class=\"line\">299</span><br><span class=\"line\">300</span><br><span class=\"line\">301</span><br><span class=\"line\">302</span><br><span class=\"line\">303</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">---</span></span><br><span class=\"line\"><span class=\"attr\">apiVersion:</span> <span class=\"string\">v1</span></span><br><span class=\"line\"><span class=\"attr\">kind:</span> <span class=\"string\">Namespace</span></span><br><span class=\"line\"><span class=\"attr\">metadata:</span></span><br><span class=\"line\">  <span class=\"attr\">name:</span> <span class=\"string\">kuboard</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">---</span></span><br><span class=\"line\"><span class=\"attr\">apiVersion:</span> <span class=\"string\">v1</span></span><br><span class=\"line\"><span class=\"attr\">kind:</span> <span class=\"string\">ConfigMap</span></span><br><span class=\"line\"><span class=\"attr\">metadata:</span></span><br><span class=\"line\">  <span class=\"attr\">name:</span> <span class=\"string\">kuboard-v3-config</span></span><br><span class=\"line\">  <span class=\"attr\">namespace:</span> <span class=\"string\">kuboard</span></span><br><span class=\"line\"><span class=\"attr\">data:</span></span><br><span class=\"line\">  <span class=\"comment\"># 关于如下参数的解释，请参考文档 https://kuboard.cn/install/v3/install-built-in.html</span></span><br><span class=\"line\">  <span class=\"comment\"># [common]</span></span><br><span class=\"line\">  <span class=\"attr\">KUBOARD_SERVER_NODE_PORT:</span> <span class=\"string\">&#x27;30080&#x27;</span></span><br><span class=\"line\">  <span class=\"attr\">KUBOARD_AGENT_SERVER_UDP_PORT:</span> <span class=\"string\">&#x27;30081&#x27;</span></span><br><span class=\"line\">  <span class=\"attr\">KUBOARD_AGENT_SERVER_TCP_PORT:</span> <span class=\"string\">&#x27;30081&#x27;</span></span><br><span class=\"line\">  <span class=\"attr\">KUBOARD_SERVER_LOGRUS_LEVEL:</span> <span class=\"string\">info</span>  <span class=\"comment\"># error / debug / trace</span></span><br><span class=\"line\">  <span class=\"comment\"># KUBOARD_AGENT_KEY 是 Agent 与 Kuboard 通信时的密钥，请修改为一个任意的包含字母、数字的32位字符串，此密钥变更后，需要删除 Kuboard Agent 重新导入。</span></span><br><span class=\"line\">  <span class=\"attr\">KUBOARD_AGENT_KEY:</span> <span class=\"string\">32b7d6572c6255211b4eec9009e4a816</span></span><br><span class=\"line\">  <span class=\"attr\">KUBOARD_AGENT_IMAG:</span> <span class=\"string\">eipwork/kuboard-agent</span></span><br><span class=\"line\">  <span class=\"attr\">KUBOARD_QUESTDB_IMAGE:</span> <span class=\"string\">questdb/questdb:6.0.5</span></span><br><span class=\"line\">  <span class=\"attr\">KUBOARD_DISABLE_AUDIT:</span> <span class=\"string\">&#x27;false&#x27;</span> <span class=\"comment\"># 如果要禁用 Kuboard 审计功能，将此参数的值设置为 &#x27;true&#x27;，必须带引号。</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\"># 关于如下参数的解释，请参考文档 https://kuboard.cn/install/v3/install-gitlab.html</span></span><br><span class=\"line\">  <span class=\"comment\"># [gitlab login]</span></span><br><span class=\"line\">  <span class=\"comment\"># KUBOARD_LOGIN_TYPE: &quot;gitlab&quot;</span></span><br><span class=\"line\">  <span class=\"comment\"># KUBOARD_ROOT_USER: &quot;your-user-name-in-gitlab&quot;</span></span><br><span class=\"line\">  <span class=\"comment\"># GITLAB_BASE_URL: &quot;http://gitlab.mycompany.com&quot;</span></span><br><span class=\"line\">  <span class=\"comment\"># GITLAB_APPLICATION_ID: &quot;7c10882aa46810a0402d17c66103894ac5e43d6130b81c17f7f2d8ae182040b5&quot;</span></span><br><span class=\"line\">  <span class=\"comment\"># GITLAB_CLIENT_SECRET: &quot;77c149bd3a4b6870bffa1a1afaf37cba28a1817f4cf518699065f5a8fe958889&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\"># 关于如下参数的解释，请参考文档 https://kuboard.cn/install/v3/install-github.html</span></span><br><span class=\"line\">  <span class=\"comment\"># [github login]</span></span><br><span class=\"line\">  <span class=\"comment\"># KUBOARD_LOGIN_TYPE: &quot;github&quot;</span></span><br><span class=\"line\">  <span class=\"comment\"># KUBOARD_ROOT_USER: &quot;your-user-name-in-github&quot;</span></span><br><span class=\"line\">  <span class=\"comment\"># GITHUB_CLIENT_ID: &quot;17577d45e4de7dad88e0&quot;</span></span><br><span class=\"line\">  <span class=\"comment\"># GITHUB_CLIENT_SECRET: &quot;ff738553a8c7e9ad39569c8d02c1d85ec19115a7&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\"># 关于如下参数的解释，请参考文档 https://kuboard.cn/install/v3/install-ldap.html</span></span><br><span class=\"line\">  <span class=\"comment\"># [ldap login]</span></span><br><span class=\"line\">  <span class=\"comment\"># KUBOARD_LOGIN_TYPE: &quot;ldap&quot;</span></span><br><span class=\"line\">  <span class=\"comment\"># KUBOARD_ROOT_USER: &quot;your-user-name-in-ldap&quot;</span></span><br><span class=\"line\">  <span class=\"comment\"># LDAP_HOST: &quot;ldap-ip-address:389&quot;</span></span><br><span class=\"line\">  <span class=\"comment\"># LDAP_BIND_DN: &quot;cn=admin,dc=example,dc=org&quot;</span></span><br><span class=\"line\">  <span class=\"comment\"># LDAP_BIND_PASSWORD: &quot;admin&quot;</span></span><br><span class=\"line\">  <span class=\"comment\"># LDAP_BASE_DN: &quot;dc=example,dc=org&quot;</span></span><br><span class=\"line\">  <span class=\"comment\"># LDAP_FILTER: &quot;(objectClass=posixAccount)&quot;</span></span><br><span class=\"line\">  <span class=\"comment\"># LDAP_ID_ATTRIBUTE: &quot;uid&quot;</span></span><br><span class=\"line\">  <span class=\"comment\"># LDAP_USER_NAME_ATTRIBUTE: &quot;uid&quot;</span></span><br><span class=\"line\">  <span class=\"comment\"># LDAP_EMAIL_ATTRIBUTE: &quot;mail&quot;</span></span><br><span class=\"line\">  <span class=\"comment\"># LDAP_DISPLAY_NAME_ATTRIBUTE: &quot;cn&quot;</span></span><br><span class=\"line\">  <span class=\"comment\"># LDAP_GROUP_SEARCH_BASE_DN: &quot;dc=example,dc=org&quot;</span></span><br><span class=\"line\">  <span class=\"comment\"># LDAP_GROUP_SEARCH_FILTER: &quot;(objectClass=posixGroup)&quot;</span></span><br><span class=\"line\">  <span class=\"comment\"># LDAP_USER_MACHER_USER_ATTRIBUTE: &quot;gidNumber&quot;</span></span><br><span class=\"line\">  <span class=\"comment\"># LDAP_USER_MACHER_GROUP_ATTRIBUTE: &quot;gidNumber&quot;</span></span><br><span class=\"line\">  <span class=\"comment\"># LDAP_GROUP_NAME_ATTRIBUTE: &quot;cn&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">---</span></span><br><span class=\"line\"><span class=\"attr\">apiVersion:</span> <span class=\"string\">v1</span></span><br><span class=\"line\"><span class=\"attr\">kind:</span> <span class=\"string\">ServiceAccount</span></span><br><span class=\"line\"><span class=\"attr\">metadata:</span></span><br><span class=\"line\">  <span class=\"attr\">name:</span> <span class=\"string\">kuboard-boostrap</span></span><br><span class=\"line\">  <span class=\"attr\">namespace:</span> <span class=\"string\">kuboard</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">---</span></span><br><span class=\"line\"><span class=\"attr\">apiVersion:</span> <span class=\"string\">rbac.authorization.k8s.io/v1</span></span><br><span class=\"line\"><span class=\"attr\">kind:</span> <span class=\"string\">ClusterRoleBinding</span></span><br><span class=\"line\"><span class=\"attr\">metadata:</span></span><br><span class=\"line\">  <span class=\"attr\">name:</span> <span class=\"string\">kuboard-boostrap-crb</span></span><br><span class=\"line\"><span class=\"attr\">roleRef:</span></span><br><span class=\"line\">  <span class=\"attr\">apiGroup:</span> <span class=\"string\">rbac.authorization.k8s.io</span></span><br><span class=\"line\">  <span class=\"attr\">kind:</span> <span class=\"string\">ClusterRole</span></span><br><span class=\"line\">  <span class=\"attr\">name:</span> <span class=\"string\">cluster-admin</span></span><br><span class=\"line\"><span class=\"attr\">subjects:</span></span><br><span class=\"line\"><span class=\"bullet\">-</span> <span class=\"attr\">kind:</span> <span class=\"string\">ServiceAccount</span></span><br><span class=\"line\">  <span class=\"attr\">name:</span> <span class=\"string\">kuboard-boostrap</span></span><br><span class=\"line\">  <span class=\"attr\">namespace:</span> <span class=\"string\">kuboard</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">---</span></span><br><span class=\"line\"><span class=\"attr\">apiVersion:</span> <span class=\"string\">apps/v1</span></span><br><span class=\"line\"><span class=\"attr\">kind:</span> <span class=\"string\">DaemonSet</span></span><br><span class=\"line\"><span class=\"attr\">metadata:</span></span><br><span class=\"line\">  <span class=\"attr\">labels:</span></span><br><span class=\"line\">    <span class=\"attr\">k8s.kuboard.cn/name:</span> <span class=\"string\">kuboard-etcd</span></span><br><span class=\"line\">  <span class=\"attr\">name:</span> <span class=\"string\">kuboard-etcd</span></span><br><span class=\"line\">  <span class=\"attr\">namespace:</span> <span class=\"string\">kuboard</span></span><br><span class=\"line\"><span class=\"attr\">spec:</span></span><br><span class=\"line\">  <span class=\"attr\">revisionHistoryLimit:</span> <span class=\"number\">10</span></span><br><span class=\"line\">  <span class=\"attr\">selector:</span></span><br><span class=\"line\">    <span class=\"attr\">matchLabels:</span></span><br><span class=\"line\">      <span class=\"attr\">k8s.kuboard.cn/name:</span> <span class=\"string\">kuboard-etcd</span></span><br><span class=\"line\">  <span class=\"attr\">template:</span></span><br><span class=\"line\">    <span class=\"attr\">metadata:</span></span><br><span class=\"line\">      <span class=\"attr\">labels:</span></span><br><span class=\"line\">        <span class=\"attr\">k8s.kuboard.cn/name:</span> <span class=\"string\">kuboard-etcd</span></span><br><span class=\"line\">    <span class=\"attr\">spec:</span></span><br><span class=\"line\">      <span class=\"attr\">affinity:</span></span><br><span class=\"line\">        <span class=\"attr\">nodeAffinity:</span></span><br><span class=\"line\">          <span class=\"attr\">requiredDuringSchedulingIgnoredDuringExecution:</span></span><br><span class=\"line\">            <span class=\"attr\">nodeSelectorTerms:</span></span><br><span class=\"line\">              <span class=\"bullet\">-</span> <span class=\"attr\">matchExpressions:</span></span><br><span class=\"line\">                  <span class=\"bullet\">-</span> <span class=\"attr\">key:</span> <span class=\"string\">node-role.kubernetes.io/master</span></span><br><span class=\"line\">                    <span class=\"attr\">operator:</span> <span class=\"string\">Exists</span></span><br><span class=\"line\">              <span class=\"bullet\">-</span> <span class=\"attr\">matchExpressions:</span></span><br><span class=\"line\">                  <span class=\"bullet\">-</span> <span class=\"attr\">key:</span> <span class=\"string\">node-role.kubernetes.io/control-plane</span></span><br><span class=\"line\">                    <span class=\"attr\">operator:</span> <span class=\"string\">Exists</span></span><br><span class=\"line\">              <span class=\"bullet\">-</span> <span class=\"attr\">matchExpressions:</span></span><br><span class=\"line\">                  <span class=\"bullet\">-</span> <span class=\"attr\">key:</span> <span class=\"string\">k8s.kuboard.cn/role</span></span><br><span class=\"line\">                    <span class=\"attr\">operator:</span> <span class=\"string\">In</span></span><br><span class=\"line\">                    <span class=\"attr\">values:</span></span><br><span class=\"line\">                      <span class=\"bullet\">-</span> <span class=\"string\">etcd</span></span><br><span class=\"line\">      <span class=\"attr\">containers:</span></span><br><span class=\"line\">        <span class=\"bullet\">-</span> <span class=\"attr\">env:</span></span><br><span class=\"line\">            <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">HOSTNAME</span></span><br><span class=\"line\">              <span class=\"attr\">valueFrom:</span></span><br><span class=\"line\">                <span class=\"attr\">fieldRef:</span></span><br><span class=\"line\">                  <span class=\"attr\">apiVersion:</span> <span class=\"string\">v1</span></span><br><span class=\"line\">                  <span class=\"attr\">fieldPath:</span> <span class=\"string\">spec.nodeName</span></span><br><span class=\"line\">            <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">HOSTIP</span></span><br><span class=\"line\">              <span class=\"attr\">valueFrom:</span></span><br><span class=\"line\">                <span class=\"attr\">fieldRef:</span></span><br><span class=\"line\">                  <span class=\"attr\">apiVersion:</span> <span class=\"string\">v1</span></span><br><span class=\"line\">                  <span class=\"attr\">fieldPath:</span> <span class=\"string\">status.hostIP</span></span><br><span class=\"line\">          <span class=\"attr\">image:</span> <span class=\"string\">&#x27;eipwork/etcd-host:3.4.16-2&#x27;</span></span><br><span class=\"line\">          <span class=\"attr\">imagePullPolicy:</span> <span class=\"string\">Always</span></span><br><span class=\"line\">          <span class=\"attr\">name:</span> <span class=\"string\">etcd</span></span><br><span class=\"line\">          <span class=\"attr\">ports:</span></span><br><span class=\"line\">            <span class=\"bullet\">-</span> <span class=\"attr\">containerPort:</span> <span class=\"number\">2381</span></span><br><span class=\"line\">              <span class=\"attr\">hostPort:</span> <span class=\"number\">2381</span></span><br><span class=\"line\">              <span class=\"attr\">name:</span> <span class=\"string\">server</span></span><br><span class=\"line\">              <span class=\"attr\">protocol:</span> <span class=\"string\">TCP</span></span><br><span class=\"line\">            <span class=\"bullet\">-</span> <span class=\"attr\">containerPort:</span> <span class=\"number\">2382</span></span><br><span class=\"line\">              <span class=\"attr\">hostPort:</span> <span class=\"number\">2382</span></span><br><span class=\"line\">              <span class=\"attr\">name:</span> <span class=\"string\">peer</span></span><br><span class=\"line\">              <span class=\"attr\">protocol:</span> <span class=\"string\">TCP</span></span><br><span class=\"line\">          <span class=\"attr\">livenessProbe:</span></span><br><span class=\"line\">            <span class=\"attr\">failureThreshold:</span> <span class=\"number\">3</span></span><br><span class=\"line\">            <span class=\"attr\">httpGet:</span></span><br><span class=\"line\">              <span class=\"attr\">path:</span> <span class=\"string\">/health</span></span><br><span class=\"line\">              <span class=\"attr\">port:</span> <span class=\"number\">2381</span></span><br><span class=\"line\">              <span class=\"attr\">scheme:</span> <span class=\"string\">HTTP</span></span><br><span class=\"line\">            <span class=\"attr\">initialDelaySeconds:</span> <span class=\"number\">30</span></span><br><span class=\"line\">            <span class=\"attr\">periodSeconds:</span> <span class=\"number\">10</span></span><br><span class=\"line\">            <span class=\"attr\">successThreshold:</span> <span class=\"number\">1</span></span><br><span class=\"line\">            <span class=\"attr\">timeoutSeconds:</span> <span class=\"number\">1</span></span><br><span class=\"line\">          <span class=\"attr\">volumeMounts:</span></span><br><span class=\"line\">            <span class=\"bullet\">-</span> <span class=\"attr\">mountPath:</span> <span class=\"string\">/data</span></span><br><span class=\"line\">              <span class=\"attr\">name:</span> <span class=\"string\">data</span></span><br><span class=\"line\">      <span class=\"attr\">dnsPolicy:</span> <span class=\"string\">ClusterFirst</span></span><br><span class=\"line\">      <span class=\"attr\">hostNetwork:</span> <span class=\"literal\">true</span></span><br><span class=\"line\">      <span class=\"attr\">restartPolicy:</span> <span class=\"string\">Always</span></span><br><span class=\"line\">      <span class=\"attr\">serviceAccount:</span> <span class=\"string\">kuboard-boostrap</span></span><br><span class=\"line\">      <span class=\"attr\">serviceAccountName:</span> <span class=\"string\">kuboard-boostrap</span></span><br><span class=\"line\">      <span class=\"attr\">tolerations:</span></span><br><span class=\"line\">        <span class=\"bullet\">-</span> <span class=\"attr\">key:</span> <span class=\"string\">node-role.kubernetes.io/master</span></span><br><span class=\"line\">          <span class=\"attr\">operator:</span> <span class=\"string\">Exists</span></span><br><span class=\"line\">        <span class=\"bullet\">-</span> <span class=\"attr\">key:</span> <span class=\"string\">node-role.kubernetes.io/control-plane</span></span><br><span class=\"line\">          <span class=\"attr\">operator:</span> <span class=\"string\">Exists</span></span><br><span class=\"line\">      <span class=\"attr\">volumes:</span></span><br><span class=\"line\">        <span class=\"bullet\">-</span> <span class=\"attr\">hostPath:</span></span><br><span class=\"line\">            <span class=\"attr\">path:</span> <span class=\"string\">/usr/share/kuboard/etcd</span></span><br><span class=\"line\">          <span class=\"attr\">name:</span> <span class=\"string\">data</span></span><br><span class=\"line\">  <span class=\"attr\">updateStrategy:</span></span><br><span class=\"line\">    <span class=\"attr\">rollingUpdate:</span></span><br><span class=\"line\">      <span class=\"attr\">maxUnavailable:</span> <span class=\"number\">1</span></span><br><span class=\"line\">    <span class=\"attr\">type:</span> <span class=\"string\">RollingUpdate</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">---</span></span><br><span class=\"line\"><span class=\"attr\">apiVersion:</span> <span class=\"string\">apps/v1</span></span><br><span class=\"line\"><span class=\"attr\">kind:</span> <span class=\"string\">Deployment</span></span><br><span class=\"line\"><span class=\"attr\">metadata:</span></span><br><span class=\"line\">  <span class=\"attr\">annotations:</span> &#123;&#125;</span><br><span class=\"line\">  <span class=\"attr\">labels:</span></span><br><span class=\"line\">    <span class=\"attr\">k8s.kuboard.cn/name:</span> <span class=\"string\">kuboard-v3</span></span><br><span class=\"line\">  <span class=\"attr\">name:</span> <span class=\"string\">kuboard-v3</span></span><br><span class=\"line\">  <span class=\"attr\">namespace:</span> <span class=\"string\">kuboard</span></span><br><span class=\"line\"><span class=\"attr\">spec:</span></span><br><span class=\"line\">  <span class=\"attr\">replicas:</span> <span class=\"number\">1</span></span><br><span class=\"line\">  <span class=\"attr\">revisionHistoryLimit:</span> <span class=\"number\">10</span></span><br><span class=\"line\">  <span class=\"attr\">selector:</span></span><br><span class=\"line\">    <span class=\"attr\">matchLabels:</span></span><br><span class=\"line\">      <span class=\"attr\">k8s.kuboard.cn/name:</span> <span class=\"string\">kuboard-v3</span></span><br><span class=\"line\">  <span class=\"attr\">template:</span></span><br><span class=\"line\">    <span class=\"attr\">metadata:</span></span><br><span class=\"line\">      <span class=\"attr\">labels:</span></span><br><span class=\"line\">        <span class=\"attr\">k8s.kuboard.cn/name:</span> <span class=\"string\">kuboard-v3</span></span><br><span class=\"line\">    <span class=\"attr\">spec:</span></span><br><span class=\"line\">      <span class=\"attr\">affinity:</span></span><br><span class=\"line\">        <span class=\"attr\">nodeAffinity:</span></span><br><span class=\"line\">          <span class=\"attr\">preferredDuringSchedulingIgnoredDuringExecution:</span></span><br><span class=\"line\">            <span class=\"bullet\">-</span> <span class=\"attr\">preference:</span></span><br><span class=\"line\">                <span class=\"attr\">matchExpressions:</span></span><br><span class=\"line\">                  <span class=\"bullet\">-</span> <span class=\"attr\">key:</span> <span class=\"string\">node-role.kubernetes.io/master</span></span><br><span class=\"line\">                    <span class=\"attr\">operator:</span> <span class=\"string\">Exists</span></span><br><span class=\"line\">              <span class=\"attr\">weight:</span> <span class=\"number\">100</span></span><br><span class=\"line\">            <span class=\"bullet\">-</span> <span class=\"attr\">preference:</span></span><br><span class=\"line\">                <span class=\"attr\">matchExpressions:</span></span><br><span class=\"line\">                  <span class=\"bullet\">-</span> <span class=\"attr\">key:</span> <span class=\"string\">node-role.kubernetes.io/control-plane</span></span><br><span class=\"line\">                    <span class=\"attr\">operator:</span> <span class=\"string\">Exists</span></span><br><span class=\"line\">              <span class=\"attr\">weight:</span> <span class=\"number\">100</span></span><br><span class=\"line\">      <span class=\"attr\">containers:</span></span><br><span class=\"line\">        <span class=\"bullet\">-</span> <span class=\"attr\">env:</span></span><br><span class=\"line\">            <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">HOSTIP</span></span><br><span class=\"line\">              <span class=\"attr\">valueFrom:</span></span><br><span class=\"line\">                <span class=\"attr\">fieldRef:</span></span><br><span class=\"line\">                  <span class=\"attr\">apiVersion:</span> <span class=\"string\">v1</span></span><br><span class=\"line\">                  <span class=\"attr\">fieldPath:</span> <span class=\"string\">status.hostIP</span></span><br><span class=\"line\">            <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">HOSTNAME</span></span><br><span class=\"line\">              <span class=\"attr\">valueFrom:</span></span><br><span class=\"line\">                <span class=\"attr\">fieldRef:</span></span><br><span class=\"line\">                  <span class=\"attr\">apiVersion:</span> <span class=\"string\">v1</span></span><br><span class=\"line\">                  <span class=\"attr\">fieldPath:</span> <span class=\"string\">spec.nodeName</span></span><br><span class=\"line\">          <span class=\"attr\">envFrom:</span></span><br><span class=\"line\">            <span class=\"bullet\">-</span> <span class=\"attr\">configMapRef:</span></span><br><span class=\"line\">                <span class=\"attr\">name:</span> <span class=\"string\">kuboard-v3-config</span></span><br><span class=\"line\">          <span class=\"attr\">image:</span> <span class=\"string\">&#x27;eipwork/kuboard:v3&#x27;</span></span><br><span class=\"line\">          <span class=\"attr\">imagePullPolicy:</span> <span class=\"string\">Always</span></span><br><span class=\"line\">          <span class=\"attr\">livenessProbe:</span></span><br><span class=\"line\">            <span class=\"attr\">failureThreshold:</span> <span class=\"number\">3</span></span><br><span class=\"line\">            <span class=\"attr\">httpGet:</span></span><br><span class=\"line\">              <span class=\"attr\">path:</span> <span class=\"string\">/kuboard-resources/version.json</span></span><br><span class=\"line\">              <span class=\"attr\">port:</span> <span class=\"number\">80</span></span><br><span class=\"line\">              <span class=\"attr\">scheme:</span> <span class=\"string\">HTTP</span></span><br><span class=\"line\">            <span class=\"attr\">initialDelaySeconds:</span> <span class=\"number\">30</span></span><br><span class=\"line\">            <span class=\"attr\">periodSeconds:</span> <span class=\"number\">10</span></span><br><span class=\"line\">            <span class=\"attr\">successThreshold:</span> <span class=\"number\">1</span></span><br><span class=\"line\">            <span class=\"attr\">timeoutSeconds:</span> <span class=\"number\">1</span></span><br><span class=\"line\">          <span class=\"attr\">name:</span> <span class=\"string\">kuboard</span></span><br><span class=\"line\">          <span class=\"attr\">ports:</span></span><br><span class=\"line\">            <span class=\"bullet\">-</span> <span class=\"attr\">containerPort:</span> <span class=\"number\">80</span></span><br><span class=\"line\">              <span class=\"attr\">name:</span> <span class=\"string\">web</span></span><br><span class=\"line\">              <span class=\"attr\">protocol:</span> <span class=\"string\">TCP</span></span><br><span class=\"line\">            <span class=\"bullet\">-</span> <span class=\"attr\">containerPort:</span> <span class=\"number\">443</span></span><br><span class=\"line\">              <span class=\"attr\">name:</span> <span class=\"string\">https</span></span><br><span class=\"line\">              <span class=\"attr\">protocol:</span> <span class=\"string\">TCP</span></span><br><span class=\"line\">            <span class=\"bullet\">-</span> <span class=\"attr\">containerPort:</span> <span class=\"number\">10081</span></span><br><span class=\"line\">              <span class=\"attr\">name:</span> <span class=\"string\">peer</span></span><br><span class=\"line\">              <span class=\"attr\">protocol:</span> <span class=\"string\">TCP</span></span><br><span class=\"line\">            <span class=\"bullet\">-</span> <span class=\"attr\">containerPort:</span> <span class=\"number\">10081</span></span><br><span class=\"line\">              <span class=\"attr\">name:</span> <span class=\"string\">peer-u</span></span><br><span class=\"line\">              <span class=\"attr\">protocol:</span> <span class=\"string\">UDP</span></span><br><span class=\"line\">          <span class=\"attr\">readinessProbe:</span></span><br><span class=\"line\">            <span class=\"attr\">failureThreshold:</span> <span class=\"number\">3</span></span><br><span class=\"line\">            <span class=\"attr\">httpGet:</span></span><br><span class=\"line\">              <span class=\"attr\">path:</span> <span class=\"string\">/kuboard-resources/version.json</span></span><br><span class=\"line\">              <span class=\"attr\">port:</span> <span class=\"number\">80</span></span><br><span class=\"line\">              <span class=\"attr\">scheme:</span> <span class=\"string\">HTTP</span></span><br><span class=\"line\">            <span class=\"attr\">initialDelaySeconds:</span> <span class=\"number\">30</span></span><br><span class=\"line\">            <span class=\"attr\">periodSeconds:</span> <span class=\"number\">10</span></span><br><span class=\"line\">            <span class=\"attr\">successThreshold:</span> <span class=\"number\">1</span></span><br><span class=\"line\">            <span class=\"attr\">timeoutSeconds:</span> <span class=\"number\">1</span></span><br><span class=\"line\">          <span class=\"attr\">resources:</span> &#123;&#125;</span><br><span class=\"line\">          <span class=\"comment\"># startupProbe:</span></span><br><span class=\"line\">          <span class=\"comment\">#   failureThreshold: 20</span></span><br><span class=\"line\">          <span class=\"comment\">#   httpGet:</span></span><br><span class=\"line\">          <span class=\"comment\">#     path: /kuboard-resources/version.json</span></span><br><span class=\"line\">          <span class=\"comment\">#     port: 80</span></span><br><span class=\"line\">          <span class=\"comment\">#     scheme: HTTP</span></span><br><span class=\"line\">          <span class=\"comment\">#   initialDelaySeconds: 5</span></span><br><span class=\"line\">          <span class=\"comment\">#   periodSeconds: 10</span></span><br><span class=\"line\">          <span class=\"comment\">#   successThreshold: 1</span></span><br><span class=\"line\">          <span class=\"comment\">#   timeoutSeconds: 1</span></span><br><span class=\"line\">      <span class=\"attr\">dnsPolicy:</span> <span class=\"string\">ClusterFirst</span></span><br><span class=\"line\">      <span class=\"attr\">restartPolicy:</span> <span class=\"string\">Always</span></span><br><span class=\"line\">      <span class=\"attr\">serviceAccount:</span> <span class=\"string\">kuboard-boostrap</span></span><br><span class=\"line\">      <span class=\"attr\">serviceAccountName:</span> <span class=\"string\">kuboard-boostrap</span></span><br><span class=\"line\">      <span class=\"attr\">tolerations:</span></span><br><span class=\"line\">        <span class=\"bullet\">-</span> <span class=\"attr\">key:</span> <span class=\"string\">node-role.kubernetes.io/master</span></span><br><span class=\"line\">          <span class=\"attr\">operator:</span> <span class=\"string\">Exists</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">---</span></span><br><span class=\"line\"><span class=\"attr\">apiVersion:</span> <span class=\"string\">v1</span></span><br><span class=\"line\"><span class=\"attr\">kind:</span> <span class=\"string\">Service</span></span><br><span class=\"line\"><span class=\"attr\">metadata:</span></span><br><span class=\"line\">  <span class=\"attr\">annotations:</span> &#123;&#125;</span><br><span class=\"line\">  <span class=\"attr\">labels:</span></span><br><span class=\"line\">    <span class=\"attr\">k8s.kuboard.cn/name:</span> <span class=\"string\">kuboard-v3</span></span><br><span class=\"line\">  <span class=\"attr\">name:</span> <span class=\"string\">kuboard-v3</span></span><br><span class=\"line\">  <span class=\"attr\">namespace:</span> <span class=\"string\">kuboard</span></span><br><span class=\"line\"><span class=\"attr\">spec:</span></span><br><span class=\"line\">  <span class=\"attr\">ports:</span></span><br><span class=\"line\">    <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">web</span></span><br><span class=\"line\">      <span class=\"attr\">nodePort:</span> <span class=\"number\">30080</span></span><br><span class=\"line\">      <span class=\"attr\">port:</span> <span class=\"number\">80</span></span><br><span class=\"line\">      <span class=\"attr\">protocol:</span> <span class=\"string\">TCP</span></span><br><span class=\"line\">      <span class=\"attr\">targetPort:</span> <span class=\"number\">80</span></span><br><span class=\"line\">    <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">tcp</span></span><br><span class=\"line\">      <span class=\"attr\">nodePort:</span> <span class=\"number\">30081</span></span><br><span class=\"line\">      <span class=\"attr\">port:</span> <span class=\"number\">10081</span></span><br><span class=\"line\">      <span class=\"attr\">protocol:</span> <span class=\"string\">TCP</span></span><br><span class=\"line\">      <span class=\"attr\">targetPort:</span> <span class=\"number\">10081</span></span><br><span class=\"line\">    <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">udp</span></span><br><span class=\"line\">      <span class=\"attr\">nodePort:</span> <span class=\"number\">30081</span></span><br><span class=\"line\">      <span class=\"attr\">port:</span> <span class=\"number\">10081</span></span><br><span class=\"line\">      <span class=\"attr\">protocol:</span> <span class=\"string\">UDP</span></span><br><span class=\"line\">      <span class=\"attr\">targetPort:</span> <span class=\"number\">10081</span></span><br><span class=\"line\">  <span class=\"attr\">selector:</span></span><br><span class=\"line\">    <span class=\"attr\">k8s.kuboard.cn/name:</span> <span class=\"string\">kuboard-v3</span></span><br><span class=\"line\">  <span class=\"attr\">sessionAffinity:</span> <span class=\"string\">None</span></span><br><span class=\"line\">  <span class=\"attr\">type:</span> <span class=\"string\">NodePort</span></span><br></pre></td></tr></table></figure>\n<p>以上  <code>yaml</code>  文件可以通过  <code>https://github.com/fangjiaxiaobai/k8s/tree/main/yamls</code>  进行获取。</p>\n",
            "tags": [
                "k8s",
                "kubernetes"
            ]
        },
        {
            "id": "https://fangjiaxiaobai.github.io/2022/09/18/k8s/seris05-service/",
            "url": "https://fangjiaxiaobai.github.io/2022/09/18/k8s/seris05-service/",
            "title": "k8s-Service",
            "date_published": "2022-09-18T10:18:00.000Z",
            "content_html": "<h2 id=\"服务service\"><a class=\"markdownIt-Anchor\" href=\"#服务service\">#</a> 服务 (Service)</h2>\n<h3 id=\"解决的问题\"><a class=\"markdownIt-Anchor\" href=\"#解决的问题\">#</a> 解决的问题</h3>\n<p><code>Pod</code>  是非永久性资源。 如果你使用  <code>Deployment</code>  来运行你的应用程序，则它可以动态创建和销毁 Pod。</p>\n<p>每个  <code>Pod</code>  都有自己的  <code>IP</code>  地址，但是在  <code>Deployment</code>  中，在同一时刻运行的  <code>Pod</code>  集合可能与稍后运行该应用程序的  <code>Pod</code>  集合不同。</p>\n<p>这导致了一个问题： 如果一组  <code>Pod</code> （称为 “后端”）为集群内的其他  <code>Pod</code> （称为 “前端”）提供功能， 那么前端如何找出并跟踪要连接的  <code>IP</code>  地址，以便前端可以使用提供工作负载的后端部分？</p>\n<h3 id=\"定义\"><a class=\"markdownIt-Anchor\" href=\"#定义\">#</a> 定义</h3>\n<p><code>Kubernetes Service</code>  定义了这样一种抽象：一个  <code>Pod</code>  的逻辑分组，一种可以访问它们的策略 —— 通常称为微服务。 这一组  <code>Pod</code>  能够被  <code>Service</code>  访问到，通常是通过  <code>Label Selector</code> .</p>\n<p><code>Service</code>  能够提供负载均衡的能力，但是在使用上有以下限制：<br>\n只提供  <code>4</code>  层负载均衡能力，而没有  <code>7</code>  层功能，但有时我们可能需要更多的匹配规则来转发请求，这点上  <code>4</code>  层负载均衡是不支持的</p>\n<p>假设，你有一组  <code>pod</code>  , 那如何使用一个  <code>Service</code>  为这组  <code>pod</code>  提供负载均衡的能力呢？刚才说了，通过  <code>Label Selector</code>  选择出符合条件的  <code>Pod</code> . 当请求访问到  <code>Service</code> , 则会请求转到对应的一个  <code>pod</code>  上。 还有一种方式就是  <code>非 Label Selector</code>  方式.</p>\n<h4 id=\"selector关联\"><a class=\"markdownIt-Anchor\" href=\"#selector关联\">#</a> Selector 关联</h4>\n<p>举一个例子:</p>\n<p>假定有一组 Pod，它们对外暴露了 80 端口，同时还被打上 <span class=\"exturl\" data-url=\"aHR0cDovL2FwcC5rdWJlcm5ldGVzLmlvL25hbWU9cHJveHk=\">app.kubernetes.io/name=proxy</span> 标签</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">apiVersion:</span> <span class=\"string\">v1</span></span><br><span class=\"line\"><span class=\"attr\">kind:</span> <span class=\"string\">Pod</span></span><br><span class=\"line\"><span class=\"attr\">metadata:</span></span><br><span class=\"line\">  <span class=\"attr\">name:</span> <span class=\"string\">nginx</span></span><br><span class=\"line\">  <span class=\"attr\">labels:</span></span><br><span class=\"line\">    <span class=\"attr\">app.kubernetes.io/name:</span> <span class=\"string\">proxy</span></span><br><span class=\"line\"><span class=\"attr\">spec:</span></span><br><span class=\"line\">  <span class=\"attr\">containers:</span></span><br><span class=\"line\">  <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">nginx</span></span><br><span class=\"line\">    <span class=\"attr\">image:</span> <span class=\"string\">nginx:stable</span></span><br><span class=\"line\">    <span class=\"attr\">ports:</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"attr\">containerPort:</span> <span class=\"number\">80</span></span><br><span class=\"line\">        <span class=\"attr\">name:</span> <span class=\"string\">http-web-svc</span></span><br><span class=\"line\">        </span><br></pre></td></tr></table></figure>\n<p>然后创建了一个  <code>Service</code></p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">apiVersion:</span> <span class=\"string\">v1</span></span><br><span class=\"line\"><span class=\"attr\">kind:</span> <span class=\"string\">Service</span></span><br><span class=\"line\"><span class=\"attr\">metadata:</span></span><br><span class=\"line\">  <span class=\"attr\">name:</span> <span class=\"string\">nginx-service</span></span><br><span class=\"line\"><span class=\"attr\">spec:</span></span><br><span class=\"line\">  <span class=\"attr\">selector:</span></span><br><span class=\"line\">    <span class=\"attr\">app.kubernetes.io/name:</span> <span class=\"string\">proxy</span></span><br><span class=\"line\">  <span class=\"attr\">ports:</span></span><br><span class=\"line\">  <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">name-of-service-port</span></span><br><span class=\"line\">    <span class=\"attr\">protocol:</span> <span class=\"string\">TCP</span></span><br><span class=\"line\">    <span class=\"attr\">port:</span> <span class=\"number\">80</span></span><br><span class=\"line\">    <span class=\"attr\">targetPort:</span> <span class=\"string\">http-web-svc</span></span><br></pre></td></tr></table></figure>\n<p><code>Kubernetes</code>  为该服务分配一个  <code>IP</code>  地址（有时称为 “集群 IP”），该  <code>IP</code>  地址由服务代理使用。服务选择算符的控制器不断扫描与其选择算符匹配的  <code>Pod</code>  (即  <code>app.kubernetes.io/name=proxy</code>  的  <code>Pod</code> ) ，然后将所有更新发布到也称为  <code>“my-service”</code>  的  <code>Endpoint</code>  对象。</p>\n<p>即使  <code>Service</code>  中使用同一配置名称混合使用多个  <code>Pod</code> ，各  <code>Pod</code>  通过不同的端口号支持相同的网络协议， 此功能也可以使用。这为  <code>Service</code>  的部署和演化提供了很大的灵活性。 例如，你可以在新版本中更改  <code>Pod</code>  中后端软件公开的端口号，而不会破坏客户端。</p>\n<h4 id=\"非selector关联\"><a class=\"markdownIt-Anchor\" href=\"#非selector关联\">#</a> 非 Selector 关联</h4>\n<p>举个例子:</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">apiVersion:</span> <span class=\"string\">v1</span></span><br><span class=\"line\"><span class=\"attr\">kind:</span> <span class=\"string\">Service</span></span><br><span class=\"line\"><span class=\"attr\">metadata:</span></span><br><span class=\"line\">  <span class=\"attr\">name:</span> <span class=\"string\">my-service</span></span><br><span class=\"line\"><span class=\"attr\">spec:</span></span><br><span class=\"line\">  <span class=\"attr\">ports:</span></span><br><span class=\"line\">    <span class=\"bullet\">-</span> <span class=\"attr\">protocol:</span> <span class=\"string\">TCP</span></span><br><span class=\"line\">      <span class=\"attr\">port:</span> <span class=\"number\">80</span></span><br><span class=\"line\">      <span class=\"attr\">targetPort:</span> <span class=\"number\">9376</span></span><br></pre></td></tr></table></figure>\n<p>创建 一个  <code>Service</code> . 由于此服务没有选择算符，因此不会自动创建相应的  <code>Endpoints</code>  对象。 你可以通过手动添加  <code>Endpoints</code>  对象，将服务手动映射到运行该服务的网络地址和端口：</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">apiVersion:</span> <span class=\"string\">v1</span></span><br><span class=\"line\"><span class=\"attr\">kind:</span> <span class=\"string\">Endpoints</span></span><br><span class=\"line\"><span class=\"attr\">metadata:</span></span><br><span class=\"line\">  <span class=\"comment\"># 这里的 name 要与 Service 的名字相同</span></span><br><span class=\"line\">  <span class=\"attr\">name:</span> <span class=\"string\">my-service</span></span><br><span class=\"line\"><span class=\"attr\">subsets:</span></span><br><span class=\"line\">  <span class=\"bullet\">-</span> <span class=\"attr\">addresses:</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"attr\">ip:</span> <span class=\"number\">192.0</span><span class=\"number\">.2</span><span class=\"number\">.42</span></span><br><span class=\"line\">    <span class=\"attr\">ports:</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"attr\">port:</span> <span class=\"number\">9376</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"service-可以管理多少个-endpoint\"><a class=\"markdownIt-Anchor\" href=\"#service-可以管理多少个-endpoint\">#</a> Service 可以管理多少个 Endpoint</h4>\n<p>截止目前  <code>kubernetes v1.22</code> . 一个  <code>Service</code>  最多管理  <code>1000</code>  个  <code>Pod</code> .  如果某个  <code>Endpoints</code>  资源中包含的端点个数超过  <code>1000</code> ，则  <code>Kubernetes v1.22</code>  版本 （及更新版本）的集群会将为该  <code>Endpoints</code>  添加注解  <code>endpoints.kubernetes.io/over-capacity: truncated</code> 。 这一注解表明所影响到的  <code>Endpoints</code>  对象已经超出容量，此外  <code>Endpoints</code>  控制器还会将  <code>Endpoints</code>  对象数量截断到  <code>1000。</code></p>\n<h5 id=\"如何解决\"><a class=\"markdownIt-Anchor\" href=\"#如何解决\">#</a> 如何解决</h5>\n<p>可以使用  <code>EndpointSlices</code>  来解决.</p>\n<p><code>EndpointSlices</code>  是一种  <code>API</code>  资源，可以为  <code>Endpoints</code>  提供更可扩展的替代方案。 尽管从概念上讲与  <code>Endpoints</code>  非常相似，但  <code>EndpointSlices</code>  允许跨多个资源分布网络端点。 默认情况下，一旦到达  <code>100</code>  个  <code>Endpoint</code> ，该  <code>EndpointSlice</code>  将被视为 “已满”， 届时将创建其他  <code>EndpointSlices</code>  来存储任何其他  <code>Endpoints</code>  。</p>\n<h3 id=\"service的类型\"><a class=\"markdownIt-Anchor\" href=\"#service的类型\">#</a>  <code>Service</code>  的类型</h3>\n<p><code>Service</code>  在  <code>K8s</code>  中有以下五种类型</p>\n<ul>\n<li><code>ClusterIp</code> ：默认类型，自动分配一个仅  <code>Cluster</code>  内部可以访问的虚拟  <code>IP</code> ，这种类型使得 Service 只能从集群内访问。</li>\n<li><code>NodePort</code> ：在  <code>ClusterIP</code>  基础上为  <code>Service</code>  在每台机器上绑定一个端口，这样就可以通过 :  <code>NodePort</code>  来访问该服务</li>\n<li><code>LoadBalancer</code> ：在  <code>NodePort</code>  的基础上，借助  <code>cloud provider</code>  创建一个外部负载均衡器，并将请求转发到:  <code>NodePort</code></li>\n<li><code>ExternalName</code> ：把集群外部的服务引入到集群内部来，在集群内部直接使用。没有任何类型代理被创建，这只有  <code>kubernetes 1.7</code>  或更高版本的  <code>kube-dns</code>  才支持</li>\n<li><code>Ingress</code> :  <code>Ingress</code>  是对集群中服务的外部访问进行管理的  <code>API</code>  对象，典型的访问方式是  <code>HTTP</code> 。 <code>Ingress</code>  可以提供负载均衡、  <code>SSL</code>  终结和基于名称的虚拟托管。 <code>Ingress</code>  公开从集群外部到集群内服务的  <code>HTTP</code>  和  <code>HTTPS</code>  路由。 流量路由由  <code>Ingress</code>  资源上定义的规则控制。</li>\n</ul>\n<h2 id=\"代理\"><a class=\"markdownIt-Anchor\" href=\"#代理\">#</a> 代理</h2>\n<h3 id=\"vip-和-service代理\"><a class=\"markdownIt-Anchor\" href=\"#vip-和-service代理\">#</a>  <code>VIP</code>  和  <code>Service</code>  代理</h3>\n<p>在  <code>Kubernetes</code>  集群中，每个  <code>Node</code>  运行一个  <code>kube-proxy</code>  进程。  <code>kube-proxy</code>  负责为  <code>Service</code>  实现了一种  <code>VIP(虚拟IP)</code>  的形式，而不是  <code>ExternalName</code>  的形式。 在  <code>Kubernetes v1.0</code>  版本，代理完全在  <code>userspace</code> 。在  <code>Kubernetes v1.1</code>  版本，新增了  <code>iptables</code>  代理，但并不是默认的运行模式。 从  <code>Kubernetes v1.2</code>  起，默认就是 <code>iptables</code>  代理。 在  <code>Kubernetes v1.8.0-beta.0</code>  中，添加了 ipvs 代理在  <code>Kubernetes 1.14</code>  版本开始默认使用  <code>ipvs</code>  代理。在  <code>Kubernetes v1.0</code>  版本，  <code>Service</code>  是  <code>“4层”</code> （ <code>TCP/UDP over IP</code> ）概念。 在  <code>Kubernetes v1.1</code>  版本，新增了  <code>Ingress API(beta 版)</code> ，用来表示  <code>“7层”(HTTP)</code>  服务</p>\n<h3 id=\"代理模式的分类\"><a class=\"markdownIt-Anchor\" href=\"#代理模式的分类\">#</a> 代理模式的分类</h3>\n<h4 id=\"userspace\"><a class=\"markdownIt-Anchor\" href=\"#userspace\">#</a>  <code>userspace</code></h4>\n<p><code>kube-proxy</code>  会监视  <code>Kubernetes kubelet</code>  对  <code>Service</code>  对象和  <code>Endpoints</code>  对象的添加和移除操作。 对每个  <code>Service</code> ，它会在本地  <code>Node</code>  上打开一个端口（随机选择）。 任何连接到 “代理端口” 的请求，都会被代理到  <code>Service</code>  的某个  <code>pod</code>  上。使用哪个后端  <code>Pod</code>  ，是  <code>kube-proxy</code>  基于  <code>SessionAffinity</code>  来确定的。</p>\n<p>最后，它配置  <code>iptables</code>  规则，捕获到达该  <code>Service</code>  的  <code>clusterIP</code> （是虚拟 IP） 和  <code>Port</code>  的请求，并重定向到代理端口，代理端口再代理请求到后端 <code>Pod</code> 。</p>\n<p>默认情况下，用户空间模式下的  <code>kube-proxy</code>  通过轮转算法选择后端。</p>\n<p><img data-src=\"/images/k8s/05-01.svg\" alt=\"\"></p>\n<h4 id=\"iptables\"><a class=\"markdownIt-Anchor\" href=\"#iptables\">#</a> iptables</h4>\n<p>这种模式， <code>kube-proxy</code>  会监视  <code>Kubernetes</code>  控制节点对  <code>Service</code>  对象和  <code>Endpoints</code>  对象的添加和移除。 对每个  <code>Service</code> ，它会配置  <code>iptables</code>  规则，从而捕获到达该  <code>Service</code>  的  <code>clusterIP</code>  和端口的请求，进而将请求重定向到  <code>Service</code>  的一组后端中的某个  <code>Pod</code>  上面。 对于每个  <code>Endpoints</code>  对象，它也会配置  <code>iptables</code>  规则，这个规则会选择一个后端组合。</p>\n<p>默认的策略是， <code>kube-proxy</code>  在  <code>iptables</code>  模式下随机选择一个后端。</p>\n<p>使用  <code>iptables</code>  处理流量具有较低的系统开销，因为流量由  <code>Linux netfilter</code>  处理， 而无需在用户空间和内核空间之间切换。 这种方法也可能更可靠。</p>\n<p>如果  <code>kube-proxy</code>  在  <code>iptables</code>  模式下运行，并且所选的第一个  <code>Pod</code>  没有响应，则连接失败。 这与用户空间模式不同：在这种情况下， <code>kube-proxy</code>  将检测到与第一个  <code>Pod</code>  的连接已失败， 并会自动使用其他后端  <code>Pod</code>  重试。</p>\n<p>你可以使用  <code>Pod</code>  就绪探测器 验证后端  <code>Pod</code>  可以正常工作，以便  <code>iptables</code>  模式下的  <code>kube-proxy</code>  仅看到测试正常的后端。 这样做意味着你避免将流量通过  <code>kube-proxy</code>  发送到已知已失败的  <code>Pod</code></p>\n<p><img data-src=\"/images/k8s/05-02.svg\" alt=\"\"></p>\n<h4 id=\"ipvs\"><a class=\"markdownIt-Anchor\" href=\"#ipvs\">#</a> ipvs</h4>\n<p>这种模式， <code>kube-proxy</code>  会监视  <code>Kubernetes Service</code>  对象和  <code>Endpoints</code>  ，调用  <code>netlink</code>  接口以相应地创建 <code>ipvs</code>  规则并定期与  <code>Kubernetes Service</code>  对象和  <code>Endpoints</code>  对象同步  <code>ipvs</code>  规则，以确保  <code>ipvs</code>  状态与期望一致。访问服务时，流量将被重定向到其中一个后端  <code>Pod</code> . 与  <code>iptables</code>  类似， <code>ipvs</code>  于  <code>netﬁlter</code>  的  <code>hook</code>  功能，但使用哈希表作为底层数据结构并在内核空间中工作。这意味着  <code>ipvs</code>  可以更快地重定向流量，并且在同步代理规则时具有更好的性能。此外， <code>ipvs</code>  为负载均衡算法提供了更多选项，例如：</p>\n<ul>\n<li><code>rr</code> ：轮询调度</li>\n<li><code>lc</code>  ：最小连接数</li>\n<li><code>dh</code>  ：目标哈希</li>\n<li><code>sh</code>  ：源哈希</li>\n<li><code>sed</code>  ：最短期望延迟</li>\n<li><code>nq</code>  ： 不排队调度</li>\n</ul>\n<p><img data-src=\"/images/k8s/05-03.svg\" alt=\"\"></p>\n<h2 id=\"service-类型实验\"><a class=\"markdownIt-Anchor\" href=\"#service-类型实验\">#</a> Service 类型实验</h2>\n<h3 id=\"clusterip\"><a class=\"markdownIt-Anchor\" href=\"#clusterip\">#</a>  <code>ClusterIP</code></h3>\n<p><code>clusterIP</code>  主要在每个  <code>node</code>  节点使用  <code>iptables</code>  等代理方式，将发向  <code>clusterIP</code>  对应端口的数据，转发到  <code>kube-proxy</code>  中。然后  <code>kube-proxy</code>  自己内部实现有负载均衡的方法，并可以查询到这个  <code>service</code>  下对应  <code>pod</code>  的地址和端口，进而把数据转发给对应的  <code>pod</code>  的地址和端口。 这种类型使得 Service 只能从集群内访问。</p>\n<p><img data-src=\"/images/k8s/05-04.png\" alt=\"\"></p>\n<p>为了实现图上的功能，主要需要以下几个组件的协同工作：</p>\n<ul>\n<li><code>apiserver</code>  用户通过 <code>kubectl</code>  命令向 <code>apiserver</code>  发送创建 <code>service</code>  的命令， <code>apiserver</code>  接收到请求后将数据存储到 <code>etcd</code>  中</li>\n<li><code>kube-proxy kubernetes</code>  的每个节点中都有一个叫做 <code>kube-porxy</code>  的进程，这个进程负责感知 <code>service</code> ， <code>pod</code>  的变化，并将变化的信息写入本地的 <code>iptables</code>  规则中.</li>\n<li><code>iptables</code>  使用 <code>NAT</code>  等技术将 <code>virtualIP</code>  的流量转至 <code>endpoint</code>  中</li>\n</ul>\n<h4 id=\"创建一个deploy\"><a class=\"markdownIt-Anchor\" href=\"#创建一个deploy\">#</a> 创建一个 deploy</h4>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">apiVersion:</span> <span class=\"string\">apps/v1</span></span><br><span class=\"line\"><span class=\"attr\">kind:</span> <span class=\"string\">Deployment</span></span><br><span class=\"line\"><span class=\"attr\">metadata:</span></span><br><span class=\"line\">  <span class=\"attr\">name:</span> <span class=\"string\">cluster-ip-demo</span></span><br><span class=\"line\"><span class=\"attr\">spec:</span></span><br><span class=\"line\">  <span class=\"attr\">replicas:</span> <span class=\"number\">3</span></span><br><span class=\"line\">  <span class=\"attr\">selector:</span></span><br><span class=\"line\">    <span class=\"attr\">matchLabels:</span></span><br><span class=\"line\">      <span class=\"attr\">app:</span> <span class=\"string\">cluster-ip-demo</span></span><br><span class=\"line\">      <span class=\"attr\">tag:</span> <span class=\"string\">cluster-ip-v1</span></span><br><span class=\"line\">  <span class=\"attr\">template:</span></span><br><span class=\"line\">    <span class=\"attr\">metadata:</span></span><br><span class=\"line\">      <span class=\"attr\">labels:</span></span><br><span class=\"line\">        <span class=\"attr\">app:</span> <span class=\"string\">cluster-ip-demo</span></span><br><span class=\"line\">        <span class=\"attr\">tag:</span> <span class=\"string\">cluster-ip-v1</span></span><br><span class=\"line\">        <span class=\"attr\">env:</span> <span class=\"string\">test</span></span><br><span class=\"line\">    <span class=\"attr\">spec:</span></span><br><span class=\"line\">      <span class=\"attr\">containers:</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">cluster-ip-demo-container</span></span><br><span class=\"line\">        <span class=\"attr\">image:</span> <span class=\"string\">fangjiaxiaobai/my-app:v3</span></span><br><span class=\"line\">        <span class=\"attr\">imagePullPolicy:</span> <span class=\"string\">IfNotPresent</span></span><br><span class=\"line\">        <span class=\"attr\">ports:</span></span><br><span class=\"line\">        <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">http</span></span><br><span class=\"line\">          <span class=\"attr\">containerPort:</span> <span class=\"number\">80</span></span><br><span class=\"line\">        <span class=\"attr\">env:</span></span><br><span class=\"line\">        <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">&quot;MY_APP_VERSION&quot;</span></span><br><span class=\"line\">          <span class=\"attr\">value:</span> <span class=\"string\">&quot;3.0&quot;</span></span><br></pre></td></tr></table></figure>\n<p><img data-src=\"/images/k8s/05-06.png\" alt=\"\"></p>\n<h4 id=\"把-deploymenet-绑定到-service-上\"><a class=\"markdownIt-Anchor\" href=\"#把-deploymenet-绑定到-service-上\">#</a> 把  <code>Deploymenet</code>  绑定到  <code>Service</code>  上</h4>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">apiVersion:</span> <span class=\"string\">v1</span></span><br><span class=\"line\"><span class=\"attr\">kind:</span> <span class=\"string\">Service</span></span><br><span class=\"line\"><span class=\"attr\">metadata:</span></span><br><span class=\"line\">  <span class=\"attr\">name:</span> <span class=\"string\">service-cluster-ip-demo</span></span><br><span class=\"line\"><span class=\"attr\">spec:</span></span><br><span class=\"line\">  <span class=\"attr\">type:</span> <span class=\"string\">ClusterIP</span></span><br><span class=\"line\">  <span class=\"attr\">selector:</span></span><br><span class=\"line\">    <span class=\"attr\">app:</span> <span class=\"string\">cluster-ip-demo</span></span><br><span class=\"line\">    <span class=\"attr\">tag:</span> <span class=\"string\">cluster-ip-v1</span></span><br><span class=\"line\">  <span class=\"attr\">ports:</span></span><br><span class=\"line\">  <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">http</span></span><br><span class=\"line\">    <span class=\"attr\">port:</span> <span class=\"number\">80</span></span><br><span class=\"line\">    <span class=\"attr\">targetPort:</span> <span class=\"number\">80</span></span><br></pre></td></tr></table></figure>\n<p><img data-src=\"/images/k8s/05-07.png\" alt=\"\"></p>\n<h4 id=\"headless-service\"><a class=\"markdownIt-Anchor\" href=\"#headless-service\">#</a>  <code>Headless Service</code></h4>\n<p>有时不需要或不想要负载均衡 sc 以及单独的  <code>Service IP</code>  。遇到这种情况，可以通过指定  <code>Cluster IP(spec.clusterIP)</code>  的值为  <code>“None”</code>  来创建  <code>Headless Service</code>  。这类  <code>Service</code>  并不会分配  <code>Cluster IP</code> ，  <code>kube-proxy</code>  不会处理它们，而且平台也不会为它们进行负载均衡和路由</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">apiVersion:</span> <span class=\"string\">v1</span></span><br><span class=\"line\"><span class=\"attr\">kind:</span> <span class=\"string\">Service</span></span><br><span class=\"line\"><span class=\"attr\">metadata:</span></span><br><span class=\"line\">  <span class=\"attr\">name:</span> <span class=\"string\">headless-service</span></span><br><span class=\"line\">  <span class=\"attr\">namespace:</span> <span class=\"string\">default</span></span><br><span class=\"line\"><span class=\"attr\">spec:</span></span><br><span class=\"line\">  <span class=\"attr\">selector:</span></span><br><span class=\"line\">    <span class=\"attr\">app:</span> <span class=\"string\">headless-app</span></span><br><span class=\"line\">    <span class=\"attr\">clusterIp:</span> <span class=\"string\">&quot;None&quot;</span></span><br><span class=\"line\">  <span class=\"attr\">ports:</span></span><br><span class=\"line\">  <span class=\"bullet\">-</span> <span class=\"attr\">port:</span> <span class=\"number\">80</span></span><br><span class=\"line\">    <span class=\"attr\">targetPort:</span> <span class=\"number\">80</span></span><br></pre></td></tr></table></figure>\n<p>使用 <code>dig</code>  命令可以验证一下</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">dig -t A headless-service.default.svc.cluster.local. @10.96.0.10</span><br></pre></td></tr></table></figure>\n<h3 id=\"nodeport\"><a class=\"markdownIt-Anchor\" href=\"#nodeport\">#</a>  <code>NodePort</code></h3>\n<p><code>nodePort</code>  的原理在于在  <code>node</code>  上开了一个端口，将向该端口的流量导入到  <code>kube-proxy</code> ，然后由  <code>kube-proxy</code>  进一步到给对应的  <code>pod</code></p>\n<h4 id=\"创建-deployment\"><a class=\"markdownIt-Anchor\" href=\"#创建-deployment\">#</a> 创建  <code>Deployment</code></h4>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">apiVersion:</span> <span class=\"string\">apps/v1</span></span><br><span class=\"line\"><span class=\"attr\">kind:</span> <span class=\"string\">Deployment</span></span><br><span class=\"line\"><span class=\"attr\">metadata:</span></span><br><span class=\"line\">  <span class=\"attr\">name:</span> <span class=\"string\">node-port-container-demo</span></span><br><span class=\"line\"><span class=\"attr\">spec:</span></span><br><span class=\"line\">  <span class=\"attr\">replicas:</span> <span class=\"number\">3</span></span><br><span class=\"line\">  <span class=\"attr\">selector:</span></span><br><span class=\"line\">    <span class=\"attr\">matchLabels:</span></span><br><span class=\"line\">      <span class=\"attr\">app:</span> <span class=\"string\">node-port-service</span></span><br><span class=\"line\">      <span class=\"attr\">tag:</span> <span class=\"string\">node-port-tag-v3</span></span><br><span class=\"line\">  <span class=\"attr\">template:</span></span><br><span class=\"line\">    <span class=\"attr\">metadata:</span></span><br><span class=\"line\">      <span class=\"attr\">labels:</span></span><br><span class=\"line\">        <span class=\"attr\">app:</span> <span class=\"string\">node-port-service</span></span><br><span class=\"line\">        <span class=\"attr\">tag:</span> <span class=\"string\">node-port-tag-v3</span></span><br><span class=\"line\">        <span class=\"attr\">env:</span> <span class=\"string\">test</span></span><br><span class=\"line\">    <span class=\"attr\">spec:</span></span><br><span class=\"line\">      <span class=\"attr\">containers:</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">cluster-ip-demo-container</span></span><br><span class=\"line\">        <span class=\"attr\">image:</span> <span class=\"string\">fangjiaxiaobai/my-app:v3</span></span><br><span class=\"line\">        <span class=\"attr\">imagePullPolicy:</span> <span class=\"string\">IfNotPresent</span></span><br><span class=\"line\">        <span class=\"attr\">ports:</span></span><br><span class=\"line\">        <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">http</span></span><br><span class=\"line\">          <span class=\"attr\">containerPort:</span> <span class=\"number\">80</span></span><br><span class=\"line\">        <span class=\"attr\">env:</span></span><br><span class=\"line\">        <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">&quot;MY_APP_VERSION&quot;</span></span><br><span class=\"line\">          <span class=\"attr\">value:</span> <span class=\"string\">&quot;3.0&quot;</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"绑定到-service-上\"><a class=\"markdownIt-Anchor\" href=\"#绑定到-service-上\">#</a> 绑定到  <code>Service</code>  上。</h4>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">apiVersion:</span> <span class=\"string\">v1</span></span><br><span class=\"line\"><span class=\"attr\">kind:</span> <span class=\"string\">Service</span></span><br><span class=\"line\"><span class=\"attr\">metadata:</span></span><br><span class=\"line\">  <span class=\"attr\">name:</span> <span class=\"string\">node-port-service</span></span><br><span class=\"line\">  <span class=\"attr\">namespace:</span> <span class=\"string\">default</span></span><br><span class=\"line\"><span class=\"attr\">spec:</span></span><br><span class=\"line\">  <span class=\"attr\">type:</span> <span class=\"string\">NodePort</span></span><br><span class=\"line\">  <span class=\"attr\">selector:</span></span><br><span class=\"line\">    <span class=\"attr\">app:</span> <span class=\"string\">node-port-service</span></span><br><span class=\"line\">    <span class=\"attr\">tag:</span> <span class=\"string\">node-port-tag-v3</span></span><br><span class=\"line\">    <span class=\"attr\">env:</span> <span class=\"string\">test</span></span><br><span class=\"line\">  <span class=\"attr\">ports:</span></span><br><span class=\"line\">  <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">http</span></span><br><span class=\"line\">    <span class=\"attr\">port:</span> <span class=\"number\">80</span></span><br><span class=\"line\">    <span class=\"attr\">targetPort:</span> <span class=\"number\">80</span></span><br></pre></td></tr></table></figure>\n<p><img data-src=\"/images/k8s/05-08.png\" alt=\"\"></p>\n<p>可以在浏览器上访问  <code>Node</code>  的  <code>IP</code> ( <code>http://192.168.0.10:31024/</code> ), 多次访问查看  <code>hostname</code>  和  <code>ip</code>  的变化.</p>\n<h3 id=\"loadbalancer\"><a class=\"markdownIt-Anchor\" href=\"#loadbalancer\">#</a>  <code>LoadBalancer</code></h3>\n<p><code>loadBalancer</code>  和  <code>nodePort</code>  其实是同一种方式。区别在于  <code>loadBalancer</code>  比  <code>nodePort</code>  多了一步，就是可以调用  <code>cloud provider</code>  去创建  <code>LB</code>  来向节点导流.</p>\n<h3 id=\"externalname\"><a class=\"markdownIt-Anchor\" href=\"#externalname\">#</a>  <code>ExternalName</code></h3>\n<p>这种类型的  <code>Service</code>  通过返回  <code>CNAME</code>  和它的值，可以将服务映射到  <code>externalName</code>  字段的内容 ( 例如：<br>\n <code>hub.atguigu.com</code>  )。  <code>ExternalName Service</code>  是  <code>Service</code>  的特例，它没有  <code>selector</code>  ，也没有定义任何的端口和  <code>Endpoint</code>  。相反的，对于运行在集群外部的服务，它通过返回该外部服务的别名这种方式来提供服务</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">apiVersion:</span> <span class=\"string\">v1</span></span><br><span class=\"line\"><span class=\"attr\">kind:</span> <span class=\"string\">Service</span></span><br><span class=\"line\"><span class=\"attr\">metadata:</span></span><br><span class=\"line\">  <span class=\"attr\">name:</span> <span class=\"string\">external-name-service</span></span><br><span class=\"line\">  <span class=\"attr\">namespace:</span> <span class=\"string\">default</span></span><br><span class=\"line\"><span class=\"attr\">spec:</span></span><br><span class=\"line\">  <span class=\"attr\">type:</span> <span class=\"string\">ExternalName</span></span><br><span class=\"line\">  <span class=\"attr\">externalName:</span> <span class=\"string\">www.fangjiaxiaobai.cn</span></span><br></pre></td></tr></table></figure>\n<p><img data-src=\"/images/k8s/05-09.png\" alt=\"\"></p>\n<p>当查询主机  <code>my-service.defalut.svc.cluster.local</code>  (  <code>SVC_NAME.NAMESPACE.svc.cluster.local</code>  ) 时，集群的  <code>DNS</code>  服务将返回一个值  <code>my.database.example.com</code>  的  <code>CNAME</code>  记录。访问这个服务的工作方式和其他的相同，唯一不同的是重定向发生在  <code>DNS</code>  层，而且不会进行代理或转发</p>\n<p>下一篇，我们介绍另外一种 资源控制器  <code>Ingress</code> .</p>\n<h2 id=\"最后\"><a class=\"markdownIt-Anchor\" href=\"#最后\">#</a> 最后</h2>\n<p>希望和你一起遇见更好的自己</p>\n<p><img data-src=\"/images/qrcode.jpg\" alt=\"\"></p>\n",
            "tags": [
                "k8s",
                "kubernetes"
            ]
        },
        {
            "id": "https://fangjiaxiaobai.github.io/2022/08/07/k8s/seris04-work-load/",
            "url": "https://fangjiaxiaobai.github.io/2022/08/07/k8s/seris04-work-load/",
            "title": "k8s-资源控制器",
            "date_published": "2022-08-07T10:18:00.000Z",
            "content_html": "<h2 id=\"pod\"><a class=\"markdownIt-Anchor\" href=\"#pod\">#</a> Pod</h2>\n<p><code>Pod</code>  是可以在  <code>Kubernetes</code>  中创建和管理的、最小的可部署的计算单元。  <code>Pod</code>  是一组容器，一个  <code>pod</code>  的所有容器共享  <code>pod</code>  的网路，存储 以及运行容器的声明。</p>\n<p>通常用户需要直接创建  <code>Pod</code>  , 而是使用负载资源来替用户管理一组  <code>Pod</code>  . 这些负载资源通过配置 <strong>控制器</strong> 来确保正确类型的、处于运行状态的  <code>Pod</code>  个数是正确的，与用户所指定的状态相一致。</p>\n<h2 id=\"控制器\"><a class=\"markdownIt-Anchor\" href=\"#控制器\">#</a> 控制器</h2>\n<h3 id=\"replication-controller-和-replicaset\"><a class=\"markdownIt-Anchor\" href=\"#replication-controller-和-replicaset\">#</a>  <code>Replication Controller</code>  和  <code>ReplicaSet</code></h3>\n<p><code>ReplicationController(RC)</code>  用来确保容器应用的副本数始终保持在用户定义的副本数，即如果有容器异常退<br>\n出，会自动创建新的  <code>Pod</code>  来替代；而如果异常多出来的容器也会自动回收；<br>\n 在新版本的  <code>Kubernetes</code>  中建议使用  <code>ReplicaSet</code>  来取代  <code>ReplicationController</code>  。  <code>ReplicaSet</code>  跟<br>\n <code>ReplicationController</code>  没有本质的不同，只是名字不一样，并且  <code>ReplicaSet</code>  支持集合式的  <code>selector</code> .</p>\n<h4 id=\"实验\"><a class=\"markdownIt-Anchor\" href=\"#实验\">#</a> 实验</h4>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">apiVersion:</span> <span class=\"string\">apps/v1</span></span><br><span class=\"line\"><span class=\"attr\">kind:</span> <span class=\"string\">ReplicaSet</span></span><br><span class=\"line\"><span class=\"attr\">metadata:</span></span><br><span class=\"line\">  <span class=\"attr\">name:</span> <span class=\"string\">replica-set-demo</span></span><br><span class=\"line\"><span class=\"attr\">spec:</span></span><br><span class=\"line\">  <span class=\"attr\">replicas:</span> <span class=\"number\">3</span></span><br><span class=\"line\">  <span class=\"attr\">selector:</span></span><br><span class=\"line\">    <span class=\"attr\">matchLabels:</span></span><br><span class=\"line\">      <span class=\"attr\">rs_label:</span> <span class=\"string\">rs-demo</span></span><br><span class=\"line\">  <span class=\"attr\">template:</span></span><br><span class=\"line\">    <span class=\"attr\">metadata:</span></span><br><span class=\"line\">      <span class=\"attr\">labels:</span></span><br><span class=\"line\">        <span class=\"attr\">rs_label:</span> <span class=\"string\">rs-demo</span></span><br><span class=\"line\">    <span class=\"attr\">spec:</span></span><br><span class=\"line\">      <span class=\"attr\">containers:</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">replica-set-demo-container</span></span><br><span class=\"line\">        <span class=\"attr\">image:</span> <span class=\"string\">fangjiaxiaobai/my-app:v1</span></span><br><span class=\"line\">        <span class=\"attr\">env:</span></span><br><span class=\"line\">        <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">JAVA_VERSION</span></span><br><span class=\"line\">          <span class=\"attr\">value:</span> <span class=\"string\">&#x27;11&#x27;</span></span><br><span class=\"line\">        <span class=\"attr\">ports:</span></span><br><span class=\"line\">        <span class=\"bullet\">-</span> <span class=\"attr\">containerPort:</span> <span class=\"number\">80</span></span><br></pre></td></tr></table></figure>\n<ul>\n<li>\n<p>查看 当前的 <code>pod</code> <br>\n<img data-src=\"/images/k8s/04-01.png\" alt=\"\"></p>\n</li>\n<li>\n<p>新开一个窗口，使用命令:  <code>kubectl get pod -o wide -w</code>  来查看 pod 的变化过程.<br>\n<img data-src=\"/images/k8s/04-02.png\" alt=\"\"></p>\n</li>\n<li>\n<p>然后使用命令  <code>kubectl delete pod replica-set-demo-2wlcm</code>  删除其中的任意一个  <code>pod</code></p>\n</li>\n<li>\n<p>然后 可以看到新窗口中出现了如下的变化:<br>\n<img data-src=\"/images/k8s/04-04.png\" alt=\"\"><br>\n 删除的 <code>pod</code> ( <code>2wlcm</code> ) 先从  <code>Running</code>  变成了  <code>Terminating</code> , 然后启动了一个新的  <code>pod (z48pp)</code> , 状态从  <code>Pending</code>  -&gt;  <code>ContainerCreating</code> -&gt; <code>Running</code> .</p>\n</li>\n</ul>\n<h5 id=\"修改标签\"><a class=\"markdownIt-Anchor\" href=\"#修改标签\">#</a> 修改标签</h5>\n<p><img data-src=\"/images/k8s/04-05.png\" alt=\"\"></p>\n<ul>\n<li>通过命令  <code>kubectl get pod --show-labels</code>  查看  <code>pod</code>  的标签。</li>\n<li>通过命令  <code>kubectl label pod replica-set-demo-z48pp rs_label=rs-edit-label-exp --overwrite=True</code>  修改  <code>pod</code>  的标签。</li>\n<li>查看  <code>pod</code></li>\n</ul>\n<p>发现 新启动了一个  <code>pod</code> , 如上图中的  <code>(Pod)nbxnf</code> 。此时 原来的 pod 就变成了新的标签。</p>\n<p>由此可以看出:  <code>ReplicaSet</code>  是通过  <code>labels</code>  来判断 <code>pod</code>  是否属于当前的  <code>RS</code>  的。</p>\n<p>那 新建一个相同标签的 <code>pod</code>  会发生什么呢？</p>\n<h5 id=\"修改回原来的标签\"><a class=\"markdownIt-Anchor\" href=\"#修改回原来的标签\">#</a> 修改回原来的标签</h5>\n<p>我先把 标签修改成原来的  <code>kubectl label pod replica-set-demo-z48pp rs_label=rs-demo --overwrite=True</code></p>\n<p><img data-src=\"/images/k8s/04-06.png\" alt=\"\"></p>\n<p><code>k8s</code>  删掉了最新创建的那个容器。</p>\n<h5 id=\"新建一个相同标签的pod容器\"><a class=\"markdownIt-Anchor\" href=\"#新建一个相同标签的pod容器\">#</a> 新建一个相同标签的 <code>pod</code>  容器</h5>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">apiVersion:</span> <span class=\"string\">v1</span></span><br><span class=\"line\"><span class=\"attr\">kind:</span> <span class=\"string\">Pod</span></span><br><span class=\"line\"><span class=\"attr\">metadata:</span></span><br><span class=\"line\">  <span class=\"attr\">name:</span> <span class=\"string\">rs-demo-add-sample-label-ex</span></span><br><span class=\"line\">  <span class=\"attr\">labels:</span></span><br><span class=\"line\">    <span class=\"attr\">rs_label:</span> <span class=\"string\">rs-demo</span></span><br><span class=\"line\"><span class=\"attr\">spec:</span></span><br><span class=\"line\">  <span class=\"attr\">containers:</span></span><br><span class=\"line\">  <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">rs-demo-add-sample-label-ex-container</span></span><br><span class=\"line\">    <span class=\"attr\">image:</span> <span class=\"string\">fangjiaxiaobai/my-app:v1</span></span><br><span class=\"line\">    <span class=\"attr\">ports:</span></span><br><span class=\"line\">    <span class=\"bullet\">-</span> <span class=\"attr\">containerPort:</span> <span class=\"number\">80</span></span><br></pre></td></tr></table></figure>\n<p>创建这个容器之后，会发现</p>\n<p><img data-src=\"/images/k8s/04-07.png\" alt=\"\"></p>\n<p>这个容器在创建时机就会被 <code>kill</code>  掉。</p>\n<h5 id=\"删除-replicaset\"><a class=\"markdownIt-Anchor\" href=\"#删除-replicaset\">#</a> 删除 ReplicaSet</h5>\n<p>使用命令  <code>kubectl delete rs replica-set-demo</code>  删除即可.</p>\n<p><img data-src=\"/images/k8s/04-08.png\" alt=\"\"></p>\n<h3 id=\"deployment\"><a class=\"markdownIt-Anchor\" href=\"#deployment\">#</a>  <code>Deployment</code></h3>\n<p><img data-src=\"/images/k8s/04-11.png\" alt=\"\"></p>\n<p><code>Deployment</code>  为  <code>Pod</code>  和  <code>ReplicaSet</code>  提供了一个声明式定义 ( <code>declarative</code> ) 方法，用来替代以前的  <code>ReplicationController</code>  来方便的管理应用。典型的应用场景包括；</p>\n<ul>\n<li>定义  <code>Deployment</code>  来创建  <code>Pod</code>  和  <code>ReplicaSet</code></li>\n<li>滚动升级和回滚应用</li>\n<li>扩容和缩容</li>\n<li>暂停和继续  <code>Deployment</code> .</li>\n</ul>\n<h5 id=\"升级策略\"><a class=\"markdownIt-Anchor\" href=\"#升级策略\">#</a> 升级策略</h5>\n<p><code>Deployment</code>  可以保证在升级时只有一定数量的  <code>Pod</code>  是  <code>down</code>  的。默认的，它会确保至少有比期望的 Pod 数量少一个是 <code>up</code>  状态 (最多一个不可用)</p>\n<p><code>Deployment</code>  同时也可以确保只创建出超过期望数量的一定数量的  <code>Pod</code> 。默认的，它会确保最多比期望的 <code>Pod</code>  数<br>\n量多一个的  <code>Pod</code>  是  <code>up</code>  的 (最多 <code>1</code>  个  <code>surge</code>  )</p>\n<p>未来的  <code>Kuberentes</code>  版本中，将从 <code>1-1</code>  变成 <code>25%-25%</code></p>\n<h4 id=\"实验-2\"><a class=\"markdownIt-Anchor\" href=\"#实验-2\">#</a> 实验</h4>\n<h5 id=\"创建deployment\"><a class=\"markdownIt-Anchor\" href=\"#创建deployment\">#</a> 创建 <code>Deployment</code></h5>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">apiVersion:</span> <span class=\"string\">apps/v1</span></span><br><span class=\"line\"><span class=\"attr\">kind:</span> <span class=\"string\">Deployment</span></span><br><span class=\"line\"><span class=\"attr\">metadata:</span></span><br><span class=\"line\">  <span class=\"attr\">name:</span> <span class=\"string\">deployment-demo</span></span><br><span class=\"line\"><span class=\"attr\">spec:</span></span><br><span class=\"line\">  <span class=\"attr\">replicas:</span> <span class=\"number\">3</span></span><br><span class=\"line\">  <span class=\"attr\">selector:</span></span><br><span class=\"line\">    <span class=\"attr\">matchLabels:</span></span><br><span class=\"line\">      <span class=\"attr\">demo_name:</span> <span class=\"string\">deployment-labels</span></span><br><span class=\"line\">  <span class=\"attr\">template:</span></span><br><span class=\"line\">    <span class=\"attr\">metadata:</span></span><br><span class=\"line\">      <span class=\"attr\">labels:</span></span><br><span class=\"line\">        <span class=\"attr\">demo_name:</span> <span class=\"string\">deployment-labels</span></span><br><span class=\"line\">    <span class=\"attr\">spec:</span></span><br><span class=\"line\">      <span class=\"attr\">containers:</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">deployment-demo-container</span></span><br><span class=\"line\">        <span class=\"attr\">image:</span> <span class=\"string\">fangjiaxiaobai/my-app:v1</span></span><br><span class=\"line\">        <span class=\"attr\">ports:</span></span><br><span class=\"line\">        <span class=\"bullet\">-</span> <span class=\"attr\">containerPort:</span> <span class=\"number\">80</span></span><br></pre></td></tr></table></figure>\n<ul>\n<li>使用命令  <code>kubectl get pod -w</code>  监听 Pod 的变化</li>\n<li>使用命令  <code>kubectl apply -f 07-deployment-demo.yaml</code>  创建  <code>deployment</code> <br>\n<img data-src=\"/images/k8s/04-09.png\" alt=\"\"></li>\n<li>查看对应 <code>Pod</code>  的变化。<br>\n<img data-src=\"/images/k8s/04-10.png\" alt=\"\"></li>\n</ul>\n<h5 id=\"扩缩容\"><a class=\"markdownIt-Anchor\" href=\"#扩缩容\">#</a> 扩缩容</h5>\n<p>下面我们先演示一个比较简单的案例，扩缩容。</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">kubectl scale deployment deployment-demo --replicas=4</span><br></pre></td></tr></table></figure>\n<p><img data-src=\"/images/k8s/04-12.png\" alt=\"\"></p>\n<p>如果集群支持自动扩容的话，还可以为集群设置  <code>autoscaling</code> .</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">kubectl autoscale deployment xxx --min=10 --max=15 --cpu-percent=80</span><br></pre></td></tr></table></figure>\n<h5 id=\"设置镜像\"><a class=\"markdownIt-Anchor\" href=\"#设置镜像\">#</a> 设置镜像</h5>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">kubectl set image xxxx imagesName:v1</span><br></pre></td></tr></table></figure>\n<p>具体如何操作接着往下看。</p>\n<h5 id=\"滚动升级\"><a class=\"markdownIt-Anchor\" href=\"#滚动升级\">#</a> 滚动升级</h5>\n<p>在真是的业务场景中，大部分都是通过设置升级镜像的版本来触发  <code>deployment</code>  的升级.</p>\n<ul>\n<li>使用命令  <code>kubectl set image deployment/deployment-demo deployment-demo-container=fangjiaxiaobai/my-app:v2</code>  修改  <code>deployment</code>  的版本。<br>\n<img data-src=\"/images/k8s/04-14.png\" alt=\"\"></li>\n<li>查看  <code>Deployment</code>  的变化过程<br>\n<img data-src=\"/images/k8s/04-13.png\" alt=\"\"><br>\n可以看到  <code>k8s</code>  先启动一个 <code>pod</code> , 然后 <code>kill</code>  一个 <code>pod</code> . 最终完成整个  <code>Deployment</code>  的更新。</li>\n<li>然后，我们访问一下页面，看一个应用的版本<br>\n<img data-src=\"/images/k8s/04-15.png\" alt=\"\"></li>\n</ul>\n<h5 id=\"回滚-rollover\"><a class=\"markdownIt-Anchor\" href=\"#回滚-rollover\">#</a> 回滚 rollover</h5>\n<ul>\n<li>使用命令  <code>kubectl rollout undo deployment/deployment-demo</code>  将  <code>Deployment</code>  回滚到上一次的版本</li>\n</ul>\n<p><img data-src=\"/images/k8s/04-16.png\" alt=\"\"></p>\n<p>可以看到已经回滚到了  <code>V1</code>  版本。</p>\n<h5 id=\"清理策略\"><a class=\"markdownIt-Anchor\" href=\"#清理策略\">#</a> 清理策略</h5>\n<p>可以通过设置  <code>.spec.revisonHistoryLimit</code>  来指定  <code>deploymenet</code>  最多保留  <code>revison</code>  历史版本。默认会保留所有历史版本，如果设置为 <code>0</code> , 则  <code>Deployment</code>  就不允许回滚了。</p>\n<blockquote>\n<p>命令式编程 和 命令式编程</p>\n<ul>\n<li>命令式编程：它侧重于 如何实现程序，就像我们刚接触编程的时候那样，我们需要把程序的实现过程按照逻辑一步步写下来。面向过程编程。</li>\n<li>声明式编程：它侧重于定义想要什么，然后告诉计算机 / 引擎，让他帮你去实现。 面向对象编程.</li>\n</ul>\n</blockquote>\n<h3 id=\"daemonset\"><a class=\"markdownIt-Anchor\" href=\"#daemonset\">#</a>  <code>Daemonset</code></h3>\n<p><code>DaemonSet</code>  确保全部 (或者一些) <code>Node</code>  上运行一个  <code>Pod</code>  的副本。当有  <code>Node</code>  加入集群时，也会为他们新增一个  <code>Pod</code>  。当有  <code>Node</code>  从集群移除时，这些  <code>Pod</code>  也会被回收。删除  <code>DaemonSet</code>  将会删除它创建的所有  <code>Pod</code> . 使用  <code>DaemonSet</code>  的一些典型用法:</p>\n<ul>\n<li>运行集群存储  <code>daemon</code>  ，例如在每个  <code>Node</code>  上运行  <code>glusterd</code>  、  <code>ceph</code></li>\n<li>在每个  <code>Node</code>  上运行日志收集  <code>daemon</code>  ，例如  <code>fluentd</code>  、  <code>logstash</code></li>\n<li>在每个  <code>Node</code>  上运行监控  <code>daemon</code>  ，例如 <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3Byb21ldGhldXMvbm9kZV9leHBvcnRlcg==\">Prometheus Node Exporter</span>、  <code>collectd</code>   <code>、Datadog</code>  代理、  <code>New Relic</code>  代理，或 <code> Ganglia gmond</code></li>\n</ul>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">apiVersion:</span> <span class=\"string\">apps/v1</span></span><br><span class=\"line\"><span class=\"attr\">kind:</span> <span class=\"string\">DaemonSet</span></span><br><span class=\"line\"><span class=\"attr\">metadata:</span></span><br><span class=\"line\">  <span class=\"attr\">name:</span> <span class=\"string\">daemon-set-demo</span></span><br><span class=\"line\">  <span class=\"attr\">labels:</span></span><br><span class=\"line\">    <span class=\"attr\">app:</span> <span class=\"string\">daemon-set</span></span><br><span class=\"line\"><span class=\"attr\">spec:</span></span><br><span class=\"line\">  <span class=\"attr\">selector:</span></span><br><span class=\"line\">    <span class=\"attr\">matchLabels:</span></span><br><span class=\"line\">      <span class=\"attr\">app:</span> <span class=\"string\">daemon-set</span></span><br><span class=\"line\">  <span class=\"attr\">template:</span></span><br><span class=\"line\">    <span class=\"attr\">metadata:</span></span><br><span class=\"line\">      <span class=\"attr\">labels:</span></span><br><span class=\"line\">        <span class=\"attr\">app:</span> <span class=\"string\">daemon-set</span></span><br><span class=\"line\">    <span class=\"attr\">spec:</span></span><br><span class=\"line\">      <span class=\"attr\">containers:</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">daemon-set-demo-container</span></span><br><span class=\"line\">        <span class=\"attr\">image:</span> <span class=\"string\">fangjiaxiaobai/my-app:v1</span></span><br></pre></td></tr></table></figure>\n<p><img data-src=\"/images/k8s/04-17.png\" alt=\"\"></p>\n<h3 id=\"job\"><a class=\"markdownIt-Anchor\" href=\"#job\">#</a> Job</h3>\n<p><code>Job</code>  负责批处理任务，即仅执行一次的任务，它保证批处理任务的一个或多个  <code>Pod</code>  成功结束</p>\n<ul>\n<li>特殊说明\n<ul>\n<li><code>spec.template</code> : 格式同  <code>pod</code> .</li>\n<li><code>RestartPolicy</code> : 仅支持  <code>Never</code>  或者  <code>OnFailure</code> .</li>\n<li>单个  <code>Pod</code>  时 默认  <code>Pod</code>  成功运行后  <code>Job</code>  即结束。</li>\n<li><code>.spec.completios</code> : 标志 Job 结束时需要成功运行的 <code>Pod</code>  个数。</li>\n<li><code>.spec.parallelism</code> : 标识 并行运行的 <code>pod</code>  的个数，默认为 1</li>\n<li><code>.spec.activeDeadlineSeconds</code> : 标识失败 <code>Pod</code>  重试的最后间隔时间，超过这个时间将不会再重试</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"实验-3\"><a class=\"markdownIt-Anchor\" href=\"#实验-3\">#</a> 实验</h4>\n<ul>\n<li>创建一个 Job</li>\n</ul>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">apiVersion:</span> <span class=\"string\">batch/v1</span></span><br><span class=\"line\"><span class=\"attr\">kind:</span> <span class=\"string\">Job</span></span><br><span class=\"line\"><span class=\"attr\">metadata:</span></span><br><span class=\"line\">  <span class=\"attr\">name:</span> <span class=\"string\">job-demo</span></span><br><span class=\"line\"><span class=\"attr\">spec:</span></span><br><span class=\"line\">  <span class=\"attr\">template:</span></span><br><span class=\"line\">    <span class=\"attr\">metadata:</span></span><br><span class=\"line\">      <span class=\"attr\">name:</span> <span class=\"string\">job-demo-template</span></span><br><span class=\"line\">    <span class=\"attr\">spec:</span></span><br><span class=\"line\">      <span class=\"attr\">containers:</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">job-demo-container</span></span><br><span class=\"line\">        <span class=\"attr\">image:</span> <span class=\"string\">perl:5.34.0</span></span><br><span class=\"line\">        <span class=\"attr\">command:</span> [<span class=\"string\">&quot;perl&quot;</span>, <span class=\"string\">&quot;-Mbignum=bpi&quot;</span>, <span class=\"string\">&quot;-wle&quot;</span>, <span class=\"string\">&quot;print bpi(2000)&quot;</span>]</span><br><span class=\"line\">      <span class=\"attr\">restartPolicy:</span> <span class=\"string\">Never</span></span><br></pre></td></tr></table></figure>\n<p><img data-src=\"/images/k8s/04-18.png\" alt=\"\"></p>\n<h3 id=\"cron-job\"><a class=\"markdownIt-Anchor\" href=\"#cron-job\">#</a> Cron Job</h3>\n<p><code>Cron Job</code>  管理基于时间的  <code>Job</code> ，即:<br>\n 在给定时间点只运行一次<br>\n周期性地在给定时间点运行<br>\n使用前提条件:<strong> 当前使用的 Kubernetes 集群，版本 &gt;= 1.8 (对 CronJob)。对于先前版本的集群，版本 &lt; 1.8，启动 API Server 时，通过传递选项 --runtime-config=batch/v2alpha1=true 可以开启 batch/v2alpha1 API</strong><br>\n 典型的用法如下所示:</p>\n<ul>\n<li>在给定的时间点调度  <code>Job</code>  运行</li>\n<li>创建周期性运行的  <code>Job</code> ，例如：数据库备份、发送邮件</li>\n</ul>\n<h4 id=\"特殊说明\"><a class=\"markdownIt-Anchor\" href=\"#特殊说明\">#</a> 特殊说明</h4>\n<ul>\n<li><code>spec.schedule</code>  ：调度，必需字段，指定任务运行周期，格式同  <code>Cron</code></li>\n<li><code>spec.jobTemplate</code>  ：  <code>Job</code>  模板，必需字段，指定需要运行的任务，格式同  <code>Job</code></li>\n<li><code>spec.startingDeadlineSeconds</code>  ：启动  <code>Job</code>  的期限（秒级别），该字段是可选的。如果因为任何原因而错<br>\n过了被调度的时间，那么错过执行时间的  <code>Job</code>  将被认为是失败的。如果没有指定，则没有期限</li>\n<li><code>spec.concurrencyPolicy</code>  ：并发策略，该字段也是可选的。它指定了如何处理被  <code>Cron Job</code>  创建的  <code>Job</code>  的并发执行。只允许指定下面策略中的一种：\n<ul>\n<li><code>Allow</code>  （默认）：允许并发运行  <code>Job</code></li>\n<li><code>Forbid</code>  ：禁止并发运行，如果前一个还没有完成，则直接跳过下一个</li>\n<li><code>Replace</code>  ：取消当前正在运行的  <code>Job</code> ，用一个新的来替换。<br>\n注意，当前策略只能应用于同一个  <code>Cron Job</code>  创建的  <code>Job</code> 。如果存在多个  <code>Cron Job</code> ，它们创建的  <code>Job</code>  之间总是允许并发运行。</li>\n</ul>\n</li>\n<li><code>spec.suspend</code>  ：挂起，该字段也是可选的。如果设置为  <code>true</code>  ，后续所有执行都会被挂起。它对已经开始执行的  <code>Job</code>  不起作用。默认值为  <code>false</code>  。</li>\n<li><code>spec.successfulJobsHistoryLimit</code>  和  <code>.spec.failedJobsHistoryLimit</code>  ：历史限制，是可选的字段。它们指定了可以保留多少完成和失败的  <code>Job</code> 。默认情况下，它们分别设置为  <code>3</code>  和  <code>1</code>  。设置限制的值为  <code>0</code>  ，相关类型的  <code>Job</code>  完成后将不会被保留。</li>\n</ul>\n<h4 id=\"实验-4\"><a class=\"markdownIt-Anchor\" href=\"#实验-4\">#</a> 实验</h4>\n<h5 id=\"创建-cronjob\"><a class=\"markdownIt-Anchor\" href=\"#创建-cronjob\">#</a> 创建  <code>CronJob</code></h5>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">apiVersion:</span> <span class=\"string\">batch/v1</span></span><br><span class=\"line\"><span class=\"attr\">kind:</span> <span class=\"string\">CronJob</span></span><br><span class=\"line\"><span class=\"attr\">metadata:</span></span><br><span class=\"line\">  <span class=\"attr\">name:</span> <span class=\"string\">cron-job-demo</span></span><br><span class=\"line\"><span class=\"attr\">spec:</span></span><br><span class=\"line\">  <span class=\"attr\">schedule:</span> <span class=\"string\">&quot;*/1 * * * *&quot;</span></span><br><span class=\"line\">  <span class=\"attr\">jobTemplate:</span></span><br><span class=\"line\">    <span class=\"attr\">spec:</span></span><br><span class=\"line\">      <span class=\"attr\">template:</span></span><br><span class=\"line\">        <span class=\"attr\">spec:</span></span><br><span class=\"line\">          <span class=\"attr\">containers:</span></span><br><span class=\"line\">          <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">cron-job-demo-container</span></span><br><span class=\"line\">            <span class=\"attr\">image:</span> <span class=\"string\">busybox</span></span><br><span class=\"line\">            <span class=\"attr\">args:</span></span><br><span class=\"line\">            <span class=\"bullet\">-</span> <span class=\"string\">/bin/sh</span></span><br><span class=\"line\">            <span class=\"bullet\">-</span> <span class=\"string\">-c</span></span><br><span class=\"line\">            <span class=\"bullet\">-</span> <span class=\"string\">date;</span> <span class=\"string\">echo</span> <span class=\"string\">&#x27;hello ,I‘m from K8s cluster.&#x27;</span></span><br><span class=\"line\">          <span class=\"attr\">restartPolicy:</span> <span class=\"string\">OnFailure</span></span><br></pre></td></tr></table></figure>\n<p><img data-src=\"/images/k8s/04-20.png\" alt=\"\"></p>\n<p>然后可以查看一个 <code>pod</code>  的运行情况:</p>\n<p><img data-src=\"/images/k8s/04-21.png\" alt=\"\"></p>\n<p>每个 <code>job</code>  都是相隔一分钟执行一次。</p>\n<h3 id=\"statefulset\"><a class=\"markdownIt-Anchor\" href=\"#statefulset\">#</a>  <code>StatefulSet</code></h3>\n<p><code>StatefulSet</code>  作为  <code>Controller</code>  为  <code>Pod</code>  提供唯一的标识。它可以保证部署和  <code>scale</code>  的顺序<br>\n <code>StatefulSet</code>  是为了解决有状态服务的问题 (对应  <code>Deployments</code>  和  <code>ReplicaSets</code>  是为无状态服务而设计)，其应用 场景包括:</p>\n<ul>\n<li>稳定的持久化存储，即 <code>Pod</code>  重新调度后还是能访问到相同的持久化数据，基于 <code>PVC</code>  来实现 稳定的网络标志，即 <code>Pod</code>  重新调度后其 <code>PodName</code>  和 <code>HostName</code>  不变，基于 <code>Headless Service</code>  (即没有  <code>Cluster IP</code>  的 <code>Service</code> ) 来实现。</li>\n<li>有序部署，有序扩展，即 <code>Pod</code>  是有顺序的，在部署或者扩展的时候要依据定义的顺序依次依次进行 (即从 <code>0</code>  到  <code>N-1</code> ，在下一个 <code>Pod</code>  运行之前所有之前的 <code>Pod</code>  必须都是 <code>Running</code>  和 <code>Ready</code>  状态)，基于 <code>init containers</code>  来实 现<br>\n有序收缩，有序删除 (即从 <code>N-1</code>  到 <code>0</code> )</li>\n</ul>\n<h3 id=\"horizontal-pod-autoscaling\"><a class=\"markdownIt-Anchor\" href=\"#horizontal-pod-autoscaling\">#</a>  <code>Horizontal Pod Autoscaling</code></h3>\n<p>应用的资源使用率通常都有高峰和低谷的时候，如何削峰填谷，提高集群的整体资源利用率，让 <code>service</code>  中的 <code>Pod</code>  个数自动调整呢？这就有赖于 <code>Horizontal Pod Autoscaling</code>  了，顾名思义，使 <code>Pod</code>  水平自动缩放</p>\n<p>文中所有的 <code>k8s yaml</code>  配置文件均可从  <code>https://github.com/fangjiaxiaobai/k8s/tree/main/yamls</code>  获取。</p>\n<h2 id=\"最后\"><a class=\"markdownIt-Anchor\" href=\"#最后\">#</a> 最后</h2>\n<p>希望和你一起遇见更好的自己</p>\n<p><img data-src=\"/images/qrcode.jpg\" alt=\"\"></p>\n",
            "tags": [
                "k8s",
                "kubernetes"
            ]
        },
        {
            "id": "https://fangjiaxiaobai.github.io/2022/07/31/k8s/seris03-pod-lifecycle/",
            "url": "https://fangjiaxiaobai.github.io/2022/07/31/k8s/seris03-pod-lifecycle/",
            "title": "k8s-Pod的生命周期",
            "date_published": "2022-07-31T10:18:00.000Z",
            "content_html": "<p><code>K8s</code>  中所有的内容都抽象为资源，资源实例化为对象。</p>\n<h2 id=\"集群资源的分类\"><a class=\"markdownIt-Anchor\" href=\"#集群资源的分类\">#</a> 集群资源的分类</h2>\n<h3 id=\"名称空间级别\"><a class=\"markdownIt-Anchor\" href=\"#名称空间级别\">#</a> 名称空间级别</h3>\n<ul>\n<li>工作负载型资源 (  <code>workload</code>  )：  <code>Pod</code> 、 <code>ReplicaSet</code> 、 <code>Deployment</code> 、 <code>StatefulSet</code> 、 <code>DaemonSet、Job</code> 、  <code>CronJob</code>  (  <code>ReplicationController</code>  在  <code>v1.11</code>  版本被废弃 )</li>\n<li>服务发现及负载均衡型资源 (  <code>ServiceDiscovery LoadBalance</code>  ):  <code>Service</code> 、 <code>Ingress</code> 、…</li>\n<li>配置与存储型资源： <code> Volume</code>  (存储卷)、 <code>CSI</code>  (容器存储接口，可以扩展各种各样的第三方存储卷)</li>\n<li>特殊类型的存储卷： <code>ConfigMap</code>  (当配置中心来使用的资源类型)、 <code>Secret</code>  (保存敏感数据)、  <code>DownwardAPI</code>  (把外部环境中的信息输出给容器)</li>\n</ul>\n<h3 id=\"集群级别\"><a class=\"markdownIt-Anchor\" href=\"#集群级别\">#</a> 集群级别</h3>\n<p>一旦定义在集群内都可见。</p>\n<p><code>Namespace</code> ,  <code>Node</code> ,  <code>Role</code> ,  <code>ClusterRole</code> ,  <code>RoleBindiing</code> ,  <code>ClusterRoleBinding</code></p>\n<h3 id=\"元数据型\"><a class=\"markdownIt-Anchor\" href=\"#元数据型\">#</a> 元数据型</h3>\n<p><code>HPA</code> 、 <code>PodTemplate</code> 、 <code>LimitRange</code></p>\n<p>在 <code>k8s</code>  中，一般使用  <code>yaml</code>  格式的文件来创建符合我们预期期望的 <code>pod</code> , 这样的  <code>yaml</code>  文件，我们一般成为 资源清单。</p>\n<ul>\n<li><code>apiVersion</code> :   <code>String</code> ,  <code>K8s Api</code>  的版本，可以用 <code>kubectl api-versions</code>  命令查询</li>\n<li><code>kind</code> :  <code>String</code> ,  <code>yaml</code>  定义的资源类型和角色</li>\n<li><code>metadata</code> :  <code>Object</code> , 元数据对象，固定值就写  <code>metadata</code>\n<ul>\n<li><code>name</code> : 元数据对象的名称</li>\n<li><code>namespace</code> : 元数据对象的命名空间，有我们自身定义</li>\n</ul>\n</li>\n<li><code>spec</code> : <code>Object</code>  详细定义对象，固定值是 <code>Spec</code>\n<ul>\n<li><code>containers[]</code> :  <code>list</code>  类型，这里是 <code>spec</code>  对象的容器列表定义，是个列表\n<ul>\n<li><code>name</code> :  <code>String</code> , 这里是定义容器的名字</li>\n<li><code>image</code> :  <code>String</code> , 这里定义要用到的镜像名称</li>\n<li><code>imagePullPolicy</code> :  <code>String</code> , 定义镜像拉取策略，有 <code>Always</code> , <code>Never</code> , <code>IfNotPresent</code> , 三个值。默认是  <code>Always</code> .\n<ul>\n<li>1、 <code>Always</code> : 每次都尝试拉取镜像</li>\n<li>2、 <code>Never</code> : 表示仅使用本地镜像</li>\n<li>3、 <code>IfNotPresent</code> : 如果本地有镜像就使用本地镜像，没有就拉取在线镜像。</li>\n</ul>\n</li>\n<li><code>command[]</code> ,  <code>List</code> , 容器启动命令，因为是数据可以指定多个，不指定则使用镜像打包时使用的启动命令</li>\n<li><code>args</code> :  <code>List，</code>  指定容器启动的命令参数，可以指定多个</li>\n<li><code>workingDir</code> :  <code>String</code> , 指定容器的工作目录</li>\n<li><code>volumeMountsp[]</code> ,  <code>List</code> : 指定容器内部的存储卷配置\n<ul>\n<li><code>name</code> :  <code>String</code> , 指定可以挂载的存储卷的名称</li>\n<li><code>mountPath</code> ,  <code>String</code> , 指定可以被容器挂载的存储卷的路径</li>\n<li><code>readOnly</code> ,  <code>String</code> , 设置存储卷路径的读写模型，  <code>true</code>  或者  <code>false</code> .</li>\n</ul>\n</li>\n<li><code>ports[]</code> ,  <code>List&lt;Object&gt;</code>  , 指定容器使用的端口列表\n<ul>\n<li><code>name</code> :  <code>String</code> , 端口名称</li>\n<li><code>containerPort</code> :  <code>String</code> , 容器你需要监听的端口号</li>\n<li><code>hostPort</code> :  <code>String</code> , 指定容器所在主机需要监听的端口号，默认跟上面  <code>containerPort</code>  相同， 注意设置了  <code>hostPort</code>  同一台主机无法启动该容器的相同副本</li>\n<li><code>protocol</code> :  <code>String</code> , 指定端口协议，支持  <code>TCP</code> , <code>UDP</code> , 默认是  <code>TCP</code></li>\n</ul>\n</li>\n<li><code>env[]</code> : <code>List&lt;Object&gt;</code>  , 指定容器运行前需要设置的环境变量列表\n<ul>\n<li><code>name</code> :  <code>String</code> , 环境变量名称</li>\n<li><code>value</code> :  <code>String</code> , 环境变量值</li>\n</ul>\n</li>\n<li><code>resources</code> :  <code>Object</code> , 指定资源限制和资源请求的值\n<ul>\n<li><code>limits</code> : 设置容器运行时的资源的运行上限\n<ul>\n<li><code>cpu</code> :  <code>String</code> ,  <code>CPU</code>  的限制，单位为  <code>core</code>  数，将用于  <code>docker run --cpu-shares</code>  参数。</li>\n<li><code>memory</code> :  <code>String</code> ,  <code>Mem</code>  内存的限制，单位为  <code>MIB</code> , <code>GiB</code></li>\n</ul>\n</li>\n<li><code>requests</code> :  <code>Object</code> , 指定容器启动和调度时的限制设置\n<ul>\n<li><code>cpu</code> :  <code>m</code> ,   <code>CPU</code>  请求。单位为 <code>core</code>  数，容器启动时初始化可用数量</li>\n<li><code>memory</code> :  <code>String</code> , 内存请求，单位  <code>MIB</code> ,  <code>Gib</code> , 容器启动的初始化可用数量</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n<li><code>restartPolicy</code> :  <code>String</code> , 定义 Pod 的重启策略，可选值是  <code>Always</code> ,  <code>OnFailure</code> , 默认值是  <code>Always</code> .\n<ul>\n<li>1. <code>Always</code> :  <code>Pod</code>  一旦终止运行，则无论容器是否终止，  <code>kubelet</code>  服务都将重启它。</li>\n<li>2、 <code>OnFailure</code> : 只有 <code>Pod</code>  以非 <code>0</code>  退出码终止时，  <code>kubelet</code>  才会重启该容器，如果容器正常结束，则不会重启</li>\n<li>3、 <code>Never</code> .  <code>Pod</code>  终止后， <code>kubelet</code>  将退出码报告给 <code>Master</code> ，不会重启 <code>Pod</code> .</li>\n</ul>\n</li>\n<li><code>nodeSelector</code> :  <code>Object</code> , 定义 <code>Node</code>  的 <code>label</code>  过滤标签，已 <code>key</code> , <code>value</code>  的格式指定。</li>\n<li><code>imagePullSecrets</code> :  <code>Object</code> , 定义 <code>pull</code>  镜像时使用 Secret 名称，以 <code>name:secretKey</code>  格式指定</li>\n<li><code>hostNetwork</code> :  <code>Boolean</code> , 定义是否使用主机网络，默认值为 <code>false</code> , 设置为 <code>true</code>  表示使用宿主机网络， 不使用 <code>docker</code>  网桥，同时设置了 <code>true</code>  将无法在同一台宿主机上启动第二个副本。</li>\n</ul>\n</li>\n</ul>\n<p>可以通过下面的命令实时查看 yaml 的配置内容</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">kubectl explain pod.</span><br></pre></td></tr></table></figure>\n<h3 id=\"案例\"><a class=\"markdownIt-Anchor\" href=\"#案例\">#</a> 案例</h3>\n<p>通过资源清单创建一个 pod.</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">apiVersion:</span> <span class=\"string\">v1</span></span><br><span class=\"line\"><span class=\"attr\">kind:</span> <span class=\"string\">Pod</span></span><br><span class=\"line\"><span class=\"attr\">metadata:</span></span><br><span class=\"line\">    <span class=\"attr\">name:</span> <span class=\"string\">sample-demo</span></span><br><span class=\"line\">    <span class=\"attr\">namespace:</span> <span class=\"string\">default</span></span><br><span class=\"line\">    <span class=\"attr\">labels:</span></span><br><span class=\"line\">        <span class=\"attr\">app:</span> <span class=\"string\">myapp</span></span><br><span class=\"line\"><span class=\"attr\">spec:</span></span><br><span class=\"line\">    <span class=\"attr\">containers:</span></span><br><span class=\"line\">    <span class=\"bullet\">-</span>   <span class=\"attr\">name:</span> <span class=\"string\">my-app</span></span><br><span class=\"line\">        <span class=\"attr\">image:</span> <span class=\"string\">fangjiaxiaobai/my-app:v1</span></span><br></pre></td></tr></table></figure>\n<p>使用  <code>kubectl create -f 01-sample-yaml.yaml</code>  创建</p>\n<p><img data-src=\"/images/k8s/03-02.png\" alt=\"\"></p>\n<p>使用命令  <code>kubectl get pods -o wide</code>  查看下 <code>pod</code>  的 <code>ip</code>  和 状态:</p>\n<p><img data-src=\"/images/k8s/03-03.png\" alt=\"\"></p>\n<p>然后使用   <code>curl 10.244.154.195</code>  可以看到</p>\n<p><img data-src=\"/images/k8s/03-04.png\" alt=\"\"></p>\n<p>正常返回了  <code>Nginx</code>  的首页信息。</p>\n<h2 id=\"pod-的生命周期\"><a class=\"markdownIt-Anchor\" href=\"#pod-的生命周期\">#</a>  <code>Pod</code>  的生命周期</h2>\n<p><img data-src=\"/images/k8s/03-05.png\" alt=\"\"></p>\n<p>如上图， <code>pod</code>  的启动过程是:  <code>pod</code>  创建时会首先创建一个  <code>pause</code>  容器。然后执行创建多个  <code>Init</code>  容器，然后再启动 主容器，也就是一般我们使用镜像创建起来的具有业务属性的容器，称为主容器。 主容器会经历  <code>Start-&gt;Running-&gt;Stop</code> , 这些状态。</p>\n<h3 id=\"pause-容器\"><a class=\"markdownIt-Anchor\" href=\"#pause-容器\">#</a> Pause 容器</h3>\n<p>从名字上看， <code>pause</code>  是一个 &quot;暂停&quot; 的容器，它的作用是：解决 <code>pod</code>  的网络和存储的问题。 <code>pause</code>  容器称为  <code>Infra Container</code> , 其他的容器称为业务容器.   <code>Infra container</code>  是一个非常小的镜像，大概  <code>700KB </code> 左右，是一个 <code>C</code>  语言写的、永远处于 “暂停” 状态的容器。由于有了这样一个  <code>Infra container</code>  之后，其他所有容器都会通过  <code>Join Namespace</code>  的方式加入到  <code>Infra container</code>  的  <code>Network Namespace</code>  中。</p>\n<h3 id=\"init-容器\"><a class=\"markdownIt-Anchor\" href=\"#init-容器\">#</a> Init 容器</h3>\n<p><code>Pod</code>  能够具有多个容器，应用运行在容器里面，但是它也可能有一个或多个先于应用容器启动的 <code>Init</code>  容器。<br>\n <code>Init</code>  容器与普通的容器非常像，除了如下两点：</p>\n<ul>\n<li><code>Init</code>  容器总是运行到成功完成为止</li>\n<li>每个  <code>Init</code>  容器都必须在下一个  <code>Init</code>  容器启动之前成功完成<br>\n如果  <code>Pod</code>  的  <code>Init</code>  容器失败， <code>Kubernetes</code>    <code>Pod</code> ，直到  <code>Init</code>  容器成功为止。然而，如果  <code>Pod</code>  对应的  <code>restartPolicy</code>  为  <code>Never</code> ，它不会重新启动</li>\n</ul>\n<p>因为  <code>Init</code>  容器具有与应用程序容器分离的单独镜像，所以它们的启动相关代码具有如下优势：</p>\n<ul>\n<li>它们可以包含并运行实用工具，但是出于安全考虑，是不建议在应用程序容器镜像中包含这<br>\n些实用工具的</li>\n<li>它们可以包含使用工具和定制化代码来安装，但是不能出现在应用程序镜像中。例如，创建镜像没必要  <code>FROM</code>  另一个镜像，只需要在安装过程中使用类似  <code>sed</code> 、  <code>awk</code> 、  <code>python</code>  或  <code>dig</code>  这样的工具。</li>\n<li>应用程序镜像可以分离出创建和部署的角色，而没有必要联合它们构建一个单独的镜像。</li>\n<li><code>Init</code>  容器使用  <code>Linux Namespace</code> ，所以相对应用程序容器来说具有不同的文件系统视图。因此，它们能够具有访问  <code>Secret</code>  的权限，而应用程序容器则不能。</li>\n<li>它们必须在应用程序容器启动之前运行完成，而应用程序容器是并行运行的，所以  <code>Init</code>  容器能够提供了一种简单的阻塞或延迟应用容器的启动的方法，直到满足了一组先决条件。</li>\n</ul>\n<h4 id=\"init小实验\"><a class=\"markdownIt-Anchor\" href=\"#init小实验\">#</a>  <code>init</code>  小实验。</h4>\n<p>实验目的:  <code>init</code>  容器会依次启动，只有  <code>init</code>  容器启动完成之后， 主容器才会启动.</p>\n<h5 id=\"实验步骤\"><a class=\"markdownIt-Anchor\" href=\"#实验步骤\">#</a> 实验步骤</h5>\n<ul>\n<li>创建  <code>pod</code> .</li>\n<li>查看  <code>pod</code>  的状态变化</li>\n<li>查看  <code>pod</code>  中  <code>initC</code>  的日志</li>\n<li>创建  <code>Service-1</code></li>\n<li>查看  <code>pod</code>  的状态变化</li>\n<li>查看  <code>pod</code>  中  <code>initC</code>  的日志</li>\n<li>创建  <code>Service-2</code></li>\n<li>查看  <code>pod</code>  的状态变化</li>\n<li>查看  <code>pod</code>  中  <code>initC</code>  的日志</li>\n<li>查看  <code>pod</code>  的日志</li>\n</ul>\n<h6 id=\"创建-pod\"><a class=\"markdownIt-Anchor\" href=\"#创建-pod\">#</a> 创建  <code>pod</code> .</h6>\n<ul>\n<li><code>02-init-demo.yaml</code></li>\n</ul>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">apiVersion:</span> <span class=\"string\">v1</span></span><br><span class=\"line\"><span class=\"attr\">kind:</span> <span class=\"string\">Pod</span></span><br><span class=\"line\"><span class=\"attr\">metadata:</span></span><br><span class=\"line\">  <span class=\"attr\">name:</span> <span class=\"string\">init-demo</span></span><br><span class=\"line\">  <span class=\"attr\">labels:</span></span><br><span class=\"line\">    <span class=\"attr\">app:</span> <span class=\"string\">init-app</span></span><br><span class=\"line\"><span class=\"attr\">spec:</span></span><br><span class=\"line\">  <span class=\"attr\">containers:</span></span><br><span class=\"line\">  <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">my-init-demo</span></span><br><span class=\"line\">    <span class=\"attr\">image:</span> <span class=\"string\">fangjiaxiaobai/my-app:v1</span></span><br><span class=\"line\">    <span class=\"attr\">command:</span> [<span class=\"string\">&quot;sh&quot;</span>, <span class=\"string\">&quot;-c&quot;</span>, <span class=\"string\">&quot;echo the app is running! &amp;&amp; sleep 3600&quot;</span>]</span><br><span class=\"line\">  <span class=\"attr\">initContainers:</span></span><br><span class=\"line\">  <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">init-myservice-1</span></span><br><span class=\"line\">    <span class=\"attr\">image:</span> <span class=\"string\">busybox</span></span><br><span class=\"line\">    <span class=\"attr\">command:</span> [<span class=\"string\">&#x27;sh&#x27;</span>, <span class=\"string\">&#x27;-c&#x27;</span>, <span class=\"string\">&quot;until nslookup my-service-1; do echo &#x27;waiting for my-service-1&#x27;; sleep 2; done;&quot;</span>]</span><br><span class=\"line\">  <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">init-myservice-2</span></span><br><span class=\"line\">    <span class=\"attr\">image:</span> <span class=\"string\">busybox</span></span><br><span class=\"line\">    <span class=\"attr\">command:</span> [<span class=\"string\">&#x27;sh&#x27;</span>, <span class=\"string\">&#x27;-c&#x27;</span>, <span class=\"string\">&quot;until nslookup my-service-2; do echo &#x27;waiting for my-service-2&#x27;; sleep 2; done;&quot;</span>]</span><br></pre></td></tr></table></figure>\n<p>使用命令  <code>kubectl create -f 02-init-demo.yaml</code>  创建  <code>pod</code> .</p>\n<p>新开一个窗口使用  <code>kubectl get pods -w -o wide</code>  命令 查看 pod 的启动变化.<br>\n<img data-src=\"/images/k8s/03-07.jpg\" alt=\"\"></p>\n<h6 id=\"查看查看-pod-中init-c-1的日志\"><a class=\"markdownIt-Anchor\" href=\"#查看查看-pod-中init-c-1的日志\">#</a> 查看查看  <code>pod</code>  中 <code>init-c-1</code>  的日志</h6>\n<p><img data-src=\"/images/k8s/03-08.jpg\" alt=\"\"></p>\n<p>发现  <code>initC-1</code>  一直在  <code>nslookup</code>  查找  <code>my-service-1</code> .</p>\n<h6 id=\"创建-service-1\"><a class=\"markdownIt-Anchor\" href=\"#创建-service-1\">#</a> 创建  <code>Service-1</code></h6>\n<ul>\n<li><code>02-init-demo-my-service-01.yaml</code></li>\n</ul>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">apiVersion:</span> <span class=\"string\">v1</span></span><br><span class=\"line\"><span class=\"attr\">kind:</span> <span class=\"string\">Service</span></span><br><span class=\"line\"><span class=\"attr\">metadata:</span></span><br><span class=\"line\">  <span class=\"attr\">name:</span> <span class=\"string\">my-service-1</span></span><br><span class=\"line\"><span class=\"attr\">spec:</span></span><br><span class=\"line\">  <span class=\"attr\">ports:</span></span><br><span class=\"line\">   <span class=\"bullet\">-</span> <span class=\"attr\">protocol:</span> <span class=\"string\">TCP</span></span><br><span class=\"line\">     <span class=\"attr\">port:</span> <span class=\"number\">80</span></span><br><span class=\"line\">     <span class=\"attr\">targetPort:</span> <span class=\"number\">8080</span></span><br></pre></td></tr></table></figure>\n<p>使用命令  <code>kubectl create -f 02-init-demo-my-service-01.yaml</code></p>\n<p>查看  <code>pod</code>  中第一个  <code>InitC</code>  的日志</p>\n<p><img data-src=\"/images/k8s/03-08.jpg\" alt=\"\"></p>\n<p>会出现</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Server:\t\t10.96.0.10</span><br><span class=\"line\">Address:\t10.96.0.10:53</span><br><span class=\"line\"></span><br><span class=\"line\">Name:\tmy-service-1.default.svc.cluster.local</span><br><span class=\"line\">Address: 10.108.140.48</span><br></pre></td></tr></table></figure>\n<p>然后查看  <code>pod</code>  的状态。会出现一条：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">init-demo   0/1     Init:1/2   0          4m1s   10.244.154.204   k8s-node-01   &lt;none&gt;           &lt;none&gt;</span><br></pre></td></tr></table></figure>\n<h6 id=\"创建-service-2\"><a class=\"markdownIt-Anchor\" href=\"#创建-service-2\">#</a> 创建  <code>Service-2</code></h6>\n<ul>\n<li><code>02-init-demo-my-service-02.yaml</code></li>\n</ul>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">apiVersion:</span> <span class=\"string\">v1</span></span><br><span class=\"line\"><span class=\"attr\">kind:</span> <span class=\"string\">Service</span></span><br><span class=\"line\"><span class=\"attr\">metadata:</span></span><br><span class=\"line\">  <span class=\"attr\">name:</span> <span class=\"string\">my-service-2</span></span><br><span class=\"line\"><span class=\"attr\">spec:</span></span><br><span class=\"line\">  <span class=\"attr\">ports:</span></span><br><span class=\"line\">   <span class=\"bullet\">-</span> <span class=\"attr\">protocol:</span> <span class=\"string\">TCP</span></span><br><span class=\"line\">     <span class=\"attr\">port:</span> <span class=\"number\">80</span></span><br><span class=\"line\">     <span class=\"attr\">targetPort:</span> <span class=\"number\">8080</span></span><br></pre></td></tr></table></figure>\n<p>使用命令  <code>kubectl create -f 02-init-demo-my-service-01.yaml</code></p>\n<p>查看  <code>pod</code>  中第二个 <code>InitC</code>  的日志直到出现</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Server:\t\t10.96.0.10</span><br><span class=\"line\">Address:\t10.96.0.10:53</span><br><span class=\"line\"></span><br><span class=\"line\">Name:\tmy-service-2.default.svc.cluster.local</span><br><span class=\"line\">Address: 10.107.13.223</span><br></pre></td></tr></table></figure>\n<p>然后查看  <code>pod</code>  的状态。会出现一条：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">init-demo   0/1     PodInitializing   0          6m52s   10.244.154.204   k8s-node-01   &lt;none&gt;           &lt;none&gt;</span><br></pre></td></tr></table></figure>\n<p>然后就会启动  <code>pod</code>  . 最终出现</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">init-demo   1/1     Running           0          6m53s   10.244.154.204   k8s-node-01   &lt;none&gt;           &lt;none&gt;</span><br></pre></td></tr></table></figure>\n<p>然后查看  <code>pod</code>  的日志，会输出  <code>the app is running.</code></p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@k8s-master-01 k8s-yamls]# kubectl logs -f init-demo</span><br><span class=\"line\">Defaulted container &quot;my-init-demo&quot; out of: my-init-demo, init-myservice-1 (init), init-myservice-2 (init)</span><br><span class=\"line\">the app is running!</span><br></pre></td></tr></table></figure>\n<h4 id=\"关于init容器的特殊说明\"><a class=\"markdownIt-Anchor\" href=\"#关于init容器的特殊说明\">#</a> 关于 init 容器的特殊说明</h4>\n<ul>\n<li>在  <code>Pod</code>  启动过程中，  <code>Init</code>  容器会按顺序在网络和数据卷初始化之后启动。每个容器必须在下一个容器启动之前成功退出</li>\n<li>如果由于运行时或失败退出，将导致容器启动失败，它会根据  <code>Pod</code>  的  <code>restartPolicy</code>  指定的策略 进行重试。然而，如果  <code>Pod</code>  的  <code>restartPolicy</code>  设置为  <code>Always</code> ， <code>Init</code>  容器失败时会使用  <code>RestartPolicy</code>  策略</li>\n<li>在所有的  <code>Init</code>  容器没有成功之前， <code>Pod</code>  将不会变成  <code>Ready</code>  状态。 <code>Init</code>  容器的端口将不会在  <code>Service</code>  中进行聚集。 正在初始化中的  <code>Pod</code>  处于  <code>Pending</code>  状态，但应该会将  <code>Initializing</code>  状态设置为  <code>true</code></li>\n<li>如果  <code>Pod</code>  重启，所有  <code>Init</code>  容器必须重新执行</li>\n<li>对  <code>Init</code>  容器  <code>spec</code>  的修改被限制在容器  <code>image</code>  字段，修改其他字段都不会生效。更改  <code>Init</code>  容器的  <code>image</code>  字段，等价于重启该  <code>Pod</code></li>\n<li><code>Init</code>  容器具有应用容器的所有字段。除了  <code>readinessProbe</code>  ，因为  <code>Init</code>  容器无法定义不同于完成 ( <code>completion</code> ) 的就绪（ <code>readiness</code> ）之外的其他状态。这会在验证过程中强制执行</li>\n<li>在  <code>Pod</code>  中的每个  <code>app</code>  和  <code>Init</code>  容器的名称必须唯一；与任何其它容器共享同一个名称，会在验证时抛出错误.</li>\n</ul>\n<h2 id=\"探针检测\"><a class=\"markdownIt-Anchor\" href=\"#探针检测\">#</a> 探针检测</h2>\n<p>探针是由  <code>kubelet</code>  对容器执行的定期诊断。要执行诊断， <code>kubelet</code>  调用由容器实现的  <code>Handler</code> 。有三种类型的处理程序：</p>\n<ul>\n<li><code>ExecAction</code> ：在容器内执行指定命令。如果命令退出时返回码为  <code>0</code>  则认为诊断成功。</li>\n<li><code>TCPSocketAction</code> ：对指定端口上的容器的  <code>IP</code>  地址进行  <code>TCP</code>  检查。如果端口打开，则诊断被认为是成功的。</li>\n<li><code>HTTPGetAction</code> ：对指定的端口和路径上的容器的  <code>IP</code>  地址执行  <code>HTTP Get</code>  请求。如果响应的状态码大于等于  <code>200</code>  且小于  <code>400</code> ，则诊断被认为是成功的</li>\n</ul>\n<p>每次探测都将获得以下三种结果之一：</p>\n<ul>\n<li>成功：容器通过了诊断。</li>\n<li>失败：容器未通过诊断。</li>\n<li>未知：诊断失败，因此不会采取任何行动</li>\n</ul>\n<h3 id=\"探测的方式\"><a class=\"markdownIt-Anchor\" href=\"#探测的方式\">#</a> 探测的方式</h3>\n<ul>\n<li><code>livenessProbe</code> ：指示容器是否正在运行。如果存活探测失败，则  <code>kubelet</code>  会杀死容器，并且容器将受到其 重启策略 的影响。如果容器不提供存活探针，则默认状态为  <code>Success</code></li>\n<li><code>readinessProbe</code> ：指示容器是否准备好服务请求。如果就绪探测失败，端点控制器将从与  <code>Pod</code>  匹配的所有  <code>Service</code>  的端点中删除该  <code>Pod</code>  的  <code>IP</code>  地址。初始延迟之前的就绪状态默认为  <code>Failure</code> 。如果容器不提供就绪探针，则默认状态为  <code>Success</code></li>\n</ul>\n<h4 id=\"pod-hook\"><a class=\"markdownIt-Anchor\" href=\"#pod-hook\">#</a> Pod Hook</h4>\n<p><code>Pod hook</code> （钩子）是由  <code>Kubernetes</code>  管理的  <code>kubelet</code>  发起的，当容器中的进程启动前或者容器中的进程终止之前运行，这是包含在容器的生命周期之中。可以同时为  <code>Pod</code>  中的所有容器都配置  <code>hook</code></p>\n<p><code>Hook</code>  的类型包括两种：</p>\n<ul>\n<li><code>exec</code> ：执行一段命令</li>\n<li><code>HTTP</code> ：发送 <code>HTTP</code>  请求</li>\n</ul>\n<p><code>PodSpec</code>  中有一个  <code>restartPolicy</code>  字段，可能的值为  <code>Always</code> 、 <code>OnFailure</code>  和  <code>Never</code> 。默认为 <code>Always</code> 。  <code>restartPolicy</code>  适用于  <code>Pod</code>  中的所有容器。 <code>restartPolicy</code>  仅指通过同一节点上的  <code>kubelet</code>  重新启动容器。失败的容器由  <code>kubelet</code>  以五分钟为上限的指数退避延迟（ <code>10秒</code> ， <code>20秒</code> ， <code>40秒</code> …）重新启动，并在成功执行十分钟后重置。如  <code>Pod</code>  文档 中所述，一旦绑定到一个节点， <code>Pod</code>  将永远不会重新绑定到另一个节点。</p>\n<h4 id=\"pod-phase\"><a class=\"markdownIt-Anchor\" href=\"#pod-phase\">#</a> Pod phase</h4>\n<p><code>Pod</code>  的  <code>status</code>  字段是一个  <code>PodStatus</code>  对象， <code>PodStatus</code>  中有一个  <code>phase</code>  字段。<br>\n <code>PodStatus</code>  的相位（ <code>phase</code> ）是  <code>Pod</code>  在其生命周期中的简单宏观概述。该阶段并不是对容器或  <code>Pod</code>  的综合汇总，也不是为了做为综合状态机 <code>Pod</code>  相位的数量和含义是严格指定的。除了本文档中列举的状态外，不应该再假定  <code>Pod</code>  有其他的  <code>phase</code>  值</p>\n<h5 id=\"phase的值\"><a class=\"markdownIt-Anchor\" href=\"#phase的值\">#</a> phase 的值</h5>\n<ul>\n<li>挂起（ <code>Pending</code> ）： <code>Pod</code>  已被  <code>Kubernetes</code>  系统接受，但有一个或者多个容器镜像尚未创建。等待时间包括调度  <code>Pod</code>  的时间和通过网络下载镜像的时间，这可能需要花点时间</li>\n<li>运行中（ <code>Running</code> ）：该  <code>Pod</code>  已经绑定到了一个节点上， <code>Pod</code>  中所有的容器都已被创建。至少有一个容器正在运行，或者正处于启动或重启状态</li>\n<li>成功（ <code>Succeeded</code> ）： <code>Pod</code>  中的所有容器都被成功终止，并且不会再重启</li>\n<li>失败（ <code>Failed</code> ）： <code>Pod</code>  中的所有容器都已终止了，并且至少有一个容器是因为失败终止。也就是说，容器以非  <code>0</code>  状态退出或者被系统终止</li>\n<li>未知（ <code>Unknown</code> ）：因为某些原因无法取得  <code>Pod</code>  的状态，通常是因为与  <code>Pod</code>  所在主机通信失败</li>\n</ul>\n<h3 id=\"两个小实验\"><a class=\"markdownIt-Anchor\" href=\"#两个小实验\">#</a> 两个小实验</h3>\n<h4 id=\"readiness\"><a class=\"markdownIt-Anchor\" href=\"#readiness\">#</a> Readiness</h4>\n<ul>\n<li><code>03-readness-demo.yaml</code></li>\n</ul>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">apiVersion:</span> <span class=\"string\">v1</span></span><br><span class=\"line\"><span class=\"attr\">kind:</span> <span class=\"string\">Pod</span></span><br><span class=\"line\"><span class=\"attr\">metadata:</span></span><br><span class=\"line\">  <span class=\"attr\">name:</span> <span class=\"string\">readness-demo</span></span><br><span class=\"line\"><span class=\"attr\">spec:</span></span><br><span class=\"line\">  <span class=\"attr\">containers:</span></span><br><span class=\"line\">  <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">readness-demo-container</span></span><br><span class=\"line\">    <span class=\"attr\">image:</span> <span class=\"string\">fangjiaxiaobai/my-app:v1</span></span><br><span class=\"line\">    <span class=\"attr\">imagePullPolicy:</span> <span class=\"string\">IfNotPresent</span></span><br><span class=\"line\">    <span class=\"attr\">readinessProbe:</span></span><br><span class=\"line\">      <span class=\"attr\">httpGet:</span></span><br><span class=\"line\">        <span class=\"attr\">port:</span> <span class=\"number\">80</span></span><br><span class=\"line\">        <span class=\"attr\">path:</span> <span class=\"string\">/index.html</span></span><br><span class=\"line\">      <span class=\"attr\">initialDelaySeconds:</span> <span class=\"number\">1</span></span><br><span class=\"line\">      <span class=\"attr\">periodSeconds:</span> <span class=\"number\">3</span></span><br></pre></td></tr></table></figure>\n<p><img data-src=\"/images/k8s/03-09.jpg\" alt=\"\"></p>\n<p>可以看到  <code>readness-demo</code>  正常启动成功，也已经 <code>ready</code>  了。</p>\n<p>下面删掉  <code>readness-demo</code>  这个 <code>pod</code>  , 然后把  <code>path:/index.html</code>  改成  <code>path:/index1.html</code>  如下:</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">apiVersion:</span> <span class=\"string\">v1</span></span><br><span class=\"line\"><span class=\"attr\">kind:</span> <span class=\"string\">Pod</span></span><br><span class=\"line\"><span class=\"attr\">metadata:</span></span><br><span class=\"line\">  <span class=\"attr\">name:</span> <span class=\"string\">readness-demo</span></span><br><span class=\"line\"><span class=\"attr\">spec:</span></span><br><span class=\"line\">  <span class=\"attr\">containers:</span></span><br><span class=\"line\">  <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">readness-demo-container</span></span><br><span class=\"line\">    <span class=\"attr\">image:</span> <span class=\"string\">fangjiaxiaobai/my-app:v1</span></span><br><span class=\"line\">    <span class=\"attr\">imagePullPolicy:</span> <span class=\"string\">IfNotPresent</span></span><br><span class=\"line\">    <span class=\"attr\">readinessProbe:</span></span><br><span class=\"line\">      <span class=\"attr\">httpGet:</span></span><br><span class=\"line\">        <span class=\"attr\">port:</span> <span class=\"number\">80</span></span><br><span class=\"line\">        <span class=\"attr\">path:</span> <span class=\"string\">/index1.html</span></span><br><span class=\"line\">      <span class=\"attr\">initialDelaySeconds:</span> <span class=\"number\">1</span></span><br><span class=\"line\">      <span class=\"attr\">periodSeconds:</span> <span class=\"number\">3</span></span><br></pre></td></tr></table></figure>\n<p><img data-src=\"/images/k8s/03-10.png\" alt=\"\"></p>\n<p>可以看到  <code>ready: 0/1</code>  , 我们可以查看一下  <code>pod</code>  的详细信息.</p>\n<p><img data-src=\"/images/k8s/03-11.png\" alt=\"\"></p>\n<p><code>Readiness Failed</code></p>\n<p>这时，我们进入容器中，新建一个  <code>index1.html</code>  页面.</p>\n<p><img data-src=\"/images/k8s/03-12.png\" alt=\"\"></p>\n<p>然后查看一下  <code>pod</code>  的状态。</p>\n<p><img data-src=\"/images/k8s/03-13.png\" alt=\"\"></p>\n<h4 id=\"liveness\"><a class=\"markdownIt-Anchor\" href=\"#liveness\">#</a> Liveness</h4>\n<h5 id=\"liveness-exec-demo\"><a class=\"markdownIt-Anchor\" href=\"#liveness-exec-demo\">#</a> liveness-exec demo</h5>\n<ul>\n<li><code>04-liveness-demo-exec.yaml</code></li>\n</ul>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">apiVersion:</span> <span class=\"string\">v1</span></span><br><span class=\"line\"><span class=\"attr\">kind:</span> <span class=\"string\">Pod</span></span><br><span class=\"line\"><span class=\"attr\">metadata:</span></span><br><span class=\"line\">  <span class=\"attr\">name:</span> <span class=\"string\">liveness-demo</span></span><br><span class=\"line\">  <span class=\"attr\">namespace:</span> <span class=\"string\">default</span></span><br><span class=\"line\"><span class=\"attr\">spec:</span></span><br><span class=\"line\">  <span class=\"attr\">containers:</span></span><br><span class=\"line\">  <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">liveness-demo-container</span></span><br><span class=\"line\">    <span class=\"attr\">image:</span> <span class=\"string\">fangjiaxiaobai/my-app:v1</span></span><br><span class=\"line\">    <span class=\"attr\">imagePullPolicy:</span> <span class=\"string\">IfNotPresent</span></span><br><span class=\"line\">    <span class=\"attr\">command:</span> [<span class=\"string\">&#x27;/bin/sh&#x27;</span>, <span class=\"string\">&#x27;-c&#x27;</span>, <span class=\"string\">&#x27;touch /tmp/live; sleep 20; rm -rf /tmp/live; sleep 3600;&#x27;</span>]</span><br><span class=\"line\">    <span class=\"attr\">livenessProbe:</span></span><br><span class=\"line\">      <span class=\"attr\">exec:</span></span><br><span class=\"line\">        <span class=\"attr\">command:</span> [<span class=\"string\">&#x27;test&#x27;</span>, <span class=\"string\">&#x27;-e&#x27;</span>, <span class=\"string\">&#x27;/tmp/live&#x27;</span>]</span><br><span class=\"line\">      <span class=\"attr\">initialDelaySeconds:</span> <span class=\"number\">1</span></span><br><span class=\"line\">      <span class=\"attr\">periodSeconds:</span> <span class=\"number\">1</span></span><br></pre></td></tr></table></figure>\n<p>然后查看 <code>pod</code>  的状态</p>\n<p><img data-src=\"/images/k8s/03-14.png\" alt=\"\"></p>\n<h5 id=\"liveness-http-get-demo\"><a class=\"markdownIt-Anchor\" href=\"#liveness-http-get-demo\">#</a> liveness-http-get demo</h5>\n<ul>\n<li><code>04-liveness-httpGet-demo.yaml</code></li>\n</ul>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">apiVersion:</span> <span class=\"string\">v1</span></span><br><span class=\"line\"><span class=\"attr\">kind:</span> <span class=\"string\">Pod</span></span><br><span class=\"line\"><span class=\"attr\">metadata:</span></span><br><span class=\"line\">  <span class=\"attr\">name:</span> <span class=\"string\">liveness-http-get-demo</span></span><br><span class=\"line\">  <span class=\"attr\">namespace:</span> <span class=\"string\">default</span></span><br><span class=\"line\"><span class=\"attr\">spec:</span></span><br><span class=\"line\">  <span class=\"attr\">containers:</span></span><br><span class=\"line\">  <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">liveness-http-get-container</span></span><br><span class=\"line\">    <span class=\"attr\">image:</span> <span class=\"string\">fangjiaxiaobai/my-app:v1</span></span><br><span class=\"line\">    <span class=\"attr\">imagePullPolicy:</span> <span class=\"string\">IfNotPresent</span></span><br><span class=\"line\">    <span class=\"attr\">ports:</span></span><br><span class=\"line\">    <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">http-port</span></span><br><span class=\"line\">      <span class=\"attr\">containerPort:</span> <span class=\"number\">80</span></span><br><span class=\"line\">    <span class=\"attr\">livenessProbe:</span></span><br><span class=\"line\">      <span class=\"attr\">httpGet:</span></span><br><span class=\"line\">        <span class=\"attr\">port:</span> <span class=\"string\">http-port</span></span><br><span class=\"line\">        <span class=\"attr\">path:</span> <span class=\"string\">/index.html</span></span><br><span class=\"line\">      <span class=\"attr\">initialDelaySeconds:</span> <span class=\"number\">1</span></span><br><span class=\"line\">      <span class=\"attr\">periodSeconds:</span> <span class=\"number\">1</span></span><br><span class=\"line\">      <span class=\"attr\">timeoutSeconds:</span> <span class=\"number\">10</span></span><br></pre></td></tr></table></figure>\n<p><img data-src=\"/images/k8s/03-15.png\" alt=\"\"></p>\n<p>然后，我们删除 <code>index.html</code></p>\n<p><code>kubectl exec liveness-http-get-demo -it -- rm -rf /usr/share/nginx/html/index.html</code></p>\n<p>可以发现 pod 进行了重启。如下图 (我删除了两次)</p>\n<p><img data-src=\"/images/k8s/03-16.png\" alt=\"\"></p>\n<h3 id=\"启动和停止\"><a class=\"markdownIt-Anchor\" href=\"#启动和停止\">#</a> 启动和停止</h3>\n<p><img data-src=\"/images/k8s/03-05.png\" alt=\"\"></p>\n<p>在 pod 的生命周期中，我们讲完了  <code>pause</code> ,  <code>initC</code> ,  <code>liveness</code> ,  <code>readiness</code> . 还剩下  <code>Starter</code>  和  <code>Stop</code> .</p>\n<p>这个也比较简单，我通过下面这个实验来演示一下 pod 的启动和停止。</p>\n<ul>\n<li><code>05-start-and-stop-demo.yaml</code></li>\n</ul>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">apiVersion:</span> <span class=\"string\">v1</span></span><br><span class=\"line\"><span class=\"attr\">kind:</span> <span class=\"string\">Pod</span></span><br><span class=\"line\"><span class=\"attr\">metadata:</span></span><br><span class=\"line\">  <span class=\"attr\">name:</span> <span class=\"string\">starter-stop-demo</span></span><br><span class=\"line\">  <span class=\"attr\">namespace:</span> <span class=\"string\">default</span></span><br><span class=\"line\"><span class=\"attr\">spec:</span></span><br><span class=\"line\">  <span class=\"attr\">containers:</span></span><br><span class=\"line\">  <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">stop-stop-demo-container</span></span><br><span class=\"line\">    <span class=\"attr\">image:</span> <span class=\"string\">fangjiaxiaobai/my-app:v1</span></span><br><span class=\"line\">    <span class=\"attr\">lifecycle:</span></span><br><span class=\"line\">      <span class=\"attr\">postStart:</span></span><br><span class=\"line\">        <span class=\"attr\">exec:</span></span><br><span class=\"line\">          <span class=\"attr\">command:</span> [<span class=\"string\">&#x27;/bin/sh&#x27;</span>, <span class=\"string\">&#x27;-c&#x27;</span>, <span class=\"string\">&#x27;echo Hello from podStart handler &gt; /usr/share/message&#x27;</span>]</span><br><span class=\"line\">      <span class=\"attr\">preStop:</span></span><br><span class=\"line\">        <span class=\"attr\">exec:</span></span><br><span class=\"line\">          <span class=\"attr\">command:</span> [<span class=\"string\">&#x27;/bin/sh&#x27;</span>, <span class=\"string\">&#x27;-c&#x27;</span>, <span class=\"string\">&#x27;echo Bye from podStop handler&#x27;</span>]</span><br></pre></td></tr></table></figure>\n<p>然后查看一下  <code>/usr/share/message</code>  文件内容</p>\n<p><img data-src=\"/images/k8s/03-17.png\" alt=\"\"></p>\n<p>当然，删除之后，这个容器我们就进不去了，但是我们知道了通过这种方式可以在  <code>pod</code>  的生命周期的各个阶段中做些操作。</p>\n",
            "tags": [
                "k8s",
                "kubernetes"
            ]
        },
        {
            "id": "https://fangjiaxiaobai.github.io/2022/07/22/k8s/pit01.incompatible-CNI-versions/",
            "url": "https://fangjiaxiaobai.github.io/2022/07/22/k8s/pit01.incompatible-CNI-versions/",
            "title": "k8s-incompatible CNI versions",
            "date_published": "2022-07-22T10:18:00.000Z",
            "content_html": "<h3 id=\"报错内容\"><a class=\"markdownIt-Anchor\" href=\"#报错内容\">#</a> 报错内容</h3>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Warning  FailedCreatePodSandBox  5m17s kubelet Failed to create pod sandbox: rpc error: code = Unknown desc = failed to setup network <span class=\"keyword\">for</span> sandbox <span class=\"string\">&quot;1ded5da71b38996763e74f28f609d8d8f26a4cc1e4fdd3272312bf3e168e4111&quot;</span>: plugin <span class=\"built_in\">type</span>=<span class=\"string\">&quot;bridge&quot;</span> failed (add): incompatible CNI versions; config is <span class=\"string\">&quot;1.0.0&quot;</span>, plugin supports [<span class=\"string\">&quot;0.1.0&quot;</span> <span class=\"string\">&quot;0.2.0&quot;</span> <span class=\"string\">&quot;0.3.0&quot;</span> <span class=\"string\">&quot;0.3.1&quot;</span> <span class=\"string\">&quot;0.4.0&quot;</span>]</span><br></pre></td></tr></table></figure>\n<h3 id=\"部署的环境\"><a class=\"markdownIt-Anchor\" href=\"#部署的环境\">#</a> 部署的环境</h3>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">centos 8</span><br><span class=\"line\">kubernetes 1.24.3</span><br></pre></td></tr></table></figure>\n<h3 id=\"解决问题\"><a class=\"markdownIt-Anchor\" href=\"#解决问题\">#</a> 解决问题</h3>\n<p>这个问题的主要内容是:  <code>incompatible CNI versions</code> . 当你去网上去搜索解决方案大都是 说 使用  <code>containerd</code>  的版本不对，也就是说，确实是  <code>CNI</code>  的版本是有问题的。</p>\n<p>具体的解决方案在官方网站中是这样说的：</p>\n<p><img data-src=\"https://fangjiaxiaobai.github.io/images/k8s/01-01.png\" alt=\"\"></p>\n<p>具体内容可以看这里:<span class=\"exturl\" data-url=\"aHR0cHM6Ly9rdWJlcm5ldGVzLmlvL3poLWNuL2RvY3MvdGFza3MvYWRtaW5pc3Rlci1jbHVzdGVyL21pZ3JhdGluZy1mcm9tLWRvY2tlcnNoaW0vdHJvdWJsZXNob290aW5nLWNuaS1wbHVnaW4tcmVsYXRlZC1lcnJvcnMvI3VwZGF0aW5nLXlvdXItY25pLXBsdWdpbnMtYW5kLWNuaS1jb25maWctZmlsZXM=\">https://kubernetes.io/zh-cn/docs/tasks/administer-cluster/migrating-from-dockershim/troubleshooting-cni-plugin-related-errors/#updating-your-cni-plugins-and-cni-config-files</span></p>\n<p>首先可以查看 当前的  <code>containerd</code>  的版本.</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@k8s-master-01 ~]<span class=\"comment\"># containerd -v</span></span><br><span class=\"line\">containerd github.com/containerd/containerd v1.6.4 212e8b6fa2f44b9c21b2798135fc6fb7c53efc16</span><br></pre></td></tr></table></figure>\n<p>不在  <code>v1.6.0-v1.6.3</code>  中。 文档中说 在  <code>v1.6.4</code>  版本中已经修复了这个问题.</p>\n<p>查看  <code>/etc/cni/net.d/10-containerd-net.conflist</code>  这个文件， cni 版本  <code> &quot;cniVersion&quot;: &quot;1.0.0&quot;,</code> , 也确实是 <code>1.0.0</code></p>\n<p>继续搜索</p>\n<p>在 <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2NvbnRhaW5lcmQvY29udGFpbmVyZC9pc3N1ZXMvNjg3Ng==\">https://github.com/containerd/containerd/issues/6876</span> 中，有一个人遇到了  <code>v1.6.4</code>  版本中出现了  <code>incompatible CNI versions</code>  这个问题。</p>\n<p><img data-src=\"https://fangjiaxiaobai.github.io/images/k8s/01-02.jpg\" alt=\"\"></p>\n<p>仔细看他的这个问题，是我遇到的这个问题是一样的  <code>plugins type='bridge'</code> . 而这个  <code>issure</code>  中提到的问题，是当  <code>plugins type = 'loooback'</code> . 这也是上图中  <code>hakman</code>  提到的。</p>\n<p>仔细看  <code>mikebrow</code>  所说的，需要安装一个  <code>1.0.0</code>  版本的  <code>bridge</code> .</p>\n<p>那就在网络中搜索 :  <code>k8s 是安装 bridge</code> ， 在  <code>https://blog.csdn.net/m0_48594855/article/details/107870839</code>  看到 安装 bridge 的方法，他这里是使用 git 仓库 源码编译。其实直接打开 git 仓库  <code>https://github.com/containernetworking/plugins/releases/tag/v1.1.1</code>  下载对应版本即可， 今天是  <code>2022</code>  年 <code>7</code>  月 <code>22</code>  日，我就下载了最新的一版本。</p>\n<p>简单粗暴的  <code>/opt/cni/bin/</code>  下的内容，全部替换掉，然后重启  <code>kubelet</code>  服务就可以了。</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 下载包</span></span><br><span class=\"line\">wget https://github.com/containernetworking/plugins/releases/download/v1.1.1/cni-plugins-linux-amd64-v1.1.1.tgz</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 备份一下驱动</span></span><br><span class=\"line\">mv /opt/cni/bin /opt/cni/bin.bak</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 解压到指定目录</span></span><br><span class=\"line\">tar -zxvf cni-plugins-linux-amd64-v1.1.1.tgz -C /opt/cni/bin </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 重启 kubelet</span></span><br><span class=\"line\">systemctl restart kubelet</span><br></pre></td></tr></table></figure>\n<p>然后再所有的节点上都执行一遍上面的内容，然后就可以了。</p>\n<p>可以通过   <code>kubectl describe pod</code>  查看下是否开始下载镜像了。</p>\n<h3 id=\"问题解决思路\"><a class=\"markdownIt-Anchor\" href=\"#问题解决思路\">#</a> 问题解决思路</h3>\n<ul>\n<li>先看下  <code>contrainerd</code>  版本是否  <code>&gt;=1.6.4</code></li>\n<li>如果  <code>&lt;=1.6.3</code>  那么就需要升级  <code>contrainerd</code>  运行环境.</li>\n<li>如果还有这样的问题，那就是要看下对应的插件类型是否满足版本要求了。</li>\n<li>如果不满足，那就重新安装下对应的插件就行了，比如我的问题中的  <code>bridge</code>  插件。</li>\n</ul>\n<h3 id=\"举一反三\"><a class=\"markdownIt-Anchor\" href=\"#举一反三\">#</a> 举一反三</h3>\n<p>假设有一棵树，那个问题只是这棵树的一片叶子， 这里面还涉及到很多  <code>k8s</code>  的概念性的东西。比如  <code>CNI</code>  网络插件都有什么，每种插件的功能是什么，以及对应的网络驱动是什么，比如  <code>Calico</code>  ,  <code>fannel</code>  ,  <code>bridge</code>  。  <code>CNI</code>  和  <code>containerd</code> ,  <code>cri-o</code>  都是什么关系。所以，要从根儿上去理解这些概念。 废话不多说，下篇文章见。</p>\n<h3 id=\"参考文档\"><a class=\"markdownIt-Anchor\" href=\"#参考文档\">#</a> 参考文档</h3>\n<p>1、<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2NvbnRhaW5lcmQvY29udGFpbmVyZC9pc3N1ZXMvNjg3Ng==\">https://github.com/containerd/containerd/issues/6876</span><br>\n2、<span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ4NTk0ODU1L2FydGljbGUvZGV0YWlscy8xMDc4NzA4Mzk=\">https://blog.csdn.net/m0_48594855/article/details/107870839</span><br>\n3、<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2NvbnRhaW5lcm5ldHdvcmtpbmcvcGx1Z2lucy9yZWxlYXNlcy90YWcvdjEuMS4x\">https://github.com/containernetworking/plugins/releases/tag/v1.1.1</span><br>\n4、<span class=\"exturl\" data-url=\"aHR0cHM6Ly9rdWJlcm5ldGVzLmlvL3poLWNuL2RvY3MvdGFza3MvYWRtaW5pc3Rlci1jbHVzdGVyL21pZ3JhdGluZy1mcm9tLWRvY2tlcnNoaW0vdHJvdWJsZXNob290aW5nLWNuaS1wbHVnaW4tcmVsYXRlZC1lcnJvcnMvI3VwZGF0aW5nLXlvdXItY25pLXBsdWdpbnMtYW5kLWNuaS1jb25maWctZmlsZXM=\">https://kubernetes.io/zh-cn/docs/tasks/administer-cluster/migrating-from-dockershim/troubleshooting-cni-plugin-related-errors/#updating-your-cni-plugins-and-cni-config-files</span></p>\n",
            "tags": [
                "k8s",
                "kubernetes"
            ]
        },
        {
            "id": "https://fangjiaxiaobai.github.io/2022/07/17/k8s/seris02-how-to-build/",
            "url": "https://fangjiaxiaobai.github.io/2022/07/17/k8s/seris02-how-to-build/",
            "title": "k8s-搭建K8s集群",
            "date_published": "2022-07-17T10:18:00.000Z",
            "content_html": "<p>使用  <code>kubeadm 1.24.3</code>  搭建  <code>k8s</code>  集群</p>\n<h2 id=\"环境准备\"><a class=\"markdownIt-Anchor\" href=\"#环境准备\">#</a> 环境准备</h2>\n<p><code>Centos8</code>  三台.</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">k8s-master-01 192.168.0.10</span><br><span class=\"line\">k8s-node-01   192.168.0.20</span><br><span class=\"line\">k8s-node-02   192.168.0.21</span><br></pre></td></tr></table></figure>\n<p>注意，这三台机器不要做任何配置，尤其不要安装  <code>docker</code> , 因为从 <code>k8s</code>   <code>1.20.x</code>  开始，  <code>kubernetes</code>  弃用了  <code>dockershim</code> , 在  <code>1.20.4</code>  正式移除了  <code>dockershim</code> .</p>\n<blockquote>\n<p>Docker support in the kubelet is now deprecated and will be removed in a future release. The kubelet uses a module called “dockershim” which implements CRI support for Docker and it has seen maintenance issues in the Kubernetes community.</p>\n</blockquote>\n<p>原文地址: <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2t1YmVybmV0ZXMva3ViZXJuZXRlcy9ibG9iL21hc3Rlci9DSEFOR0VMT0cvQ0hBTkdFTE9HLTEuMjAubWQjZGVwcmVjYXRpb24=\">kubernetes 1.20 变更日志</span></p>\n<p>但是  <code>kubernetes</code>  是支持符合为  <code>Kubernetes</code>  创建的容器运行接口  <code>Container Runtime Interface (CRI)</code>  的运行时。  <code>Docker</code>  构建的镜像，将在你的集群的所有运行时中继续工作，一如既往。</p>\n<h3 id=\"设置系统主机名以及host文件的相互解析\"><a class=\"markdownIt-Anchor\" href=\"#设置系统主机名以及host文件的相互解析\">#</a> 设置系统主机名以及 host 文件的相互解析</h3>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hostnamectl set-hostname k8s-master-01</span><br></pre></td></tr></table></figure>\n<h3 id=\"安装依赖包\"><a class=\"markdownIt-Anchor\" href=\"#安装依赖包\">#</a> 安装依赖包</h3>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yum install -y conntrack ipvsadm ipset jq iptables curl sysstat libseccomp wget vim net-tools git</span><br><span class=\"line\"></span><br><span class=\"line\">yum install -y chrony <span class=\"comment\"># 配置时间同步</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"关闭防火墙\"><a class=\"markdownIt-Anchor\" href=\"#关闭防火墙\">#</a> 关闭防火墙</h3>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">systemctl stop firewalld &amp;&amp; systemctl <span class=\"built_in\">disable</span> firewalld</span><br></pre></td></tr></table></figure>\n<h3 id=\"关闭selinux\"><a class=\"markdownIt-Anchor\" href=\"#关闭selinux\">#</a> 关闭 <code>SELinux</code></h3>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">swapoff -a &amp;&amp; sed -i <span class=\"string\">&#x27;/ swap / s/^\\(.*\\)$/#\\1/g&#x27;</span> /etc/fstab</span><br><span class=\"line\">setenforce 0 &amp;&amp; sed -i <span class=\"string\">&#x27;s/^SELINUX=.*/SELINUX=disabled/&#x27;</span> /etc/selinux/config</span><br></pre></td></tr></table></figure>\n<h3 id=\"调整内核参数\"><a class=\"markdownIt-Anchor\" href=\"#调整内核参数\">#</a> 调整内核参数</h3>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cat &gt; kubernetes.conf &lt;&lt;<span class=\"string\">EOF</span></span><br><span class=\"line\"><span class=\"string\">net.bridge.bridge-nf-call-iptables=1</span></span><br><span class=\"line\"><span class=\"string\">net.bridge.bridge-nf-call-ip6tables=1</span></span><br><span class=\"line\"><span class=\"string\">net.ipv4.ip_forward=1</span></span><br><span class=\"line\"><span class=\"string\">net.ipv4.tcp_tw_recycle=0</span></span><br><span class=\"line\"><span class=\"string\">vm.swappiness=0 # 禁止使用 swap 空间，只有当系统 OOM 时才允许使用它</span></span><br><span class=\"line\"><span class=\"string\">vm.overcommit</span></span><br><span class=\"line\"><span class=\"string\">_</span></span><br><span class=\"line\"><span class=\"string\">memory=1 # 不检查物理内存是否够用</span></span><br><span class=\"line\"><span class=\"string\">vm.panic_on_oom=0 # 开启 OOM</span></span><br><span class=\"line\"><span class=\"string\">fs.inotify.max_user_instances=8192</span></span><br><span class=\"line\"><span class=\"string\">fs.inotify.max_user_watches=1048576</span></span><br><span class=\"line\"><span class=\"string\">fs.file-max=52706963</span></span><br><span class=\"line\"><span class=\"string\">fs.nr</span></span><br><span class=\"line\"><span class=\"string\">_</span></span><br><span class=\"line\"><span class=\"string\">open=52706963</span></span><br><span class=\"line\"><span class=\"string\">net.ipv6.conf.all.disable_ipv6=1</span></span><br><span class=\"line\"><span class=\"string\">net.netfilter.nf</span></span><br><span class=\"line\"><span class=\"string\">_</span></span><br><span class=\"line\"><span class=\"string\">conntrack</span></span><br><span class=\"line\"><span class=\"string\">_</span></span><br><span class=\"line\"><span class=\"string\">max=2310720</span></span><br><span class=\"line\"><span class=\"string\">EOF</span></span><br><span class=\"line\">cp kubernetes.conf /etc/sysctl.d/kubernetes.conf</span><br><span class=\"line\">sysctl -p /etc/sysctl.d/kubernetes.conf</span><br></pre></td></tr></table></figure>\n<h3 id=\"调整系统时区\"><a class=\"markdownIt-Anchor\" href=\"#调整系统时区\">#</a> 调整系统时区</h3>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 设置系统时区为 中国/上海</span></span><br><span class=\"line\">timedatectl set-timezone Asia/Shanghai</span><br><span class=\"line\"><span class=\"comment\"># 将当前的 UTC 时间写入硬件时钟</span></span><br><span class=\"line\">timedatectl set-local-rtc 0</span><br><span class=\"line\"><span class=\"comment\"># 重启依赖于系统时间的服务</span></span><br><span class=\"line\">systemctl restart rsyslog</span><br><span class=\"line\">systemctl restart crond</span><br></pre></td></tr></table></figure>\n<h3 id=\"关闭系统不需要服务\"><a class=\"markdownIt-Anchor\" href=\"#关闭系统不需要服务\">#</a> 关闭系统不需要服务</h3>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">systemctl stop postfix &amp;&amp; systemctl <span class=\"built_in\">disable</span> postfix</span><br></pre></td></tr></table></figure>\n<h3 id=\"设置-rsyslogd-和-systemd-journald\"><a class=\"markdownIt-Anchor\" href=\"#设置-rsyslogd-和-systemd-journald\">#</a> 设置 rsyslogd 和 systemd journald</h3>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mkdir /var/<span class=\"built_in\">log</span>/journal <span class=\"comment\"># 持久化保存日志的目录</span></span><br><span class=\"line\">mkdir /etc/systemd/journald.conf.d</span><br><span class=\"line\">cat &gt; /etc/systemd/journald.conf.d/99-prophet.conf &lt;&lt;<span class=\"string\">EOF</span></span><br><span class=\"line\"><span class=\"string\">[Journal]</span></span><br><span class=\"line\"><span class=\"string\"># 持久化保存到磁盘</span></span><br><span class=\"line\"><span class=\"string\">Storage=persistent</span></span><br><span class=\"line\"><span class=\"string\"># 压缩历史日志</span></span><br><span class=\"line\"><span class=\"string\">Compress=yes</span></span><br><span class=\"line\"><span class=\"string\">SyncIntervalSec=5m</span></span><br><span class=\"line\"><span class=\"string\">RateLimitInterval=30s</span></span><br><span class=\"line\"><span class=\"string\">RateLimitBurst=1000</span></span><br><span class=\"line\"><span class=\"string\"># 最大占用空间 10G</span></span><br><span class=\"line\"><span class=\"string\">SystemMaxUse=10G</span></span><br><span class=\"line\"><span class=\"string\"># 单日志文件最大 200M</span></span><br><span class=\"line\"><span class=\"string\">SystemMaxFileSize=200M</span></span><br><span class=\"line\"><span class=\"string\"># 日志保存时间 2 周</span></span><br><span class=\"line\"><span class=\"string\">MaxRetentionSec=2week</span></span><br><span class=\"line\"><span class=\"string\"># 不将日志转发到 syslog</span></span><br><span class=\"line\"><span class=\"string\">ForwardToSyslog=no</span></span><br><span class=\"line\"><span class=\"string\">EOF</span></span><br><span class=\"line\">systemctl restart systemd-journald</span><br></pre></td></tr></table></figure>\n<h3 id=\"安装-containerd\"><a class=\"markdownIt-Anchor\" href=\"#安装-containerd\">#</a> 安装  <code>containerd</code></h3>\n<h4 id=\"创建etcmodules-loaddcontainerdconf配置文件\"><a class=\"markdownIt-Anchor\" href=\"#创建etcmodules-loaddcontainerdconf配置文件\">#</a> 创建 <code>/etc/modules-load.d/containerd.conf</code>  配置文件:</h4>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cat &lt;&lt; <span class=\"string\">EOF &gt; /etc/modules-load.d/containerd.conf</span></span><br><span class=\"line\"><span class=\"string\">overlay</span></span><br><span class=\"line\"><span class=\"string\">br_netfilter</span></span><br><span class=\"line\"><span class=\"string\">EOF</span></span><br></pre></td></tr></table></figure>\n<p>执行下面的命令，使其生效</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">modprobe overlay</span><br><span class=\"line\">modprobe br_netfilter</span><br></pre></td></tr></table></figure>\n<p>创建 <code>/etc/sysctl.d/99-kubernetes-cri.conf</code>  配置文件：</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cat &lt;&lt; <span class=\"string\">EOF &gt; /etc/sysctl.d/99-kubernetes-cri.conf</span></span><br><span class=\"line\"><span class=\"string\">net.bridge.bridge-nf-call-ip6tables = 1</span></span><br><span class=\"line\"><span class=\"string\">net.bridge.bridge-nf-call-iptables = 1</span></span><br><span class=\"line\"><span class=\"string\">net.ipv4.ip_forward = 1</span></span><br><span class=\"line\"><span class=\"string\">user.max_user_namespaces=28633</span></span><br><span class=\"line\"><span class=\"string\">EOF</span></span><br></pre></td></tr></table></figure>\n<p>执行以下命令使配置生效:</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sysctl -p /etc/sysctl.d/99-kubernetes-cri.conf</span><br></pre></td></tr></table></figure>\n<h3 id=\"关闭-swap\"><a class=\"markdownIt-Anchor\" href=\"#关闭-swap\">#</a> 关闭  <code>swap</code></h3>\n<p>Kubernetes 1.8 开始要求关闭系统的 Swap，如果不关闭，默认配置下 kubelet 将无法启动。 关闭系统的 Swap 方法如下:</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">swapoff -a</span><br></pre></td></tr></table></figure>\n<p>修改  <code>/etc/fstab</code>  文件，注释掉  <code>SWAP</code>  的自动挂载，使用 <code>free -m</code>  确认 <code>swap</code>  已经关闭。</p>\n<p><code>swappiness</code>  参数调整，修改 <code>/etc/sysctl.d/99-kubernetes-cri.conf</code>  添加下面一行：</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vm.swappiness=0</span><br></pre></td></tr></table></figure>\n<p>执行 <code>sysctl -p /etc/sysctl.d/99-kubernetes-cri.conf</code>  使修改生效。</p>\n<h4 id=\"安装-containerd-2\"><a class=\"markdownIt-Anchor\" href=\"#安装-containerd-2\">#</a> 安装  <code>containerd</code></h4>\n<p>在各个服务器节点上安装容器运行时  <code>Containerd</code>  。</p>\n<p>下载  <code>Containerd</code>  的二进制包:</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wget https://github.com/containerd/containerd/releases/download/v1.6.4/cri-containerd-cni-1.6.4-linux-amd64.tar.gz</span><br><span class=\"line\"></span><br><span class=\"line\">tar -zxvf cri-containerd-cni-1.6.4-linux-amd64.tar.gz -C /</span><br></pre></td></tr></table></figure>\n<p>生成  <code>containerd</code>  的配置文件</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mkdir -p /etc/containerd</span><br><span class=\"line\">containerd config default &gt; /etc/containerd/config.toml</span><br></pre></td></tr></table></figure>\n<p>修改前面生成的配置文件  <code>/etc/containerd/config.toml</code></p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[plugins.<span class=\"string\">&quot;io.containerd.grpc.v1.cri&quot;</span>.containerd.runtimes.runc]</span><br><span class=\"line\">  ...</span><br><span class=\"line\">  [plugins.<span class=\"string\">&quot;io.containerd.grpc.v1.cri&quot;</span>.containerd.runtimes.runc.options]</span><br><span class=\"line\">    SystemdCgroup = <span class=\"literal\">true</span></span><br></pre></td></tr></table></figure>\n<p>再修改 /etc/containerd/config.toml 中的</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[plugins.<span class=\"string\">&quot;io.containerd.grpc.v1.cri&quot;</span>]</span><br><span class=\"line\">  ...</span><br><span class=\"line\">  <span class=\"comment\"># sandbox_image = &quot;k8s.gcr.io/pause:3.6&quot;</span></span><br><span class=\"line\">  sandbox_image = <span class=\"string\">&quot;registry.aliyuncs.com/google_containers/pause:3.7&quot;</span></span><br></pre></td></tr></table></figure>\n<p>配置  <code>containerd</code>  开机启动，并启动  <code>containerd</code></p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">systemctl <span class=\"built_in\">enable</span> containerd --now</span><br></pre></td></tr></table></figure>\n<p>使用 <code>crictl</code>  测试一下，确保可以打印出版本信息并且没有错误信息输出:</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">crictl version</span><br></pre></td></tr></table></figure>\n<p>如下输出:</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Version:  0.1.0</span><br><span class=\"line\">RuntimeName:  containerd</span><br><span class=\"line\">RuntimeVersion:  v1.6.4</span><br><span class=\"line\">RuntimeApiVersion:  v1alpha2</span><br></pre></td></tr></table></figure>\n<h3 id=\"配置服务器支持开启ipvs\"><a class=\"markdownIt-Anchor\" href=\"#配置服务器支持开启ipvs\">#</a> 配置服务器支持开启 ipvs</h3>\n<p>执行下面的脚本</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cat &gt; /etc/sysconfig/modules/ipvs.modules &lt;&lt;<span class=\"string\">EOF</span></span><br><span class=\"line\"><span class=\"string\">#!/bin/bash</span></span><br><span class=\"line\"><span class=\"string\">modprobe -- ip_vs</span></span><br><span class=\"line\"><span class=\"string\">modprobe -- ip_vs_rr</span></span><br><span class=\"line\"><span class=\"string\">modprobe -- ip_vs_wrr</span></span><br><span class=\"line\"><span class=\"string\">modprobe -- ip_vs_sh</span></span><br><span class=\"line\"><span class=\"string\">modprobe -- nf_conntrack</span></span><br><span class=\"line\"><span class=\"string\">EOF</span></span><br><span class=\"line\"></span><br><span class=\"line\">chmod 755 /etc/sysconfig/modules/ipvs.modules &amp;&amp; bash /etc/sysconfig/modules/ipvs.modules &amp;&amp; lsmod | grep -e ip_vs -e nf_conntrack</span><br></pre></td></tr></table></figure>\n<p>上面脚本创建了的 <code>/etc/sysconfig/modules/ipvs.modules</code>  文件，保证在节点重启后能自动加载所需模块。 使用 <code>lsmod | grep -e ip_vs -e nf_conntrack</code>  命令查看是否已经正确加载所需的内核模块。</p>\n<p>接下来，就可以使用  <code>kubeadm</code>  部署  <code>k8s</code>  集群了。</p>\n<h2 id=\"安装k8s集群\"><a class=\"markdownIt-Anchor\" href=\"#安装k8s集群\">#</a> 安装 k8s 集群</h2>\n<p>安装  <code>k8s</code>  集群有很多种方式，这里使用  <code>kubeadm</code>  安装</p>\n<h3 id=\"安装kubeadm\"><a class=\"markdownIt-Anchor\" href=\"#安装kubeadm\">#</a> 安装 kubeadm</h3>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cat &lt;&lt;<span class=\"string\">EOF &gt; /etc/yum.repos.d/kubernetes.repo</span></span><br><span class=\"line\"><span class=\"string\">[kubernetes]</span></span><br><span class=\"line\"><span class=\"string\">name=Kubernetes</span></span><br><span class=\"line\"><span class=\"string\">baseurl=http://mirrors.aliyun.com/kubernetes/yum/repos/kubernetes-el7-x86_64</span></span><br><span class=\"line\"><span class=\"string\">enabled=1</span></span><br><span class=\"line\"><span class=\"string\">gpgcheck=0</span></span><br><span class=\"line\"><span class=\"string\">repo_gpgcheck=0</span></span><br><span class=\"line\"><span class=\"string\">gpgkey=http://mirrors.aliyun.com/kubernetes/yum/doc/yum-key.gpg http://mirrors.aliyun.com/kubernetes/yum/doc/rpm-package-key.gpg</span></span><br><span class=\"line\"><span class=\"string\">EOF</span></span><br><span class=\"line\"></span><br><span class=\"line\">yum makecache</span><br><span class=\"line\"></span><br><span class=\"line\">sudo yum install -y kubelet kubeadm kubectl --disableexcludes=kubernetes</span><br><span class=\"line\"></span><br><span class=\"line\">systemctl <span class=\"built_in\">enable</span> --now kubelet</span><br></pre></td></tr></table></figure>\n<h3 id=\"配置-kubeadm-配置文件\"><a class=\"markdownIt-Anchor\" href=\"#配置-kubeadm-配置文件\">#</a> 配置  <code>kubeadm</code>  配置文件</h3>\n<p>配置  <code>kubeadm</code>  的配置文件.  <code>touch kubeadm-config.yaml</code></p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">apiVersion:</span> <span class=\"string\">kubeadm.k8s.io/v1beta3</span></span><br><span class=\"line\"><span class=\"attr\">kind:</span> <span class=\"string\">InitConfiguration</span></span><br><span class=\"line\"><span class=\"attr\">localAPIEndpoint:</span></span><br><span class=\"line\">  <span class=\"attr\">advertiseAddress:</span> <span class=\"number\">192.168</span><span class=\"number\">.96</span><span class=\"number\">.151</span></span><br><span class=\"line\">  <span class=\"attr\">bindPort:</span> <span class=\"number\">6443</span></span><br><span class=\"line\"><span class=\"attr\">nodeRegistration:</span></span><br><span class=\"line\">  <span class=\"attr\">criSocket:</span> <span class=\"string\">unix:///run/containerd/containerd.sock</span></span><br><span class=\"line\">  <span class=\"attr\">taints:</span></span><br><span class=\"line\">  <span class=\"bullet\">-</span> <span class=\"attr\">effect:</span> <span class=\"string\">PreferNoSchedule</span></span><br><span class=\"line\">    <span class=\"attr\">key:</span> <span class=\"string\">node-role.kubernetes.io/master</span></span><br><span class=\"line\"><span class=\"meta\">---</span></span><br><span class=\"line\"><span class=\"attr\">apiVersion:</span> <span class=\"string\">kubeadm.k8s.io/v1beta2</span></span><br><span class=\"line\"><span class=\"attr\">kind:</span> <span class=\"string\">ClusterConfiguration</span></span><br><span class=\"line\"><span class=\"attr\">kubernetesVersion:</span> <span class=\"string\">v1.24.0</span></span><br><span class=\"line\"><span class=\"attr\">imageRepository:</span> <span class=\"string\">registry.aliyuncs.com/google_containers</span></span><br><span class=\"line\"><span class=\"attr\">networking:</span></span><br><span class=\"line\">  <span class=\"attr\">podSubnet:</span> <span class=\"number\">10.244</span><span class=\"number\">.0</span><span class=\"number\">.0</span><span class=\"string\">/16</span></span><br><span class=\"line\"><span class=\"meta\">---</span></span><br><span class=\"line\"><span class=\"attr\">apiVersion:</span> <span class=\"string\">kubelet.config.k8s.io/v1beta1</span></span><br><span class=\"line\"><span class=\"attr\">kind:</span> <span class=\"string\">KubeletConfiguration</span></span><br><span class=\"line\"><span class=\"attr\">cgroupDriver:</span> <span class=\"string\">systemd</span></span><br><span class=\"line\"><span class=\"attr\">failSwapOn:</span> <span class=\"literal\">false</span></span><br><span class=\"line\"><span class=\"meta\">---</span></span><br><span class=\"line\"><span class=\"attr\">apiVersion:</span> <span class=\"string\">kubeproxy.config.k8s.io/v1alpha1</span></span><br><span class=\"line\"><span class=\"attr\">kind:</span> <span class=\"string\">KubeProxyConfiguration</span></span><br><span class=\"line\"><span class=\"attr\">mode:</span> <span class=\"string\">ipvs</span></span><br></pre></td></tr></table></figure>\n<p>这里定制了 <code>imageRepository</code>  为阿里云的 <code>registry</code> ，避免因 gcr 被墙，无法直接拉取镜像。 <code>criSocket</code>  设置了容器运行时为 <code>containerd</code> 。 同时设置 <code>kubelet</code>  的 <code>cgroupDriver</code>  为 <code>systemd</code> ，设置 <code>kube-proxy</code>  代理模式为 <code>ipvs</code> 。</p>\n<p>可以通过  <code>kubeadm config print init-defaults --component-configs KubeletConfiguration</code>  可以打印集群初始化默认的使用的配置.</p>\n<p>在开始初始化集群之前可以使用 <code>kubeadm config images pull --config kubeadm-config.yaml</code>  预先在各个服务器节点上拉取所 <code>k8s</code>  需要的容器镜像。</p>\n<h3 id=\"初始化-k8s-master节点\"><a class=\"markdownIt-Anchor\" href=\"#初始化-k8s-master节点\">#</a> 初始化  <code>k8s</code>   <code>master</code>  节点</h3>\n<p>在  <code>master</code>  节点上执行  <code>kubeadm init --config kubeadm-config.yaml</code> ,</p>\n<p>看到最后有打印：  <code>Your Kubernetes control-plane has initialized successfully!</code></p>\n<p>就说明执行成功了。</p>\n<p>然后还有提示:</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">To start using your cluster, you need to run the following as a regular user:</span><br><span class=\"line\"></span><br><span class=\"line\">  mkdir -p <span class=\"variable\">$HOME</span>/.kube</span><br><span class=\"line\">  sudo cp -i /etc/kubernetes/admin.conf <span class=\"variable\">$HOME</span>/.kube/config</span><br><span class=\"line\">  sudo chown $(id -u):$(id -g) <span class=\"variable\">$HOME</span>/.kube/config</span><br><span class=\"line\"></span><br><span class=\"line\">Alternatively, <span class=\"keyword\">if</span> you are the root user, you can run:</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"built_in\">export</span> KUBECONFIG=/etc/kubernetes/admin.conf</span><br><span class=\"line\"></span><br><span class=\"line\">You should now deploy a pod network to the cluster.</span><br><span class=\"line\">Run <span class=\"string\">&quot;kubectl apply -f [podnetwork].yaml&quot;</span> with one of the options listed at:</span><br><span class=\"line\">  https://kubernetes.io/docs/concepts/cluster-administration/addons/</span><br><span class=\"line\"></span><br><span class=\"line\">Then you can join any number of worker nodes by running the following on each as root:</span><br><span class=\"line\"></span><br><span class=\"line\">kubeadm join 192.168.0.10:6443 --token e0nvot.l8sgzcgl07d5baq6 \\</span><br><span class=\"line\">\t--discovery-token-ca-cert-hash sha256:d07d9a5b919c23177881134e3ccf90e26fcb173133b8f6172cbf3d74f3c6a75d</span><br></pre></td></tr></table></figure>\n<p>所以，我们按照提示执行。</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mkdir -p <span class=\"variable\">$HOME</span>/.kube</span><br><span class=\"line\">sudo cp -i /etc/kubernetes/admin.conf <span class=\"variable\">$HOME</span>/.kube/config</span><br><span class=\"line\">sudo chown $(id -u):$(id -g) <span class=\"variable\">$HOME</span>/.kube/config</span><br></pre></td></tr></table></figure>\n<p>然后再 两台 <code>node</code>  节点上执行 如下命令来加入到集群中。</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">kubeadm join 192.168.0.10:6443 --token e0nvot.l8sgzcgl07d5baq6 \\</span><br><span class=\"line\">\t--discovery-token-ca-cert-hash sha256:d07d9a5b919c23177881134e3ccf90e26fcb173133b8f6172cbf3d74f3c6a75d</span><br></pre></td></tr></table></figure>\n<p>查看一下集群状态，确认个组件都处于 <code>healthy</code>  状态，是否有错误:</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">kubectl get cs</span><br><span class=\"line\">Warning: v1 ComponentStatus is deprecated <span class=\"keyword\">in</span> v1.19+</span><br><span class=\"line\">NAME                 STATUS    MESSAGE                         ERROR</span><br><span class=\"line\">scheduler            Healthy   ok</span><br><span class=\"line\">controller-manager   Healthy   ok</span><br><span class=\"line\">etcd-0               Healthy   &#123;<span class=\"string\">&quot;health&quot;</span>:<span class=\"string\">&quot;true&quot;</span>,<span class=\"string\">&quot;reason&quot;</span>:<span class=\"string\">&quot;&quot;</span>&#125;</span><br></pre></td></tr></table></figure>\n<p>集群初始化如果遇到问题，可以使用 kubeadm reset 命令进行清理.</p>\n<p>这样 <code>k8s</code>  集群就部署完成了。</p>\n<h2 id=\"最后\"><a class=\"markdownIt-Anchor\" href=\"#最后\">#</a> 最后</h2>\n<p>希望和你一起遇见更好的自己</p>\n<p><img data-src=\"/images/ml/qrcode.jpg\" alt=\"qrcode\"></p>\n",
            "tags": [
                "k8s",
                "kubernetes"
            ]
        }
    ]
}